/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 42.0, "minX": 0.0, "maxY": 4123.0, "series": [{"data": [[0.0, 42.0], [0.1, 55.0], [0.2, 59.0], [0.3, 61.0], [0.4, 62.0], [0.5, 64.0], [0.6, 65.0], [0.7, 66.0], [0.8, 68.0], [0.9, 68.0], [1.0, 69.0], [1.1, 70.0], [1.2, 71.0], [1.3, 72.0], [1.4, 73.0], [1.5, 73.0], [1.6, 74.0], [1.7, 75.0], [1.8, 75.0], [1.9, 76.0], [2.0, 77.0], [2.1, 77.0], [2.2, 78.0], [2.3, 78.0], [2.4, 79.0], [2.5, 79.0], [2.6, 80.0], [2.7, 81.0], [2.8, 81.0], [2.9, 81.0], [3.0, 82.0], [3.1, 82.0], [3.2, 83.0], [3.3, 83.0], [3.4, 84.0], [3.5, 84.0], [3.6, 85.0], [3.7, 85.0], [3.8, 86.0], [3.9, 86.0], [4.0, 87.0], [4.1, 87.0], [4.2, 87.0], [4.3, 88.0], [4.4, 88.0], [4.5, 88.0], [4.6, 89.0], [4.7, 89.0], [4.8, 90.0], [4.9, 90.0], [5.0, 90.0], [5.1, 91.0], [5.2, 91.0], [5.3, 92.0], [5.4, 92.0], [5.5, 92.0], [5.6, 93.0], [5.7, 93.0], [5.8, 93.0], [5.9, 94.0], [6.0, 94.0], [6.1, 94.0], [6.2, 95.0], [6.3, 95.0], [6.4, 96.0], [6.5, 96.0], [6.6, 96.0], [6.7, 97.0], [6.8, 97.0], [6.9, 97.0], [7.0, 98.0], [7.1, 98.0], [7.2, 99.0], [7.3, 99.0], [7.4, 99.0], [7.5, 100.0], [7.6, 100.0], [7.7, 100.0], [7.8, 101.0], [7.9, 101.0], [8.0, 101.0], [8.1, 102.0], [8.2, 102.0], [8.3, 102.0], [8.4, 103.0], [8.5, 103.0], [8.6, 103.0], [8.7, 104.0], [8.8, 104.0], [8.9, 104.0], [9.0, 105.0], [9.1, 105.0], [9.2, 105.0], [9.3, 106.0], [9.4, 106.0], [9.5, 106.0], [9.6, 107.0], [9.7, 107.0], [9.8, 107.0], [9.9, 108.0], [10.0, 108.0], [10.1, 108.0], [10.2, 109.0], [10.3, 109.0], [10.4, 109.0], [10.5, 110.0], [10.6, 110.0], [10.7, 110.0], [10.8, 111.0], [10.9, 111.0], [11.0, 111.0], [11.1, 112.0], [11.2, 112.0], [11.3, 112.0], [11.4, 113.0], [11.5, 113.0], [11.6, 113.0], [11.7, 114.0], [11.8, 114.0], [11.9, 114.0], [12.0, 115.0], [12.1, 115.0], [12.2, 116.0], [12.3, 116.0], [12.4, 116.0], [12.5, 116.0], [12.6, 117.0], [12.7, 117.0], [12.8, 118.0], [12.9, 118.0], [13.0, 118.0], [13.1, 119.0], [13.2, 119.0], [13.3, 119.0], [13.4, 120.0], [13.5, 120.0], [13.6, 120.0], [13.7, 121.0], [13.8, 121.0], [13.9, 121.0], [14.0, 122.0], [14.1, 122.0], [14.2, 122.0], [14.3, 123.0], [14.4, 123.0], [14.5, 123.0], [14.6, 124.0], [14.7, 124.0], [14.8, 124.0], [14.9, 125.0], [15.0, 125.0], [15.1, 125.0], [15.2, 126.0], [15.3, 126.0], [15.4, 126.0], [15.5, 127.0], [15.6, 127.0], [15.7, 128.0], [15.8, 128.0], [15.9, 128.0], [16.0, 129.0], [16.1, 129.0], [16.2, 129.0], [16.3, 130.0], [16.4, 130.0], [16.5, 130.0], [16.6, 131.0], [16.7, 131.0], [16.8, 131.0], [16.9, 132.0], [17.0, 132.0], [17.1, 132.0], [17.2, 133.0], [17.3, 133.0], [17.4, 134.0], [17.5, 134.0], [17.6, 134.0], [17.7, 135.0], [17.8, 135.0], [17.9, 135.0], [18.0, 136.0], [18.1, 136.0], [18.2, 137.0], [18.3, 137.0], [18.4, 137.0], [18.5, 138.0], [18.6, 138.0], [18.7, 139.0], [18.8, 139.0], [18.9, 139.0], [19.0, 140.0], [19.1, 140.0], [19.2, 140.0], [19.3, 141.0], [19.4, 141.0], [19.5, 141.0], [19.6, 142.0], [19.7, 142.0], [19.8, 143.0], [19.9, 143.0], [20.0, 143.0], [20.1, 144.0], [20.2, 144.0], [20.3, 145.0], [20.4, 145.0], [20.5, 145.0], [20.6, 146.0], [20.7, 146.0], [20.8, 147.0], [20.9, 147.0], [21.0, 147.0], [21.1, 148.0], [21.2, 148.0], [21.3, 149.0], [21.4, 149.0], [21.5, 150.0], [21.6, 150.0], [21.7, 150.0], [21.8, 151.0], [21.9, 151.0], [22.0, 152.0], [22.1, 152.0], [22.2, 153.0], [22.3, 153.0], [22.4, 153.0], [22.5, 154.0], [22.6, 154.0], [22.7, 155.0], [22.8, 155.0], [22.9, 156.0], [23.0, 156.0], [23.1, 157.0], [23.2, 157.0], [23.3, 157.0], [23.4, 158.0], [23.5, 158.0], [23.6, 159.0], [23.7, 159.0], [23.8, 160.0], [23.9, 160.0], [24.0, 161.0], [24.1, 161.0], [24.2, 162.0], [24.3, 162.0], [24.4, 163.0], [24.5, 163.0], [24.6, 164.0], [24.7, 165.0], [24.8, 165.0], [24.9, 166.0], [25.0, 166.0], [25.1, 167.0], [25.2, 167.0], [25.3, 168.0], [25.4, 168.0], [25.5, 169.0], [25.6, 169.0], [25.7, 170.0], [25.8, 170.0], [25.9, 171.0], [26.0, 171.0], [26.1, 172.0], [26.2, 172.0], [26.3, 173.0], [26.4, 173.0], [26.5, 174.0], [26.6, 174.0], [26.7, 175.0], [26.8, 176.0], [26.9, 176.0], [27.0, 177.0], [27.1, 177.0], [27.2, 178.0], [27.3, 178.0], [27.4, 179.0], [27.5, 180.0], [27.6, 180.0], [27.7, 181.0], [27.8, 182.0], [27.9, 182.0], [28.0, 183.0], [28.1, 183.0], [28.2, 184.0], [28.3, 185.0], [28.4, 185.0], [28.5, 186.0], [28.6, 187.0], [28.7, 187.0], [28.8, 188.0], [28.9, 188.0], [29.0, 189.0], [29.1, 190.0], [29.2, 191.0], [29.3, 191.0], [29.4, 192.0], [29.5, 193.0], [29.6, 194.0], [29.7, 194.0], [29.8, 195.0], [29.9, 196.0], [30.0, 197.0], [30.1, 197.0], [30.2, 198.0], [30.3, 199.0], [30.4, 199.0], [30.5, 200.0], [30.6, 201.0], [30.7, 201.0], [30.8, 202.0], [30.9, 203.0], [31.0, 204.0], [31.1, 204.0], [31.2, 205.0], [31.3, 206.0], [31.4, 207.0], [31.5, 207.0], [31.6, 208.0], [31.7, 209.0], [31.8, 210.0], [31.9, 211.0], [32.0, 211.0], [32.1, 212.0], [32.2, 213.0], [32.3, 214.0], [32.4, 215.0], [32.5, 216.0], [32.6, 217.0], [32.7, 218.0], [32.8, 218.0], [32.9, 219.0], [33.0, 220.0], [33.1, 222.0], [33.2, 223.0], [33.3, 224.0], [33.4, 224.0], [33.5, 225.0], [33.6, 226.0], [33.7, 227.0], [33.8, 228.0], [33.9, 229.0], [34.0, 230.0], [34.1, 231.0], [34.2, 233.0], [34.3, 233.0], [34.4, 235.0], [34.5, 236.0], [34.6, 237.0], [34.7, 238.0], [34.8, 239.0], [34.9, 240.0], [35.0, 241.0], [35.1, 243.0], [35.2, 244.0], [35.3, 245.0], [35.4, 246.0], [35.5, 248.0], [35.6, 249.0], [35.7, 250.0], [35.8, 252.0], [35.9, 253.0], [36.0, 255.0], [36.1, 256.0], [36.2, 258.0], [36.3, 259.0], [36.4, 260.0], [36.5, 262.0], [36.6, 263.0], [36.7, 265.0], [36.8, 266.0], [36.9, 268.0], [37.0, 269.0], [37.1, 271.0], [37.2, 273.0], [37.3, 274.0], [37.4, 276.0], [37.5, 277.0], [37.6, 279.0], [37.7, 281.0], [37.8, 282.0], [37.9, 284.0], [38.0, 286.0], [38.1, 288.0], [38.2, 290.0], [38.3, 292.0], [38.4, 294.0], [38.5, 295.0], [38.6, 297.0], [38.7, 299.0], [38.8, 300.0], [38.9, 302.0], [39.0, 304.0], [39.1, 307.0], [39.2, 309.0], [39.3, 311.0], [39.4, 313.0], [39.5, 315.0], [39.6, 317.0], [39.7, 320.0], [39.8, 322.0], [39.9, 325.0], [40.0, 327.0], [40.1, 329.0], [40.2, 332.0], [40.3, 335.0], [40.4, 338.0], [40.5, 340.0], [40.6, 344.0], [40.7, 346.0], [40.8, 349.0], [40.9, 352.0], [41.0, 355.0], [41.1, 358.0], [41.2, 361.0], [41.3, 364.0], [41.4, 367.0], [41.5, 370.0], [41.6, 374.0], [41.7, 377.0], [41.8, 380.0], [41.9, 384.0], [42.0, 388.0], [42.1, 392.0], [42.2, 395.0], [42.3, 399.0], [42.4, 402.0], [42.5, 406.0], [42.6, 409.0], [42.7, 413.0], [42.8, 417.0], [42.9, 420.0], [43.0, 424.0], [43.1, 427.0], [43.2, 430.0], [43.3, 434.0], [43.4, 438.0], [43.5, 442.0], [43.6, 447.0], [43.7, 450.0], [43.8, 455.0], [43.9, 459.0], [44.0, 463.0], [44.1, 467.0], [44.2, 471.0], [44.3, 475.0], [44.4, 478.0], [44.5, 482.0], [44.6, 486.0], [44.7, 491.0], [44.8, 495.0], [44.9, 498.0], [45.0, 503.0], [45.1, 507.0], [45.2, 511.0], [45.3, 516.0], [45.4, 520.0], [45.5, 524.0], [45.6, 529.0], [45.7, 532.0], [45.8, 535.0], [45.9, 540.0], [46.0, 543.0], [46.1, 548.0], [46.2, 551.0], [46.3, 554.0], [46.4, 558.0], [46.5, 562.0], [46.6, 566.0], [46.7, 569.0], [46.8, 572.0], [46.9, 575.0], [47.0, 579.0], [47.1, 583.0], [47.2, 586.0], [47.3, 591.0], [47.4, 594.0], [47.5, 597.0], [47.6, 601.0], [47.7, 605.0], [47.8, 608.0], [47.9, 611.0], [48.0, 614.0], [48.1, 617.0], [48.2, 621.0], [48.3, 624.0], [48.4, 627.0], [48.5, 630.0], [48.6, 634.0], [48.7, 636.0], [48.8, 640.0], [48.9, 642.0], [49.0, 645.0], [49.1, 648.0], [49.2, 651.0], [49.3, 654.0], [49.4, 657.0], [49.5, 660.0], [49.6, 663.0], [49.7, 666.0], [49.8, 669.0], [49.9, 671.0], [50.0, 675.0], [50.1, 678.0], [50.2, 680.0], [50.3, 683.0], [50.4, 686.0], [50.5, 688.0], [50.6, 691.0], [50.7, 694.0], [50.8, 697.0], [50.9, 699.0], [51.0, 702.0], [51.1, 705.0], [51.2, 707.0], [51.3, 710.0], [51.4, 712.0], [51.5, 715.0], [51.6, 717.0], [51.7, 720.0], [51.8, 722.0], [51.9, 725.0], [52.0, 728.0], [52.1, 730.0], [52.2, 733.0], [52.3, 736.0], [52.4, 738.0], [52.5, 740.0], [52.6, 742.0], [52.7, 745.0], [52.8, 748.0], [52.9, 750.0], [53.0, 752.0], [53.1, 754.0], [53.2, 757.0], [53.3, 759.0], [53.4, 761.0], [53.5, 764.0], [53.6, 766.0], [53.7, 769.0], [53.8, 771.0], [53.9, 773.0], [54.0, 775.0], [54.1, 778.0], [54.2, 780.0], [54.3, 782.0], [54.4, 784.0], [54.5, 786.0], [54.6, 789.0], [54.7, 791.0], [54.8, 793.0], [54.9, 795.0], [55.0, 798.0], [55.1, 800.0], [55.2, 802.0], [55.3, 804.0], [55.4, 806.0], [55.5, 808.0], [55.6, 811.0], [55.7, 813.0], [55.8, 815.0], [55.9, 817.0], [56.0, 820.0], [56.1, 822.0], [56.2, 824.0], [56.3, 826.0], [56.4, 828.0], [56.5, 830.0], [56.6, 832.0], [56.7, 834.0], [56.8, 837.0], [56.9, 838.0], [57.0, 841.0], [57.1, 842.0], [57.2, 844.0], [57.3, 846.0], [57.4, 848.0], [57.5, 850.0], [57.6, 853.0], [57.7, 855.0], [57.8, 857.0], [57.9, 859.0], [58.0, 862.0], [58.1, 864.0], [58.2, 866.0], [58.3, 868.0], [58.4, 870.0], [58.5, 872.0], [58.6, 874.0], [58.7, 876.0], [58.8, 878.0], [58.9, 880.0], [59.0, 883.0], [59.1, 885.0], [59.2, 887.0], [59.3, 889.0], [59.4, 890.0], [59.5, 892.0], [59.6, 894.0], [59.7, 896.0], [59.8, 898.0], [59.9, 900.0], [60.0, 902.0], [60.1, 903.0], [60.2, 906.0], [60.3, 908.0], [60.4, 910.0], [60.5, 912.0], [60.6, 914.0], [60.7, 916.0], [60.8, 918.0], [60.9, 920.0], [61.0, 922.0], [61.1, 924.0], [61.2, 926.0], [61.3, 928.0], [61.4, 931.0], [61.5, 933.0], [61.6, 935.0], [61.7, 937.0], [61.8, 939.0], [61.9, 941.0], [62.0, 943.0], [62.1, 945.0], [62.2, 948.0], [62.3, 950.0], [62.4, 951.0], [62.5, 954.0], [62.6, 956.0], [62.7, 958.0], [62.8, 960.0], [62.9, 962.0], [63.0, 964.0], [63.1, 965.0], [63.2, 967.0], [63.3, 969.0], [63.4, 971.0], [63.5, 973.0], [63.6, 976.0], [63.7, 977.0], [63.8, 979.0], [63.9, 981.0], [64.0, 983.0], [64.1, 985.0], [64.2, 987.0], [64.3, 989.0], [64.4, 991.0], [64.5, 992.0], [64.6, 995.0], [64.7, 997.0], [64.8, 999.0], [64.9, 1000.0], [65.0, 1003.0], [65.1, 1005.0], [65.2, 1007.0], [65.3, 1009.0], [65.4, 1011.0], [65.5, 1013.0], [65.6, 1015.0], [65.7, 1017.0], [65.8, 1019.0], [65.9, 1021.0], [66.0, 1023.0], [66.1, 1025.0], [66.2, 1027.0], [66.3, 1029.0], [66.4, 1031.0], [66.5, 1033.0], [66.6, 1035.0], [66.7, 1037.0], [66.8, 1039.0], [66.9, 1041.0], [67.0, 1043.0], [67.1, 1045.0], [67.2, 1047.0], [67.3, 1049.0], [67.4, 1051.0], [67.5, 1053.0], [67.6, 1055.0], [67.7, 1057.0], [67.8, 1059.0], [67.9, 1061.0], [68.0, 1063.0], [68.1, 1065.0], [68.2, 1067.0], [68.3, 1069.0], [68.4, 1071.0], [68.5, 1073.0], [68.6, 1075.0], [68.7, 1078.0], [68.8, 1080.0], [68.9, 1082.0], [69.0, 1084.0], [69.1, 1086.0], [69.2, 1088.0], [69.3, 1090.0], [69.4, 1092.0], [69.5, 1094.0], [69.6, 1097.0], [69.7, 1099.0], [69.8, 1101.0], [69.9, 1103.0], [70.0, 1105.0], [70.1, 1108.0], [70.2, 1110.0], [70.3, 1112.0], [70.4, 1114.0], [70.5, 1116.0], [70.6, 1118.0], [70.7, 1120.0], [70.8, 1122.0], [70.9, 1124.0], [71.0, 1126.0], [71.1, 1128.0], [71.2, 1130.0], [71.3, 1133.0], [71.4, 1135.0], [71.5, 1137.0], [71.6, 1139.0], [71.7, 1141.0], [71.8, 1143.0], [71.9, 1146.0], [72.0, 1148.0], [72.1, 1150.0], [72.2, 1152.0], [72.3, 1154.0], [72.4, 1156.0], [72.5, 1158.0], [72.6, 1160.0], [72.7, 1162.0], [72.8, 1164.0], [72.9, 1166.0], [73.0, 1169.0], [73.1, 1170.0], [73.2, 1173.0], [73.3, 1175.0], [73.4, 1177.0], [73.5, 1179.0], [73.6, 1181.0], [73.7, 1183.0], [73.8, 1186.0], [73.9, 1188.0], [74.0, 1190.0], [74.1, 1193.0], [74.2, 1194.0], [74.3, 1197.0], [74.4, 1199.0], [74.5, 1201.0], [74.6, 1203.0], [74.7, 1206.0], [74.8, 1208.0], [74.9, 1210.0], [75.0, 1212.0], [75.1, 1215.0], [75.2, 1217.0], [75.3, 1220.0], [75.4, 1222.0], [75.5, 1225.0], [75.6, 1227.0], [75.7, 1229.0], [75.8, 1231.0], [75.9, 1233.0], [76.0, 1235.0], [76.1, 1238.0], [76.2, 1240.0], [76.3, 1243.0], [76.4, 1246.0], [76.5, 1248.0], [76.6, 1250.0], [76.7, 1252.0], [76.8, 1254.0], [76.9, 1256.0], [77.0, 1259.0], [77.1, 1261.0], [77.2, 1264.0], [77.3, 1267.0], [77.4, 1269.0], [77.5, 1272.0], [77.6, 1274.0], [77.7, 1276.0], [77.8, 1279.0], [77.9, 1281.0], [78.0, 1283.0], [78.1, 1286.0], [78.2, 1288.0], [78.3, 1290.0], [78.4, 1293.0], [78.5, 1295.0], [78.6, 1298.0], [78.7, 1300.0], [78.8, 1302.0], [78.9, 1305.0], [79.0, 1307.0], [79.1, 1310.0], [79.2, 1313.0], [79.3, 1315.0], [79.4, 1318.0], [79.5, 1320.0], [79.6, 1322.0], [79.7, 1325.0], [79.8, 1328.0], [79.9, 1330.0], [80.0, 1333.0], [80.1, 1336.0], [80.2, 1338.0], [80.3, 1341.0], [80.4, 1344.0], [80.5, 1346.0], [80.6, 1349.0], [80.7, 1351.0], [80.8, 1354.0], [80.9, 1357.0], [81.0, 1361.0], [81.1, 1363.0], [81.2, 1365.0], [81.3, 1368.0], [81.4, 1371.0], [81.5, 1374.0], [81.6, 1376.0], [81.7, 1379.0], [81.8, 1382.0], [81.9, 1385.0], [82.0, 1387.0], [82.1, 1390.0], [82.2, 1393.0], [82.3, 1396.0], [82.4, 1398.0], [82.5, 1401.0], [82.6, 1404.0], [82.7, 1407.0], [82.8, 1410.0], [82.9, 1413.0], [83.0, 1416.0], [83.1, 1419.0], [83.2, 1422.0], [83.3, 1424.0], [83.4, 1427.0], [83.5, 1430.0], [83.6, 1433.0], [83.7, 1436.0], [83.8, 1439.0], [83.9, 1442.0], [84.0, 1445.0], [84.1, 1448.0], [84.2, 1452.0], [84.3, 1455.0], [84.4, 1458.0], [84.5, 1462.0], [84.6, 1465.0], [84.7, 1468.0], [84.8, 1472.0], [84.9, 1475.0], [85.0, 1478.0], [85.1, 1481.0], [85.2, 1485.0], [85.3, 1488.0], [85.4, 1491.0], [85.5, 1494.0], [85.6, 1498.0], [85.7, 1501.0], [85.8, 1505.0], [85.9, 1508.0], [86.0, 1512.0], [86.1, 1515.0], [86.2, 1520.0], [86.3, 1523.0], [86.4, 1527.0], [86.5, 1530.0], [86.6, 1533.0], [86.7, 1537.0], [86.8, 1540.0], [86.9, 1544.0], [87.0, 1547.0], [87.1, 1551.0], [87.2, 1554.0], [87.3, 1558.0], [87.4, 1561.0], [87.5, 1565.0], [87.6, 1568.0], [87.7, 1572.0], [87.8, 1576.0], [87.9, 1580.0], [88.0, 1583.0], [88.1, 1587.0], [88.2, 1591.0], [88.3, 1595.0], [88.4, 1599.0], [88.5, 1603.0], [88.6, 1606.0], [88.7, 1610.0], [88.8, 1614.0], [88.9, 1618.0], [89.0, 1622.0], [89.1, 1626.0], [89.2, 1630.0], [89.3, 1634.0], [89.4, 1639.0], [89.5, 1643.0], [89.6, 1646.0], [89.7, 1650.0], [89.8, 1654.0], [89.9, 1658.0], [90.0, 1663.0], [90.1, 1668.0], [90.2, 1673.0], [90.3, 1677.0], [90.4, 1681.0], [90.5, 1685.0], [90.6, 1690.0], [90.7, 1695.0], [90.8, 1699.0], [90.9, 1705.0], [91.0, 1710.0], [91.1, 1715.0], [91.2, 1721.0], [91.3, 1726.0], [91.4, 1731.0], [91.5, 1735.0], [91.6, 1741.0], [91.7, 1747.0], [91.8, 1751.0], [91.9, 1756.0], [92.0, 1762.0], [92.1, 1768.0], [92.2, 1774.0], [92.3, 1780.0], [92.4, 1787.0], [92.5, 1792.0], [92.6, 1797.0], [92.7, 1802.0], [92.8, 1807.0], [92.9, 1814.0], [93.0, 1820.0], [93.1, 1825.0], [93.2, 1832.0], [93.3, 1839.0], [93.4, 1846.0], [93.5, 1852.0], [93.6, 1858.0], [93.7, 1864.0], [93.8, 1872.0], [93.9, 1878.0], [94.0, 1885.0], [94.1, 1892.0], [94.2, 1899.0], [94.3, 1907.0], [94.4, 1913.0], [94.5, 1919.0], [94.6, 1926.0], [94.7, 1934.0], [94.8, 1941.0], [94.9, 1949.0], [95.0, 1956.0], [95.1, 1965.0], [95.2, 1974.0], [95.3, 1981.0], [95.4, 1989.0], [95.5, 1998.0], [95.6, 2008.0], [95.7, 2018.0], [95.8, 2026.0], [95.9, 2034.0], [96.0, 2044.0], [96.1, 2054.0], [96.2, 2065.0], [96.3, 2075.0], [96.4, 2085.0], [96.5, 2094.0], [96.6, 2103.0], [96.7, 2114.0], [96.8, 2127.0], [96.9, 2140.0], [97.0, 2153.0], [97.1, 2163.0], [97.2, 2174.0], [97.3, 2187.0], [97.4, 2200.0], [97.5, 2214.0], [97.6, 2228.0], [97.7, 2243.0], [97.8, 2259.0], [97.9, 2277.0], [98.0, 2293.0], [98.1, 2312.0], [98.2, 2333.0], [98.3, 2351.0], [98.4, 2376.0], [98.5, 2398.0], [98.6, 2425.0], [98.7, 2450.0], [98.8, 2472.0], [98.9, 2498.0], [99.0, 2532.0], [99.1, 2570.0], [99.2, 2610.0], [99.3, 2661.0], [99.4, 2704.0], [99.5, 2753.0], [99.6, 2822.0], [99.7, 2922.0], [99.8, 3015.0], [99.9, 3200.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 26946.0, "series": [{"data": [[0.0, 8741.0], [600.0, 3913.0], [700.0, 4895.0], [800.0, 5638.0], [900.0, 5812.0], [1000.0, 5718.0], [1100.0, 5502.0], [1200.0, 4986.0], [1300.0, 4416.0], [1400.0, 3758.0], [1500.0, 3231.0], [1600.0, 2805.0], [100.0, 26946.0], [1700.0, 2173.0], [1800.0, 1822.0], [1900.0, 1533.0], [2000.0, 1226.0], [2100.0, 979.0], [2300.0, 551.0], [2200.0, 751.0], [2400.0, 465.0], [2500.0, 320.0], [2600.0, 246.0], [2700.0, 215.0], [2800.0, 118.0], [2900.0, 129.0], [3000.0, 73.0], [3100.0, 63.0], [200.0, 9748.0], [3200.0, 27.0], [3300.0, 32.0], [3400.0, 22.0], [3500.0, 11.0], [3700.0, 7.0], [3600.0, 10.0], [3800.0, 3.0], [3900.0, 2.0], [4000.0, 2.0], [4100.0, 2.0], [300.0, 4166.0], [400.0, 3054.0], [500.0, 3089.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 16775.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 52677.0, "series": [{"data": [[0.0, 52677.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 47748.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 16775.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.72866276E12, "maxY": 16.0, "series": [{"data": [[1.72866996E12, 12.0], [1.72866864E12, 12.0], [1.72866966E12, 12.0], [1.72867056E12, 12.0], [1.72867026E12, 12.0], [1.72866906E12, 12.0], [1.72867068E12, 12.0], [1.72866936E12, 12.0], [1.72867038E12, 12.0], [1.72867098E12, 7.040955631399319], [1.72866876E12, 12.0], [1.72866882E12, 12.0], [1.72867044E12, 12.0], [1.72866912E12, 12.0], [1.72867014E12, 12.0], [1.72867104E12, 2.6593406593406597], [1.72867074E12, 12.0], [1.72866954E12, 12.0], [1.72867086E12, 12.0], [1.72866894E12, 12.0], [1.72866984E12, 12.0], [1.72866924E12, 12.0], [1.7286693E12, 12.0], [1.72867092E12, 11.7910602910603], [1.7286696E12, 12.0], [1.72867062E12, 12.0], [1.7286687E12, 12.0], [1.728669E12, 12.0], [1.72866942E12, 12.0], [1.72867032E12, 12.0], [1.72866972E12, 12.0], [1.72867002E12, 12.0], [1.72866978E12, 12.0], [1.72866918E12, 12.0], [1.72867008E12, 12.0], [1.72866948E12, 12.0], [1.72866858E12, 11.92988313856427], [1.7286702E12, 12.0], [1.72866888E12, 12.0], [1.7286699E12, 12.0], [1.7286708E12, 12.0], [1.7286705E12, 12.0]], "isOverall": false, "label": "12", "isController": false}, {"data": [[1.728663E12, 2.0], [1.72866312E12, 1.8854961832061072], [1.72866282E12, 2.0], [1.72866276E12, 2.0], [1.72866294E12, 2.0], [1.72866288E12, 2.0], [1.72866306E12, 2.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.72866462E12, 4.0], [1.72866492E12, 4.0], [1.72866522E12, 4.0], [1.7286633E12, 4.0], [1.72866552E12, 4.0], [1.7286636E12, 4.0], [1.7286639E12, 4.0], [1.7286642E12, 4.0], [1.7286645E12, 4.0], [1.7286648E12, 4.0], [1.72866348E12, 4.0], [1.7286651E12, 4.0], [1.72866318E12, 4.0], [1.7286654E12, 4.0], [1.72866378E12, 4.0], [1.72866408E12, 4.0], [1.72866438E12, 4.0], [1.72866468E12, 4.0], [1.7286657E12, 2.5510204081632653], [1.72866336E12, 4.0], [1.72866498E12, 4.0], [1.72866528E12, 4.0], [1.72866558E12, 4.0], [1.72866366E12, 4.0], [1.72866396E12, 4.0], [1.72866426E12, 4.0], [1.72866456E12, 4.0], [1.72866324E12, 4.0], [1.72866486E12, 4.0], [1.72866516E12, 4.0], [1.72866546E12, 4.0], [1.72866354E12, 4.0], [1.72866384E12, 4.0], [1.72866414E12, 4.0], [1.72866444E12, 4.0], [1.72866312E12, 3.991735537190083], [1.72866474E12, 4.0], [1.72866564E12, 3.8933333333333326], [1.72866504E12, 4.0], [1.72866534E12, 4.0], [1.72866342E12, 4.0], [1.72866372E12, 4.0], [1.72866402E12, 4.0], [1.72866432E12, 4.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.72867188E12, 16.0], [1.72867158E12, 16.0], [1.72867218E12, 16.0], [1.72867248E12, 16.0], [1.7286723E12, 16.0], [1.7286726E12, 16.0], [1.72867128E12, 16.0], [1.72867206E12, 16.0], [1.72867236E12, 16.0], [1.72867104E12, 15.937898089171966], [1.72867266E12, 16.0], [1.72867116E12, 16.0], [1.72867278E12, 8.183774834437093], [1.72867176E12, 16.0], [1.72867146E12, 16.0], [1.72867254E12, 16.0], [1.72867284E12, 1.0], [1.72867152E12, 16.0], [1.72867122E12, 16.0], [1.72867164E12, 16.0], [1.72867134E12, 16.0], [1.72867194E12, 16.0], [1.72867224E12, 16.0], [1.7286714E12, 16.0], [1.7286711E12, 16.0], [1.7286717E12, 16.0], [1.728672E12, 16.0], [1.72867182E12, 16.0], [1.72867212E12, 16.0], [1.72867242E12, 16.0], [1.72867272E12, 15.010743061772592]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.72866642E12, 8.0], [1.72866582E12, 8.0], [1.72866804E12, 8.0], [1.72866744E12, 8.0], [1.72866684E12, 8.0], [1.72866846E12, 7.249572649572651], [1.7286672E12, 8.0], [1.7286666E12, 8.0], [1.72866822E12, 8.0], [1.728666E12, 8.0], [1.72866762E12, 8.0], [1.72866702E12, 8.0], [1.72866576E12, 8.0], [1.72866738E12, 8.0], [1.72866678E12, 8.0], [1.72866618E12, 8.0], [1.7286684E12, 8.0], [1.7286678E12, 8.0], [1.72866594E12, 8.0], [1.72866816E12, 8.0], [1.72866756E12, 8.0], [1.72866696E12, 8.0], [1.72866858E12, 1.955223880597015], [1.72866636E12, 8.0], [1.72866798E12, 8.0], [1.72866672E12, 8.0], [1.72866834E12, 8.0], [1.72866612E12, 8.0], [1.72866774E12, 8.0], [1.72866714E12, 8.0], [1.72866654E12, 8.0], [1.7286669E12, 8.0], [1.7286663E12, 8.0], [1.72866852E12, 3.5031645569620253], [1.7286657E12, 7.993288590604028], [1.72866792E12, 8.0], [1.72866732E12, 8.0], [1.72866768E12, 8.0], [1.72866708E12, 8.0], [1.72866648E12, 8.0], [1.7286681E12, 8.0], [1.72866588E12, 8.0], [1.7286675E12, 8.0], [1.72866624E12, 8.0], [1.72866786E12, 8.0], [1.72866726E12, 8.0], [1.72866666E12, 8.0], [1.72866606E12, 8.0], [1.72866828E12, 8.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72867284E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 602.835164835165, "minX": 1.0, "maxY": 873.5267136119943, "series": [{"data": [[2.0, 617.3389090909092], [8.0, 698.741861488187], [9.0, 602.835164835165], [10.0, 848.8352941176473], [11.0, 701.3316455696198], [3.0, 627.232638888889], [12.0, 807.080767920031], [13.0, 730.6000000000001], [14.0, 625.3333333333333], [15.0, 751.9515151515157], [1.0, 748.8170731707318], [4.0, 639.5049296211317], [16.0, 873.5267136119943], [5.0, 687.48322147651], [6.0, 696.8490566037736], [7.0, 644.4399999999998]], "isOverall": false, "label": "getmap", "isController": false}, {"data": [[10.697107508532405, 768.1858276450556]], "isOverall": false, "label": "getmap-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.72866276E12, "maxY": 5.734855475E7, "series": [{"data": [[1.72866462E12, 1.9140455833333332E7], [1.7286636E12, 2.010077145E7], [1.72866582E12, 3.4644955483333334E7], [1.72866804E12, 3.64678026E7], [1.72867026E12, 4.925678893333333E7], [1.72867248E12, 5.6335627166666664E7], [1.72866906E12, 4.269333096666667E7], [1.7286723E12, 5.6115527766666666E7], [1.72866684E12, 3.25554408E7], [1.72867128E12, 5.551542005E7], [1.7286648E12, 1.9466766233333334E7], [1.7286672E12, 3.645252493333333E7], [1.72867044E12, 4.8315464733333334E7], [1.72866378E12, 1.9114291683333334E7], [1.72866822E12, 3.6342497016666666E7], [1.72867266E12, 5.451647895E7], [1.72866276E12, 5550796.55], [1.728666E12, 3.5935579E7], [1.72866498E12, 1.9797849333333332E7], [1.72866702E12, 3.7033486E7], [1.72866924E12, 4.228715268333333E7], [1.72867146E12, 5.638329593333333E7], [1.72866738E12, 3.438987255E7], [1.7286696E12, 4.426236625E7], [1.72866396E12, 1.9022997066666666E7], [1.72867062E12, 4.9447127983333334E7], [1.72867284E12, 1377849.6], [1.72867164E12, 5.6315115916666664E7], [1.72866294E12, 9547978.533333333], [1.72866516E12, 1.8578357716666665E7], [1.72866618E12, 3.22776681E7], [1.7286684E12, 3.5733736016666666E7], [1.72866942E12, 4.413681425E7], [1.72866978E12, 4.298935688333333E7], [1.72866414E12, 1.8644224183333334E7], [1.72866312E12, 1.1955598066666666E7], [1.72866756E12, 3.7255555E7], [1.728672E12, 5.628605643333333E7], [1.72866534E12, 1.8172564383333333E7], [1.72866858E12, 3.181596535E7], [1.72867182E12, 5.604372453333333E7], [1.72866636E12, 3.2229870216666665E7], [1.7286708E12, 4.951086113333333E7], [1.72866432E12, 1.9657758616666667E7], [1.72866834E12, 3.601654125E7], [1.72866492E12, 1.9051288783333335E7], [1.72867158E12, 5.4971961583333336E7], [1.72866612E12, 3.2500578983333334E7], [1.72867056E12, 4.900718645E7], [1.7286639E12, 1.9534146083333332E7], [1.72866714E12, 3.4673733766666666E7], [1.72866936E12, 4.0175952016666666E7], [1.72867038E12, 4.814718345E7], [1.7286726E12, 5.534659265E7], [1.72866288E12, 9776355.766666668], [1.7286651E12, 1.9411275066666666E7], [1.72866408E12, 2.01105034E7], [1.7286663E12, 3.24506269E7], [1.72866852E12, 1.5401514116666667E7], [1.72867074E12, 4.9471189416666664E7], [1.72866954E12, 4.485615531666667E7], [1.72867278E12, 2.96223937E7], [1.72866732E12, 3.49737599E7], [1.72867176E12, 5.6794804266666666E7], [1.72866306E12, 9646071.966666667], [1.72866528E12, 1.811365485E7], [1.72866768E12, 3.551959925E7], [1.72867092E12, 5.063815628333333E7], [1.72866426E12, 1.924984585E7], [1.7286687E12, 4.5507853483333334E7], [1.72866324E12, 1.9066166283333335E7], [1.72866648E12, 3.2693202883333333E7], [1.72866546E12, 1.905350615E7], [1.72867194E12, 5.551514535E7], [1.7286675E12, 3.547974725E7], [1.72866972E12, 4.3968265916666664E7], [1.72866786E12, 3.5500313333333336E7], [1.7286711E12, 5.439695155E7], [1.72866444E12, 1.8018727133333333E7], [1.72866564E12, 1.767992045E7], [1.72867008E12, 4.5081021333333336E7], [1.72866342E12, 1.8808606016666666E7], [1.72866888E12, 4.17688361E7], [1.72866666E12, 3.37587634E7], [1.7286699E12, 4.424858688333333E7], [1.72867212E12, 5.59349939E7], [1.728663E12, 1.02330646E7], [1.72867188E12, 5.593450836666667E7], [1.72866642E12, 3.404103871666667E7], [1.72866864E12, 4.7617138766666666E7], [1.72866522E12, 1.9337980566666666E7], [1.72866966E12, 4.426510315E7], [1.72866744E12, 3.4548369166666664E7], [1.72867068E12, 4.881898546666667E7], [1.7286642E12, 2.0175032016666666E7], [1.72866846E12, 3.23240684E7], [1.72866882E12, 4.20117843E7], [1.72867206E12, 5.731642418333333E7], [1.72866318E12, 1.8570381166666668E7], [1.7286654E12, 1.8499931683333334E7], [1.72867104E12, 3.3966850016666666E7], [1.7286666E12, 3.417727505E7], [1.72866438E12, 2.017924725E7], [1.72866762E12, 3.504858835E7], [1.72867086E12, 4.936507111666667E7], [1.72866336E12, 1.918388515E7], [1.72866984E12, 4.422339361666667E7], [1.72866558E12, 1.792509905E7], [1.72866576E12, 3.510190695E7], [1.72866678E12, 3.3133951633333333E7], [1.728669E12, 4.088662335E7], [1.72867122E12, 5.6928425516666666E7], [1.72866456E12, 1.88773863E7], [1.72866354E12, 2.0121263183333334E7], [1.7286678E12, 3.655643045E7], [1.72867002E12, 4.55064591E7], [1.72867224E12, 5.604108903333333E7], [1.7286714E12, 5.649850731666667E7], [1.72866594E12, 3.695153638333333E7], [1.72866816E12, 3.4947911766666666E7], [1.72866474E12, 1.88234133E7], [1.72866918E12, 4.1631676016666666E7], [1.72866696E12, 3.349684815E7], [1.7286702E12, 4.839968946666667E7], [1.72866372E12, 1.933825615E7], [1.72866798E12, 3.669362865E7], [1.72867242E12, 5.651257588333333E7], [1.72866672E12, 3.430410645E7], [1.72866996E12, 4.237439081666667E7], [1.72866774E12, 3.56367091E7], [1.72867218E12, 5.661478386666667E7], [1.7286633E12, 2.002580985E7], [1.72866552E12, 1.8971014066666666E7], [1.7286645E12, 1.82067251E7], [1.72867098E12, 3.02309472E7], [1.72866654E12, 3.3783066083333336E7], [1.72866876E12, 4.49386076E7], [1.72866348E12, 1.9031102566666666E7], [1.7286669E12, 3.2546053116666667E7], [1.72866912E12, 4.4934936166666664E7], [1.72867014E12, 4.28045026E7], [1.72867236E12, 5.337117693333333E7], [1.72867116E12, 5.734855475E7], [1.72866468E12, 2.03972804E7], [1.7286657E12, 1.4685475016666668E7], [1.72866792E12, 3.76834252E7], [1.72866894E12, 4.118658886666667E7], [1.7286693E12, 3.9374870483333334E7], [1.72866366E12, 1.925449785E7], [1.72867254E12, 5.7061492483333334E7], [1.72866708E12, 3.455974221666667E7], [1.72867152E12, 5.679211935E7], [1.72866486E12, 1.790980275E7], [1.7286681E12, 3.508044296666667E7], [1.72867134E12, 5.625590521666667E7], [1.72866588E12, 3.398804161666667E7], [1.72867032E12, 4.677035495E7], [1.72866384E12, 1.9944747633333333E7], [1.72866624E12, 3.254949855E7], [1.72866282E12, 9640258.066666666], [1.72866504E12, 1.97228965E7], [1.72866726E12, 3.496645938333333E7], [1.72866948E12, 4.45760676E7], [1.7286717E12, 5.6231509583333336E7], [1.72866402E12, 1.9765543683333334E7], [1.72866606E12, 3.3310817233333334E7], [1.72866828E12, 3.5709145516666666E7], [1.7286705E12, 4.8333801733333334E7], [1.72867272E12, 5.4287533983333334E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72866462E12, 0.0], [1.7286636E12, 0.0], [1.72866582E12, 0.0], [1.72866804E12, 0.0], [1.72867026E12, 0.0], [1.72867248E12, 0.0], [1.72866906E12, 0.0], [1.7286723E12, 0.0], [1.72866684E12, 0.0], [1.72867128E12, 0.0], [1.7286648E12, 0.0], [1.7286672E12, 0.0], [1.72867044E12, 0.0], [1.72866378E12, 0.0], [1.72866822E12, 0.0], [1.72867266E12, 0.0], [1.72866276E12, 0.0], [1.728666E12, 0.0], [1.72866498E12, 0.0], [1.72866702E12, 0.0], [1.72866924E12, 0.0], [1.72867146E12, 0.0], [1.72866738E12, 0.0], [1.7286696E12, 0.0], [1.72866396E12, 0.0], [1.72867062E12, 0.0], [1.72867284E12, 0.0], [1.72867164E12, 0.0], [1.72866294E12, 0.0], [1.72866516E12, 0.0], [1.72866618E12, 0.0], [1.7286684E12, 0.0], [1.72866942E12, 0.0], [1.72866978E12, 0.0], [1.72866414E12, 0.0], [1.72866312E12, 0.0], [1.72866756E12, 0.0], [1.728672E12, 0.0], [1.72866534E12, 0.0], [1.72866858E12, 0.0], [1.72867182E12, 0.0], [1.72866636E12, 0.0], [1.7286708E12, 0.0], [1.72866432E12, 0.0], [1.72866834E12, 0.0], [1.72866492E12, 0.0], [1.72867158E12, 0.0], [1.72866612E12, 0.0], [1.72867056E12, 0.0], [1.7286639E12, 0.0], [1.72866714E12, 0.0], [1.72866936E12, 0.0], [1.72867038E12, 0.0], [1.7286726E12, 0.0], [1.72866288E12, 0.0], [1.7286651E12, 0.0], [1.72866408E12, 0.0], [1.7286663E12, 0.0], [1.72866852E12, 0.0], [1.72867074E12, 0.0], [1.72866954E12, 0.0], [1.72867278E12, 0.0], [1.72866732E12, 0.0], [1.72867176E12, 0.0], [1.72866306E12, 0.0], [1.72866528E12, 0.0], [1.72866768E12, 0.0], [1.72867092E12, 0.0], [1.72866426E12, 0.0], [1.7286687E12, 0.0], [1.72866324E12, 0.0], [1.72866648E12, 0.0], [1.72866546E12, 0.0], [1.72867194E12, 0.0], [1.7286675E12, 0.0], [1.72866972E12, 0.0], [1.72866786E12, 0.0], [1.7286711E12, 0.0], [1.72866444E12, 0.0], [1.72866564E12, 0.0], [1.72867008E12, 0.0], [1.72866342E12, 0.0], [1.72866888E12, 0.0], [1.72866666E12, 0.0], [1.7286699E12, 0.0], [1.72867212E12, 0.0], [1.728663E12, 0.0], [1.72867188E12, 0.0], [1.72866642E12, 0.0], [1.72866864E12, 0.0], [1.72866522E12, 0.0], [1.72866966E12, 0.0], [1.72866744E12, 0.0], [1.72867068E12, 0.0], [1.7286642E12, 0.0], [1.72866846E12, 0.0], [1.72866882E12, 0.0], [1.72867206E12, 0.0], [1.72866318E12, 0.0], [1.7286654E12, 0.0], [1.72867104E12, 0.0], [1.7286666E12, 0.0], [1.72866438E12, 0.0], [1.72866762E12, 0.0], [1.72867086E12, 0.0], [1.72866336E12, 0.0], [1.72866984E12, 0.0], [1.72866558E12, 0.0], [1.72866576E12, 0.0], [1.72866678E12, 0.0], [1.728669E12, 0.0], [1.72867122E12, 0.0], [1.72866456E12, 0.0], [1.72866354E12, 0.0], [1.7286678E12, 0.0], [1.72867002E12, 0.0], [1.72867224E12, 0.0], [1.7286714E12, 0.0], [1.72866594E12, 0.0], [1.72866816E12, 0.0], [1.72866474E12, 0.0], [1.72866918E12, 0.0], [1.72866696E12, 0.0], [1.7286702E12, 0.0], [1.72866372E12, 0.0], [1.72866798E12, 0.0], [1.72867242E12, 0.0], [1.72866672E12, 0.0], [1.72866996E12, 0.0], [1.72866774E12, 0.0], [1.72867218E12, 0.0], [1.7286633E12, 0.0], [1.72866552E12, 0.0], [1.7286645E12, 0.0], [1.72867098E12, 0.0], [1.72866654E12, 0.0], [1.72866876E12, 0.0], [1.72866348E12, 0.0], [1.7286669E12, 0.0], [1.72866912E12, 0.0], [1.72867014E12, 0.0], [1.72867236E12, 0.0], [1.72867116E12, 0.0], [1.72866468E12, 0.0], [1.7286657E12, 0.0], [1.72866792E12, 0.0], [1.72866894E12, 0.0], [1.7286693E12, 0.0], [1.72866366E12, 0.0], [1.72867254E12, 0.0], [1.72866708E12, 0.0], [1.72867152E12, 0.0], [1.72866486E12, 0.0], [1.7286681E12, 0.0], [1.72867134E12, 0.0], [1.72866588E12, 0.0], [1.72867032E12, 0.0], [1.72866384E12, 0.0], [1.72866624E12, 0.0], [1.72866282E12, 0.0], [1.72866504E12, 0.0], [1.72866726E12, 0.0], [1.72866948E12, 0.0], [1.7286717E12, 0.0], [1.72866402E12, 0.0], [1.72866606E12, 0.0], [1.72866828E12, 0.0], [1.7286705E12, 0.0], [1.72867272E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72867284E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 576.4855072463764, "minX": 1.72866276E12, "maxY": 956.5788770053473, "series": [{"data": [[1.72866462E12, 633.5396825396825], [1.7286636E12, 637.5626666666667], [1.72866582E12, 680.6930693069306], [1.72866804E12, 683.8638297872342], [1.72867026E12, 713.24750499002], [1.72867248E12, 832.2807924203273], [1.72866906E12, 923.4060913705581], [1.7286723E12, 897.9015932521091], [1.72866684E12, 763.4833068362478], [1.72867128E12, 808.188393608073], [1.7286648E12, 641.46256684492], [1.7286672E12, 724.7319277108437], [1.72867044E12, 763.6464323748658], [1.72866378E12, 646.194070080863], [1.72866822E12, 671.7541899441338], [1.72867266E12, 894.9701213818875], [1.72866276E12, 750.7816091954024], [1.728666E12, 689.4054834054825], [1.72866498E12, 621.1886304909559], [1.72866702E12, 734.1954198473286], [1.72866924E12, 863.9377245508987], [1.72867146E12, 889.2676579925666], [1.72866738E12, 662.8331034482759], [1.7286696E12, 877.0584652862364], [1.72866396E12, 629.8839050131925], [1.72867062E12, 758.7329127234482], [1.72867284E12, 840.3], [1.72867164E12, 863.7588075880761], [1.72866294E12, 612.5206185567015], [1.72866516E12, 701.4705882352945], [1.72866618E12, 785.942996742672], [1.7286684E12, 688.5459770114946], [1.72866942E12, 855.4676089517072], [1.72866978E12, 777.9642082429496], [1.72866414E12, 627.2902374670181], [1.72866312E12, 592.0238095238096], [1.72866756E12, 713.5193452380942], [1.728672E12, 902.1104868913856], [1.72866534E12, 690.4553314121035], [1.72866858E12, 724.0525525525525], [1.72867182E12, 846.5618964003507], [1.72866636E12, 721.7432432432419], [1.7286708E12, 758.5732349841945], [1.72866432E12, 611.1071428571427], [1.72866834E12, 698.0407569141187], [1.72866492E12, 663.734806629835], [1.72867158E12, 893.1202236719472], [1.72866612E12, 712.2250372578254], [1.72867056E12, 757.1951219512185], [1.7286639E12, 697.8430232558139], [1.72866714E12, 690.9713055954094], [1.72866936E12, 887.9278606965183], [1.72867038E12, 724.9889779559119], [1.7286726E12, 950.8918650793651], [1.72866288E12, 590.7487684729059], [1.7286651E12, 681.6164772727266], [1.72866408E12, 640.415343915344], [1.7286663E12, 715.3323353293414], [1.72866852E12, 623.2689873417721], [1.72867074E12, 718.4093625498004], [1.72866954E12, 802.4927857935626], [1.72867278E12, 666.8360927152319], [1.72866732E12, 681.1951566951567], [1.72867176E12, 907.0924528301888], [1.72866306E12, 665.0765027322401], [1.72866528E12, 613.0690537084405], [1.72866768E12, 672.71809256662], [1.72867092E12, 736.9106029106028], [1.72866426E12, 631.1413612565443], [1.7286687E12, 776.216129032259], [1.72866324E12, 644.7723577235777], [1.72866648E12, 702.0468521229869], [1.72866546E12, 647.5432432432434], [1.72867194E12, 852.5240213523117], [1.7286675E12, 669.8016759776538], [1.72866972E12, 865.1612515042112], [1.72866786E12, 659.802486187845], [1.7286711E12, 863.6961226330006], [1.72866444E12, 592.1654320987659], [1.72866564E12, 620.5760000000001], [1.72867008E12, 806.2664437012271], [1.72866342E12, 657.3698630136986], [1.72866888E12, 906.444025157232], [1.72866666E12, 734.8000000000002], [1.7286699E12, 859.9988009592328], [1.72867212E12, 913.5696564885496], [1.728663E12, 590.8719211822656], [1.72867188E12, 847.616134751774], [1.72866642E12, 689.58452722063], [1.72866864E12, 746.3257023933401], [1.72866522E12, 710.5205882352941], [1.72866966E12, 843.7231308411199], [1.72866744E12, 684.8005698005694], [1.72867068E12, 703.197458455523], [1.7286642E12, 674.7310924369744], [1.72866846E12, 727.6153846153856], [1.72866882E12, 865.6440677966102], [1.72867206E12, 866.556057866185], [1.72866318E12, 576.4855072463764], [1.7286654E12, 685.2828571428571], [1.72867104E12, 803.1265646731576], [1.7286666E12, 741.3281733746123], [1.72866438E12, 611.5725190839687], [1.72866762E12, 658.9353507565334], [1.72867086E12, 747.5275754422479], [1.72866336E12, 623.8571428571424], [1.72866984E12, 807.3587443946187], [1.72866558E12, 593.0592592592591], [1.72866576E12, 753.1990521327007], [1.72866678E12, 713.0252600297185], [1.728669E12, 956.5788770053473], [1.72867122E12, 839.3298337707791], [1.72866456E12, 634.3005319148937], [1.72866354E12, 624.7720207253881], [1.7286678E12, 657.7432065217391], [1.72867002E12, 829.1789838337183], [1.72867224E12, 893.6241920590945], [1.7286714E12, 912.4866920152094], [1.72866594E12, 695.0429799426931], [1.72866816E12, 707.8883994126286], [1.72866474E12, 612.3367346938774], [1.72866918E12, 920.0064020486557], [1.72866696E12, 676.890780141843], [1.7286702E12, 777.873650107991], [1.72866372E12, 669.4194444444446], [1.72866798E12, 696.3938953488379], [1.72867242E12, 890.0176415970288], [1.72866672E12, 738.5177195685662], [1.72866996E12, 794.4129955947143], [1.72866774E12, 630.3465085639001], [1.72867218E12, 901.7613207547184], [1.7286633E12, 654.326145552561], [1.72866552E12, 617.3573264781494], [1.7286645E12, 625.0496083550917], [1.72867098E12, 662.7901023890788], [1.72866654E12, 716.2440119760485], [1.72866876E12, 840.7581775700936], [1.72866348E12, 687.867816091954], [1.7286669E12, 679.2164073550214], [1.72866912E12, 816.3242320819119], [1.72867014E12, 833.4444444444441], [1.72867236E12, 839.9824253075567], [1.72867116E12, 878.9523809523807], [1.72866468E12, 672.1420612813367], [1.7286657E12, 643.983108108108], [1.72866792E12, 710.6148148148145], [1.72866894E12, 908.56926952141], [1.7286693E12, 852.7005917159767], [1.72866366E12, 618.6020671834629], [1.72867254E12, 852.0488454706929], [1.72866708E12, 708.1920236336778], [1.72867152E12, 881.2429481346677], [1.72866486E12, 604.0984848484852], [1.7286681E12, 681.9556509298999], [1.72867134E12, 848.8858407079638], [1.72866588E12, 656.3250688705244], [1.72867032E12, 753.1772679874873], [1.72866384E12, 699.4590643274853], [1.72866624E12, 757.0677165354329], [1.72866282E12, 600.7386934673365], [1.72866504E12, 599.2618453865334], [1.72866726E12, 696.9534883720931], [1.72866948E12, 807.1625282167042], [1.7286717E12, 872.8122151321774], [1.72866402E12, 626.6710182767622], [1.72866606E12, 720.1112781954885], [1.72866828E12, 694.2434782608693], [1.7286705E12, 771.8144989339002], [1.72867272E12, 809.1495076096687]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72867284E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 401.03140096618364, "minX": 1.72866276E12, "maxY": 649.7219251336902, "series": [{"data": [[1.72866462E12, 439.5502645502646], [1.7286636E12, 437.5840000000002], [1.72866582E12, 475.6888260254594], [1.72866804E12, 469.3092198581562], [1.72867026E12, 485.87325349301403], [1.72867248E12, 571.8690783807045], [1.72866906E12, 632.7017766497462], [1.7286723E12, 605.6063730084348], [1.72866684E12, 523.9920508744037], [1.72867128E12, 553.7779646761979], [1.7286648E12, 441.5481283422459], [1.7286672E12, 493.8072289156623], [1.72867044E12, 524.6443024494142], [1.72866378E12, 448.12938005390845], [1.72866822E12, 459.1173184357542], [1.72867266E12, 613.801120448178], [1.72866276E12, 520.9655172413791], [1.728666E12, 472.0202020202017], [1.72866498E12, 424.9457364341085], [1.72866702E12, 499.84732824427516], [1.72866924E12, 585.0155688622756], [1.72867146E12, 601.6663568773229], [1.72866738E12, 462.5862068965519], [1.7286696E12, 589.450669914738], [1.72866396E12, 437.5672823218999], [1.72867062E12, 518.5604626708728], [1.72867284E12, 590.7], [1.72867164E12, 589.2863595302621], [1.72866294E12, 427.02061855670104], [1.72866516E12, 482.5000000000001], [1.72866618E12, 531.2003257328993], [1.7286684E12, 474.3778735632183], [1.72866942E12, 583.0518256772672], [1.72866978E12, 533.8275488069409], [1.72866414E12, 438.37994722955176], [1.72866312E12, 412.8650793650795], [1.72866756E12, 484.6324404761902], [1.728672E12, 618.7593632958801], [1.72866534E12, 484.25936599423653], [1.72866858E12, 497.01651651651616], [1.72867182E12, 575.5285338015811], [1.72866636E12, 499.5930930930932], [1.7286708E12, 518.8240252897779], [1.72866432E12, 419.68877551020415], [1.72866834E12, 479.1542940320236], [1.72866492E12, 458.353591160221], [1.72867158E12, 610.260018639329], [1.72866612E12, 492.789865871833], [1.72867056E12, 515.7211028632022], [1.7286639E12, 485.2994186046514], [1.72866714E12, 480.51506456241066], [1.72866936E12, 607.1082089552248], [1.72867038E12, 499.6813627254517], [1.7286726E12, 642.5942460317451], [1.72866288E12, 408.68472906403935], [1.7286651E12, 468.29829545454555], [1.72866408E12, 439.10582010582016], [1.7286663E12, 487.1167664670661], [1.72866852E12, 429.8955696202533], [1.72867074E12, 489.1992031872505], [1.72866954E12, 547.2253052164264], [1.72867278E12, 462.3841059602651], [1.72866732E12, 470.9102564102565], [1.72867176E12, 612.2641509433962], [1.72866306E12, 469.3060109289616], [1.72866528E12, 427.04859335038316], [1.72866768E12, 465.3506311360451], [1.72867092E12, 501.98544698544714], [1.72866426E12, 438.2460732984291], [1.7286687E12, 533.0333333333338], [1.72866324E12, 446.75338753387547], [1.72866648E12, 484.56954612005853], [1.72866546E12, 444.9135135135136], [1.72867194E12, 581.3389679715295], [1.7286675E12, 460.22486033519533], [1.72866972E12, 592.5523465703965], [1.72866786E12, 458.3867403314915], [1.7286711E12, 591.936880072136], [1.72866444E12, 416.66172839506163], [1.72866564E12, 434.81600000000003], [1.72867008E12, 549.7658862876249], [1.72866342E12, 460.20821917808223], [1.72866888E12, 612.8578616352211], [1.72866666E12, 505.1114503816794], [1.7286699E12, 587.0035971223026], [1.72867212E12, 620.2433206106878], [1.728663E12, 405.8719211822662], [1.72867188E12, 577.8297872340429], [1.72866642E12, 476.8710601719196], [1.72866864E12, 506.6847034339229], [1.72866522E12, 488.3911764705884], [1.72866966E12, 576.3749999999999], [1.72866744E12, 475.3888888888887], [1.72867068E12, 483.13489736070375], [1.7286642E12, 465.0224089635851], [1.72866846E12, 496.85299145299126], [1.72866882E12, 594.6198547215495], [1.72867206E12, 586.4828209764914], [1.72866318E12, 401.03140096618364], [1.7286654E12, 478.0085714285714], [1.72867104E12, 553.5813630041717], [1.7286666E12, 511.7863777089786], [1.72866438E12, 419.05597964376636], [1.72866762E12, 455.69876203576376], [1.72867086E12, 517.0582726326732], [1.72866336E12, 432.38961038961054], [1.72866984E12, 553.7881165919274], [1.72866558E12, 415.29629629629613], [1.72866576E12, 516.7551342812001], [1.72866678E12, 486.6389301634471], [1.728669E12, 649.7219251336902], [1.72867122E12, 570.7086614173228], [1.72866456E12, 437.7845744680849], [1.72866354E12, 428.7616580310881], [1.7286678E12, 457.05434782608774], [1.72867002E12, 558.8648960739032], [1.72867224E12, 607.1477377654656], [1.7286714E12, 614.903992395438], [1.72866594E12, 474.8409742120345], [1.72866816E12, 488.8516886930986], [1.72866474E12, 427.1709183673467], [1.72866918E12, 625.0563380281694], [1.72866696E12, 468.1517730496457], [1.7286702E12, 528.2375809935203], [1.72866372E12, 466.3500000000004], [1.72866798E12, 475.620639534884], [1.72867242E12, 603.9387186629526], [1.72866672E12, 504.2573189522341], [1.72866996E12, 552.0242290748896], [1.72866774E12, 437.6811594202899], [1.72867218E12, 615.2773584905658], [1.7286633E12, 452.9703504043127], [1.72866552E12, 426.27763496143973], [1.7286645E12, 440.63968668407324], [1.72867098E12, 460.4351535836176], [1.72866654E12, 492.88023952095796], [1.72866876E12, 573.309579439252], [1.72866348E12, 483.0459770114943], [1.7286669E12, 465.2800565770857], [1.72866912E12, 550.7599544937426], [1.72867014E12, 577.3043981481478], [1.72867236E12, 577.4639718804924], [1.72867116E12, 593.0750915750915], [1.72866468E12, 459.2061281337049], [1.7286657E12, 446.57770270270265], [1.72866792E12, 486.105185185185], [1.72866894E12, 616.3073047858938], [1.7286693E12, 588.3846153846163], [1.72866366E12, 427.96124031007747], [1.72867254E12, 577.3641207815267], [1.72866708E12, 491.26440177252556], [1.72867152E12, 601.835304822567], [1.72866486E12, 423.78030303030323], [1.7286681E12, 473.324749642346], [1.72867134E12, 582.216814159292], [1.72866588E12, 459.05785123966973], [1.72867032E12, 519.6861313868619], [1.72866384E12, 482.59356725146216], [1.72866624E12, 506.4267716535436], [1.72866282E12, 416.1005025125629], [1.72866504E12, 409.43391521197], [1.72866726E12, 482.8372093023253], [1.72866948E12, 550.6918735891652], [1.7286717E12, 600.0036463081134], [1.72866402E12, 431.8825065274153], [1.72866606E12, 495.99097744360887], [1.72866828E12, 479.26521739130385], [1.7286705E12, 530.0938166311289], [1.72867272E12, 550.9301700984773]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72867284E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72866276E12, "maxY": 4.9E-324, "series": [{"data": [[1.72866462E12, 0.0], [1.7286636E12, 0.0], [1.72866582E12, 0.0], [1.72866804E12, 0.0], [1.72867026E12, 0.0], [1.72867248E12, 0.0], [1.72866906E12, 0.0], [1.7286723E12, 0.0], [1.72866684E12, 0.0], [1.72867128E12, 0.0], [1.7286648E12, 0.0], [1.7286672E12, 0.0], [1.72867044E12, 0.0], [1.72866378E12, 0.0], [1.72866822E12, 0.0], [1.72867266E12, 0.0], [1.72866276E12, 0.0], [1.728666E12, 0.0], [1.72866498E12, 0.0], [1.72866702E12, 0.0], [1.72866924E12, 0.0], [1.72867146E12, 0.0], [1.72866738E12, 0.0], [1.7286696E12, 0.0], [1.72866396E12, 0.0], [1.72867062E12, 0.0], [1.72867284E12, 0.0], [1.72867164E12, 0.0], [1.72866294E12, 0.0], [1.72866516E12, 0.0], [1.72866618E12, 0.0], [1.7286684E12, 0.0], [1.72866942E12, 0.0], [1.72866978E12, 0.0], [1.72866414E12, 0.0], [1.72866312E12, 0.0], [1.72866756E12, 0.0], [1.728672E12, 0.0], [1.72866534E12, 0.0], [1.72866858E12, 0.0], [1.72867182E12, 0.0], [1.72866636E12, 0.0], [1.7286708E12, 0.0], [1.72866432E12, 0.0], [1.72866834E12, 0.0], [1.72866492E12, 0.0], [1.72867158E12, 0.0], [1.72866612E12, 0.0], [1.72867056E12, 0.0], [1.7286639E12, 0.0], [1.72866714E12, 0.0], [1.72866936E12, 0.0], [1.72867038E12, 0.0], [1.7286726E12, 0.0], [1.72866288E12, 0.0], [1.7286651E12, 0.0], [1.72866408E12, 0.0], [1.7286663E12, 0.0], [1.72866852E12, 0.0], [1.72867074E12, 0.0], [1.72866954E12, 0.0], [1.72867278E12, 0.0], [1.72866732E12, 0.0], [1.72867176E12, 0.0], [1.72866306E12, 0.0], [1.72866528E12, 0.0], [1.72866768E12, 0.0], [1.72867092E12, 0.0], [1.72866426E12, 0.0], [1.7286687E12, 0.0], [1.72866324E12, 0.0], [1.72866648E12, 0.0], [1.72866546E12, 0.0], [1.72867194E12, 0.0], [1.7286675E12, 0.0], [1.72866972E12, 0.0], [1.72866786E12, 0.0], [1.7286711E12, 0.0], [1.72866444E12, 0.0], [1.72866564E12, 0.0], [1.72867008E12, 0.0], [1.72866342E12, 0.0], [1.72866888E12, 0.0], [1.72866666E12, 0.0], [1.7286699E12, 0.0], [1.72867212E12, 0.0], [1.728663E12, 0.0], [1.72867188E12, 0.0], [1.72866642E12, 0.0], [1.72866864E12, 0.0], [1.72866522E12, 0.0], [1.72866966E12, 0.0], [1.72866744E12, 0.0], [1.72867068E12, 0.0], [1.7286642E12, 0.0], [1.72866846E12, 0.0], [1.72866882E12, 0.0], [1.72867206E12, 0.0], [1.72866318E12, 0.0], [1.7286654E12, 0.0], [1.72867104E12, 0.0], [1.7286666E12, 0.0], [1.72866438E12, 0.0], [1.72866762E12, 0.0], [1.72867086E12, 0.0], [1.72866336E12, 0.0], [1.72866984E12, 0.0], [1.72866558E12, 0.0], [1.72866576E12, 0.0], [1.72866678E12, 0.0], [1.728669E12, 0.0], [1.72867122E12, 0.0], [1.72866456E12, 0.0], [1.72866354E12, 0.0], [1.7286678E12, 0.0], [1.72867002E12, 0.0], [1.72867224E12, 0.0], [1.7286714E12, 0.0], [1.72866594E12, 0.0], [1.72866816E12, 0.0], [1.72866474E12, 0.0], [1.72866918E12, 0.0], [1.72866696E12, 0.0], [1.7286702E12, 0.0], [1.72866372E12, 0.0], [1.72866798E12, 0.0], [1.72867242E12, 0.0], [1.72866672E12, 0.0], [1.72866996E12, 0.0], [1.72866774E12, 0.0], [1.72867218E12, 0.0], [1.7286633E12, 0.0], [1.72866552E12, 0.0], [1.7286645E12, 0.0], [1.72867098E12, 0.0], [1.72866654E12, 0.0], [1.72866876E12, 0.0], [1.72866348E12, 0.0], [1.7286669E12, 0.0], [1.72866912E12, 0.0], [1.72867014E12, 0.0], [1.72867236E12, 0.0], [1.72867116E12, 0.0], [1.72866468E12, 0.0], [1.7286657E12, 0.0], [1.72866792E12, 0.0], [1.72866894E12, 0.0], [1.7286693E12, 0.0], [1.72866366E12, 0.0], [1.72867254E12, 0.0], [1.72866708E12, 0.0], [1.72867152E12, 0.0], [1.72866486E12, 0.0], [1.7286681E12, 0.0], [1.72867134E12, 0.0], [1.72866588E12, 0.0], [1.72867032E12, 0.0], [1.72866384E12, 0.0], [1.72866624E12, 0.0], [1.72866282E12, 0.0], [1.72866504E12, 0.0], [1.72866726E12, 0.0], [1.72866948E12, 0.0], [1.7286717E12, 0.0], [1.72866402E12, 0.0], [1.72866606E12, 0.0], [1.72866828E12, 0.0], [1.7286705E12, 0.0], [1.72867272E12, 0.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72867284E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 42.0, "minX": 1.72866276E12, "maxY": 4123.0, "series": [{"data": [[1.72866462E12, 2694.0], [1.7286636E12, 2452.0], [1.72866582E12, 2739.0], [1.72866804E12, 2497.0], [1.72867026E12, 2816.0], [1.72867248E12, 3199.0], [1.72866906E12, 3277.0], [1.7286723E12, 3482.0], [1.72866684E12, 2714.0], [1.72867128E12, 3382.0], [1.7286648E12, 2407.0], [1.7286672E12, 2561.0], [1.72867044E12, 2709.0], [1.72866378E12, 2516.0], [1.72866822E12, 2391.0], [1.72867266E12, 3556.0], [1.72866276E12, 2398.0], [1.728666E12, 2652.0], [1.72866498E12, 2172.0], [1.72866702E12, 2696.0], [1.72866924E12, 3508.0], [1.72867146E12, 3631.0], [1.72866738E12, 2868.0], [1.7286696E12, 3730.0], [1.72866396E12, 2291.0], [1.72867062E12, 3048.0], [1.72867284E12, 1552.0], [1.72867164E12, 3957.0], [1.72866294E12, 2657.0], [1.72866516E12, 2502.0], [1.72866618E12, 3048.0], [1.7286684E12, 2530.0], [1.72866942E12, 3467.0], [1.72866978E12, 3344.0], [1.72866414E12, 2696.0], [1.72866312E12, 2263.0], [1.72866756E12, 2597.0], [1.728672E12, 3163.0], [1.72866534E12, 2693.0], [1.72866858E12, 2947.0], [1.72867182E12, 3131.0], [1.72866636E12, 3160.0], [1.7286708E12, 3039.0], [1.72866432E12, 2403.0], [1.72866834E12, 2694.0], [1.72866492E12, 2366.0], [1.72867158E12, 3766.0], [1.72866612E12, 2783.0], [1.72867056E12, 2891.0], [1.7286639E12, 2261.0], [1.72866714E12, 2788.0], [1.72866936E12, 3616.0], [1.72867038E12, 3021.0], [1.7286726E12, 4123.0], [1.72866288E12, 2032.0], [1.7286651E12, 2785.0], [1.72866408E12, 2673.0], [1.7286663E12, 2845.0], [1.72866852E12, 2457.0], [1.72867074E12, 2535.0], [1.72866954E12, 3701.0], [1.72867278E12, 2962.0], [1.72866732E12, 2396.0], [1.72867176E12, 4021.0], [1.72866306E12, 2055.0], [1.72866528E12, 2623.0], [1.72866768E12, 2594.0], [1.72867092E12, 2748.0], [1.72866426E12, 2511.0], [1.7286687E12, 2982.0], [1.72866324E12, 2126.0], [1.72866648E12, 2782.0], [1.72866546E12, 2346.0], [1.72867194E12, 3380.0], [1.7286675E12, 2703.0], [1.72866972E12, 3332.0], [1.72866786E12, 2543.0], [1.7286711E12, 3300.0], [1.72866444E12, 2460.0], [1.72866564E12, 2178.0], [1.72867008E12, 2938.0], [1.72866342E12, 2523.0], [1.72866888E12, 3754.0], [1.72866666E12, 2715.0], [1.7286699E12, 3461.0], [1.72867212E12, 3496.0], [1.728663E12, 1994.0], [1.72867188E12, 3634.0], [1.72866642E12, 2939.0], [1.72866864E12, 3262.0], [1.72866522E12, 2377.0], [1.72866966E12, 3131.0], [1.72866744E12, 2663.0], [1.72867068E12, 2906.0], [1.7286642E12, 2266.0], [1.72866846E12, 2996.0], [1.72866882E12, 3919.0], [1.72867206E12, 3450.0], [1.72866318E12, 2093.0], [1.7286654E12, 2729.0], [1.72867104E12, 3483.0], [1.7286666E12, 2601.0], [1.72866438E12, 2460.0], [1.72866762E12, 2416.0], [1.72867086E12, 2969.0], [1.72866336E12, 2142.0], [1.72866984E12, 2799.0], [1.72866558E12, 2466.0], [1.72866576E12, 2556.0], [1.72866678E12, 2870.0], [1.728669E12, 3818.0], [1.72867122E12, 3289.0], [1.72866456E12, 2173.0], [1.72866354E12, 2324.0], [1.7286678E12, 2603.0], [1.72867002E12, 3112.0], [1.72867224E12, 3800.0], [1.7286714E12, 3216.0], [1.72866594E12, 2610.0], [1.72866816E12, 3041.0], [1.72866474E12, 2195.0], [1.72866918E12, 3594.0], [1.72866696E12, 2360.0], [1.7286702E12, 2991.0], [1.72866372E12, 2678.0], [1.72866798E12, 2882.0], [1.72867242E12, 3372.0], [1.72866672E12, 2716.0], [1.72866996E12, 2969.0], [1.72866774E12, 2599.0], [1.72867218E12, 2951.0], [1.7286633E12, 2336.0], [1.72866552E12, 2241.0], [1.7286645E12, 2143.0], [1.72867098E12, 2571.0], [1.72866654E12, 2427.0], [1.72866876E12, 3161.0], [1.72866348E12, 2207.0], [1.7286669E12, 2791.0], [1.72866912E12, 4119.0], [1.72867014E12, 3463.0], [1.72867236E12, 3733.0], [1.72867116E12, 3323.0], [1.72866468E12, 2680.0], [1.7286657E12, 2095.0], [1.72866792E12, 2682.0], [1.72866894E12, 3857.0], [1.7286693E12, 3292.0], [1.72866366E12, 2091.0], [1.72867254E12, 3377.0], [1.72866708E12, 2744.0], [1.72867152E12, 3147.0], [1.72866486E12, 2226.0], [1.7286681E12, 2399.0], [1.72867134E12, 4012.0], [1.72866588E12, 2706.0], [1.72867032E12, 3389.0], [1.72866384E12, 1997.0], [1.72866624E12, 2928.0], [1.72866282E12, 2222.0], [1.72866504E12, 1894.0], [1.72866726E12, 2617.0], [1.72866948E12, 3071.0], [1.7286717E12, 3646.0], [1.72866402E12, 2108.0], [1.72866606E12, 2907.0], [1.72866828E12, 2991.0], [1.7286705E12, 2759.0], [1.72867272E12, 3351.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72866462E12, 1378.6000000000001], [1.7286636E12, 1367.0000000000002], [1.72866582E12, 1454.0], [1.72866804E12, 1450.0], [1.72867026E12, 1607.6000000000004], [1.72867248E12, 1831.1999999999998], [1.72866906E12, 1958.4], [1.7286723E12, 1884.8000000000002], [1.72866684E12, 1678.0], [1.72867128E12, 1740.0], [1.7286648E12, 1397.5], [1.7286672E12, 1527.5], [1.72867044E12, 1614.0], [1.72866378E12, 1389.8000000000002], [1.72866822E12, 1427.5000000000005], [1.72867266E12, 1858.4], [1.72866276E12, 1684.2000000000003], [1.728666E12, 1478.6], [1.72866498E12, 1392.6], [1.72866702E12, 1496.8], [1.72866924E12, 1834.4], [1.72867146E12, 1938.3000000000002], [1.72866738E12, 1458.1999999999998], [1.7286696E12, 1876.8000000000002], [1.72866396E12, 1420.0], [1.72867062E12, 1680.8000000000002], [1.72867284E12, 1441.4], [1.72867164E12, 1887.0000000000005], [1.72866294E12, 1309.5], [1.72866516E12, 1492.7000000000005], [1.72866618E12, 1670.0], [1.7286684E12, 1465.6000000000001], [1.72866942E12, 1875.0], [1.72866978E12, 1706.6000000000004], [1.72866414E12, 1350.0], [1.72866312E12, 1331.9000000000005], [1.72866756E12, 1544.3000000000004], [1.728672E12, 1894.3000000000002], [1.72866534E12, 1390.6], [1.72866858E12, 1627.9], [1.72867182E12, 1886.0], [1.72866636E12, 1519.3000000000002], [1.7286708E12, 1559.0], [1.72866432E12, 1350.3999999999999], [1.72866834E12, 1423.000000000001], [1.72866492E12, 1438.1], [1.72867158E12, 1866.4], [1.72866612E12, 1538.8000000000002], [1.72867056E12, 1631.6], [1.7286639E12, 1410.5], [1.72866714E12, 1456.2000000000003], [1.72866936E12, 1953.0], [1.72867038E12, 1580.4], [1.7286726E12, 2041.3000000000002], [1.72866288E12, 1363.1999999999998], [1.7286651E12, 1425.7999999999997], [1.72866408E12, 1374.1], [1.7286663E12, 1561.4], [1.72866852E12, 1334.9000000000003], [1.72867074E12, 1561.0], [1.72866954E12, 1730.0000000000005], [1.72867278E12, 1458.0], [1.72866732E12, 1432.4], [1.72867176E12, 1927.6999999999998], [1.72866306E12, 1341.8], [1.72866528E12, 1356.2000000000003], [1.72866768E12, 1413.4], [1.72867092E12, 1542.8000000000002], [1.72866426E12, 1320.1999999999998], [1.7286687E12, 1688.8], [1.72866324E12, 1383.0], [1.72866648E12, 1551.2000000000003], [1.72866546E12, 1403.8000000000004], [1.72867194E12, 1853.0], [1.7286675E12, 1425.8000000000004], [1.72866972E12, 1772.6000000000001], [1.72866786E12, 1397.5], [1.7286711E12, 1880.0], [1.72866444E12, 1295.2], [1.72866564E12, 1299.0000000000002], [1.72867008E12, 1786.0000000000005], [1.72866342E12, 1391.0000000000002], [1.72866888E12, 1885.4], [1.72866666E12, 1533.0], [1.7286699E12, 1817.5], [1.72867212E12, 2005.1], [1.728663E12, 1306.4], [1.72867188E12, 1874.7000000000003], [1.72866642E12, 1494.3000000000002], [1.72866864E12, 1694.6000000000001], [1.72866522E12, 1486.4000000000005], [1.72866966E12, 1846.6000000000001], [1.72866744E12, 1507.8000000000002], [1.72867068E12, 1540.6], [1.7286642E12, 1416.0], [1.72866846E12, 1545.0], [1.72866882E12, 1858.5000000000005], [1.72867206E12, 1853.9], [1.72866318E12, 1288.0], [1.7286654E12, 1389.0], [1.72867104E12, 1762.0], [1.7286666E12, 1588.9], [1.72866438E12, 1347.2000000000003], [1.72866762E12, 1376.4000000000005], [1.72867086E12, 1579.8000000000002], [1.72866336E12, 1347.000000000001], [1.72866984E12, 1747.7], [1.72866558E12, 1369.2], [1.72866576E12, 1642.0], [1.72866678E12, 1553.4], [1.728669E12, 2026.2], [1.72867122E12, 1805.6000000000001], [1.72866456E12, 1387.5], [1.72866354E12, 1333.1000000000001], [1.7286678E12, 1439.900000000001], [1.72867002E12, 1830.3000000000002], [1.72867224E12, 1905.6], [1.7286714E12, 1948.1000000000001], [1.72866594E12, 1516.1], [1.72866816E12, 1451.0000000000007], [1.72866474E12, 1337.3], [1.72866918E12, 1901.2000000000007], [1.72866696E12, 1453.9999999999998], [1.7286702E12, 1642.5000000000005], [1.72866372E12, 1427.4], [1.72866798E12, 1512.2], [1.72867242E12, 1922.2], [1.72866672E12, 1585.0], [1.72866996E12, 1766.3000000000002], [1.72866774E12, 1422.0], [1.72867218E12, 1904.9999999999998], [1.7286633E12, 1407.2], [1.72866552E12, 1321.0], [1.7286645E12, 1357.0], [1.72867098E12, 1407.0], [1.72866654E12, 1497.2000000000003], [1.72866876E12, 1795.0], [1.72866348E12, 1332.0000000000002], [1.7286669E12, 1525.8000000000002], [1.72866912E12, 1792.0], [1.72867014E12, 1853.0], [1.72867236E12, 1877.1000000000001], [1.72867116E12, 1901.0], [1.72866468E12, 1419.0], [1.7286657E12, 1421.9], [1.72866792E12, 1514.9999999999998], [1.72866894E12, 2017.0], [1.7286693E12, 1884.1999999999998], [1.72866366E12, 1339.2], [1.72867254E12, 1898.1000000000004], [1.72866708E12, 1503.0000000000002], [1.72867152E12, 1885.0], [1.72866486E12, 1283.9], [1.7286681E12, 1493.0], [1.72867134E12, 1818.5], [1.72866588E12, 1428.5000000000005], [1.72867032E12, 1597.0], [1.72866384E12, 1479.7], [1.72866624E12, 1722.8], [1.72866282E12, 1313.0], [1.72866504E12, 1268.4], [1.72866726E12, 1461.6000000000004], [1.72866948E12, 1760.6000000000001], [1.7286717E12, 1827.0000000000002], [1.72866402E12, 1366.2], [1.72866606E12, 1606.6], [1.72866828E12, 1531.8999999999996], [1.7286705E12, 1627.3000000000002], [1.72867272E12, 1786.6000000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72866462E12, 2241.2499999999995], [1.7286636E12, 2085.36], [1.72866582E12, 2338.2799999999966], [1.72866804E12, 2138.779999999998], [1.72867026E12, 2382.980000000001], [1.72867248E12, 2669.1399999999994], [1.72866906E12, 2847.2200000000003], [1.7286723E12, 2971.0399999999845], [1.72866684E12, 2420.8000000000025], [1.72867128E12, 2679.399999999998], [1.7286648E12, 2139.25], [1.7286672E12, 2155.8500000000004], [1.72867044E12, 2309.8], [1.72866378E12, 2143.199999999996], [1.72866822E12, 2282.070000000001], [1.72867266E12, 2865.12], [1.72866276E12, 2398.0], [1.728666E12, 2265.9799999999955], [1.72866498E12, 2035.1600000000003], [1.72866702E12, 2335.5599999999986], [1.72866924E12, 3040.1999999999975], [1.72867146E12, 3069.07], [1.72866738E12, 2246.0000000000014], [1.7286696E12, 2864.8999999999987], [1.72866396E12, 1939.599999999999], [1.72867062E12, 2346.720000000001], [1.72867284E12, 1552.0], [1.72867164E12, 2753.960000000001], [1.72866294E12, 2130.700000000006], [1.72866516E12, 2365.549999999999], [1.72866618E12, 2541.250000000001], [1.7286684E12, 2121.2999999999997], [1.72866942E12, 2525.0], [1.72866978E12, 2549.189999999999], [1.72866414E12, 2409.7999999999993], [1.72866312E12, 2018.5599999999995], [1.72866756E12, 2250.5899999999997], [1.728672E12, 2790.889999999999], [1.72866534E12, 2040.7599999999984], [1.72866858E12, 2351.9300000000007], [1.72867182E12, 2797.9999999999986], [1.72866636E12, 2218.3100000000045], [1.7286708E12, 2532.0], [1.72866432E12, 2097.08], [1.72866834E12, 2149.24], [1.72866492E12, 2083.2200000000003], [1.72867158E12, 2941.1399999999994], [1.72866612E12, 2168.119999999999], [1.72867056E12, 2513.1199999999985], [1.7286639E12, 2083.7000000000007], [1.72866714E12, 2215.06], [1.72866936E12, 2802.75], [1.72867038E12, 2323.409999999999], [1.7286726E12, 2848.74], [1.72866288E12, 1964.5200000000007], [1.7286651E12, 2158.5399999999977], [1.72866408E12, 2018.7799999999997], [1.7286663E12, 2453.3399999999992], [1.72866852E12, 2133.2299999999987], [1.72867074E12, 2248.3000000000006], [1.72866954E12, 2722.7000000000003], [1.72867278E12, 2072.750000000001], [1.72866732E12, 2111.100000000001], [1.72867176E12, 2845.380000000004], [1.72866306E12, 1982.7599999999998], [1.72866528E12, 2033.6799999999985], [1.72866768E12, 2149.2200000000016], [1.72867092E12, 2224.17], [1.72866426E12, 1969.6000000000029], [1.7286687E12, 2458.45], [1.72866324E12, 1886.800000000001], [1.72866648E12, 2127.5199999999986], [1.72866546E12, 2140.2700000000013], [1.72867194E12, 2577.25], [1.7286675E12, 2066.4500000000007], [1.72866972E12, 2609.919999999999], [1.72866786E12, 2115.0], [1.7286711E12, 2758.000000000002], [1.72866444E12, 1818.7199999999998], [1.72866564E12, 2054.600000000001], [1.72867008E12, 2642.159999999999], [1.72866342E12, 1897.1799999999969], [1.72866888E12, 2900.7999999999965], [1.72866666E12, 2357.5599999999986], [1.7286699E12, 2968.3999999999996], [1.72867212E12, 2883.7199999999993], [1.728663E12, 1975.8400000000006], [1.72867188E12, 2712.590000000001], [1.72866642E12, 2235.6799999999994], [1.72866864E12, 2562.72], [1.72866522E12, 2111.8399999999983], [1.72866966E12, 2590.8699999999994], [1.72866744E12, 2136.3100000000004], [1.72867068E12, 2299.719999999999], [1.7286642E12, 1954.26], [1.72866846E12, 2152.3799999999983], [1.72866882E12, 2878.0500000000034], [1.72867206E12, 2785.5800000000004], [1.72866318E12, 1729.0000000000005], [1.7286654E12, 2020.5900000000008], [1.72867104E12, 2882.999999999998], [1.7286666E12, 2228.029999999999], [1.72866438E12, 2198.96], [1.72866762E12, 2214.88], [1.72867086E12, 2339.84], [1.72866336E12, 1960.519999999999], [1.72866984E12, 2528.1899999999987], [1.72866558E12, 2082.62], [1.72866576E12, 2418.66], [1.72866678E12, 2411.52], [1.728669E12, 2976.7699999999995], [1.72867122E12, 2774.7999999999984], [1.72866456E12, 1999.2200000000003], [1.72866354E12, 1955.0299999999993], [1.7286678E12, 2087.6099999999997], [1.72867002E12, 2725.9600000000005], [1.72867224E12, 2934.3600000000015], [1.7286714E12, 2959.5200000000004], [1.72866594E12, 2269.22], [1.72866816E12, 2179.8599999999988], [1.72866474E12, 1925.1699999999992], [1.72866918E12, 3070.54], [1.72866696E12, 2043.1599999999992], [1.7286702E12, 2491.4900000000002], [1.72866372E12, 2058.449999999998], [1.72866798E12, 2331.450000000001], [1.72867242E12, 2930.7000000000007], [1.72866672E12, 2438.0], [1.72866996E12, 2604.609999999998], [1.72866774E12, 2020.1999999999994], [1.72867218E12, 2625.3900000000103], [1.7286633E12, 1982.7599999999995], [1.72866552E12, 1909.3000000000002], [1.7286645E12, 1956.0799999999995], [1.72867098E12, 2165.99], [1.72866654E12, 2177.4799999999996], [1.72866876E12, 2500.4999999999973], [1.72866348E12, 2130.2699999999995], [1.7286669E12, 2202.7199999999975], [1.72866912E12, 2714.4000000000005], [1.72867014E12, 2676.9500000000007], [1.72867236E12, 2787.0499999999993], [1.72867116E12, 2817.6999999999994], [1.72866468E12, 2038.9999999999998], [1.7286657E12, 1992.8399999999992], [1.72866792E12, 2116.1600000000008], [1.72866894E12, 2970.299999999996], [1.7286693E12, 2867.359999999997], [1.72866366E12, 2011.2], [1.72867254E12, 2855.3600000000006], [1.72866708E12, 2424.260000000001], [1.72867152E12, 2801.0], [1.72866486E12, 2015.6499999999985], [1.7286681E12, 2232.0], [1.72867134E12, 2765.4700000000034], [1.72866588E12, 2093.46], [1.72867032E12, 2362.199999999999], [1.72866384E12, 1924.3199999999995], [1.72866624E12, 2481.479999999999], [1.72866282E12, 1981.0], [1.72866504E12, 1737.920000000001], [1.72866726E12, 2165.6300000000006], [1.72866948E12, 2667.77], [1.7286717E12, 2713.6399999999994], [1.72866402E12, 1760.079999999998], [1.72866606E12, 2319.7200000000003], [1.72866828E12, 2320.380000000003], [1.7286705E12, 2407.44], [1.72867272E12, 2599.119999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72866462E12, 1604.9], [1.7286636E12, 1639.3999999999999], [1.72866582E12, 1712.4], [1.72866804E12, 1705.099999999999], [1.72867026E12, 1851.2499999999995], [1.72867248E12, 2082.7999999999984], [1.72866906E12, 2245.55], [1.7286723E12, 2173.1999999999994], [1.72866684E12, 1959.5], [1.72867128E12, 2166.5], [1.7286648E12, 1592.75], [1.7286672E12, 1791.75], [1.72867044E12, 1875.0], [1.72866378E12, 1671.7999999999997], [1.72866822E12, 1702.6999999999996], [1.72867266E12, 2190.2], [1.72866276E12, 2041.9999999999998], [1.728666E12, 1744.1999999999994], [1.72866498E12, 1633.6], [1.72866702E12, 1825.799999999998], [1.72866924E12, 2229.999999999999], [1.72867146E12, 2229.45], [1.72866738E12, 1650.0], [1.7286696E12, 2222.7999999999997], [1.72866396E12, 1576.0], [1.72867062E12, 1948.1999999999998], [1.72867284E12, 1546.55], [1.72867164E12, 2156.0], [1.72866294E12, 1578.0], [1.72866516E12, 1690.75], [1.72866618E12, 2008.0], [1.7286684E12, 1716.8999999999999], [1.72866942E12, 2135.0], [1.72866978E12, 2077.9499999999994], [1.72866414E12, 1536.0], [1.72866312E12, 1460.1], [1.72866756E12, 1823.4500000000003], [1.728672E12, 2178.55], [1.72866534E12, 1676.1999999999998], [1.72866858E12, 1940.4999999999998], [1.72867182E12, 2223.0], [1.72866636E12, 1779.249999999999], [1.7286708E12, 1875.5], [1.72866432E12, 1535.4499999999991], [1.72866834E12, 1654.6], [1.72866492E12, 1753.3999999999999], [1.72867158E12, 2155.0999999999995], [1.72866612E12, 1789.1999999999998], [1.72867056E12, 1913.3999999999999], [1.7286639E12, 1647.0], [1.72866714E12, 1758.0000000000002], [1.72866936E12, 2183.25], [1.72867038E12, 1828.05], [1.7286726E12, 2319.2999999999997], [1.72866288E12, 1628.6], [1.7286651E12, 1714.5499999999988], [1.72866408E12, 1614.2], [1.7286663E12, 1830.1999999999998], [1.72866852E12, 1515.2999999999995], [1.72867074E12, 1816.0], [1.72866954E12, 2066.8999999999996], [1.72867278E12, 1642.0], [1.72866732E12, 1692.2000000000003], [1.72867176E12, 2223.049999999999], [1.72866306E12, 1561.3999999999999], [1.72866528E12, 1621.999999999999], [1.72866768E12, 1742.999999999999], [1.72867092E12, 1822.4999999999973], [1.72866426E12, 1513.1], [1.7286687E12, 1953.4999999999993], [1.72866324E12, 1557.5], [1.72866648E12, 1752.1999999999998], [1.72866546E12, 1659.1], [1.72867194E12, 2126.5], [1.7286675E12, 1691.75], [1.72866972E12, 2067.9999999999995], [1.72866786E12, 1594.5], [1.7286711E12, 2131.5], [1.72866444E12, 1485.1999999999998], [1.72866564E12, 1483.8], [1.72867008E12, 2034.8999999999992], [1.72866342E12, 1567.4], [1.72866888E12, 2218.5999999999985], [1.72866666E12, 1745.1999999999994], [1.7286699E12, 2147.5], [1.72867212E12, 2281.1], [1.728663E12, 1520.3999999999999], [1.72867188E12, 2180.1], [1.72866642E12, 1724.05], [1.72866864E12, 2004.9], [1.72866522E12, 1687.1999999999998], [1.72866966E12, 2110.3], [1.72866744E12, 1753.3500000000004], [1.72867068E12, 1812.3999999999996], [1.7286642E12, 1628.5999999999995], [1.72866846E12, 1781.3999999999999], [1.72866882E12, 2166.5499999999997], [1.72867206E12, 2134.2999999999997], [1.72866318E12, 1453.0], [1.7286654E12, 1582.7999999999997], [1.72867104E12, 2086.0], [1.7286666E12, 1793.3], [1.72866438E12, 1561.8999999999999], [1.72866762E12, 1614.2000000000003], [1.72867086E12, 1840.2999999999997], [1.72866336E12, 1505.6999999999996], [1.72866984E12, 2033.0999999999995], [1.72866558E12, 1541.6], [1.72866576E12, 1857.8999999999994], [1.72866678E12, 1863.3999999999987], [1.728669E12, 2336.249999999999], [1.72867122E12, 2109.3999999999996], [1.72866456E12, 1594.15], [1.72866354E12, 1539.65], [1.7286678E12, 1613.2499999999995], [1.72867002E12, 2148.499999999999], [1.72867224E12, 2213.6], [1.7286714E12, 2241.7999999999993], [1.72866594E12, 1775.1499999999999], [1.72866816E12, 1662.4999999999995], [1.72866474E12, 1552.7999999999997], [1.72866918E12, 2255.3999999999996], [1.72866696E12, 1711.1999999999996], [1.7286702E12, 1948.3], [1.72866372E12, 1591.6999999999998], [1.72866798E12, 1707.1], [1.72867242E12, 2218.4999999999995], [1.72866672E12, 1926.5], [1.72866996E12, 2039.7499999999989], [1.72866774E12, 1671.0], [1.72867218E12, 2185.85], [1.7286633E12, 1594.4], [1.72866552E12, 1616.5], [1.7286645E12, 1548.5999999999997], [1.72867098E12, 1724.7499999999986], [1.72866654E12, 1751.3999999999996], [1.72866876E12, 2056.0], [1.72866348E12, 1645.2500000000002], [1.7286669E12, 1753.6000000000001], [1.72866912E12, 2030.0], [1.72867014E12, 2124.0], [1.72867236E12, 2119.5999999999995], [1.72867116E12, 2281.7], [1.72866468E12, 1654.0], [1.7286657E12, 1641.6], [1.72866792E12, 1747.3999999999996], [1.72866894E12, 2365.25], [1.7286693E12, 2174.299999999999], [1.72866366E12, 1563.3999999999996], [1.72867254E12, 2184.5999999999967], [1.72866708E12, 1697.2000000000005], [1.72867152E12, 2173.0], [1.72866486E12, 1533.4499999999998], [1.7286681E12, 1709.0], [1.72867134E12, 2164.7000000000003], [1.72866588E12, 1640.5499999999997], [1.72867032E12, 1851.0], [1.72866384E12, 1662.1999999999996], [1.72866624E12, 2001.799999999999], [1.72866282E12, 1474.0], [1.72866504E12, 1480.1999999999998], [1.72866726E12, 1728.649999999999], [1.72866948E12, 2055.95], [1.7286717E12, 2148.2], [1.72866402E12, 1526.3999999999999], [1.72866606E12, 1868.9999999999993], [1.72866828E12, 1741.9499999999994], [1.7286705E12, 1904.6499999999994], [1.72867272E12, 2173.299999999999]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72866462E12, 48.0], [1.7286636E12, 51.0], [1.72866582E12, 53.0], [1.72866804E12, 45.0], [1.72867026E12, 54.0], [1.72867248E12, 58.0], [1.72866906E12, 68.0], [1.7286723E12, 48.0], [1.72866684E12, 58.0], [1.72867128E12, 53.0], [1.7286648E12, 61.0], [1.7286672E12, 57.0], [1.72867044E12, 51.0], [1.72866378E12, 64.0], [1.72866822E12, 48.0], [1.72867266E12, 49.0], [1.72866276E12, 70.0], [1.728666E12, 58.0], [1.72866498E12, 58.0], [1.72866702E12, 53.0], [1.72866924E12, 60.0], [1.72867146E12, 50.0], [1.72866738E12, 49.0], [1.7286696E12, 58.0], [1.72866396E12, 64.0], [1.72867062E12, 56.0], [1.72867284E12, 131.0], [1.72867164E12, 53.0], [1.72866294E12, 63.0], [1.72866516E12, 56.0], [1.72866618E12, 51.0], [1.7286684E12, 54.0], [1.72866942E12, 46.0], [1.72866978E12, 65.0], [1.72866414E12, 58.0], [1.72866312E12, 60.0], [1.72866756E12, 52.0], [1.728672E12, 53.0], [1.72866534E12, 61.0], [1.72866858E12, 64.0], [1.72867182E12, 62.0], [1.72866636E12, 52.0], [1.7286708E12, 47.0], [1.72866432E12, 47.0], [1.72866834E12, 53.0], [1.72866492E12, 52.0], [1.72867158E12, 59.0], [1.72866612E12, 59.0], [1.72867056E12, 50.0], [1.7286639E12, 55.0], [1.72866714E12, 54.0], [1.72866936E12, 61.0], [1.72867038E12, 59.0], [1.7286726E12, 56.0], [1.72866288E12, 61.0], [1.7286651E12, 57.0], [1.72866408E12, 53.0], [1.7286663E12, 55.0], [1.72866852E12, 56.0], [1.72867074E12, 44.0], [1.72866954E12, 58.0], [1.72867278E12, 62.0], [1.72866732E12, 53.0], [1.72867176E12, 52.0], [1.72866306E12, 66.0], [1.72866528E12, 54.0], [1.72866768E12, 49.0], [1.72867092E12, 55.0], [1.72866426E12, 52.0], [1.7286687E12, 53.0], [1.72866324E12, 60.0], [1.72866648E12, 56.0], [1.72866546E12, 53.0], [1.72867194E12, 54.0], [1.7286675E12, 55.0], [1.72866972E12, 54.0], [1.72866786E12, 60.0], [1.7286711E12, 51.0], [1.72866444E12, 54.0], [1.72866564E12, 64.0], [1.72867008E12, 54.0], [1.72866342E12, 63.0], [1.72866888E12, 54.0], [1.72866666E12, 60.0], [1.7286699E12, 59.0], [1.72867212E12, 71.0], [1.728663E12, 58.0], [1.72867188E12, 52.0], [1.72866642E12, 59.0], [1.72866864E12, 57.0], [1.72866522E12, 56.0], [1.72866966E12, 60.0], [1.72866744E12, 52.0], [1.72867068E12, 49.0], [1.7286642E12, 61.0], [1.72866846E12, 57.0], [1.72866882E12, 60.0], [1.72867206E12, 53.0], [1.72866318E12, 61.0], [1.7286654E12, 55.0], [1.72867104E12, 46.0], [1.7286666E12, 42.0], [1.72866438E12, 57.0], [1.72866762E12, 59.0], [1.72867086E12, 49.0], [1.72866336E12, 54.0], [1.72866984E12, 61.0], [1.72866558E12, 60.0], [1.72866576E12, 57.0], [1.72866678E12, 59.0], [1.728669E12, 53.0], [1.72867122E12, 56.0], [1.72866456E12, 56.0], [1.72866354E12, 51.0], [1.7286678E12, 47.0], [1.72867002E12, 56.0], [1.72867224E12, 56.0], [1.7286714E12, 52.0], [1.72866594E12, 60.0], [1.72866816E12, 54.0], [1.72866474E12, 57.0], [1.72866918E12, 68.0], [1.72866696E12, 54.0], [1.7286702E12, 54.0], [1.72866372E12, 63.0], [1.72866798E12, 56.0], [1.72867242E12, 50.0], [1.72866672E12, 63.0], [1.72866996E12, 60.0], [1.72866774E12, 50.0], [1.72867218E12, 54.0], [1.7286633E12, 60.0], [1.72866552E12, 47.0], [1.7286645E12, 57.0], [1.72867098E12, 54.0], [1.72866654E12, 59.0], [1.72866876E12, 56.0], [1.72866348E12, 59.0], [1.7286669E12, 63.0], [1.72866912E12, 60.0], [1.72867014E12, 59.0], [1.72867236E12, 54.0], [1.72867116E12, 60.0], [1.72866468E12, 57.0], [1.7286657E12, 59.0], [1.72866792E12, 59.0], [1.72866894E12, 64.0], [1.7286693E12, 66.0], [1.72866366E12, 55.0], [1.72867254E12, 52.0], [1.72866708E12, 60.0], [1.72867152E12, 57.0], [1.72866486E12, 55.0], [1.7286681E12, 51.0], [1.72867134E12, 44.0], [1.72866588E12, 53.0], [1.72867032E12, 50.0], [1.72866384E12, 48.0], [1.72866624E12, 55.0], [1.72866282E12, 67.0], [1.72866504E12, 55.0], [1.72866726E12, 55.0], [1.72866948E12, 50.0], [1.7286717E12, 42.0], [1.72866402E12, 64.0], [1.72866606E12, 58.0], [1.72866828E12, 51.0], [1.7286705E12, 53.0], [1.72867272E12, 46.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72866462E12, 579.0], [1.7286636E12, 577.0], [1.72866582E12, 612.0], [1.72866804E12, 614.0], [1.72867026E12, 566.0], [1.72867248E12, 703.0], [1.72866906E12, 891.0], [1.7286723E12, 835.0], [1.72866684E12, 682.0], [1.72867128E12, 646.0], [1.7286648E12, 595.5], [1.7286672E12, 735.0], [1.72867044E12, 723.0], [1.72866378E12, 595.0], [1.72866822E12, 560.0], [1.72867266E12, 838.0], [1.72866276E12, 604.0], [1.728666E12, 572.0], [1.72866498E12, 484.0], [1.72866702E12, 699.0], [1.72866924E12, 759.0], [1.72867146E12, 766.5], [1.72866738E12, 561.0], [1.7286696E12, 803.0], [1.72866396E12, 572.0], [1.72867062E12, 664.0], [1.72867284E12, 923.0], [1.72867164E12, 763.0], [1.72866294E12, 509.0], [1.72866516E12, 665.0], [1.72866618E12, 717.5], [1.7286684E12, 649.5], [1.72866942E12, 764.0], [1.72866978E12, 638.0], [1.72866414E12, 521.0], [1.72866312E12, 532.5], [1.72866756E12, 652.5], [1.728672E12, 844.0], [1.72866534E12, 672.0], [1.72866858E12, 589.0], [1.72867182E12, 706.0], [1.72866636E12, 638.5], [1.7286708E12, 712.0], [1.72866432E12, 548.5], [1.72866834E12, 669.0], [1.72866492E12, 643.0], [1.72867158E12, 785.0], [1.72866612E12, 694.0], [1.72867056E12, 657.0], [1.7286639E12, 720.5], [1.72866714E12, 635.0], [1.72866936E12, 806.0], [1.72867038E12, 637.0], [1.7286726E12, 892.5], [1.72866288E12, 433.0], [1.7286651E12, 649.0], [1.72866408E12, 628.5], [1.7286663E12, 604.5], [1.72866852E12, 532.0], [1.72867074E12, 627.0], [1.72866954E12, 700.0], [1.72867278E12, 598.5], [1.72866732E12, 595.0], [1.72867176E12, 808.0], [1.72866306E12, 707.0], [1.72866528E12, 492.0], [1.72866768E12, 599.0], [1.72867092E12, 718.0], [1.72866426E12, 622.0], [1.7286687E12, 706.0], [1.72866324E12, 617.0], [1.72866648E12, 607.0], [1.72866546E12, 569.0], [1.72867194E12, 794.5], [1.7286675E12, 562.0], [1.72866972E12, 826.0], [1.72866786E12, 631.0], [1.7286711E12, 725.0], [1.72866444E12, 487.0], [1.72866564E12, 579.0], [1.72867008E12, 676.0], [1.72866342E12, 589.0], [1.72866888E12, 832.0], [1.72866666E12, 711.0], [1.7286699E12, 802.5], [1.72867212E12, 841.0], [1.728663E12, 464.0], [1.72867188E12, 726.0], [1.72866642E12, 623.0], [1.72866864E12, 580.0], [1.72866522E12, 692.5], [1.72866966E12, 762.0], [1.72866744E12, 564.5], [1.72867068E12, 558.0], [1.7286642E12, 671.0], [1.72866846E12, 655.0], [1.72866882E12, 755.0], [1.72867206E12, 762.0], [1.72866318E12, 495.0], [1.7286654E12, 703.5], [1.72867104E12, 635.0], [1.7286666E12, 713.0], [1.72866438E12, 562.0], [1.72866762E12, 579.0], [1.72867086E12, 697.0], [1.72866336E12, 617.0], [1.72866984E12, 707.5], [1.72866558E12, 441.0], [1.72866576E12, 712.0], [1.72866678E12, 579.0], [1.728669E12, 902.5], [1.72867122E12, 758.0], [1.72866456E12, 586.5], [1.72866354E12, 576.0], [1.7286678E12, 598.0], [1.72867002E12, 728.0], [1.72867224E12, 819.0], [1.7286714E12, 831.0], [1.72866594E12, 614.0], [1.72866816E12, 669.0], [1.72866474E12, 499.5], [1.72866918E12, 852.0], [1.72866696E12, 614.0], [1.7286702E12, 739.0], [1.72866372E12, 643.0], [1.72866798E12, 606.5], [1.72867242E12, 814.0], [1.72866672E12, 658.0], [1.72866996E12, 664.0], [1.72866774E12, 483.0], [1.72867218E12, 848.5], [1.7286633E12, 637.0], [1.72866552E12, 529.0], [1.7286645E12, 551.0], [1.72867098E12, 591.0], [1.72866654E12, 667.5], [1.72866876E12, 789.0], [1.72866348E12, 692.5], [1.7286669E12, 531.0], [1.72866912E12, 745.0], [1.72867014E12, 747.5], [1.72867236E12, 711.0], [1.72867116E12, 750.0], [1.72866468E12, 647.0], [1.7286657E12, 541.0], [1.72866792E12, 666.0], [1.72866894E12, 799.5], [1.7286693E12, 701.0], [1.72866366E12, 567.0], [1.72867254E12, 718.5], [1.72866708E12, 660.0], [1.72867152E12, 770.0], [1.72866486E12, 507.5], [1.7286681E12, 594.0], [1.72867134E12, 752.5], [1.72866588E12, 562.0], [1.72867032E12, 659.0], [1.72866384E12, 686.5], [1.72866624E12, 645.0], [1.72866282E12, 486.0], [1.72866504E12, 536.0], [1.72866726E12, 633.0], [1.72866948E12, 736.0], [1.7286717E12, 802.0], [1.72866402E12, 556.0], [1.72866606E12, 620.0], [1.72866828E12, 628.5], [1.7286705E12, 741.0], [1.72867272E12, 661.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72867284E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 224.5, "minX": 1.0, "maxY": 964.0, "series": [{"data": [[2.0, 933.0], [33.0, 224.5], [32.0, 364.0], [34.0, 264.0], [3.0, 870.0], [4.0, 841.5], [5.0, 772.0], [6.0, 722.5], [7.0, 665.5], [8.0, 718.5], [9.0, 698.0], [10.0, 739.0], [11.0, 710.0], [12.0, 741.0], [13.0, 728.0], [14.0, 698.0], [15.0, 714.0], [1.0, 964.0], [16.0, 633.5], [17.0, 634.5], [18.0, 591.5], [19.0, 591.5], [20.0, 522.5], [21.0, 523.0], [22.0, 460.0], [23.0, 440.5], [24.0, 360.5], [25.0, 378.5], [26.0, 326.5], [27.0, 330.0], [28.0, 308.5], [29.0, 377.0], [30.0, 327.5], [31.0, 273.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 34.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 143.0, "minX": 1.0, "maxY": 723.0, "series": [{"data": [[2.0, 655.0], [33.0, 143.0], [32.0, 248.0], [34.0, 191.5], [3.0, 621.0], [4.0, 593.0], [5.0, 557.0], [6.0, 527.0], [7.0, 488.5], [8.0, 522.0], [9.0, 517.0], [10.0, 540.0], [11.0, 522.0], [12.0, 549.0], [13.0, 538.5], [14.0, 525.0], [15.0, 530.0], [1.0, 723.0], [16.0, 480.0], [17.0, 482.0], [18.0, 450.0], [19.0, 451.0], [20.0, 397.0], [21.0, 395.0], [22.0, 353.0], [23.0, 326.0], [24.0, 252.0], [25.0, 256.5], [26.0, 219.0], [27.0, 232.0], [28.0, 203.5], [29.0, 260.0], [30.0, 195.5], [31.0, 171.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 34.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.31666666666666665, "minX": 1.72866276E12, "maxY": 19.816666666666666, "series": [{"data": [[1.72866462E12, 6.3], [1.7286636E12, 6.25], [1.72866582E12, 11.783333333333333], [1.72866804E12, 11.75], [1.72867026E12, 16.7], [1.72867248E12, 19.35], [1.72866906E12, 13.133333333333333], [1.7286723E12, 17.783333333333335], [1.72866684E12, 10.483333333333333], [1.72867128E12, 19.816666666666666], [1.7286648E12, 6.233333333333333], [1.7286672E12, 11.066666666666666], [1.72867044E12, 15.65], [1.72866378E12, 6.183333333333334], [1.72866822E12, 11.933333333333334], [1.72867266E12, 17.85], [1.72866276E12, 1.4833333333333334], [1.728666E12, 11.55], [1.72866498E12, 6.45], [1.72866702E12, 10.916666666666666], [1.72866924E12, 13.916666666666666], [1.72867146E12, 17.933333333333334], [1.72866738E12, 12.083333333333334], [1.7286696E12, 13.683333333333334], [1.72866396E12, 6.316666666666666], [1.72867062E12, 15.85], [1.72867284E12, 0.31666666666666665], [1.72867164E12, 18.45], [1.72866294E12, 3.2333333333333334], [1.72866516E12, 5.666666666666667], [1.72866618E12, 10.233333333333333], [1.7286684E12, 11.6], [1.72866942E12, 14.15], [1.72866978E12, 15.366666666666667], [1.72866414E12, 6.316666666666666], [1.72866312E12, 4.233333333333333], [1.72866756E12, 11.2], [1.728672E12, 17.8], [1.72866534E12, 5.783333333333333], [1.72866858E12, 11.266666666666667], [1.72867182E12, 18.983333333333334], [1.72866636E12, 11.1], [1.7286708E12, 15.816666666666666], [1.72866432E12, 6.533333333333333], [1.72866834E12, 11.45], [1.72866492E12, 6.033333333333333], [1.72867158E12, 17.883333333333333], [1.72866612E12, 11.183333333333334], [1.72867056E12, 15.716666666666667], [1.7286639E12, 5.733333333333333], [1.72866714E12, 11.616666666666667], [1.72866936E12, 13.4], [1.72867038E12, 16.633333333333333], [1.7286726E12, 16.8], [1.72866288E12, 3.3833333333333333], [1.7286651E12, 5.866666666666666], [1.72866408E12, 6.3], [1.7286663E12, 11.133333333333333], [1.72866852E12, 5.233333333333333], [1.72867074E12, 16.733333333333334], [1.72866954E12, 15.016666666666667], [1.72867278E12, 9.9], [1.72866732E12, 11.7], [1.72867176E12, 17.666666666666668], [1.72866306E12, 3.05], [1.72866528E12, 6.516666666666667], [1.72866768E12, 11.883333333333333], [1.72867092E12, 16.0], [1.72866426E12, 6.366666666666666], [1.7286687E12, 15.5], [1.72866324E12, 6.15], [1.72866648E12, 11.383333333333333], [1.72866546E12, 6.166666666666667], [1.72867194E12, 18.733333333333334], [1.7286675E12, 11.933333333333334], [1.72866972E12, 13.85], [1.72866786E12, 12.066666666666666], [1.7286711E12, 18.483333333333334], [1.72866444E12, 6.75], [1.72866564E12, 6.233333333333333], [1.72867008E12, 14.95], [1.72866342E12, 6.083333333333333], [1.72866888E12, 13.25], [1.72866666E12, 10.916666666666666], [1.7286699E12, 13.9], [1.72867212E12, 17.466666666666665], [1.728663E12, 3.3833333333333333], [1.72867188E12, 18.8], [1.72866642E12, 11.633333333333333], [1.72866864E12, 16.016666666666666], [1.72866522E12, 5.666666666666667], [1.72866966E12, 14.266666666666667], [1.72866744E12, 11.7], [1.72867068E12, 17.05], [1.7286642E12, 5.95], [1.72866846E12, 9.683333333333334], [1.72866882E12, 13.766666666666667], [1.72867206E12, 18.433333333333334], [1.72866318E12, 6.9], [1.7286654E12, 5.833333333333333], [1.72867104E12, 12.2], [1.7286666E12, 10.766666666666667], [1.72866438E12, 6.55], [1.72866762E12, 12.116666666666667], [1.72867086E12, 16.016666666666666], [1.72866336E12, 6.416666666666667], [1.72866984E12, 14.866666666666667], [1.72866558E12, 6.75], [1.72866576E12, 10.55], [1.72866678E12, 11.216666666666667], [1.728669E12, 12.466666666666667], [1.72867122E12, 19.05], [1.72866456E12, 6.266666666666667], [1.72866354E12, 6.433333333333334], [1.7286678E12, 12.266666666666667], [1.72867002E12, 14.433333333333334], [1.72867224E12, 18.05], [1.7286714E12, 17.533333333333335], [1.72866594E12, 11.633333333333333], [1.72866816E12, 11.35], [1.72866474E12, 6.533333333333333], [1.72866918E12, 13.016666666666667], [1.72866696E12, 11.75], [1.7286702E12, 15.433333333333334], [1.72866372E12, 6.0], [1.72866798E12, 11.466666666666667], [1.72867242E12, 17.95], [1.72866672E12, 10.816666666666666], [1.72866996E12, 15.133333333333333], [1.72866774E12, 12.65], [1.72867218E12, 17.666666666666668], [1.7286633E12, 6.183333333333334], [1.72866552E12, 6.483333333333333], [1.7286645E12, 6.383333333333334], [1.72867098E12, 9.65], [1.72866654E12, 11.133333333333333], [1.72866876E12, 14.266666666666667], [1.72866348E12, 5.8], [1.7286669E12, 11.783333333333333], [1.72866912E12, 14.65], [1.72867014E12, 14.4], [1.72867236E12, 18.966666666666665], [1.72867116E12, 18.2], [1.72866468E12, 5.983333333333333], [1.7286657E12, 5.016666666666667], [1.72866792E12, 11.25], [1.72866894E12, 13.233333333333333], [1.7286693E12, 14.083333333333334], [1.72866366E12, 6.45], [1.72867254E12, 18.766666666666666], [1.72866708E12, 11.283333333333333], [1.72867152E12, 18.316666666666666], [1.72866486E12, 6.6], [1.7286681E12, 11.65], [1.72867134E12, 18.833333333333332], [1.72866588E12, 12.1], [1.72867032E12, 15.983333333333333], [1.72866384E12, 5.7], [1.72866624E12, 10.583333333333334], [1.72866282E12, 3.316666666666667], [1.72866504E12, 6.683333333333334], [1.72866726E12, 11.466666666666667], [1.72866948E12, 14.766666666666667], [1.7286717E12, 18.283333333333335], [1.72866402E12, 6.383333333333334], [1.72866606E12, 11.083333333333334], [1.72866828E12, 11.5], [1.7286705E12, 15.633333333333333], [1.72867272E12, 18.533333333333335]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72867284E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.3333333333333333, "minX": 1.72866276E12, "maxY": 19.816666666666666, "series": [{"data": [[1.72866462E12, 6.3], [1.7286636E12, 6.25], [1.72866582E12, 11.783333333333333], [1.72866804E12, 11.75], [1.72867026E12, 16.7], [1.72867248E12, 19.35], [1.72866906E12, 13.133333333333333], [1.7286723E12, 17.783333333333335], [1.72866684E12, 10.483333333333333], [1.72867128E12, 19.816666666666666], [1.7286648E12, 6.233333333333333], [1.7286672E12, 11.066666666666666], [1.72867044E12, 15.65], [1.72866378E12, 6.183333333333334], [1.72866822E12, 11.933333333333334], [1.72867266E12, 17.85], [1.72866276E12, 1.45], [1.728666E12, 11.55], [1.72866498E12, 6.45], [1.72866702E12, 10.916666666666666], [1.72866924E12, 13.916666666666666], [1.72867146E12, 17.933333333333334], [1.72866738E12, 12.083333333333334], [1.7286696E12, 13.683333333333334], [1.72866396E12, 6.316666666666666], [1.72867062E12, 15.85], [1.72867284E12, 0.3333333333333333], [1.72867164E12, 18.45], [1.72866294E12, 3.2333333333333334], [1.72866516E12, 5.666666666666667], [1.72866618E12, 10.233333333333333], [1.7286684E12, 11.6], [1.72866942E12, 14.15], [1.72866978E12, 15.366666666666667], [1.72866414E12, 6.316666666666666], [1.72866312E12, 4.2], [1.72866756E12, 11.2], [1.728672E12, 17.8], [1.72866534E12, 5.783333333333333], [1.72866858E12, 11.1], [1.72867182E12, 18.983333333333334], [1.72866636E12, 11.1], [1.7286708E12, 15.816666666666666], [1.72866432E12, 6.533333333333333], [1.72866834E12, 11.45], [1.72866492E12, 6.033333333333333], [1.72867158E12, 17.883333333333333], [1.72866612E12, 11.183333333333334], [1.72867056E12, 15.716666666666667], [1.7286639E12, 5.733333333333333], [1.72866714E12, 11.616666666666667], [1.72866936E12, 13.4], [1.72867038E12, 16.633333333333333], [1.7286726E12, 16.8], [1.72866288E12, 3.3833333333333333], [1.7286651E12, 5.866666666666666], [1.72866408E12, 6.3], [1.7286663E12, 11.133333333333333], [1.72866852E12, 5.266666666666667], [1.72867074E12, 16.733333333333334], [1.72866954E12, 15.016666666666667], [1.72867278E12, 10.066666666666666], [1.72866732E12, 11.7], [1.72867176E12, 17.666666666666668], [1.72866306E12, 3.05], [1.72866528E12, 6.516666666666667], [1.72866768E12, 11.883333333333333], [1.72867092E12, 16.033333333333335], [1.72866426E12, 6.366666666666666], [1.7286687E12, 15.5], [1.72866324E12, 6.15], [1.72866648E12, 11.383333333333333], [1.72866546E12, 6.166666666666667], [1.72867194E12, 18.733333333333334], [1.7286675E12, 11.933333333333334], [1.72866972E12, 13.85], [1.72866786E12, 12.066666666666666], [1.7286711E12, 18.483333333333334], [1.72866444E12, 6.75], [1.72866564E12, 6.25], [1.72867008E12, 14.95], [1.72866342E12, 6.083333333333333], [1.72866888E12, 13.25], [1.72866666E12, 10.916666666666666], [1.7286699E12, 13.9], [1.72867212E12, 17.466666666666665], [1.728663E12, 3.3833333333333333], [1.72867188E12, 18.8], [1.72866642E12, 11.633333333333333], [1.72866864E12, 16.016666666666666], [1.72866522E12, 5.666666666666667], [1.72866966E12, 14.266666666666667], [1.72866744E12, 11.7], [1.72867068E12, 17.05], [1.7286642E12, 5.95], [1.72866846E12, 9.75], [1.72866882E12, 13.766666666666667], [1.72867206E12, 18.433333333333334], [1.72866318E12, 6.9], [1.7286654E12, 5.833333333333333], [1.72867104E12, 11.983333333333333], [1.7286666E12, 10.766666666666667], [1.72866438E12, 6.55], [1.72866762E12, 12.116666666666667], [1.72867086E12, 16.016666666666666], [1.72866336E12, 6.416666666666667], [1.72866984E12, 14.866666666666667], [1.72866558E12, 6.75], [1.72866576E12, 10.55], [1.72866678E12, 11.216666666666667], [1.728669E12, 12.466666666666667], [1.72867122E12, 19.05], [1.72866456E12, 6.266666666666667], [1.72866354E12, 6.433333333333334], [1.7286678E12, 12.266666666666667], [1.72867002E12, 14.433333333333334], [1.72867224E12, 18.05], [1.7286714E12, 17.533333333333335], [1.72866594E12, 11.633333333333333], [1.72866816E12, 11.35], [1.72866474E12, 6.533333333333333], [1.72866918E12, 13.016666666666667], [1.72866696E12, 11.75], [1.7286702E12, 15.433333333333334], [1.72866372E12, 6.0], [1.72866798E12, 11.466666666666667], [1.72867242E12, 17.95], [1.72866672E12, 10.816666666666666], [1.72866996E12, 15.133333333333333], [1.72866774E12, 12.65], [1.72867218E12, 17.666666666666668], [1.7286633E12, 6.183333333333334], [1.72866552E12, 6.483333333333333], [1.7286645E12, 6.383333333333334], [1.72867098E12, 9.766666666666667], [1.72866654E12, 11.133333333333333], [1.72866876E12, 14.266666666666667], [1.72866348E12, 5.8], [1.7286669E12, 11.783333333333333], [1.72866912E12, 14.65], [1.72867014E12, 14.4], [1.72867236E12, 18.966666666666665], [1.72867116E12, 18.2], [1.72866468E12, 5.983333333333333], [1.7286657E12, 4.933333333333334], [1.72866792E12, 11.25], [1.72866894E12, 13.233333333333333], [1.7286693E12, 14.083333333333334], [1.72866366E12, 6.45], [1.72867254E12, 18.766666666666666], [1.72866708E12, 11.283333333333333], [1.72867152E12, 18.316666666666666], [1.72866486E12, 6.6], [1.7286681E12, 11.65], [1.72867134E12, 18.833333333333332], [1.72866588E12, 12.1], [1.72867032E12, 15.983333333333333], [1.72866384E12, 5.7], [1.72866624E12, 10.583333333333334], [1.72866282E12, 3.316666666666667], [1.72866504E12, 6.683333333333334], [1.72866726E12, 11.466666666666667], [1.72866948E12, 14.766666666666667], [1.7286717E12, 18.283333333333335], [1.72866402E12, 6.383333333333334], [1.72866606E12, 11.083333333333334], [1.72866828E12, 11.5], [1.7286705E12, 15.633333333333333], [1.72867272E12, 18.616666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72867284E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.3333333333333333, "minX": 1.72866276E12, "maxY": 19.816666666666666, "series": [{"data": [[1.72866462E12, 6.3], [1.7286636E12, 6.25], [1.72866582E12, 11.783333333333333], [1.72866804E12, 11.75], [1.72867026E12, 16.7], [1.72867248E12, 19.35], [1.72866906E12, 13.133333333333333], [1.7286723E12, 17.783333333333335], [1.72866684E12, 10.483333333333333], [1.72867128E12, 19.816666666666666], [1.7286648E12, 6.233333333333333], [1.7286672E12, 11.066666666666666], [1.72867044E12, 15.65], [1.72866378E12, 6.183333333333334], [1.72866822E12, 11.933333333333334], [1.72867266E12, 17.85], [1.72866276E12, 1.45], [1.728666E12, 11.55], [1.72866498E12, 6.45], [1.72866702E12, 10.916666666666666], [1.72866924E12, 13.916666666666666], [1.72867146E12, 17.933333333333334], [1.72866738E12, 12.083333333333334], [1.7286696E12, 13.683333333333334], [1.72866396E12, 6.316666666666666], [1.72867062E12, 15.85], [1.72867284E12, 0.3333333333333333], [1.72867164E12, 18.45], [1.72866294E12, 3.2333333333333334], [1.72866516E12, 5.666666666666667], [1.72866618E12, 10.233333333333333], [1.7286684E12, 11.6], [1.72866942E12, 14.15], [1.72866978E12, 15.366666666666667], [1.72866414E12, 6.316666666666666], [1.72866312E12, 4.2], [1.72866756E12, 11.2], [1.728672E12, 17.8], [1.72866534E12, 5.783333333333333], [1.72866858E12, 11.1], [1.72867182E12, 18.983333333333334], [1.72866636E12, 11.1], [1.7286708E12, 15.816666666666666], [1.72866432E12, 6.533333333333333], [1.72866834E12, 11.45], [1.72866492E12, 6.033333333333333], [1.72867158E12, 17.883333333333333], [1.72866612E12, 11.183333333333334], [1.72867056E12, 15.716666666666667], [1.7286639E12, 5.733333333333333], [1.72866714E12, 11.616666666666667], [1.72866936E12, 13.4], [1.72867038E12, 16.633333333333333], [1.7286726E12, 16.8], [1.72866288E12, 3.3833333333333333], [1.7286651E12, 5.866666666666666], [1.72866408E12, 6.3], [1.7286663E12, 11.133333333333333], [1.72866852E12, 5.266666666666667], [1.72867074E12, 16.733333333333334], [1.72866954E12, 15.016666666666667], [1.72867278E12, 10.066666666666666], [1.72866732E12, 11.7], [1.72867176E12, 17.666666666666668], [1.72866306E12, 3.05], [1.72866528E12, 6.516666666666667], [1.72866768E12, 11.883333333333333], [1.72867092E12, 16.033333333333335], [1.72866426E12, 6.366666666666666], [1.7286687E12, 15.5], [1.72866324E12, 6.15], [1.72866648E12, 11.383333333333333], [1.72866546E12, 6.166666666666667], [1.72867194E12, 18.733333333333334], [1.7286675E12, 11.933333333333334], [1.72866972E12, 13.85], [1.72866786E12, 12.066666666666666], [1.7286711E12, 18.483333333333334], [1.72866444E12, 6.75], [1.72866564E12, 6.25], [1.72867008E12, 14.95], [1.72866342E12, 6.083333333333333], [1.72866888E12, 13.25], [1.72866666E12, 10.916666666666666], [1.7286699E12, 13.9], [1.72867212E12, 17.466666666666665], [1.728663E12, 3.3833333333333333], [1.72867188E12, 18.8], [1.72866642E12, 11.633333333333333], [1.72866864E12, 16.016666666666666], [1.72866522E12, 5.666666666666667], [1.72866966E12, 14.266666666666667], [1.72866744E12, 11.7], [1.72867068E12, 17.05], [1.7286642E12, 5.95], [1.72866846E12, 9.75], [1.72866882E12, 13.766666666666667], [1.72867206E12, 18.433333333333334], [1.72866318E12, 6.9], [1.7286654E12, 5.833333333333333], [1.72867104E12, 11.983333333333333], [1.7286666E12, 10.766666666666667], [1.72866438E12, 6.55], [1.72866762E12, 12.116666666666667], [1.72867086E12, 16.016666666666666], [1.72866336E12, 6.416666666666667], [1.72866984E12, 14.866666666666667], [1.72866558E12, 6.75], [1.72866576E12, 10.55], [1.72866678E12, 11.216666666666667], [1.728669E12, 12.466666666666667], [1.72867122E12, 19.05], [1.72866456E12, 6.266666666666667], [1.72866354E12, 6.433333333333334], [1.7286678E12, 12.266666666666667], [1.72867002E12, 14.433333333333334], [1.72867224E12, 18.05], [1.7286714E12, 17.533333333333335], [1.72866594E12, 11.633333333333333], [1.72866816E12, 11.35], [1.72866474E12, 6.533333333333333], [1.72866918E12, 13.016666666666667], [1.72866696E12, 11.75], [1.7286702E12, 15.433333333333334], [1.72866372E12, 6.0], [1.72866798E12, 11.466666666666667], [1.72867242E12, 17.95], [1.72866672E12, 10.816666666666666], [1.72866996E12, 15.133333333333333], [1.72866774E12, 12.65], [1.72867218E12, 17.666666666666668], [1.7286633E12, 6.183333333333334], [1.72866552E12, 6.483333333333333], [1.7286645E12, 6.383333333333334], [1.72867098E12, 9.766666666666667], [1.72866654E12, 11.133333333333333], [1.72866876E12, 14.266666666666667], [1.72866348E12, 5.8], [1.7286669E12, 11.783333333333333], [1.72866912E12, 14.65], [1.72867014E12, 14.4], [1.72867236E12, 18.966666666666665], [1.72867116E12, 18.2], [1.72866468E12, 5.983333333333333], [1.7286657E12, 4.933333333333334], [1.72866792E12, 11.25], [1.72866894E12, 13.233333333333333], [1.7286693E12, 14.083333333333334], [1.72866366E12, 6.45], [1.72867254E12, 18.766666666666666], [1.72866708E12, 11.283333333333333], [1.72867152E12, 18.316666666666666], [1.72866486E12, 6.6], [1.7286681E12, 11.65], [1.72867134E12, 18.833333333333332], [1.72866588E12, 12.1], [1.72867032E12, 15.983333333333333], [1.72866384E12, 5.7], [1.72866624E12, 10.583333333333334], [1.72866282E12, 3.316666666666667], [1.72866504E12, 6.683333333333334], [1.72866726E12, 11.466666666666667], [1.72866948E12, 14.766666666666667], [1.7286717E12, 18.283333333333335], [1.72866402E12, 6.383333333333334], [1.72866606E12, 11.083333333333334], [1.72866828E12, 11.5], [1.7286705E12, 15.633333333333333], [1.72867272E12, 18.616666666666667]], "isOverall": false, "label": "getmap-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72867284E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.3333333333333333, "minX": 1.72866276E12, "maxY": 19.816666666666666, "series": [{"data": [[1.72866462E12, 6.3], [1.7286636E12, 6.25], [1.72866582E12, 11.783333333333333], [1.72866804E12, 11.75], [1.72867026E12, 16.7], [1.72867248E12, 19.35], [1.72866906E12, 13.133333333333333], [1.7286723E12, 17.783333333333335], [1.72866684E12, 10.483333333333333], [1.72867128E12, 19.816666666666666], [1.7286648E12, 6.233333333333333], [1.7286672E12, 11.066666666666666], [1.72867044E12, 15.65], [1.72866378E12, 6.183333333333334], [1.72866822E12, 11.933333333333334], [1.72867266E12, 17.85], [1.72866276E12, 1.45], [1.728666E12, 11.55], [1.72866498E12, 6.45], [1.72866702E12, 10.916666666666666], [1.72866924E12, 13.916666666666666], [1.72867146E12, 17.933333333333334], [1.72866738E12, 12.083333333333334], [1.7286696E12, 13.683333333333334], [1.72866396E12, 6.316666666666666], [1.72867062E12, 15.85], [1.72867284E12, 0.3333333333333333], [1.72867164E12, 18.45], [1.72866294E12, 3.2333333333333334], [1.72866516E12, 5.666666666666667], [1.72866618E12, 10.233333333333333], [1.7286684E12, 11.6], [1.72866942E12, 14.15], [1.72866978E12, 15.366666666666667], [1.72866414E12, 6.316666666666666], [1.72866312E12, 4.2], [1.72866756E12, 11.2], [1.728672E12, 17.8], [1.72866534E12, 5.783333333333333], [1.72866858E12, 11.1], [1.72867182E12, 18.983333333333334], [1.72866636E12, 11.1], [1.7286708E12, 15.816666666666666], [1.72866432E12, 6.533333333333333], [1.72866834E12, 11.45], [1.72866492E12, 6.033333333333333], [1.72867158E12, 17.883333333333333], [1.72866612E12, 11.183333333333334], [1.72867056E12, 15.716666666666667], [1.7286639E12, 5.733333333333333], [1.72866714E12, 11.616666666666667], [1.72866936E12, 13.4], [1.72867038E12, 16.633333333333333], [1.7286726E12, 16.8], [1.72866288E12, 3.3833333333333333], [1.7286651E12, 5.866666666666666], [1.72866408E12, 6.3], [1.7286663E12, 11.133333333333333], [1.72866852E12, 5.266666666666667], [1.72867074E12, 16.733333333333334], [1.72866954E12, 15.016666666666667], [1.72867278E12, 10.066666666666666], [1.72866732E12, 11.7], [1.72867176E12, 17.666666666666668], [1.72866306E12, 3.05], [1.72866528E12, 6.516666666666667], [1.72866768E12, 11.883333333333333], [1.72867092E12, 16.033333333333335], [1.72866426E12, 6.366666666666666], [1.7286687E12, 15.5], [1.72866324E12, 6.15], [1.72866648E12, 11.383333333333333], [1.72866546E12, 6.166666666666667], [1.72867194E12, 18.733333333333334], [1.7286675E12, 11.933333333333334], [1.72866972E12, 13.85], [1.72866786E12, 12.066666666666666], [1.7286711E12, 18.483333333333334], [1.72866444E12, 6.75], [1.72866564E12, 6.25], [1.72867008E12, 14.95], [1.72866342E12, 6.083333333333333], [1.72866888E12, 13.25], [1.72866666E12, 10.916666666666666], [1.7286699E12, 13.9], [1.72867212E12, 17.466666666666665], [1.728663E12, 3.3833333333333333], [1.72867188E12, 18.8], [1.72866642E12, 11.633333333333333], [1.72866864E12, 16.016666666666666], [1.72866522E12, 5.666666666666667], [1.72866966E12, 14.266666666666667], [1.72866744E12, 11.7], [1.72867068E12, 17.05], [1.7286642E12, 5.95], [1.72866846E12, 9.75], [1.72866882E12, 13.766666666666667], [1.72867206E12, 18.433333333333334], [1.72866318E12, 6.9], [1.7286654E12, 5.833333333333333], [1.72867104E12, 11.983333333333333], [1.7286666E12, 10.766666666666667], [1.72866438E12, 6.55], [1.72866762E12, 12.116666666666667], [1.72867086E12, 16.016666666666666], [1.72866336E12, 6.416666666666667], [1.72866984E12, 14.866666666666667], [1.72866558E12, 6.75], [1.72866576E12, 10.55], [1.72866678E12, 11.216666666666667], [1.728669E12, 12.466666666666667], [1.72867122E12, 19.05], [1.72866456E12, 6.266666666666667], [1.72866354E12, 6.433333333333334], [1.7286678E12, 12.266666666666667], [1.72867002E12, 14.433333333333334], [1.72867224E12, 18.05], [1.7286714E12, 17.533333333333335], [1.72866594E12, 11.633333333333333], [1.72866816E12, 11.35], [1.72866474E12, 6.533333333333333], [1.72866918E12, 13.016666666666667], [1.72866696E12, 11.75], [1.7286702E12, 15.433333333333334], [1.72866372E12, 6.0], [1.72866798E12, 11.466666666666667], [1.72867242E12, 17.95], [1.72866672E12, 10.816666666666666], [1.72866996E12, 15.133333333333333], [1.72866774E12, 12.65], [1.72867218E12, 17.666666666666668], [1.7286633E12, 6.183333333333334], [1.72866552E12, 6.483333333333333], [1.7286645E12, 6.383333333333334], [1.72867098E12, 9.766666666666667], [1.72866654E12, 11.133333333333333], [1.72866876E12, 14.266666666666667], [1.72866348E12, 5.8], [1.7286669E12, 11.783333333333333], [1.72866912E12, 14.65], [1.72867014E12, 14.4], [1.72867236E12, 18.966666666666665], [1.72867116E12, 18.2], [1.72866468E12, 5.983333333333333], [1.7286657E12, 4.933333333333334], [1.72866792E12, 11.25], [1.72866894E12, 13.233333333333333], [1.7286693E12, 14.083333333333334], [1.72866366E12, 6.45], [1.72867254E12, 18.766666666666666], [1.72866708E12, 11.283333333333333], [1.72867152E12, 18.316666666666666], [1.72866486E12, 6.6], [1.7286681E12, 11.65], [1.72867134E12, 18.833333333333332], [1.72866588E12, 12.1], [1.72867032E12, 15.983333333333333], [1.72866384E12, 5.7], [1.72866624E12, 10.583333333333334], [1.72866282E12, 3.316666666666667], [1.72866504E12, 6.683333333333334], [1.72866726E12, 11.466666666666667], [1.72866948E12, 14.766666666666667], [1.7286717E12, 18.283333333333335], [1.72866402E12, 6.383333333333334], [1.72866606E12, 11.083333333333334], [1.72866828E12, 11.5], [1.7286705E12, 15.633333333333333], [1.72867272E12, 18.616666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72867284E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

