/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 45.0, "minX": 0.0, "maxY": 4248.0, "series": [{"data": [[0.0, 45.0], [0.1, 59.0], [0.2, 62.0], [0.3, 64.0], [0.4, 66.0], [0.5, 67.0], [0.6, 68.0], [0.7, 70.0], [0.8, 71.0], [0.9, 72.0], [1.0, 72.0], [1.1, 73.0], [1.2, 74.0], [1.3, 75.0], [1.4, 76.0], [1.5, 76.0], [1.6, 77.0], [1.7, 78.0], [1.8, 78.0], [1.9, 79.0], [2.0, 80.0], [2.1, 80.0], [2.2, 81.0], [2.3, 81.0], [2.4, 82.0], [2.5, 83.0], [2.6, 83.0], [2.7, 84.0], [2.8, 84.0], [2.9, 85.0], [3.0, 85.0], [3.1, 86.0], [3.2, 86.0], [3.3, 87.0], [3.4, 87.0], [3.5, 88.0], [3.6, 88.0], [3.7, 89.0], [3.8, 89.0], [3.9, 89.0], [4.0, 90.0], [4.1, 90.0], [4.2, 91.0], [4.3, 91.0], [4.4, 92.0], [4.5, 92.0], [4.6, 92.0], [4.7, 93.0], [4.8, 93.0], [4.9, 93.0], [5.0, 94.0], [5.1, 94.0], [5.2, 95.0], [5.3, 95.0], [5.4, 95.0], [5.5, 96.0], [5.6, 96.0], [5.7, 97.0], [5.8, 97.0], [5.9, 97.0], [6.0, 98.0], [6.1, 98.0], [6.2, 98.0], [6.3, 99.0], [6.4, 99.0], [6.5, 100.0], [6.6, 100.0], [6.7, 100.0], [6.8, 101.0], [6.9, 101.0], [7.0, 101.0], [7.1, 102.0], [7.2, 102.0], [7.3, 102.0], [7.4, 103.0], [7.5, 103.0], [7.6, 104.0], [7.7, 104.0], [7.8, 104.0], [7.9, 105.0], [8.0, 105.0], [8.1, 105.0], [8.2, 106.0], [8.3, 106.0], [8.4, 106.0], [8.5, 107.0], [8.6, 107.0], [8.7, 107.0], [8.8, 107.0], [8.9, 108.0], [9.0, 108.0], [9.1, 109.0], [9.2, 109.0], [9.3, 109.0], [9.4, 110.0], [9.5, 110.0], [9.6, 110.0], [9.7, 111.0], [9.8, 111.0], [9.9, 111.0], [10.0, 112.0], [10.1, 112.0], [10.2, 112.0], [10.3, 113.0], [10.4, 113.0], [10.5, 113.0], [10.6, 114.0], [10.7, 114.0], [10.8, 114.0], [10.9, 115.0], [11.0, 115.0], [11.1, 115.0], [11.2, 116.0], [11.3, 116.0], [11.4, 116.0], [11.5, 117.0], [11.6, 117.0], [11.7, 117.0], [11.8, 118.0], [11.9, 118.0], [12.0, 118.0], [12.1, 119.0], [12.2, 119.0], [12.3, 120.0], [12.4, 120.0], [12.5, 120.0], [12.6, 121.0], [12.7, 121.0], [12.8, 121.0], [12.9, 122.0], [13.0, 122.0], [13.1, 122.0], [13.2, 123.0], [13.3, 123.0], [13.4, 123.0], [13.5, 124.0], [13.6, 124.0], [13.7, 124.0], [13.8, 125.0], [13.9, 125.0], [14.0, 125.0], [14.1, 126.0], [14.2, 126.0], [14.3, 126.0], [14.4, 127.0], [14.5, 127.0], [14.6, 127.0], [14.7, 128.0], [14.8, 128.0], [14.9, 128.0], [15.0, 129.0], [15.1, 129.0], [15.2, 129.0], [15.3, 130.0], [15.4, 130.0], [15.5, 130.0], [15.6, 131.0], [15.7, 131.0], [15.8, 132.0], [15.9, 132.0], [16.0, 132.0], [16.1, 133.0], [16.2, 133.0], [16.3, 133.0], [16.4, 134.0], [16.5, 134.0], [16.6, 134.0], [16.7, 135.0], [16.8, 135.0], [16.9, 135.0], [17.0, 136.0], [17.1, 136.0], [17.2, 137.0], [17.3, 137.0], [17.4, 137.0], [17.5, 138.0], [17.6, 138.0], [17.7, 138.0], [17.8, 139.0], [17.9, 139.0], [18.0, 139.0], [18.1, 140.0], [18.2, 140.0], [18.3, 140.0], [18.4, 141.0], [18.5, 141.0], [18.6, 142.0], [18.7, 142.0], [18.8, 142.0], [18.9, 143.0], [19.0, 143.0], [19.1, 144.0], [19.2, 144.0], [19.3, 144.0], [19.4, 145.0], [19.5, 145.0], [19.6, 146.0], [19.7, 146.0], [19.8, 146.0], [19.9, 147.0], [20.0, 147.0], [20.1, 148.0], [20.2, 148.0], [20.3, 148.0], [20.4, 149.0], [20.5, 149.0], [20.6, 150.0], [20.7, 150.0], [20.8, 150.0], [20.9, 151.0], [21.0, 151.0], [21.1, 151.0], [21.2, 152.0], [21.3, 152.0], [21.4, 153.0], [21.5, 153.0], [21.6, 153.0], [21.7, 154.0], [21.8, 154.0], [21.9, 155.0], [22.0, 155.0], [22.1, 155.0], [22.2, 156.0], [22.3, 156.0], [22.4, 157.0], [22.5, 157.0], [22.6, 158.0], [22.7, 158.0], [22.8, 158.0], [22.9, 159.0], [23.0, 159.0], [23.1, 160.0], [23.2, 160.0], [23.3, 161.0], [23.4, 161.0], [23.5, 162.0], [23.6, 162.0], [23.7, 163.0], [23.8, 163.0], [23.9, 164.0], [24.0, 164.0], [24.1, 165.0], [24.2, 165.0], [24.3, 166.0], [24.4, 166.0], [24.5, 167.0], [24.6, 167.0], [24.7, 167.0], [24.8, 168.0], [24.9, 168.0], [25.0, 169.0], [25.1, 169.0], [25.2, 170.0], [25.3, 170.0], [25.4, 171.0], [25.5, 171.0], [25.6, 172.0], [25.7, 173.0], [25.8, 173.0], [25.9, 174.0], [26.0, 174.0], [26.1, 175.0], [26.2, 175.0], [26.3, 176.0], [26.4, 176.0], [26.5, 177.0], [26.6, 177.0], [26.7, 178.0], [26.8, 178.0], [26.9, 179.0], [27.0, 180.0], [27.1, 180.0], [27.2, 181.0], [27.3, 181.0], [27.4, 182.0], [27.5, 183.0], [27.6, 183.0], [27.7, 184.0], [27.8, 184.0], [27.9, 185.0], [28.0, 185.0], [28.1, 186.0], [28.2, 187.0], [28.3, 187.0], [28.4, 188.0], [28.5, 188.0], [28.6, 189.0], [28.7, 190.0], [28.8, 190.0], [28.9, 191.0], [29.0, 192.0], [29.1, 192.0], [29.2, 193.0], [29.3, 194.0], [29.4, 194.0], [29.5, 195.0], [29.6, 196.0], [29.7, 196.0], [29.8, 197.0], [29.9, 198.0], [30.0, 198.0], [30.1, 199.0], [30.2, 200.0], [30.3, 201.0], [30.4, 201.0], [30.5, 202.0], [30.6, 203.0], [30.7, 204.0], [30.8, 205.0], [30.9, 205.0], [31.0, 206.0], [31.1, 207.0], [31.2, 208.0], [31.3, 209.0], [31.4, 210.0], [31.5, 210.0], [31.6, 211.0], [31.7, 212.0], [31.8, 212.0], [31.9, 213.0], [32.0, 214.0], [32.1, 215.0], [32.2, 216.0], [32.3, 216.0], [32.4, 217.0], [32.5, 218.0], [32.6, 219.0], [32.7, 220.0], [32.8, 221.0], [32.9, 222.0], [33.0, 222.0], [33.1, 223.0], [33.2, 224.0], [33.3, 225.0], [33.4, 226.0], [33.5, 227.0], [33.6, 228.0], [33.7, 229.0], [33.8, 230.0], [33.9, 231.0], [34.0, 232.0], [34.1, 233.0], [34.2, 234.0], [34.3, 235.0], [34.4, 236.0], [34.5, 237.0], [34.6, 238.0], [34.7, 240.0], [34.8, 241.0], [34.9, 241.0], [35.0, 243.0], [35.1, 244.0], [35.2, 245.0], [35.3, 246.0], [35.4, 248.0], [35.5, 249.0], [35.6, 250.0], [35.7, 251.0], [35.8, 252.0], [35.9, 253.0], [36.0, 255.0], [36.1, 256.0], [36.2, 258.0], [36.3, 259.0], [36.4, 261.0], [36.5, 262.0], [36.6, 264.0], [36.7, 265.0], [36.8, 267.0], [36.9, 268.0], [37.0, 270.0], [37.1, 271.0], [37.2, 273.0], [37.3, 274.0], [37.4, 276.0], [37.5, 278.0], [37.6, 279.0], [37.7, 281.0], [37.8, 283.0], [37.9, 285.0], [38.0, 287.0], [38.1, 288.0], [38.2, 290.0], [38.3, 292.0], [38.4, 294.0], [38.5, 295.0], [38.6, 297.0], [38.7, 299.0], [38.8, 301.0], [38.9, 303.0], [39.0, 305.0], [39.1, 307.0], [39.2, 308.0], [39.3, 310.0], [39.4, 312.0], [39.5, 314.0], [39.6, 316.0], [39.7, 318.0], [39.8, 321.0], [39.9, 323.0], [40.0, 326.0], [40.1, 328.0], [40.2, 331.0], [40.3, 333.0], [40.4, 336.0], [40.5, 339.0], [40.6, 341.0], [40.7, 343.0], [40.8, 347.0], [40.9, 349.0], [41.0, 352.0], [41.1, 354.0], [41.2, 357.0], [41.3, 360.0], [41.4, 363.0], [41.5, 366.0], [41.6, 369.0], [41.7, 373.0], [41.8, 376.0], [41.9, 379.0], [42.0, 383.0], [42.1, 387.0], [42.2, 390.0], [42.3, 393.0], [42.4, 396.0], [42.5, 400.0], [42.6, 404.0], [42.7, 407.0], [42.8, 410.0], [42.9, 414.0], [43.0, 418.0], [43.1, 422.0], [43.2, 425.0], [43.3, 429.0], [43.4, 432.0], [43.5, 436.0], [43.6, 439.0], [43.7, 443.0], [43.8, 447.0], [43.9, 451.0], [44.0, 455.0], [44.1, 459.0], [44.2, 462.0], [44.3, 466.0], [44.4, 470.0], [44.5, 475.0], [44.6, 478.0], [44.7, 482.0], [44.8, 486.0], [44.9, 490.0], [45.0, 493.0], [45.1, 497.0], [45.2, 501.0], [45.3, 505.0], [45.4, 509.0], [45.5, 513.0], [45.6, 516.0], [45.7, 521.0], [45.8, 524.0], [45.9, 528.0], [46.0, 532.0], [46.1, 536.0], [46.2, 540.0], [46.3, 544.0], [46.4, 548.0], [46.5, 552.0], [46.6, 556.0], [46.7, 559.0], [46.8, 562.0], [46.9, 566.0], [47.0, 570.0], [47.1, 573.0], [47.2, 576.0], [47.3, 579.0], [47.4, 583.0], [47.5, 586.0], [47.6, 590.0], [47.7, 593.0], [47.8, 596.0], [47.9, 600.0], [48.0, 603.0], [48.1, 605.0], [48.2, 608.0], [48.3, 611.0], [48.4, 614.0], [48.5, 618.0], [48.6, 621.0], [48.7, 624.0], [48.8, 628.0], [48.9, 631.0], [49.0, 634.0], [49.1, 636.0], [49.2, 639.0], [49.3, 642.0], [49.4, 645.0], [49.5, 648.0], [49.6, 651.0], [49.7, 654.0], [49.8, 657.0], [49.9, 660.0], [50.0, 662.0], [50.1, 665.0], [50.2, 668.0], [50.3, 671.0], [50.4, 673.0], [50.5, 676.0], [50.6, 678.0], [50.7, 681.0], [50.8, 683.0], [50.9, 686.0], [51.0, 689.0], [51.1, 692.0], [51.2, 694.0], [51.3, 696.0], [51.4, 699.0], [51.5, 702.0], [51.6, 704.0], [51.7, 706.0], [51.8, 708.0], [51.9, 711.0], [52.0, 714.0], [52.1, 716.0], [52.2, 719.0], [52.3, 721.0], [52.4, 723.0], [52.5, 726.0], [52.6, 728.0], [52.7, 730.0], [52.8, 732.0], [52.9, 735.0], [53.0, 737.0], [53.1, 739.0], [53.2, 741.0], [53.3, 744.0], [53.4, 746.0], [53.5, 749.0], [53.6, 751.0], [53.7, 753.0], [53.8, 755.0], [53.9, 758.0], [54.0, 760.0], [54.1, 762.0], [54.2, 764.0], [54.3, 766.0], [54.4, 769.0], [54.5, 771.0], [54.6, 773.0], [54.7, 775.0], [54.8, 777.0], [54.9, 780.0], [55.0, 782.0], [55.1, 784.0], [55.2, 786.0], [55.3, 788.0], [55.4, 790.0], [55.5, 793.0], [55.6, 795.0], [55.7, 797.0], [55.8, 799.0], [55.9, 801.0], [56.0, 803.0], [56.1, 805.0], [56.2, 807.0], [56.3, 809.0], [56.4, 811.0], [56.5, 813.0], [56.6, 815.0], [56.7, 817.0], [56.8, 819.0], [56.9, 821.0], [57.0, 823.0], [57.1, 825.0], [57.2, 828.0], [57.3, 829.0], [57.4, 831.0], [57.5, 833.0], [57.6, 835.0], [57.7, 837.0], [57.8, 839.0], [57.9, 841.0], [58.0, 843.0], [58.1, 845.0], [58.2, 847.0], [58.3, 848.0], [58.4, 851.0], [58.5, 852.0], [58.6, 854.0], [58.7, 857.0], [58.8, 859.0], [58.9, 861.0], [59.0, 863.0], [59.1, 865.0], [59.2, 867.0], [59.3, 869.0], [59.4, 871.0], [59.5, 873.0], [59.6, 875.0], [59.7, 877.0], [59.8, 879.0], [59.9, 881.0], [60.0, 884.0], [60.1, 885.0], [60.2, 887.0], [60.3, 889.0], [60.4, 892.0], [60.5, 893.0], [60.6, 895.0], [60.7, 898.0], [60.8, 900.0], [60.9, 902.0], [61.0, 904.0], [61.1, 906.0], [61.2, 908.0], [61.3, 910.0], [61.4, 912.0], [61.5, 914.0], [61.6, 916.0], [61.7, 918.0], [61.8, 920.0], [61.9, 921.0], [62.0, 923.0], [62.1, 926.0], [62.2, 927.0], [62.3, 929.0], [62.4, 931.0], [62.5, 933.0], [62.6, 935.0], [62.7, 937.0], [62.8, 939.0], [62.9, 941.0], [63.0, 943.0], [63.1, 944.0], [63.2, 947.0], [63.3, 948.0], [63.4, 950.0], [63.5, 953.0], [63.6, 955.0], [63.7, 957.0], [63.8, 959.0], [63.9, 961.0], [64.0, 962.0], [64.1, 964.0], [64.2, 966.0], [64.3, 968.0], [64.4, 970.0], [64.5, 972.0], [64.6, 974.0], [64.7, 976.0], [64.8, 977.0], [64.9, 979.0], [65.0, 981.0], [65.1, 983.0], [65.2, 985.0], [65.3, 987.0], [65.4, 989.0], [65.5, 992.0], [65.6, 994.0], [65.7, 995.0], [65.8, 997.0], [65.9, 1000.0], [66.0, 1002.0], [66.1, 1004.0], [66.2, 1006.0], [66.3, 1007.0], [66.4, 1009.0], [66.5, 1012.0], [66.6, 1013.0], [66.7, 1016.0], [66.8, 1017.0], [66.9, 1020.0], [67.0, 1022.0], [67.1, 1024.0], [67.2, 1026.0], [67.3, 1028.0], [67.4, 1029.0], [67.5, 1031.0], [67.6, 1033.0], [67.7, 1035.0], [67.8, 1037.0], [67.9, 1039.0], [68.0, 1041.0], [68.1, 1043.0], [68.2, 1045.0], [68.3, 1047.0], [68.4, 1048.0], [68.5, 1050.0], [68.6, 1052.0], [68.7, 1054.0], [68.8, 1056.0], [68.9, 1058.0], [69.0, 1060.0], [69.1, 1062.0], [69.2, 1064.0], [69.3, 1066.0], [69.4, 1068.0], [69.5, 1070.0], [69.6, 1072.0], [69.7, 1075.0], [69.8, 1077.0], [69.9, 1079.0], [70.0, 1081.0], [70.1, 1083.0], [70.2, 1085.0], [70.3, 1087.0], [70.4, 1089.0], [70.5, 1091.0], [70.6, 1093.0], [70.7, 1095.0], [70.8, 1097.0], [70.9, 1099.0], [71.0, 1101.0], [71.1, 1103.0], [71.2, 1105.0], [71.3, 1107.0], [71.4, 1109.0], [71.5, 1111.0], [71.6, 1113.0], [71.7, 1115.0], [71.8, 1118.0], [71.9, 1120.0], [72.0, 1122.0], [72.1, 1124.0], [72.2, 1126.0], [72.3, 1128.0], [72.4, 1130.0], [72.5, 1132.0], [72.6, 1134.0], [72.7, 1136.0], [72.8, 1138.0], [72.9, 1140.0], [73.0, 1142.0], [73.1, 1144.0], [73.2, 1146.0], [73.3, 1148.0], [73.4, 1151.0], [73.5, 1153.0], [73.6, 1155.0], [73.7, 1157.0], [73.8, 1159.0], [73.9, 1160.0], [74.0, 1163.0], [74.1, 1165.0], [74.2, 1167.0], [74.3, 1169.0], [74.4, 1171.0], [74.5, 1173.0], [74.6, 1175.0], [74.7, 1178.0], [74.8, 1180.0], [74.9, 1182.0], [75.0, 1184.0], [75.1, 1186.0], [75.2, 1188.0], [75.3, 1191.0], [75.4, 1193.0], [75.5, 1195.0], [75.6, 1198.0], [75.7, 1200.0], [75.8, 1202.0], [75.9, 1204.0], [76.0, 1206.0], [76.1, 1208.0], [76.2, 1210.0], [76.3, 1212.0], [76.4, 1215.0], [76.5, 1217.0], [76.6, 1219.0], [76.7, 1221.0], [76.8, 1223.0], [76.9, 1226.0], [77.0, 1228.0], [77.1, 1230.0], [77.2, 1233.0], [77.3, 1235.0], [77.4, 1238.0], [77.5, 1240.0], [77.6, 1242.0], [77.7, 1244.0], [77.8, 1247.0], [77.9, 1249.0], [78.0, 1251.0], [78.1, 1254.0], [78.2, 1256.0], [78.3, 1259.0], [78.4, 1261.0], [78.5, 1264.0], [78.6, 1266.0], [78.7, 1268.0], [78.8, 1271.0], [78.9, 1273.0], [79.0, 1276.0], [79.1, 1278.0], [79.2, 1281.0], [79.3, 1283.0], [79.4, 1286.0], [79.5, 1289.0], [79.6, 1292.0], [79.7, 1294.0], [79.8, 1296.0], [79.9, 1299.0], [80.0, 1302.0], [80.1, 1305.0], [80.2, 1307.0], [80.3, 1310.0], [80.4, 1312.0], [80.5, 1315.0], [80.6, 1317.0], [80.7, 1320.0], [80.8, 1322.0], [80.9, 1325.0], [81.0, 1327.0], [81.1, 1331.0], [81.2, 1333.0], [81.3, 1336.0], [81.4, 1339.0], [81.5, 1342.0], [81.6, 1345.0], [81.7, 1347.0], [81.8, 1350.0], [81.9, 1353.0], [82.0, 1356.0], [82.1, 1358.0], [82.2, 1361.0], [82.3, 1364.0], [82.4, 1367.0], [82.5, 1370.0], [82.6, 1373.0], [82.7, 1375.0], [82.8, 1378.0], [82.9, 1381.0], [83.0, 1384.0], [83.1, 1387.0], [83.2, 1389.0], [83.3, 1392.0], [83.4, 1395.0], [83.5, 1398.0], [83.6, 1401.0], [83.7, 1404.0], [83.8, 1407.0], [83.9, 1409.0], [84.0, 1412.0], [84.1, 1415.0], [84.2, 1418.0], [84.3, 1421.0], [84.4, 1424.0], [84.5, 1427.0], [84.6, 1430.0], [84.7, 1433.0], [84.8, 1437.0], [84.9, 1440.0], [85.0, 1443.0], [85.1, 1447.0], [85.2, 1450.0], [85.3, 1453.0], [85.4, 1456.0], [85.5, 1459.0], [85.6, 1462.0], [85.7, 1465.0], [85.8, 1468.0], [85.9, 1472.0], [86.0, 1475.0], [86.1, 1478.0], [86.2, 1481.0], [86.3, 1485.0], [86.4, 1488.0], [86.5, 1491.0], [86.6, 1494.0], [86.7, 1497.0], [86.8, 1501.0], [86.9, 1504.0], [87.0, 1507.0], [87.1, 1511.0], [87.2, 1515.0], [87.3, 1519.0], [87.4, 1522.0], [87.5, 1526.0], [87.6, 1530.0], [87.7, 1533.0], [87.8, 1537.0], [87.9, 1540.0], [88.0, 1544.0], [88.1, 1548.0], [88.2, 1551.0], [88.3, 1555.0], [88.4, 1558.0], [88.5, 1562.0], [88.6, 1566.0], [88.7, 1570.0], [88.8, 1574.0], [88.9, 1577.0], [89.0, 1582.0], [89.1, 1586.0], [89.2, 1591.0], [89.3, 1595.0], [89.4, 1599.0], [89.5, 1603.0], [89.6, 1607.0], [89.7, 1612.0], [89.8, 1616.0], [89.9, 1620.0], [90.0, 1624.0], [90.1, 1628.0], [90.2, 1633.0], [90.3, 1638.0], [90.4, 1642.0], [90.5, 1646.0], [90.6, 1651.0], [90.7, 1656.0], [90.8, 1661.0], [90.9, 1665.0], [91.0, 1670.0], [91.1, 1675.0], [91.2, 1679.0], [91.3, 1684.0], [91.4, 1689.0], [91.5, 1694.0], [91.6, 1699.0], [91.7, 1704.0], [91.8, 1709.0], [91.9, 1713.0], [92.0, 1718.0], [92.1, 1724.0], [92.2, 1729.0], [92.3, 1734.0], [92.4, 1740.0], [92.5, 1746.0], [92.6, 1752.0], [92.7, 1758.0], [92.8, 1763.0], [92.9, 1769.0], [93.0, 1775.0], [93.1, 1781.0], [93.2, 1787.0], [93.3, 1794.0], [93.4, 1800.0], [93.5, 1806.0], [93.6, 1812.0], [93.7, 1818.0], [93.8, 1824.0], [93.9, 1830.0], [94.0, 1837.0], [94.1, 1844.0], [94.2, 1851.0], [94.3, 1859.0], [94.4, 1867.0], [94.5, 1875.0], [94.6, 1882.0], [94.7, 1889.0], [94.8, 1896.0], [94.9, 1904.0], [95.0, 1910.0], [95.1, 1918.0], [95.2, 1925.0], [95.3, 1933.0], [95.4, 1942.0], [95.5, 1950.0], [95.6, 1957.0], [95.7, 1967.0], [95.8, 1976.0], [95.9, 1986.0], [96.0, 1994.0], [96.1, 2003.0], [96.2, 2012.0], [96.3, 2021.0], [96.4, 2030.0], [96.5, 2038.0], [96.6, 2049.0], [96.7, 2061.0], [96.8, 2074.0], [96.9, 2086.0], [97.0, 2099.0], [97.1, 2112.0], [97.2, 2127.0], [97.3, 2141.0], [97.4, 2153.0], [97.5, 2168.0], [97.6, 2183.0], [97.7, 2197.0], [97.8, 2214.0], [97.9, 2232.0], [98.0, 2252.0], [98.1, 2270.0], [98.2, 2288.0], [98.3, 2306.0], [98.4, 2330.0], [98.5, 2354.0], [98.6, 2378.0], [98.7, 2402.0], [98.8, 2424.0], [98.9, 2453.0], [99.0, 2490.0], [99.1, 2524.0], [99.2, 2565.0], [99.3, 2608.0], [99.4, 2651.0], [99.5, 2705.0], [99.6, 2774.0], [99.7, 2868.0], [99.8, 2999.0], [99.9, 3190.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 27762.0, "series": [{"data": [[0.0, 7576.0], [600.0, 4129.0], [700.0, 5186.0], [800.0, 5789.0], [900.0, 5997.0], [1000.0, 5882.0], [1100.0, 5598.0], [1200.0, 4940.0], [1300.0, 4263.0], [1400.0, 3766.0], [1500.0, 3114.0], [1600.0, 2568.0], [100.0, 27762.0], [1700.0, 2099.0], [1800.0, 1707.0], [1900.0, 1410.0], [2000.0, 1109.0], [2100.0, 837.0], [2200.0, 639.0], [2300.0, 499.0], [2400.0, 406.0], [2500.0, 283.0], [2600.0, 248.0], [2700.0, 165.0], [2800.0, 114.0], [2900.0, 85.0], [3000.0, 71.0], [3100.0, 51.0], [200.0, 10039.0], [3200.0, 36.0], [3300.0, 26.0], [3400.0, 15.0], [3500.0, 8.0], [3700.0, 9.0], [3600.0, 7.0], [3800.0, 4.0], [3900.0, 3.0], [4000.0, 2.0], [4100.0, 1.0], [4200.0, 1.0], [300.0, 4410.0], [400.0, 3145.0], [500.0, 3201.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 15478.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 52957.0, "series": [{"data": [[0.0, 52957.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 48765.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 15478.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.72856772E12, "maxY": 16.0, "series": [{"data": [[1.7285748E12, 12.0], [1.7285745E12, 12.0], [1.7285742E12, 12.0], [1.7285739E12, 12.0], [1.72857408E12, 12.0], [1.7285757E12, 6.034632034632031], [1.72857378E12, 12.0], [1.7285754E12, 12.0], [1.72857348E12, 12.0], [1.7285751E12, 12.0], [1.72857432E12, 12.0], [1.72857402E12, 12.0], [1.72857372E12, 12.0], [1.72857534E12, 12.0], [1.72857342E12, 11.500000000000004], [1.72857564E12, 11.28322440087147], [1.7285736E12, 12.0], [1.72857522E12, 12.0], [1.72857552E12, 12.0], [1.72857492E12, 12.0], [1.72857462E12, 12.0], [1.72857384E12, 12.0], [1.72857546E12, 12.0], [1.72857354E12, 12.0], [1.72857516E12, 12.0], [1.72857486E12, 12.0], [1.72857504E12, 12.0], [1.72857474E12, 12.0], [1.72857444E12, 12.0], [1.72857414E12, 12.0], [1.72857528E12, 12.0], [1.72857498E12, 12.0], [1.72857468E12, 12.0], [1.72857438E12, 12.0], [1.72857456E12, 12.0], [1.72857426E12, 12.0], [1.72857396E12, 12.0], [1.72857558E12, 12.0], [1.72857366E12, 12.0]], "isOverall": false, "label": "12", "isController": false}, {"data": [[1.72856802E12, 2.0], [1.72856784E12, 2.0], [1.7285679E12, 2.0], [1.72856772E12, 2.0], [1.72856778E12, 2.0], [1.72856808E12, 1.9247311827956985], [1.72856796E12, 2.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.72856916E12, 4.0], [1.72856886E12, 4.0], [1.72856976E12, 4.0], [1.72856946E12, 4.0], [1.72856826E12, 4.0], [1.72856988E12, 4.0], [1.72856856E12, 4.0], [1.72856958E12, 4.0], [1.72857048E12, 4.0], [1.72857018E12, 4.0], [1.72856964E12, 4.0], [1.72856832E12, 4.0], [1.72856934E12, 4.0], [1.72857024E12, 4.0], [1.72856994E12, 4.0], [1.72856874E12, 4.0], [1.72857036E12, 4.0], [1.72856904E12, 4.0], [1.72857006E12, 4.0], [1.72856814E12, 4.0], [1.72856844E12, 4.0], [1.72857066E12, 1.0], [1.7285685E12, 4.0], [1.72857012E12, 4.0], [1.7285688E12, 4.0], [1.72856982E12, 4.0], [1.7285682E12, 4.0], [1.72857042E12, 4.0], [1.72857054E12, 4.0], [1.72856862E12, 4.0], [1.72856952E12, 4.0], [1.72856892E12, 4.0], [1.72856922E12, 4.0], [1.72856898E12, 4.0], [1.7285706E12, 3.6579710144927526], [1.7285703E12, 4.0], [1.72856838E12, 4.0], [1.72856928E12, 4.0], [1.72856868E12, 4.0], [1.7285694E12, 4.0], [1.72856808E12, 3.9954545454545483], [1.7285691E12, 4.0], [1.72857E12, 4.0], [1.7285697E12, 4.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.72857642E12, 16.0], [1.72857672E12, 16.0], [1.72857582E12, 16.0], [1.72857612E12, 16.0], [1.7285757E12, 15.925049309664697], [1.728576E12, 16.0], [1.72857702E12, 16.0], [1.72857732E12, 16.0], [1.72857594E12, 16.0], [1.72857756E12, 1.8695652173913042], [1.72857624E12, 16.0], [1.72857726E12, 16.0], [1.72857714E12, 16.0], [1.72857744E12, 15.46551724137932], [1.72857654E12, 16.0], [1.72857684E12, 16.0], [1.72857738E12, 16.0], [1.72857576E12, 16.0], [1.72857678E12, 16.0], [1.72857708E12, 16.0], [1.72857666E12, 16.0], [1.72857696E12, 16.0], [1.72857606E12, 16.0], [1.72857636E12, 16.0], [1.7285769E12, 16.0], [1.7285772E12, 16.0], [1.7285763E12, 16.0], [1.7285766E12, 16.0], [1.72857618E12, 16.0], [1.72857648E12, 16.0], [1.7285775E12, 9.733823529411763], [1.72857588E12, 16.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.72857108E12, 8.0], [1.7285727E12, 8.0], [1.72857078E12, 8.0], [1.728573E12, 8.0], [1.7285733E12, 8.0], [1.72857138E12, 8.0], [1.72857168E12, 8.0], [1.7285715E12, 8.0], [1.7285718E12, 8.0], [1.7285721E12, 8.0], [1.7285724E12, 8.0], [1.72857318E12, 8.0], [1.72857126E12, 8.0], [1.72857156E12, 8.0], [1.72857186E12, 8.0], [1.72857216E12, 8.0], [1.72857342E12, 3.485207100591714], [1.72857198E12, 8.0], [1.72857228E12, 8.0], [1.72857096E12, 8.0], [1.72857258E12, 8.0], [1.72857066E12, 7.995169082125602], [1.72857288E12, 8.0], [1.72857174E12, 8.0], [1.72857204E12, 8.0], [1.72857072E12, 8.0], [1.72857234E12, 8.0], [1.72857264E12, 8.0], [1.72857084E12, 8.0], [1.72857246E12, 8.0], [1.72857276E12, 8.0], [1.72857306E12, 8.0], [1.72857114E12, 8.0], [1.72857144E12, 8.0], [1.72857222E12, 8.0], [1.72857336E12, 7.7138554216867465], [1.72857252E12, 8.0], [1.7285712E12, 8.0], [1.72857282E12, 8.0], [1.7285709E12, 8.0], [1.72857312E12, 8.0], [1.72857294E12, 8.0], [1.72857102E12, 8.0], [1.72857324E12, 8.0], [1.72857132E12, 8.0], [1.72857162E12, 8.0], [1.72857192E12, 8.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72857756E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 537.1627906976744, "minX": 1.0, "maxY": 904.2377583979276, "series": [{"data": [[2.0, 638.7617554858937], [8.0, 682.4323594093578], [9.0, 746.4309392265193], [10.0, 541.1190476190477], [11.0, 666.0612903225813], [3.0, 608.106557377049], [12.0, 745.9415591730965], [13.0, 892.6666666666667], [14.0, 727.295566502463], [15.0, 855.8904109589038], [1.0, 657.5323741007193], [4.0, 638.4909375979968], [16.0, 904.2377583979276], [5.0, 674.8888888888887], [6.0, 641.3653846153845], [7.0, 537.1627906976744]], "isOverall": false, "label": "getmap", "isController": false}, {"data": [[10.7324658703072, 753.8224488054606]], "isOverall": false, "label": "getmap-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.72856772E12, "maxY": 5.5694343516666666E7, "series": [{"data": [[1.7285748E12, 4.889125361666667E7], [1.72856916E12, 1.97791235E7], [1.72857138E12, 3.394414775E7], [1.72857582E12, 5.420232438333333E7], [1.72857378E12, 4.979701145E7], [1.728576E12, 5.536462638333333E7], [1.72857702E12, 5.364887178333333E7], [1.7285724E12, 3.670501521666667E7], [1.72856796E12, 9722576.966666667], [1.72857018E12, 1.9909318133333333E7], [1.72856832E12, 1.8794273316666666E7], [1.72856934E12, 1.9060621616666667E7], [1.72857156E12, 3.566871153333333E7], [1.72857342E12, 1.2800191333333334E7], [1.72857564E12, 4.6833071833333336E7], [1.72857036E12, 1.9078385833333332E7], [1.7285736E12, 4.8170421233333334E7], [1.72856814E12, 1.8806360916666668E7], [1.72857258E12, 3.4110896416666664E7], [1.72857462E12, 4.913875425E7], [1.72857684E12, 5.5267120916666664E7], [1.72857546E12, 4.97045405E7], [1.7285688E12, 2.03465491E7], [1.72856982E12, 1.814805065E7], [1.72857204E12, 3.556977445E7], [1.72857084E12, 3.5546348516666666E7], [1.72857666E12, 5.536288265E7], [1.72856862E12, 1.872972845E7], [1.72857306E12, 3.5770205233333334E7], [1.72857444E12, 4.706986328333333E7], [1.72856898E12, 1.97762153E7], [1.72857528E12, 5.015010463333333E7], [1.72857222E12, 3.468372081666667E7], [1.7285712E12, 3.619266431666667E7], [1.7285763E12, 5.48966816E7], [1.72856778E12, 9943971.0], [1.72857102E12, 3.549908845E7], [1.72857324E12, 3.604772063333333E7], [1.72857426E12, 4.87940551E7], [1.72857648E12, 5.284302715E7], [1.7285775E12, 3.3080668833333332E7], [1.72857E12, 1.959838455E7], [1.7285727E12, 3.5163643416666664E7], [1.72856946E12, 1.851509985E7], [1.72857168E12, 3.579527345E7], [1.7285739E12, 5.035527735E7], [1.72857612E12, 5.5694343516666666E7], [1.72856826E12, 1.9835794716666665E7], [1.7285715E12, 3.578721886666667E7], [1.72857408E12, 4.831225643333333E7], [1.72857048E12, 1.829688435E7], [1.7285751E12, 4.684149906666667E7], [1.72857732E12, 5.2578291833333336E7], [1.72856964E12, 1.9943412116666667E7], [1.72857594E12, 5.308230046666667E7], [1.72857186E12, 3.557808511666667E7], [1.72857372E12, 5.0224647416666664E7], [1.72857714E12, 5.395613753333333E7], [1.72857492E12, 4.9830644516666666E7], [1.72856844E12, 1.9162589466666665E7], [1.72857066E12, 1.3589145616666667E7], [1.72857288E12, 3.587190131666667E7], [1.72857012E12, 1.8716254466666665E7], [1.72857354E12, 4.929337588333333E7], [1.72857576E12, 5.282483686666667E7], [1.72857234E12, 3.438473771666667E7], [1.72857678E12, 5.426368506666667E7], [1.7285679E12, 9812040.533333333], [1.72857474E12, 5.1625989833333336E7], [1.72857696E12, 5.50935571E7], [1.72856892E12, 1.97254392E7], [1.72857114E12, 3.636760578333333E7], [1.72857336E12, 3.522595246666667E7], [1.7285703E12, 1.8186181033333335E7], [1.72857252E12, 3.616060618333333E7], [1.72856928E12, 1.9761398733333334E7], [1.7285766E12, 5.281262038333333E7], [1.72857438E12, 4.9331539916666664E7], [1.72857456E12, 4.82346422E7], [1.72856808E12, 1.4140105533333333E7], [1.72857132E12, 3.4371372233333334E7], [1.7285691E12, 1.9965014033333335E7], [1.72857558E12, 5.013600928333333E7], [1.72857642E12, 5.481438263333333E7], [1.72857078E12, 3.435390471666667E7], [1.728573E12, 3.548913131666667E7], [1.72856976E12, 1.8891986416666668E7], [1.7285742E12, 4.9726744916666664E7], [1.72856856E12, 2.04079119E7], [1.72856958E12, 1.98110519E7], [1.7285718E12, 3.528379878333333E7], [1.7285754E12, 4.883989345E7], [1.72857318E12, 3.603308065E7], [1.72857402E12, 5.004954813333333E7], [1.72857624E12, 5.432989871666667E7], [1.72857726E12, 5.474380868333333E7], [1.72856772E12, 8731174.55], [1.72856994E12, 1.913539545E7], [1.72857216E12, 3.605825363333333E7], [1.72856874E12, 1.9588852466666665E7], [1.72857198E12, 3.605746353333333E7], [1.72857522E12, 4.926859218333333E7], [1.72857744E12, 5.4066673483333334E7], [1.72857096E12, 3.6834602016666666E7], [1.72857384E12, 5.013408375E7], [1.7285682E12, 1.944182095E7], [1.72857042E12, 1.9558810833333332E7], [1.72857264E12, 3.551871165E7], [1.72857486E12, 4.85257086E7], [1.72857708E12, 5.012817738333333E7], [1.72857246E12, 3.630745746666667E7], [1.72857504E12, 4.68970625E7], [1.72857606E12, 5.480206725E7], [1.72856922E12, 1.89735802E7], [1.72857144E12, 3.60831328E7], [1.7285706E12, 1.7236926033333335E7], [1.7285769E12, 5.468384836666667E7], [1.72856838E12, 1.8913723116666667E7], [1.72857282E12, 3.731480521666667E7], [1.72857468E12, 4.802689895E7], [1.7285694E12, 1.7707847133333333E7], [1.72857162E12, 3.617968136666667E7], [1.72857366E12, 4.865332565E7], [1.72857588E12, 5.5071864916666664E7], [1.72857108E12, 3.468752695E7], [1.7285745E12, 4.84319833E7], [1.72857672E12, 5.37883447E7], [1.72856784E12, 8722726.533333333], [1.72856886E12, 1.9288922566666666E7], [1.7285733E12, 3.580604165E7], [1.72856988E12, 1.9188153766666666E7], [1.7285757E12, 3.601402563333333E7], [1.7285721E12, 3.5442546416666664E7], [1.72857348E12, 4.874587111666667E7], [1.72856802E12, 9083863.116666667], [1.72857126E12, 3.543024931666667E7], [1.72857432E12, 5.0095653016666666E7], [1.72857756E12, 1750148.6333333333], [1.72857024E12, 1.8453539633333333E7], [1.72857534E12, 4.9084973483333334E7], [1.72856904E12, 1.8935509666666668E7], [1.72857006E12, 1.9611576733333334E7], [1.72857228E12, 3.4360887E7], [1.72857552E12, 4.827820393333333E7], [1.72857654E12, 5.444609935E7], [1.7285685E12, 2.0561480516666666E7], [1.72857738E12, 5.2883510516666666E7], [1.72857174E12, 3.568814936666667E7], [1.72857072E12, 3.602318413333333E7], [1.72857516E12, 4.84895002E7], [1.72857054E12, 1.7786823283333335E7], [1.72857276E12, 3.54319887E7], [1.72856952E12, 1.87026303E7], [1.72857414E12, 4.861493045E7], [1.72857636E12, 5.505210828333333E7], [1.72857498E12, 4.7936877083333336E7], [1.7285772E12, 5.1468636483333334E7], [1.72856868E12, 1.976398445E7], [1.7285709E12, 3.7360144666666664E7], [1.72857312E12, 3.546826445E7], [1.72857294E12, 3.5956021166666664E7], [1.72857618E12, 5.5311267516666666E7], [1.72857396E12, 4.8586083016666666E7], [1.7285697E12, 1.8910988583333332E7], [1.72857192E12, 3.510852695E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7285748E12, 0.0], [1.72856916E12, 0.0], [1.72857138E12, 0.0], [1.72857582E12, 0.0], [1.72857378E12, 0.0], [1.728576E12, 0.0], [1.72857702E12, 0.0], [1.7285724E12, 0.0], [1.72856796E12, 0.0], [1.72857018E12, 0.0], [1.72856832E12, 0.0], [1.72856934E12, 0.0], [1.72857156E12, 0.0], [1.72857342E12, 0.0], [1.72857564E12, 0.0], [1.72857036E12, 0.0], [1.7285736E12, 0.0], [1.72856814E12, 0.0], [1.72857258E12, 0.0], [1.72857462E12, 0.0], [1.72857684E12, 0.0], [1.72857546E12, 0.0], [1.7285688E12, 0.0], [1.72856982E12, 0.0], [1.72857204E12, 0.0], [1.72857084E12, 0.0], [1.72857666E12, 0.0], [1.72856862E12, 0.0], [1.72857306E12, 0.0], [1.72857444E12, 0.0], [1.72856898E12, 0.0], [1.72857528E12, 0.0], [1.72857222E12, 0.0], [1.7285712E12, 0.0], [1.7285763E12, 0.0], [1.72856778E12, 0.0], [1.72857102E12, 0.0], [1.72857324E12, 0.0], [1.72857426E12, 0.0], [1.72857648E12, 0.0], [1.7285775E12, 0.0], [1.72857E12, 0.0], [1.7285727E12, 0.0], [1.72856946E12, 0.0], [1.72857168E12, 0.0], [1.7285739E12, 0.0], [1.72857612E12, 0.0], [1.72856826E12, 0.0], [1.7285715E12, 0.0], [1.72857408E12, 0.0], [1.72857048E12, 0.0], [1.7285751E12, 0.0], [1.72857732E12, 0.0], [1.72856964E12, 0.0], [1.72857594E12, 0.0], [1.72857186E12, 0.0], [1.72857372E12, 0.0], [1.72857714E12, 0.0], [1.72857492E12, 0.0], [1.72856844E12, 0.0], [1.72857066E12, 0.0], [1.72857288E12, 0.0], [1.72857012E12, 0.0], [1.72857354E12, 0.0], [1.72857576E12, 0.0], [1.72857234E12, 0.0], [1.72857678E12, 0.0], [1.7285679E12, 0.0], [1.72857474E12, 0.0], [1.72857696E12, 0.0], [1.72856892E12, 0.0], [1.72857114E12, 0.0], [1.72857336E12, 0.0], [1.7285703E12, 0.0], [1.72857252E12, 0.0], [1.72856928E12, 0.0], [1.7285766E12, 0.0], [1.72857438E12, 0.0], [1.72857456E12, 0.0], [1.72856808E12, 0.0], [1.72857132E12, 0.0], [1.7285691E12, 0.0], [1.72857558E12, 0.0], [1.72857642E12, 0.0], [1.72857078E12, 0.0], [1.728573E12, 0.0], [1.72856976E12, 0.0], [1.7285742E12, 0.0], [1.72856856E12, 0.0], [1.72856958E12, 0.0], [1.7285718E12, 0.0], [1.7285754E12, 0.0], [1.72857318E12, 0.0], [1.72857402E12, 0.0], [1.72857624E12, 0.0], [1.72857726E12, 0.0], [1.72856772E12, 0.0], [1.72856994E12, 0.0], [1.72857216E12, 0.0], [1.72856874E12, 0.0], [1.72857198E12, 0.0], [1.72857522E12, 0.0], [1.72857744E12, 0.0], [1.72857096E12, 0.0], [1.72857384E12, 0.0], [1.7285682E12, 0.0], [1.72857042E12, 0.0], [1.72857264E12, 0.0], [1.72857486E12, 0.0], [1.72857708E12, 0.0], [1.72857246E12, 0.0], [1.72857504E12, 0.0], [1.72857606E12, 0.0], [1.72856922E12, 0.0], [1.72857144E12, 0.0], [1.7285706E12, 0.0], [1.7285769E12, 0.0], [1.72856838E12, 0.0], [1.72857282E12, 0.0], [1.72857468E12, 0.0], [1.7285694E12, 0.0], [1.72857162E12, 0.0], [1.72857366E12, 0.0], [1.72857588E12, 0.0], [1.72857108E12, 0.0], [1.7285745E12, 0.0], [1.72857672E12, 0.0], [1.72856784E12, 0.0], [1.72856886E12, 0.0], [1.7285733E12, 0.0], [1.72856988E12, 0.0], [1.7285757E12, 0.0], [1.7285721E12, 0.0], [1.72857348E12, 0.0], [1.72856802E12, 0.0], [1.72857126E12, 0.0], [1.72857432E12, 0.0], [1.72857756E12, 0.0], [1.72857024E12, 0.0], [1.72857534E12, 0.0], [1.72856904E12, 0.0], [1.72857006E12, 0.0], [1.72857228E12, 0.0], [1.72857552E12, 0.0], [1.72857654E12, 0.0], [1.7285685E12, 0.0], [1.72857738E12, 0.0], [1.72857174E12, 0.0], [1.72857072E12, 0.0], [1.72857516E12, 0.0], [1.72857054E12, 0.0], [1.72857276E12, 0.0], [1.72856952E12, 0.0], [1.72857414E12, 0.0], [1.72857636E12, 0.0], [1.72857498E12, 0.0], [1.7285772E12, 0.0], [1.72856868E12, 0.0], [1.7285709E12, 0.0], [1.72857312E12, 0.0], [1.72857294E12, 0.0], [1.72857618E12, 0.0], [1.72857396E12, 0.0], [1.7285697E12, 0.0], [1.72857192E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72857756E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 572.9616613418532, "minX": 1.72856772E12, "maxY": 1011.741596638655, "series": [{"data": [[1.7285748E12, 745.2526096033398], [1.72856916E12, 624.4360313315925], [1.72857138E12, 654.9098360655734], [1.72857582E12, 901.320224719101], [1.72857378E12, 763.3460317460318], [1.728576E12, 883.9043238270468], [1.72857702E12, 897.270346117867], [1.7285724E12, 695.181556195965], [1.72856796E12, 647.6195652173918], [1.72857018E12, 698.4110787172017], [1.72856832E12, 592.3654320987653], [1.72856934E12, 585.441463414634], [1.72857156E12, 700.5550724637678], [1.72857342E12, 668.6392156862743], [1.72857564E12, 733.9150326797385], [1.72857036E12, 671.6292134831459], [1.7285736E12, 736.1340839303992], [1.72856814E12, 629.5695538057748], [1.72857258E12, 652.6761904761905], [1.72857462E12, 768.471153846154], [1.72857684E12, 970.1070707070701], [1.72857546E12, 767.1693290734826], [1.7285688E12, 690.7321937321939], [1.72856982E12, 614.056701030928], [1.72857204E12, 726.0650529500768], [1.72857084E12, 669.1468531468528], [1.72857666E12, 877.1694139194126], [1.72856862E12, 604.0755667506307], [1.72857306E12, 696.0072046109501], [1.72857444E12, 764.829242262539], [1.72856898E12, 626.0129870129872], [1.72857528E12, 728.241134751773], [1.72857222E12, 670.7815126050409], [1.7285712E12, 636.9721485411131], [1.7285763E12, 897.7516279069773], [1.72856778E12, 607.3045685279185], [1.72857102E12, 689.9769784172663], [1.72857324E12, 683.8293029871977], [1.72857426E12, 751.6317427385883], [1.72857648E12, 906.7719962157057], [1.7285775E12, 716.4308823529412], [1.72857E12, 626.6868421052629], [1.7285727E12, 639.3829787234046], [1.72856946E12, 650.2000000000002], [1.72857168E12, 659.9986338797797], [1.7285739E12, 754.1239583333333], [1.72857612E12, 921.4741379310356], [1.72856826E12, 669.5277777777776], [1.7285715E12, 702.9719764011802], [1.72857408E12, 700.8178294573646], [1.72857048E12, 574.5035971223018], [1.7285751E12, 726.9918946301922], [1.72857732E12, 1011.741596638655], [1.72856964E12, 637.5893333333335], [1.72857594E12, 861.4203420342039], [1.72857186E12, 665.6175243393598], [1.72857372E12, 762.686772486772], [1.72857714E12, 933.4365234374992], [1.72857492E12, 745.6877593360997], [1.72856844E12, 674.5937500000005], [1.72857066E12, 668.0932835820897], [1.72857288E12, 685.6914285714281], [1.72857012E12, 686.8685714285716], [1.72857354E12, 724.0460921843694], [1.72857576E12, 873.1454545454545], [1.72857234E12, 682.9159544159552], [1.72857678E12, 923.899232245682], [1.7285679E12, 635.4550264550261], [1.72857474E12, 718.7432835820896], [1.72857696E12, 942.345365853659], [1.72856892E12, 635.8412698412698], [1.72857114E12, 689.4512893982808], [1.72857336E12, 696.347891566265], [1.7285703E12, 667.0083102493074], [1.72857252E12, 667.4757281553402], [1.72856928E12, 641.2917771883285], [1.7285766E12, 892.5399628252782], [1.72857438E12, 795.1701657458557], [1.72857456E12, 745.8373056994822], [1.72856808E12, 572.9616613418532], [1.72857132E12, 644.7267833109017], [1.7285691E12, 676.7359550561791], [1.72857558E12, 782.7152173913033], [1.72857642E12, 937.1313229571977], [1.72857078E12, 652.7673469387767], [1.728573E12, 678.1697312588402], [1.72856976E12, 639.7887700534759], [1.7285742E12, 743.5211995863507], [1.72856856E12, 632.4855643044611], [1.72856958E12, 658.3452054794523], [1.7285718E12, 633.7067371202107], [1.7285754E12, 693.3536231884062], [1.72857318E12, 682.6420454545447], [1.72857402E12, 748.0155601659745], [1.72857624E12, 887.9916897506922], [1.72857726E12, 885.2610294117643], [1.72856772E12, 681.203821656051], [1.72856994E12, 592.7586206896559], [1.72857216E12, 701.796486090776], [1.72856874E12, 665.1197771587744], [1.72857198E12, 690.9396551724135], [1.72857522E12, 756.4747899159654], [1.72857744E12, 848.6996370235934], [1.72857096E12, 648.918918918919], [1.72857384E12, 790.3807947019867], [1.7285682E12, 622.1428571428567], [1.72857042E12, 641.4026666666668], [1.72857264E12, 690.406340057637], [1.72857486E12, 739.2507645259947], [1.72857708E12, 901.3292682926825], [1.72857246E12, 678.6269503546097], [1.72857504E12, 729.1700201207242], [1.72857606E12, 877.741758241757], [1.72856922E12, 639.5668449197864], [1.72857144E12, 694.1902017291065], [1.7285706E12, 615.2376811594202], [1.7285769E12, 893.3669467787114], [1.72856838E12, 658.8898071625345], [1.72857282E12, 727.84696969697], [1.72857468E12, 719.1621621621626], [1.7285694E12, 614.5], [1.72857162E12, 688.1228323699423], [1.72857366E12, 757.4303797468355], [1.72857588E12, 878.3809523809518], [1.72857108E12, 675.1499292786417], [1.7285745E12, 709.7058823529431], [1.72857672E12, 948.5262636273537], [1.72856784E12, 613.0103092783503], [1.72856886E12, 665.2290502793298], [1.7285733E12, 696.71052631579], [1.72856988E12, 677.1011235955053], [1.7285757E12, 788.3279132791331], [1.7285721E12, 694.9827089337173], [1.72857348E12, 718.3473053892214], [1.72856802E12, 648.2150537634409], [1.72857126E12, 725.1087613293058], [1.72857432E12, 727.7312373225155], [1.72857756E12, 900.7391304347826], [1.72857024E12, 617.9123711340204], [1.72857534E12, 745.7921406411593], [1.72856904E12, 617.7751937984502], [1.72857006E12, 677.9943661971834], [1.72857228E12, 663.8305555555546], [1.72857552E12, 748.6413721413733], [1.72857654E12, 853.7202486678499], [1.7285685E12, 636.0026315789473], [1.72857738E12, 909.5314285714275], [1.72857174E12, 706.1764705882348], [1.72857072E12, 730.51593323217], [1.72857516E12, 786.7099236641217], [1.72857054E12, 622.5181347150258], [1.72857276E12, 691.3809523809518], [1.72856952E12, 617.7700258397932], [1.72857414E12, 755.4546413502115], [1.72857636E12, 896.3956766917289], [1.72857498E12, 757.4118268215426], [1.7285772E12, 900.8370998116758], [1.72856868E12, 674.3615819209041], [1.7285709E12, 675.7882187938294], [1.72857312E12, 698.5219298245614], [1.72857294E12, 699.6275659824048], [1.72857618E12, 914.4822966507179], [1.72857396E12, 755.9376321353063], [1.7285697E12, 641.6622340425536], [1.72857192E12, 701.5461200585644]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72857756E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 396.6389776357828, "minX": 1.72856772E12, "maxY": 684.2920168067219, "series": [{"data": [[1.7285748E12, 506.73590814196297], [1.72856916E12, 426.8276762402092], [1.72857138E12, 456.84972677595573], [1.72857582E12, 607.4962546816474], [1.72857378E12, 517.8857142857146], [1.728576E12, 600.0036798528068], [1.72857702E12, 606.7923292797011], [1.7285724E12, 475.8933717579247], [1.72856796E12, 446.2010869565217], [1.72857018E12, 476.00291545189486], [1.72856832E12, 410.71111111111105], [1.72856934E12, 401.21707317073185], [1.72857156E12, 483.1028985507245], [1.72857342E12, 458.4549019607842], [1.72857564E12, 502.2440087145974], [1.72857036E12, 464.1095505617976], [1.7285736E12, 502.0286591606959], [1.72856814E12, 434.43307086614146], [1.72857258E12, 454.15510204081664], [1.72857462E12, 523.3076923076917], [1.72857684E12, 654.8464646464652], [1.72857546E12, 518.753993610223], [1.7285688E12, 475.64672364672356], [1.72856982E12, 427.51804123711315], [1.72857204E12, 500.86081694402435], [1.72857084E12, 461.7776223776225], [1.72857666E12, 594.4871794871791], [1.72856862E12, 420.21662468513836], [1.72857306E12, 478.52593659942397], [1.72857444E12, 527.6766275346855], [1.72856898E12, 430.7506493506496], [1.72857528E12, 496.46504559270454], [1.72857222E12, 463.14005602240917], [1.7285712E12, 437.32625994694934], [1.7285763E12, 602.8716279069763], [1.72856778E12, 412.9796954314722], [1.72857102E12, 474.8316546762588], [1.72857324E12, 470.76102418207665], [1.72857426E12, 512.3454356846477], [1.72857648E12, 614.3973509933775], [1.7285775E12, 492.34411764705845], [1.72857E12, 426.8], [1.7285727E12, 441.2739361702128], [1.72856946E12, 452.3432432432431], [1.72857168E12, 454.7581967213118], [1.7285739E12, 510.3489583333332], [1.72857612E12, 619.3007662835258], [1.72856826E12, 461.5583333333333], [1.7285715E12, 486.0029498525069], [1.72857408E12, 480.08817829457365], [1.72857048E12, 399.2446043165467], [1.7285751E12, 499.4539007092202], [1.72857732E12, 684.2920168067219], [1.72856964E12, 434.7813333333335], [1.72857594E12, 586.8766876687666], [1.72857186E12, 458.17385257301794], [1.72857372E12, 517.8931216931225], [1.72857714E12, 630.1064453124994], [1.72857492E12, 502.15145228215704], [1.72856844E12, 466.2897727272728], [1.72857066E12, 458.044776119403], [1.72857288E12, 468.38571428571447], [1.72857012E12, 473.92285714285697], [1.72857354E12, 493.74148296593205], [1.72857576E12, 598.0800000000005], [1.72857234E12, 468.97150997151016], [1.72857678E12, 625.095009596928], [1.7285679E12, 437.99470899470896], [1.72857474E12, 483.72238805970176], [1.72857696E12, 635.6029268292683], [1.72856892E12, 437.1402116402117], [1.72857114E12, 471.7220630372494], [1.72857336E12, 475.6490963855423], [1.7285703E12, 468.1828254847644], [1.72857252E12, 457.1900138696253], [1.72856928E12, 436.9761273209546], [1.7285766E12, 608.4460966542754], [1.72857438E12, 538.9569060773481], [1.72857456E12, 510.14300518134763], [1.72856808E12, 396.6389776357828], [1.72857132E12, 447.99327052489883], [1.7285691E12, 464.89325842696616], [1.72857558E12, 530.3934782608709], [1.72857642E12, 628.9844357976658], [1.72857078E12, 454.51564625850324], [1.728573E12, 466.98868458274427], [1.72856976E12, 442.398395721925], [1.7285742E12, 505.34643226473617], [1.72856856E12, 432.5170603674536], [1.72856958E12, 451.5479452054795], [1.7285718E12, 437.9194187582565], [1.7285754E12, 472.4318840579712], [1.72857318E12, 468.2130681818184], [1.72857402E12, 505.3195020746889], [1.72857624E12, 606.1532779316711], [1.72857726E12, 597.1084558823526], [1.72856772E12, 474.6496815286623], [1.72856994E12, 405.83743842364515], [1.72857216E12, 481.80087847730556], [1.72856874E12, 457.48467966573827], [1.72857198E12, 474.4870689655173], [1.72857522E12, 515.2090336134456], [1.72857744E12, 574.7667876588018], [1.72857096E12, 443.99459459459507], [1.72857384E12, 536.173289183223], [1.7285682E12, 429.16623376623363], [1.72857042E12, 437.9306666666665], [1.72857264E12, 476.9999999999997], [1.72857486E12, 505.6391437308868], [1.72857708E12, 620.1416510318951], [1.72857246E12, 465.01276595744685], [1.72857504E12, 501.11368209255517], [1.72857606E12, 592.0137362637361], [1.72856922E12, 441.82085561497337], [1.72857144E12, 476.680115273775], [1.7285706E12, 423.0028985507247], [1.7285769E12, 604.050420168067], [1.72856838E12, 457.47933884297515], [1.72857282E12, 495.0515151515152], [1.72857468E12, 492.676676676677], [1.7285694E12, 428.56410256410254], [1.72857162E12, 471.65028901734104], [1.72857366E12, 516.1518987341783], [1.72857588E12, 594.9093406593413], [1.72857108E12, 467.35219236209315], [1.7285745E12, 482.28627450980395], [1.72857672E12, 642.7849355797824], [1.72856784E12, 430.80927835051534], [1.72856886E12, 460.41340782122876], [1.7285733E12, 478.4926900584792], [1.72856988E12, 466.93258426966315], [1.7285757E12, 537.1937669376694], [1.7285721E12, 477.4610951008645], [1.72857348E12, 488.5928143712577], [1.72856802E12, 455.80645161290334], [1.72857126E12, 497.06042296072553], [1.72857432E12, 490.40060851926984], [1.72857756E12, 620.5217391304348], [1.72857024E12, 427.87628865979394], [1.72857534E12, 509.5387797311275], [1.72856904E12, 426.6795865633075], [1.72857006E12, 463.6591549295779], [1.72857228E12, 462.17083333333306], [1.72857552E12, 514.0738045738044], [1.72857654E12, 575.3667850799293], [1.7285685E12, 431.49473684210557], [1.72857738E12, 621.9180952380942], [1.72857174E12, 483.8573529411764], [1.72857072E12, 503.83156297420317], [1.72857516E12, 535.60850599782], [1.72857054E12, 435.8471502590671], [1.72857276E12, 473.20202020202], [1.72856952E12, 425.7441860465115], [1.72857414E12, 513.04746835443], [1.72857636E12, 607.3336466165415], [1.72857498E12, 513.5300950369585], [1.7285772E12, 617.9557438794731], [1.72856868E12, 462.6864406779662], [1.7285709E12, 460.5834502103782], [1.72857312E12, 480.69736842105226], [1.72857294E12, 478.29032258064495], [1.72857618E12, 615.4612440191389], [1.72857396E12, 516.1300211416491], [1.7285697E12, 442.41755319148916], [1.72857192E12, 483.8023426061491]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72857756E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72856772E12, "maxY": 4.9E-324, "series": [{"data": [[1.7285748E12, 0.0], [1.72856916E12, 0.0], [1.72857138E12, 0.0], [1.72857582E12, 0.0], [1.72857378E12, 0.0], [1.728576E12, 0.0], [1.72857702E12, 0.0], [1.7285724E12, 0.0], [1.72856796E12, 0.0], [1.72857018E12, 0.0], [1.72856832E12, 0.0], [1.72856934E12, 0.0], [1.72857156E12, 0.0], [1.72857342E12, 0.0], [1.72857564E12, 0.0], [1.72857036E12, 0.0], [1.7285736E12, 0.0], [1.72856814E12, 0.0], [1.72857258E12, 0.0], [1.72857462E12, 0.0], [1.72857684E12, 0.0], [1.72857546E12, 0.0], [1.7285688E12, 0.0], [1.72856982E12, 0.0], [1.72857204E12, 0.0], [1.72857084E12, 0.0], [1.72857666E12, 0.0], [1.72856862E12, 0.0], [1.72857306E12, 0.0], [1.72857444E12, 0.0], [1.72856898E12, 0.0], [1.72857528E12, 0.0], [1.72857222E12, 0.0], [1.7285712E12, 0.0], [1.7285763E12, 0.0], [1.72856778E12, 0.0], [1.72857102E12, 0.0], [1.72857324E12, 0.0], [1.72857426E12, 0.0], [1.72857648E12, 0.0], [1.7285775E12, 0.0], [1.72857E12, 0.0], [1.7285727E12, 0.0], [1.72856946E12, 0.0], [1.72857168E12, 0.0], [1.7285739E12, 0.0], [1.72857612E12, 0.0], [1.72856826E12, 0.0], [1.7285715E12, 0.0], [1.72857408E12, 0.0], [1.72857048E12, 0.0], [1.7285751E12, 0.0], [1.72857732E12, 0.0], [1.72856964E12, 0.0], [1.72857594E12, 0.0], [1.72857186E12, 0.0], [1.72857372E12, 0.0], [1.72857714E12, 0.0], [1.72857492E12, 0.0], [1.72856844E12, 0.0], [1.72857066E12, 0.0], [1.72857288E12, 0.0], [1.72857012E12, 0.0], [1.72857354E12, 0.0], [1.72857576E12, 0.0], [1.72857234E12, 0.0], [1.72857678E12, 0.0], [1.7285679E12, 0.0], [1.72857474E12, 0.0], [1.72857696E12, 0.0], [1.72856892E12, 0.0], [1.72857114E12, 0.0], [1.72857336E12, 0.0], [1.7285703E12, 0.0], [1.72857252E12, 0.0], [1.72856928E12, 0.0], [1.7285766E12, 0.0], [1.72857438E12, 0.0], [1.72857456E12, 0.0], [1.72856808E12, 0.0], [1.72857132E12, 0.0], [1.7285691E12, 0.0], [1.72857558E12, 0.0], [1.72857642E12, 0.0], [1.72857078E12, 0.0], [1.728573E12, 0.0], [1.72856976E12, 0.0], [1.7285742E12, 0.0], [1.72856856E12, 0.0], [1.72856958E12, 0.0], [1.7285718E12, 0.0], [1.7285754E12, 0.0], [1.72857318E12, 0.0], [1.72857402E12, 0.0], [1.72857624E12, 0.0], [1.72857726E12, 0.0], [1.72856772E12, 0.0], [1.72856994E12, 0.0], [1.72857216E12, 0.0], [1.72856874E12, 0.0], [1.72857198E12, 0.0], [1.72857522E12, 0.0], [1.72857744E12, 0.0], [1.72857096E12, 0.0], [1.72857384E12, 0.0], [1.7285682E12, 0.0], [1.72857042E12, 0.0], [1.72857264E12, 0.0], [1.72857486E12, 0.0], [1.72857708E12, 0.0], [1.72857246E12, 0.0], [1.72857504E12, 0.0], [1.72857606E12, 0.0], [1.72856922E12, 0.0], [1.72857144E12, 0.0], [1.7285706E12, 0.0], [1.7285769E12, 0.0], [1.72856838E12, 0.0], [1.72857282E12, 0.0], [1.72857468E12, 0.0], [1.7285694E12, 0.0], [1.72857162E12, 0.0], [1.72857366E12, 0.0], [1.72857588E12, 0.0], [1.72857108E12, 0.0], [1.7285745E12, 0.0], [1.72857672E12, 0.0], [1.72856784E12, 0.0], [1.72856886E12, 0.0], [1.7285733E12, 0.0], [1.72856988E12, 0.0], [1.7285757E12, 0.0], [1.7285721E12, 0.0], [1.72857348E12, 0.0], [1.72856802E12, 0.0], [1.72857126E12, 0.0], [1.72857432E12, 0.0], [1.72857756E12, 0.0], [1.72857024E12, 0.0], [1.72857534E12, 0.0], [1.72856904E12, 0.0], [1.72857006E12, 0.0], [1.72857228E12, 0.0], [1.72857552E12, 0.0], [1.72857654E12, 0.0], [1.7285685E12, 0.0], [1.72857738E12, 0.0], [1.72857174E12, 0.0], [1.72857072E12, 0.0], [1.72857516E12, 0.0], [1.72857054E12, 0.0], [1.72857276E12, 0.0], [1.72856952E12, 0.0], [1.72857414E12, 0.0], [1.72857636E12, 0.0], [1.72857498E12, 0.0], [1.7285772E12, 0.0], [1.72856868E12, 0.0], [1.7285709E12, 0.0], [1.72857312E12, 0.0], [1.72857294E12, 0.0], [1.72857618E12, 0.0], [1.72857396E12, 0.0], [1.7285697E12, 0.0], [1.72857192E12, 0.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72857756E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 45.0, "minX": 1.72856772E12, "maxY": 4248.0, "series": [{"data": [[1.7285748E12, 2861.0], [1.72856916E12, 2376.0], [1.72857138E12, 2828.0], [1.72857582E12, 3766.0], [1.72857378E12, 3124.0], [1.728576E12, 3741.0], [1.72857702E12, 3863.0], [1.7285724E12, 2619.0], [1.72856796E12, 2074.0], [1.72857018E12, 2171.0], [1.72856832E12, 2653.0], [1.72856934E12, 2480.0], [1.72857156E12, 2693.0], [1.72857342E12, 2456.0], [1.72857564E12, 2700.0], [1.72857036E12, 2581.0], [1.7285736E12, 2743.0], [1.72856814E12, 1997.0], [1.72857258E12, 2612.0], [1.72857462E12, 2971.0], [1.72857684E12, 3762.0], [1.72857546E12, 3066.0], [1.7285688E12, 1949.0], [1.72856982E12, 2098.0], [1.72857204E12, 2823.0], [1.72857084E12, 2598.0], [1.72857666E12, 3240.0], [1.72856862E12, 2215.0], [1.72857306E12, 2875.0], [1.72857444E12, 3157.0], [1.72856898E12, 2216.0], [1.72857528E12, 2974.0], [1.72857222E12, 2796.0], [1.7285712E12, 2545.0], [1.7285763E12, 3793.0], [1.72856778E12, 2092.0], [1.72857102E12, 2647.0], [1.72857324E12, 2681.0], [1.72857426E12, 2723.0], [1.72857648E12, 3945.0], [1.7285775E12, 3166.0], [1.72857E12, 2168.0], [1.7285727E12, 2524.0], [1.72856946E12, 2001.0], [1.72857168E12, 2683.0], [1.7285739E12, 2652.0], [1.72857612E12, 3971.0], [1.72856826E12, 1921.0], [1.7285715E12, 2628.0], [1.72857408E12, 2867.0], [1.72857048E12, 2008.0], [1.7285751E12, 3144.0], [1.72857732E12, 4248.0], [1.72856964E12, 2522.0], [1.72857594E12, 3451.0], [1.72857186E12, 2345.0], [1.72857372E12, 2980.0], [1.72857714E12, 3747.0], [1.72857492E12, 2953.0], [1.72856844E12, 2225.0], [1.72857066E12, 2062.0], [1.72857288E12, 2799.0], [1.72857012E12, 2657.0], [1.72857354E12, 3086.0], [1.72857576E12, 3769.0], [1.72857234E12, 2631.0], [1.72857678E12, 3998.0], [1.7285679E12, 2616.0], [1.72857474E12, 2767.0], [1.72857696E12, 4001.0], [1.72856892E12, 2276.0], [1.72857114E12, 2534.0], [1.72857336E12, 2635.0], [1.7285703E12, 2768.0], [1.72857252E12, 2434.0], [1.72856928E12, 2653.0], [1.7285766E12, 3346.0], [1.72857438E12, 3014.0], [1.72857456E12, 3071.0], [1.72856808E12, 2168.0], [1.72857132E12, 2701.0], [1.7285691E12, 2689.0], [1.72857558E12, 3245.0], [1.72857642E12, 4139.0], [1.72857078E12, 2784.0], [1.728573E12, 2348.0], [1.72856976E12, 2200.0], [1.7285742E12, 2646.0], [1.72856856E12, 2623.0], [1.72856958E12, 2534.0], [1.7285718E12, 2534.0], [1.7285754E12, 2746.0], [1.72857318E12, 2477.0], [1.72857402E12, 3007.0], [1.72857624E12, 3705.0], [1.72857726E12, 3273.0], [1.72856772E12, 2572.0], [1.72856994E12, 2150.0], [1.72857216E12, 2711.0], [1.72856874E12, 2565.0], [1.72857198E12, 2544.0], [1.72857522E12, 2737.0], [1.72857744E12, 3358.0], [1.72857096E12, 2470.0], [1.72857384E12, 3054.0], [1.7285682E12, 2304.0], [1.72857042E12, 2281.0], [1.72857264E12, 2561.0], [1.72857486E12, 2749.0], [1.72857708E12, 3628.0], [1.72857246E12, 2611.0], [1.72857504E12, 3019.0], [1.72857606E12, 3162.0], [1.72856922E12, 2487.0], [1.72857144E12, 2312.0], [1.7285706E12, 2296.0], [1.7285769E12, 3251.0], [1.72856838E12, 2035.0], [1.72857282E12, 2711.0], [1.72857468E12, 2885.0], [1.7285694E12, 2502.0], [1.72857162E12, 2734.0], [1.72857366E12, 2852.0], [1.72857588E12, 3374.0], [1.72857108E12, 2397.0], [1.7285745E12, 2683.0], [1.72857672E12, 3592.0], [1.72856784E12, 2046.0], [1.72856886E12, 2093.0], [1.7285733E12, 2917.0], [1.72856988E12, 2230.0], [1.7285757E12, 3068.0], [1.7285721E12, 2423.0], [1.72857348E12, 2689.0], [1.72856802E12, 1939.0], [1.72857126E12, 2828.0], [1.72857432E12, 3225.0], [1.72857756E12, 1558.0], [1.72857024E12, 2373.0], [1.72857534E12, 2959.0], [1.72856904E12, 2599.0], [1.72857006E12, 2743.0], [1.72857228E12, 2363.0], [1.72857552E12, 2869.0], [1.72857654E12, 3862.0], [1.7285685E12, 2277.0], [1.72857738E12, 3754.0], [1.72857174E12, 2437.0], [1.72857072E12, 2499.0], [1.72857516E12, 2927.0], [1.72857054E12, 2546.0], [1.72857276E12, 2509.0], [1.72856952E12, 2097.0], [1.72857414E12, 3174.0], [1.72857636E12, 3722.0], [1.72857498E12, 3415.0], [1.7285772E12, 3438.0], [1.72856868E12, 2524.0], [1.7285709E12, 2444.0], [1.72857312E12, 2885.0], [1.72857294E12, 2439.0], [1.72857618E12, 3486.0], [1.72857396E12, 3171.0], [1.7285697E12, 1928.0], [1.72857192E12, 2658.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7285748E12, 1612.2], [1.72856916E12, 1279.2], [1.72857138E12, 1424.2000000000003], [1.72857582E12, 1941.6000000000001], [1.72857378E12, 1641.8], [1.728576E12, 1903.0], [1.72857702E12, 1944.0], [1.7285724E12, 1481.0], [1.72856796E12, 1355.5], [1.72857018E12, 1519.0], [1.72856832E12, 1278.8000000000002], [1.72856934E12, 1329.4000000000005], [1.72857156E12, 1444.9999999999998], [1.72857342E12, 1495.2], [1.72857564E12, 1572.6000000000001], [1.72857036E12, 1373.8000000000002], [1.7285736E12, 1592.2], [1.72856814E12, 1306.4], [1.72857258E12, 1428.3999999999996], [1.72857462E12, 1619.3000000000002], [1.72857684E12, 2013.1999999999996], [1.72857546E12, 1602.0], [1.7285688E12, 1416.8], [1.72856982E12, 1328.0], [1.72857204E12, 1488.8000000000002], [1.72857084E12, 1416.1999999999998], [1.72857666E12, 1899.7000000000005], [1.72856862E12, 1279.8], [1.72857306E12, 1431.0], [1.72857444E12, 1582.2], [1.72856898E12, 1316.2000000000007], [1.72857528E12, 1604.8000000000002], [1.72857222E12, 1461.5], [1.7285712E12, 1423.5], [1.7285763E12, 1918.8], [1.72856778E12, 1329.4000000000005], [1.72857102E12, 1505.1999999999998], [1.72857324E12, 1430.0000000000005], [1.72857426E12, 1628.5], [1.72857648E12, 1941.0], [1.7285775E12, 1539.9], [1.72857E12, 1314.800000000001], [1.7285727E12, 1383.8000000000002], [1.72856946E12, 1401.9], [1.72857168E12, 1430.8000000000006], [1.7285739E12, 1685.9], [1.72857612E12, 1972.0], [1.72856826E12, 1416.6000000000001], [1.7285715E12, 1491.0], [1.72857408E12, 1545.4], [1.72857048E12, 1271.0], [1.7285751E12, 1568.4000000000003], [1.72857732E12, 2155.4], [1.72856964E12, 1424.8000000000004], [1.72857594E12, 1859.6000000000001], [1.72857186E12, 1423.0], [1.72857372E12, 1552.4], [1.72857714E12, 2021.0], [1.72857492E12, 1670.5], [1.72856844E12, 1335.7999999999997], [1.72857066E12, 1467.8], [1.72857288E12, 1495.9], [1.72857012E12, 1424.5000000000005], [1.72857354E12, 1565.0], [1.72857576E12, 1907.6], [1.72857234E12, 1463.4], [1.72857678E12, 2004.5000000000002], [1.7285679E12, 1430.0], [1.72857474E12, 1614.0], [1.72857696E12, 1962.1999999999998], [1.72856892E12, 1383.0], [1.72857114E12, 1535.2], [1.72857336E12, 1494.5], [1.7285703E12, 1357.8000000000002], [1.72857252E12, 1396.8000000000004], [1.72856928E12, 1371.0], [1.7285766E12, 1901.9], [1.72857438E12, 1712.4], [1.72857456E12, 1602.0], [1.72856808E12, 1246.4000000000005], [1.72857132E12, 1348.0], [1.7285691E12, 1402.9], [1.72857558E12, 1668.5], [1.72857642E12, 2001.2], [1.72857078E12, 1388.4], [1.728573E12, 1460.2000000000003], [1.72856976E12, 1388.0], [1.7285742E12, 1626.0000000000005], [1.72856856E12, 1361.6000000000001], [1.72856958E12, 1407.4000000000005], [1.7285718E12, 1391.0000000000002], [1.7285754E12, 1520.0], [1.72857318E12, 1431.0], [1.72857402E12, 1604.5], [1.72857624E12, 1868.6], [1.72857726E12, 1915.2], [1.72856772E12, 1514.0000000000005], [1.72856994E12, 1344.1000000000001], [1.72857216E12, 1486.2000000000003], [1.72856874E12, 1412.0], [1.72857198E12, 1464.0], [1.72857522E12, 1563.8000000000002], [1.72857744E12, 1858.9000000000003], [1.72857096E12, 1401.0], [1.72857384E12, 1637.900000000001], [1.7285682E12, 1363.2000000000007], [1.72857042E12, 1391.2000000000012], [1.72857264E12, 1513.0], [1.72857486E12, 1559.0000000000007], [1.72857708E12, 1929.9], [1.72857246E12, 1483.0], [1.72857504E12, 1560.5], [1.72857606E12, 1852.1000000000001], [1.72856922E12, 1309.0], [1.72857144E12, 1447.0], [1.7285706E12, 1307.2000000000005], [1.7285769E12, 1903.8000000000002], [1.72856838E12, 1386.0000000000005], [1.72857282E12, 1532.9], [1.72857468E12, 1539.0], [1.7285694E12, 1334.2000000000003], [1.72857162E12, 1464.4], [1.72857366E12, 1615.1], [1.72857588E12, 1888.7], [1.72857108E12, 1393.4], [1.7285745E12, 1594.3999999999999], [1.72857672E12, 1957.0], [1.72856784E12, 1316.0], [1.72856886E12, 1380.0000000000007], [1.7285733E12, 1460.5], [1.72856988E12, 1431.5000000000002], [1.7285757E12, 1678.7000000000003], [1.7285721E12, 1422.5], [1.72857348E12, 1588.4], [1.72856802E12, 1422.8000000000002], [1.72857126E12, 1496.2000000000003], [1.72857432E12, 1588.6000000000001], [1.72857756E12, 1539.0], [1.72857024E12, 1359.3000000000002], [1.72857534E12, 1582.4], [1.72856904E12, 1348.0], [1.72857006E12, 1462.4], [1.72857228E12, 1448.9], [1.72857552E12, 1560.8000000000002], [1.72857654E12, 1955.2000000000003], [1.7285685E12, 1352.9], [1.72857738E12, 1900.8], [1.72857174E12, 1527.6999999999998], [1.72857072E12, 1593.0], [1.72857516E12, 1671.2], [1.72857054E12, 1317.0], [1.72857276E12, 1464.8000000000002], [1.72856952E12, 1383.1999999999998], [1.72857414E12, 1618.0], [1.72857636E12, 1889.0], [1.72857498E12, 1607.2], [1.7285772E12, 1941.4], [1.72856868E12, 1441.5], [1.7285709E12, 1469.0], [1.72857312E12, 1501.5], [1.72857294E12, 1441.0], [1.72857618E12, 1953.3999999999996], [1.72857396E12, 1607.0], [1.7285697E12, 1381.6], [1.72857192E12, 1448.8000000000002]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7285748E12, 2299.64], [1.72856916E12, 2026.079999999995], [1.72857138E12, 2049.589999999997], [1.72857582E12, 2954.7299999999955], [1.72857378E12, 2397.3999999999996], [1.728576E12, 2720.479999999994], [1.72857702E12, 3025.8999999999996], [1.7285724E12, 2217.199999999998], [1.72856796E12, 2068.9], [1.72857018E12, 1982.1200000000001], [1.72856832E12, 1975.2799999999997], [1.72856934E12, 2095.819999999998], [1.72857156E12, 2096.36], [1.72857342E12, 2240.44], [1.72857564E12, 2308.959999999999], [1.72857036E12, 1954.3400000000001], [1.7285736E12, 2238.66], [1.72856814E12, 1882.3000000000009], [1.72857258E12, 2149.2], [1.72857462E12, 2588.68], [1.72857684E12, 2941.5300000000007], [1.72857546E12, 2588.800000000002], [1.7285688E12, 1840.2800000000007], [1.72856982E12, 1966.3400000000013], [1.72857204E12, 2165.46], [1.72857084E12, 2018.7600000000011], [1.72857666E12, 2659.5399999999986], [1.72856862E12, 1934.4599999999996], [1.72857306E12, 2265.3999999999987], [1.72857444E12, 2325.86], [1.72856898E12, 1929.12], [1.72857528E12, 2418.44], [1.72857222E12, 2116.7], [1.7285712E12, 2007.8500000000042], [1.7285763E12, 3021.84], [1.72856778E12, 2062.6000000000004], [1.72857102E12, 2197.3599999999988], [1.72857324E12, 2200.6400000000003], [1.72857426E12, 2476.05], [1.72857648E12, 2968.8200000000015], [1.7285775E12, 2442.2999999999956], [1.72857E12, 1742.52], [1.7285727E12, 1975.0], [1.72856946E12, 1961.0500000000009], [1.72857168E12, 2096.0199999999995], [1.7285739E12, 2285.6299999999997], [1.72857612E12, 2989.649999999998], [1.72856826E12, 1860.5799999999997], [1.7285715E12, 2148.9400000000005], [1.72857408E12, 2326.409999999999], [1.72857048E12, 1840.4399999999996], [1.7285751E12, 2309.96], [1.72857732E12, 3049.4400000000014], [1.72856964E12, 2038.92], [1.72857594E12, 2752.5199999999995], [1.72857186E12, 1987.3999999999996], [1.72857372E12, 2388.0999999999976], [1.72857714E12, 2982.75], [1.72857492E12, 2451.0], [1.72856844E12, 2092.959999999998], [1.72857066E12, 2006.1], [1.72857288E12, 2344.78], [1.72857012E12, 2347.920000000002], [1.72857354E12, 2287.04], [1.72857576E12, 2783.6800000000003], [1.72857234E12, 2143.2300000000014], [1.72857678E12, 2892.949999999998], [1.7285679E12, 2127.299999999997], [1.72857474E12, 2409.799999999999], [1.72857696E12, 3191.4], [1.72856892E12, 1827.9699999999968], [1.72857114E12, 2279.18], [1.72857336E12, 2096.3500000000013], [1.7285703E12, 1963.3399999999997], [1.72857252E12, 2174.0199999999995], [1.72856928E12, 2382.9599999999996], [1.7285766E12, 2781.040000000001], [1.72857438E12, 2510.979999999996], [1.72857456E12, 2280.4200000000005], [1.72856808E12, 1868.8600000000001], [1.72857132E12, 2080.3599999999997], [1.7285691E12, 2192.0300000000007], [1.72857558E12, 2355.1799999999985], [1.72857642E12, 2852.1900000000032], [1.72857078E12, 2224.84], [1.728573E12, 2062.279999999999], [1.72856976E12, 2136.5], [1.7285742E12, 2275.3199999999997], [1.72856856E12, 2066.0800000000004], [1.72856958E12, 2210.7199999999984], [1.7285718E12, 2045.1], [1.7285754E12, 2140.2000000000007], [1.72857318E12, 2007.6000000000013], [1.72857402E12, 2612.0500000000025], [1.72857624E12, 2794.480000000004], [1.72857726E12, 2964.33], [1.72856772E12, 2356.819999999995], [1.72856994E12, 1918.1100000000001], [1.72857216E12, 2248.1999999999994], [1.72856874E12, 2099.199999999997], [1.72857198E12, 2268.979999999998], [1.72857522E12, 2277.76], [1.72857744E12, 2646.6400000000003], [1.72857096E12, 2116.6000000000013], [1.72857384E12, 2343.58], [1.7285682E12, 1917.9599999999998], [1.72857042E12, 2111.6000000000004], [1.72857264E12, 2192.249999999999], [1.72857486E12, 2309.54], [1.72857708E12, 2859.279999999999], [1.72857246E12, 2075.8199999999997], [1.72857504E12, 2392.0], [1.72857606E12, 2754.1399999999935], [1.72856922E12, 1895.0], [1.72857144E12, 2088.2999999999997], [1.7285706E12, 1973.6200000000001], [1.7285769E12, 2801.9999999999986], [1.72856838E12, 1840.4800000000005], [1.72857282E12, 2184.29], [1.72857468E12, 2249.0], [1.7285694E12, 1854.669999999996], [1.72857162E12, 2306.9800000000005], [1.72857366E12, 2265.55], [1.72857588E12, 2940.7899999999936], [1.72857108E12, 2014.0399999999995], [1.7285745E12, 2404.4299999999994], [1.72857672E12, 2960.0999999999995], [1.72856784E12, 1961.450000000001], [1.72856886E12, 2060.05], [1.7285733E12, 2012.4999999999984], [1.72856988E12, 2180.7200000000003], [1.7285757E12, 2670.9000000000015], [1.7285721E12, 2125.3499999999976], [1.72857348E12, 2404.82], [1.72856802E12, 1812.8499999999995], [1.72857126E12, 2191.3900000000003], [1.72857432E12, 2270.69], [1.72857756E12, 1558.0], [1.72857024E12, 2009.22], [1.72857534E12, 2342.0], [1.72856904E12, 2164.0400000000013], [1.72857006E12, 2231.7599999999998], [1.72857228E12, 2029.8399999999965], [1.72857552E12, 2490.48], [1.72857654E12, 2835.38], [1.7285685E12, 1928.8899999999999], [1.72857738E12, 2881.37], [1.72857174E12, 2171.849999999999], [1.72857072E12, 2343.999999999999], [1.72857516E12, 2405.0199999999995], [1.72857054E12, 2054.8999999999987], [1.72857276E12, 2210.4799999999996], [1.72856952E12, 1881.2000000000003], [1.72857414E12, 2498.1499999999996], [1.72857636E12, 2764.999999999998], [1.72857498E12, 2361.199999999999], [1.7285772E12, 2950.989999999997], [1.72856868E12, 1975.7999999999993], [1.7285709E12, 2234.4200000000005], [1.72857312E12, 2295.3], [1.72857294E12, 2156.979999999996], [1.72857618E12, 2971.54], [1.72857396E12, 2447.8799999999974], [1.7285697E12, 1874.2100000000005], [1.72857192E12, 2287.119999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7285748E12, 1832.5999999999985], [1.72856916E12, 1474.8], [1.72857138E12, 1621.4], [1.72857582E12, 2274.95], [1.72857378E12, 1874.6999999999998], [1.728576E12, 2208.999999999998], [1.72857702E12, 2249.0], [1.7285724E12, 1733.0], [1.72856796E12, 1636.0], [1.72857018E12, 1676.6], [1.72856832E12, 1475.6999999999998], [1.72856934E12, 1532.45], [1.72857156E12, 1648.4499999999998], [1.72857342E12, 1742.1999999999998], [1.72857564E12, 1831.3999999999996], [1.72857036E12, 1618.2499999999995], [1.7285736E12, 1850.6999999999985], [1.72856814E12, 1498.2999999999997], [1.72857258E12, 1702.3999999999987], [1.72857462E12, 1923.1999999999998], [1.72857684E12, 2335.35], [1.72857546E12, 1935.0], [1.7285688E12, 1611.1999999999994], [1.72856982E12, 1543.9999999999982], [1.72857204E12, 1806.2999999999997], [1.72857084E12, 1674.1999999999998], [1.72857666E12, 2157.8999999999987], [1.72856862E12, 1523.4999999999998], [1.72857306E12, 1686.5], [1.72857444E12, 1864.9999999999973], [1.72856898E12, 1491.7], [1.72857528E12, 1909.1999999999998], [1.72857222E12, 1631.5], [1.7285712E12, 1661.5], [1.7285763E12, 2284.7999999999997], [1.72856778E12, 1638.7999999999997], [1.72857102E12, 1788.6], [1.72857324E12, 1683.6], [1.72857426E12, 1926.25], [1.72857648E12, 2257.1], [1.7285775E12, 1788.6499999999996], [1.72857E12, 1506.6999999999998], [1.7285727E12, 1567.0500000000002], [1.72856946E12, 1544.9999999999995], [1.72857168E12, 1672.8000000000002], [1.7285739E12, 1865.5499999999993], [1.72857612E12, 2304.0], [1.72856826E12, 1601.9499999999998], [1.7285715E12, 1764.1499999999999], [1.72857408E12, 1796.35], [1.72857048E12, 1480.7999999999997], [1.7285751E12, 1807.7999999999997], [1.72857732E12, 2461.499999999999], [1.72856964E12, 1689.6], [1.72857594E12, 2297.5999999999995], [1.72857186E12, 1670.0], [1.72857372E12, 1822.6999999999998], [1.72857714E12, 2319.25], [1.72857492E12, 1936.0], [1.72856844E12, 1606.6999999999994], [1.72857066E12, 1663.3999999999996], [1.72857288E12, 1769.6499999999996], [1.72857012E12, 1582.05], [1.72857354E12, 1863.0], [1.72857576E12, 2208.55], [1.72857234E12, 1755.5500000000002], [1.72857678E12, 2347.549999999998], [1.7285679E12, 1560.5], [1.72857474E12, 1870.6999999999994], [1.72857696E12, 2269.0], [1.72856892E12, 1552.2], [1.72857114E12, 1737.4999999999995], [1.72857336E12, 1655.5], [1.7285703E12, 1543.5], [1.72857252E12, 1647.6], [1.72856928E12, 1608.0999999999985], [1.7285766E12, 2252.15], [1.72857438E12, 1940.4999999999995], [1.72857456E12, 1842.3999999999999], [1.72856808E12, 1481.2000000000003], [1.72857132E12, 1573.799999999999], [1.7285691E12, 1594.3999999999996], [1.72857558E12, 1976.0], [1.72857642E12, 2275.299999999999], [1.72857078E12, 1673.7999999999975], [1.728573E12, 1694.6], [1.72856976E12, 1564.0], [1.7285742E12, 1836.1999999999998], [1.72856856E12, 1577.2999999999997], [1.72856958E12, 1550.1], [1.7285718E12, 1615.3000000000002], [1.7285754E12, 1768.3999999999999], [1.72857318E12, 1641.25], [1.72857402E12, 1873.0], [1.72857624E12, 2171.3999999999996], [1.72857726E12, 2195.2], [1.72856772E12, 1787.1999999999994], [1.72856994E12, 1549.1499999999992], [1.72857216E12, 1758.1999999999996], [1.72856874E12, 1667.0], [1.72857198E12, 1658.0999999999997], [1.72857522E12, 1803.4499999999994], [1.72857744E12, 2242.5999999999985], [1.72857096E12, 1622.0], [1.72857384E12, 1918.0], [1.7285682E12, 1513.6], [1.72857042E12, 1659.4], [1.72857264E12, 1742.75], [1.72857486E12, 1811.0], [1.72857708E12, 2274.3], [1.72857246E12, 1678.0999999999985], [1.72857504E12, 1849.0], [1.72857606E12, 2166.4499999999994], [1.72856922E12, 1570.75], [1.72857144E12, 1688.0], [1.7285706E12, 1549.0999999999997], [1.7285769E12, 2219.2], [1.72856838E12, 1560.4], [1.72857282E12, 1794.199999999999], [1.72857468E12, 1815.0], [1.7285694E12, 1524.8999999999996], [1.72857162E12, 1793.0], [1.72857366E12, 1867.5999999999995], [1.72857588E12, 2168.4499999999994], [1.72857108E12, 1618.8000000000002], [1.7285745E12, 1866.6999999999996], [1.72857672E12, 2303.0], [1.72856784E12, 1619.75], [1.72856886E12, 1605.15], [1.7285733E12, 1660.25], [1.72856988E12, 1713.299999999999], [1.7285757E12, 2070.2999999999997], [1.7285721E12, 1724.25], [1.72857348E12, 1872.5499999999997], [1.72856802E12, 1518.6], [1.72857126E12, 1706.4000000000005], [1.72857432E12, 1806.5999999999995], [1.72857756E12, 1556.2], [1.72857024E12, 1592.3499999999983], [1.72857534E12, 1920.0], [1.72856904E12, 1508.7999999999997], [1.72857006E12, 1657.2], [1.72857228E12, 1634.3999999999992], [1.72857552E12, 1786.6499999999992], [1.72857654E12, 2273.8499999999985], [1.7285685E12, 1531.2499999999995], [1.72857738E12, 2233.4499999999985], [1.72857174E12, 1774.9499999999998], [1.72857072E12, 1797.0], [1.72857516E12, 1984.4999999999995], [1.72857054E12, 1587.4499999999998], [1.72857276E12, 1693.4999999999998], [1.72856952E12, 1572.1999999999998], [1.72857414E12, 1844.55], [1.72857636E12, 2169.25], [1.72857498E12, 1880.1999999999998], [1.7285772E12, 2230.7], [1.72856868E12, 1591.25], [1.7285709E12, 1724.7999999999988], [1.72857312E12, 1754.0], [1.72857294E12, 1705.7], [1.72857618E12, 2285.7], [1.72857396E12, 1821.7999999999997], [1.7285697E12, 1512.35], [1.72857192E12, 1735.6]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.7285748E12, 54.0], [1.72856916E12, 60.0], [1.72857138E12, 55.0], [1.72857582E12, 54.0], [1.72857378E12, 51.0], [1.728576E12, 62.0], [1.72857702E12, 61.0], [1.7285724E12, 59.0], [1.72856796E12, 65.0], [1.72857018E12, 55.0], [1.72856832E12, 60.0], [1.72856934E12, 54.0], [1.72857156E12, 60.0], [1.72857342E12, 63.0], [1.72857564E12, 56.0], [1.72857036E12, 51.0], [1.7285736E12, 53.0], [1.72856814E12, 62.0], [1.72857258E12, 59.0], [1.72857462E12, 55.0], [1.72857684E12, 60.0], [1.72857546E12, 54.0], [1.7285688E12, 58.0], [1.72856982E12, 58.0], [1.72857204E12, 56.0], [1.72857084E12, 61.0], [1.72857666E12, 53.0], [1.72856862E12, 61.0], [1.72857306E12, 59.0], [1.72857444E12, 56.0], [1.72856898E12, 62.0], [1.72857528E12, 60.0], [1.72857222E12, 49.0], [1.7285712E12, 51.0], [1.7285763E12, 63.0], [1.72856778E12, 83.0], [1.72857102E12, 52.0], [1.72857324E12, 54.0], [1.72857426E12, 58.0], [1.72857648E12, 67.0], [1.7285775E12, 56.0], [1.72857E12, 59.0], [1.7285727E12, 55.0], [1.72856946E12, 58.0], [1.72857168E12, 58.0], [1.7285739E12, 62.0], [1.72857612E12, 62.0], [1.72856826E12, 69.0], [1.7285715E12, 56.0], [1.72857408E12, 59.0], [1.72857048E12, 59.0], [1.7285751E12, 62.0], [1.72857732E12, 57.0], [1.72856964E12, 59.0], [1.72857594E12, 58.0], [1.72857186E12, 57.0], [1.72857372E12, 58.0], [1.72857714E12, 59.0], [1.72857492E12, 61.0], [1.72856844E12, 59.0], [1.72857066E12, 67.0], [1.72857288E12, 55.0], [1.72857012E12, 62.0], [1.72857354E12, 59.0], [1.72857576E12, 66.0], [1.72857234E12, 50.0], [1.72857678E12, 57.0], [1.7285679E12, 57.0], [1.72857474E12, 62.0], [1.72857696E12, 68.0], [1.72856892E12, 66.0], [1.72857114E12, 59.0], [1.72857336E12, 57.0], [1.7285703E12, 65.0], [1.72857252E12, 58.0], [1.72856928E12, 64.0], [1.7285766E12, 57.0], [1.72857438E12, 55.0], [1.72857456E12, 60.0], [1.72856808E12, 66.0], [1.72857132E12, 62.0], [1.7285691E12, 66.0], [1.72857558E12, 62.0], [1.72857642E12, 65.0], [1.72857078E12, 56.0], [1.728573E12, 60.0], [1.72856976E12, 63.0], [1.7285742E12, 54.0], [1.72856856E12, 56.0], [1.72856958E12, 55.0], [1.7285718E12, 60.0], [1.7285754E12, 61.0], [1.72857318E12, 59.0], [1.72857402E12, 59.0], [1.72857624E12, 53.0], [1.72857726E12, 54.0], [1.72856772E12, 70.0], [1.72856994E12, 64.0], [1.72857216E12, 55.0], [1.72856874E12, 69.0], [1.72857198E12, 56.0], [1.72857522E12, 58.0], [1.72857744E12, 50.0], [1.72857096E12, 53.0], [1.72857384E12, 61.0], [1.7285682E12, 63.0], [1.72857042E12, 56.0], [1.72857264E12, 61.0], [1.72857486E12, 60.0], [1.72857708E12, 66.0], [1.72857246E12, 55.0], [1.72857504E12, 64.0], [1.72857606E12, 59.0], [1.72856922E12, 59.0], [1.72857144E12, 59.0], [1.7285706E12, 67.0], [1.7285769E12, 62.0], [1.72856838E12, 69.0], [1.72857282E12, 63.0], [1.72857468E12, 55.0], [1.7285694E12, 58.0], [1.72857162E12, 53.0], [1.72857366E12, 60.0], [1.72857588E12, 64.0], [1.72857108E12, 67.0], [1.7285745E12, 56.0], [1.72857672E12, 51.0], [1.72856784E12, 72.0], [1.72856886E12, 63.0], [1.7285733E12, 56.0], [1.72856988E12, 63.0], [1.7285757E12, 61.0], [1.7285721E12, 56.0], [1.72857348E12, 59.0], [1.72856802E12, 69.0], [1.72857126E12, 55.0], [1.72857432E12, 59.0], [1.72857756E12, 133.0], [1.72857024E12, 54.0], [1.72857534E12, 61.0], [1.72856904E12, 56.0], [1.72857006E12, 66.0], [1.72857228E12, 57.0], [1.72857552E12, 49.0], [1.72857654E12, 63.0], [1.7285685E12, 61.0], [1.72857738E12, 68.0], [1.72857174E12, 52.0], [1.72857072E12, 56.0], [1.72857516E12, 45.0], [1.72857054E12, 61.0], [1.72857276E12, 64.0], [1.72856952E12, 59.0], [1.72857414E12, 57.0], [1.72857636E12, 50.0], [1.72857498E12, 52.0], [1.7285772E12, 79.0], [1.72856868E12, 59.0], [1.7285709E12, 56.0], [1.72857312E12, 56.0], [1.72857294E12, 47.0], [1.72857618E12, 59.0], [1.72857396E12, 51.0], [1.7285697E12, 57.0], [1.72857192E12, 51.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7285748E12, 648.5], [1.72856916E12, 562.0], [1.72857138E12, 585.0], [1.72857582E12, 753.5], [1.72857378E12, 723.0], [1.728576E12, 790.0], [1.72857702E12, 771.0], [1.7285724E12, 621.0], [1.72856796E12, 558.0], [1.72857018E12, 685.0], [1.72856832E12, 517.0], [1.72856934E12, 414.5], [1.72857156E12, 691.5], [1.72857342E12, 544.0], [1.72857564E12, 659.5], [1.72857036E12, 661.5], [1.7285736E12, 672.0], [1.72856814E12, 616.0], [1.72857258E12, 577.0], [1.72857462E12, 733.5], [1.72857684E12, 929.0], [1.72857546E12, 714.0], [1.7285688E12, 711.0], [1.72856982E12, 522.5], [1.72857204E12, 704.0], [1.72857084E12, 607.0], [1.72857666E12, 800.5], [1.72856862E12, 549.0], [1.72857306E12, 622.0], [1.72857444E12, 735.0], [1.72856898E12, 628.0], [1.72857528E12, 602.0], [1.72857222E12, 570.5], [1.7285712E12, 492.5], [1.7285763E12, 788.0], [1.72856778E12, 365.0], [1.72857102E12, 568.0], [1.72857324E12, 621.0], [1.72857426E12, 676.5], [1.72857648E12, 805.0], [1.7285775E12, 643.0], [1.72857E12, 571.0], [1.7285727E12, 556.5], [1.72856946E12, 589.5], [1.72857168E12, 548.5], [1.7285739E12, 723.0], [1.72857612E12, 813.0], [1.72856826E12, 657.0], [1.7285715E12, 643.5], [1.72857408E12, 581.0], [1.72857048E12, 489.0], [1.7285751E12, 640.0], [1.72857732E12, 968.0], [1.72856964E12, 543.0], [1.72857594E12, 707.0], [1.72857186E12, 601.0], [1.72857372E12, 715.0], [1.72857714E12, 812.5], [1.72857492E12, 641.5], [1.72856844E12, 677.0], [1.72857066E12, 547.0], [1.72857288E12, 570.5], [1.72857012E12, 667.0], [1.72857354E12, 621.5], [1.72857576E12, 756.0], [1.72857234E12, 575.0], [1.72857678E12, 823.5], [1.7285679E12, 582.0], [1.72857474E12, 572.0], [1.72857696E12, 831.0], [1.72856892E12, 564.0], [1.72857114E12, 597.0], [1.72857336E12, 603.0], [1.7285703E12, 648.0], [1.72857252E12, 568.0], [1.72856928E12, 609.0], [1.7285766E12, 794.5], [1.72857438E12, 740.0], [1.72857456E12, 668.0], [1.72856808E12, 487.0], [1.72857132E12, 591.0], [1.7285691E12, 677.0], [1.72857558E12, 743.0], [1.72857642E12, 827.5], [1.72857078E12, 563.0], [1.728573E12, 581.0], [1.72856976E12, 583.0], [1.7285742E12, 671.0], [1.72856856E12, 589.0], [1.72856958E12, 607.0], [1.7285718E12, 489.0], [1.7285754E12, 561.0], [1.72857318E12, 624.0], [1.72857402E12, 681.0], [1.72857624E12, 795.0], [1.72857726E12, 738.5], [1.72856772E12, 563.0], [1.72856994E12, 391.5], [1.72857216E12, 632.0], [1.72856874E12, 626.0], [1.72857198E12, 620.5], [1.72857522E12, 729.0], [1.72857744E12, 681.0], [1.72857096E12, 548.0], [1.72857384E12, 766.0], [1.7285682E12, 577.0], [1.72857042E12, 558.0], [1.72857264E12, 612.0], [1.72857486E12, 694.0], [1.72857708E12, 798.0], [1.72857246E12, 627.0], [1.72857504E12, 629.5], [1.72857606E12, 805.5], [1.72856922E12, 626.0], [1.72857144E12, 654.5], [1.7285706E12, 596.0], [1.7285769E12, 844.0], [1.72856838E12, 600.0], [1.72857282E12, 689.0], [1.72857468E12, 639.0], [1.7285694E12, 528.5], [1.72857162E12, 604.5], [1.72857366E12, 708.0], [1.72857588E12, 764.0], [1.72857108E12, 690.0], [1.7285745E12, 542.5], [1.72857672E12, 875.0], [1.72856784E12, 481.0], [1.72856886E12, 639.5], [1.7285733E12, 657.5], [1.72856988E12, 648.0], [1.7285757E12, 641.5], [1.7285721E12, 702.5], [1.72857348E12, 586.0], [1.72856802E12, 663.5], [1.72857126E12, 692.0], [1.72857432E12, 618.5], [1.72857756E12, 966.0], [1.72857024E12, 528.0], [1.72857534E12, 661.0], [1.72856904E12, 519.0], [1.72857006E12, 660.0], [1.72857228E12, 571.0], [1.72857552E12, 690.5], [1.72857654E12, 655.0], [1.7285685E12, 574.5], [1.72857738E12, 825.5], [1.72857174E12, 642.0], [1.72857072E12, 699.0], [1.72857516E12, 740.0], [1.72857054E12, 519.5], [1.72857276E12, 634.0], [1.72856952E12, 589.0], [1.72857414E12, 687.5], [1.72857636E12, 820.0], [1.72857498E12, 664.0], [1.7285772E12, 782.5], [1.72856868E12, 676.5], [1.7285709E12, 555.0], [1.72857312E12, 641.5], [1.72857294E12, 668.0], [1.72857618E12, 821.0], [1.72857396E12, 700.0], [1.7285697E12, 628.0], [1.72857192E12, 651.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72857756E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 215.0, "minX": 1.0, "maxY": 1077.0, "series": [{"data": [[2.0, 916.5], [33.0, 272.5], [34.0, 229.0], [35.0, 265.0], [37.0, 239.0], [3.0, 864.0], [4.0, 835.5], [5.0, 782.0], [6.0, 720.0], [7.0, 639.0], [8.0, 650.5], [9.0, 705.0], [10.0, 709.5], [11.0, 729.5], [12.0, 721.0], [13.0, 720.0], [14.0, 723.0], [15.0, 697.0], [1.0, 1077.0], [16.0, 662.0], [17.0, 671.0], [18.0, 586.5], [19.0, 573.0], [20.0, 541.5], [21.0, 476.0], [22.0, 425.0], [23.0, 378.0], [24.0, 356.5], [25.0, 327.5], [26.0, 354.5], [27.0, 323.0], [28.0, 308.5], [29.0, 256.0], [30.0, 352.0], [31.0, 215.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 37.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 123.5, "minX": 1.0, "maxY": 739.0, "series": [{"data": [[2.0, 649.5], [33.0, 176.5], [34.0, 140.0], [35.0, 150.0], [37.0, 162.0], [3.0, 603.0], [4.0, 590.5], [5.0, 562.0], [6.0, 525.0], [7.0, 478.0], [8.0, 480.0], [9.0, 510.0], [10.0, 516.0], [11.0, 534.0], [12.0, 526.0], [13.0, 534.0], [14.0, 526.0], [15.0, 517.0], [1.0, 739.0], [16.0, 494.0], [17.0, 497.0], [18.0, 439.0], [19.0, 438.0], [20.0, 395.5], [21.0, 355.0], [22.0, 297.0], [23.0, 258.0], [24.0, 230.5], [25.0, 218.0], [26.0, 230.5], [27.0, 210.0], [28.0, 192.5], [29.0, 160.0], [30.0, 234.5], [31.0, 123.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 37.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.35, "minX": 1.72856772E12, "maxY": 18.766666666666666, "series": [{"data": [[1.7285748E12, 15.966666666666667], [1.72856916E12, 6.383333333333334], [1.72857138E12, 12.2], [1.72857582E12, 17.8], [1.72857378E12, 15.75], [1.728576E12, 18.116666666666667], [1.72857702E12, 17.816666666666666], [1.7285724E12, 11.566666666666666], [1.72856796E12, 3.066666666666667], [1.72857018E12, 5.716666666666667], [1.72856832E12, 6.75], [1.72856934E12, 6.833333333333333], [1.72857156E12, 11.5], [1.72857342E12, 4.35], [1.72857564E12, 15.25], [1.72857036E12, 5.933333333333334], [1.7285736E12, 16.283333333333335], [1.72856814E12, 6.35], [1.72857258E12, 12.25], [1.72857462E12, 15.6], [1.72857684E12, 16.5], [1.72857546E12, 15.65], [1.7285688E12, 5.85], [1.72856982E12, 6.466666666666667], [1.72857204E12, 11.016666666666667], [1.72857084E12, 11.916666666666666], [1.72857666E12, 18.2], [1.72856862E12, 6.616666666666666], [1.72857306E12, 11.566666666666666], [1.72857444E12, 15.616666666666667], [1.72856898E12, 6.416666666666667], [1.72857528E12, 16.45], [1.72857222E12, 11.9], [1.7285712E12, 12.566666666666666], [1.7285763E12, 17.916666666666668], [1.72856778E12, 3.283333333333333], [1.72857102E12, 11.583333333333334], [1.72857324E12, 11.716666666666667], [1.72857426E12, 16.066666666666666], [1.72857648E12, 17.616666666666667], [1.7285775E12, 11.133333333333333], [1.72857E12, 6.333333333333333], [1.7285727E12, 12.533333333333333], [1.72856946E12, 6.166666666666667], [1.72857168E12, 12.2], [1.7285739E12, 16.0], [1.72857612E12, 17.4], [1.72856826E12, 6.0], [1.7285715E12, 11.3], [1.72857408E12, 17.2], [1.72857048E12, 6.95], [1.7285751E12, 16.45], [1.72857732E12, 15.866666666666667], [1.72856964E12, 6.25], [1.72857594E12, 18.516666666666666], [1.72857186E12, 11.983333333333333], [1.72857372E12, 15.75], [1.72857714E12, 17.066666666666666], [1.72857492E12, 16.066666666666666], [1.72856844E12, 5.866666666666666], [1.72857066E12, 4.583333333333333], [1.72857288E12, 11.666666666666666], [1.72857012E12, 5.833333333333333], [1.72857354E12, 16.633333333333333], [1.72857576E12, 18.333333333333332], [1.72857234E12, 11.7], [1.72857678E12, 17.366666666666667], [1.7285679E12, 3.15], [1.72857474E12, 16.75], [1.72857696E12, 17.083333333333332], [1.72856892E12, 6.3], [1.72857114E12, 11.633333333333333], [1.72857336E12, 11.033333333333333], [1.7285703E12, 6.016666666666667], [1.72857252E12, 12.016666666666667], [1.72856928E12, 6.283333333333333], [1.7285766E12, 17.933333333333334], [1.72857438E12, 15.083333333333334], [1.72857456E12, 16.083333333333332], [1.72856808E12, 5.25], [1.72857132E12, 12.383333333333333], [1.7285691E12, 5.933333333333334], [1.72857558E12, 15.333333333333334], [1.72857642E12, 17.133333333333333], [1.72857078E12, 12.25], [1.728573E12, 11.783333333333333], [1.72856976E12, 6.233333333333333], [1.7285742E12, 16.116666666666667], [1.72856856E12, 6.35], [1.72856958E12, 6.083333333333333], [1.7285718E12, 12.616666666666667], [1.7285754E12, 17.25], [1.72857318E12, 11.733333333333333], [1.72857402E12, 16.066666666666666], [1.72857624E12, 18.05], [1.72857726E12, 18.133333333333333], [1.72856772E12, 2.65], [1.72856994E12, 6.766666666666667], [1.72857216E12, 11.383333333333333], [1.72856874E12, 5.983333333333333], [1.72857198E12, 11.6], [1.72857522E12, 15.866666666666667], [1.72857744E12, 18.333333333333332], [1.72857096E12, 12.333333333333334], [1.72857384E12, 15.1], [1.7285682E12, 6.416666666666667], [1.72857042E12, 6.25], [1.72857264E12, 11.566666666666666], [1.72857486E12, 16.35], [1.72857708E12, 17.766666666666666], [1.72857246E12, 11.75], [1.72857504E12, 16.566666666666666], [1.72857606E12, 18.2], [1.72856922E12, 6.233333333333333], [1.72857144E12, 11.566666666666666], [1.7285706E12, 5.7], [1.7285769E12, 17.85], [1.72856838E12, 6.05], [1.72857282E12, 11.0], [1.72857468E12, 16.65], [1.7285694E12, 6.5], [1.72857162E12, 11.533333333333333], [1.72857366E12, 15.8], [1.72857588E12, 18.2], [1.72857108E12, 11.783333333333333], [1.7285745E12, 17.0], [1.72857672E12, 16.816666666666666], [1.72856784E12, 3.2333333333333334], [1.72856886E12, 5.966666666666667], [1.7285733E12, 11.4], [1.72856988E12, 5.933333333333334], [1.7285757E12, 12.416666666666666], [1.7285721E12, 11.566666666666666], [1.72857348E12, 16.7], [1.72856802E12, 3.1], [1.72857126E12, 11.033333333333333], [1.72857432E12, 16.433333333333334], [1.72857756E12, 0.35], [1.72857024E12, 6.466666666666667], [1.72857534E12, 16.116666666666667], [1.72856904E12, 6.45], [1.72857006E12, 5.916666666666667], [1.72857228E12, 12.0], [1.72857552E12, 16.033333333333335], [1.72857654E12, 18.766666666666666], [1.7285685E12, 6.333333333333333], [1.72857738E12, 17.5], [1.72857174E12, 11.333333333333334], [1.72857072E12, 10.983333333333333], [1.72857516E12, 15.283333333333333], [1.72857054E12, 6.433333333333334], [1.72857276E12, 11.55], [1.72856952E12, 6.45], [1.72857414E12, 15.8], [1.72857636E12, 17.733333333333334], [1.72857498E12, 15.783333333333333], [1.7285772E12, 17.7], [1.72856868E12, 5.9], [1.7285709E12, 11.883333333333333], [1.72857312E12, 11.4], [1.72857294E12, 11.366666666666667], [1.72857618E12, 17.416666666666668], [1.72857396E12, 15.766666666666667], [1.7285697E12, 6.266666666666667], [1.72857192E12, 11.383333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72857756E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.38333333333333336, "minX": 1.72856772E12, "maxY": 18.766666666666666, "series": [{"data": [[1.7285748E12, 15.966666666666667], [1.72856916E12, 6.383333333333334], [1.72857138E12, 12.2], [1.72857582E12, 17.8], [1.72857378E12, 15.75], [1.728576E12, 18.116666666666667], [1.72857702E12, 17.816666666666666], [1.7285724E12, 11.566666666666666], [1.72856796E12, 3.066666666666667], [1.72857018E12, 5.716666666666667], [1.72856832E12, 6.75], [1.72856934E12, 6.833333333333333], [1.72857156E12, 11.5], [1.72857342E12, 4.25], [1.72857564E12, 15.3], [1.72857036E12, 5.933333333333334], [1.7285736E12, 16.283333333333335], [1.72856814E12, 6.35], [1.72857258E12, 12.25], [1.72857462E12, 15.6], [1.72857684E12, 16.5], [1.72857546E12, 15.65], [1.7285688E12, 5.85], [1.72856982E12, 6.466666666666667], [1.72857204E12, 11.016666666666667], [1.72857084E12, 11.916666666666666], [1.72857666E12, 18.2], [1.72856862E12, 6.616666666666666], [1.72857306E12, 11.566666666666666], [1.72857444E12, 15.616666666666667], [1.72856898E12, 6.416666666666667], [1.72857528E12, 16.45], [1.72857222E12, 11.9], [1.7285712E12, 12.566666666666666], [1.7285763E12, 17.916666666666668], [1.72856778E12, 3.283333333333333], [1.72857102E12, 11.583333333333334], [1.72857324E12, 11.716666666666667], [1.72857426E12, 16.066666666666666], [1.72857648E12, 17.616666666666667], [1.7285775E12, 11.333333333333334], [1.72857E12, 6.333333333333333], [1.7285727E12, 12.533333333333333], [1.72856946E12, 6.166666666666667], [1.72857168E12, 12.2], [1.7285739E12, 16.0], [1.72857612E12, 17.4], [1.72856826E12, 6.0], [1.7285715E12, 11.3], [1.72857408E12, 17.2], [1.72857048E12, 6.95], [1.7285751E12, 16.45], [1.72857732E12, 15.866666666666667], [1.72856964E12, 6.25], [1.72857594E12, 18.516666666666666], [1.72857186E12, 11.983333333333333], [1.72857372E12, 15.75], [1.72857714E12, 17.066666666666666], [1.72857492E12, 16.066666666666666], [1.72856844E12, 5.866666666666666], [1.72857066E12, 4.466666666666667], [1.72857288E12, 11.666666666666666], [1.72857012E12, 5.833333333333333], [1.72857354E12, 16.633333333333333], [1.72857576E12, 18.333333333333332], [1.72857234E12, 11.7], [1.72857678E12, 17.366666666666667], [1.7285679E12, 3.15], [1.72857474E12, 16.75], [1.72857696E12, 17.083333333333332], [1.72856892E12, 6.3], [1.72857114E12, 11.633333333333333], [1.72857336E12, 11.066666666666666], [1.7285703E12, 6.016666666666667], [1.72857252E12, 12.016666666666667], [1.72856928E12, 6.283333333333333], [1.7285766E12, 17.933333333333334], [1.72857438E12, 15.083333333333334], [1.72857456E12, 16.083333333333332], [1.72856808E12, 5.216666666666667], [1.72857132E12, 12.383333333333333], [1.7285691E12, 5.933333333333334], [1.72857558E12, 15.333333333333334], [1.72857642E12, 17.133333333333333], [1.72857078E12, 12.25], [1.728573E12, 11.783333333333333], [1.72856976E12, 6.233333333333333], [1.7285742E12, 16.116666666666667], [1.72856856E12, 6.35], [1.72856958E12, 6.083333333333333], [1.7285718E12, 12.616666666666667], [1.7285754E12, 17.25], [1.72857318E12, 11.733333333333333], [1.72857402E12, 16.066666666666666], [1.72857624E12, 18.05], [1.72857726E12, 18.133333333333333], [1.72856772E12, 2.6166666666666667], [1.72856994E12, 6.766666666666667], [1.72857216E12, 11.383333333333333], [1.72856874E12, 5.983333333333333], [1.72857198E12, 11.6], [1.72857522E12, 15.866666666666667], [1.72857744E12, 18.366666666666667], [1.72857096E12, 12.333333333333334], [1.72857384E12, 15.1], [1.7285682E12, 6.416666666666667], [1.72857042E12, 6.25], [1.72857264E12, 11.566666666666666], [1.72857486E12, 16.35], [1.72857708E12, 17.766666666666666], [1.72857246E12, 11.75], [1.72857504E12, 16.566666666666666], [1.72857606E12, 18.2], [1.72856922E12, 6.233333333333333], [1.72857144E12, 11.566666666666666], [1.7285706E12, 5.75], [1.7285769E12, 17.85], [1.72856838E12, 6.05], [1.72857282E12, 11.0], [1.72857468E12, 16.65], [1.7285694E12, 6.5], [1.72857162E12, 11.533333333333333], [1.72857366E12, 15.8], [1.72857588E12, 18.2], [1.72857108E12, 11.783333333333333], [1.7285745E12, 17.0], [1.72857672E12, 16.816666666666666], [1.72856784E12, 3.2333333333333334], [1.72856886E12, 5.966666666666667], [1.7285733E12, 11.4], [1.72856988E12, 5.933333333333334], [1.7285757E12, 12.3], [1.7285721E12, 11.566666666666666], [1.72857348E12, 16.7], [1.72856802E12, 3.1], [1.72857126E12, 11.033333333333333], [1.72857432E12, 16.433333333333334], [1.72857756E12, 0.38333333333333336], [1.72857024E12, 6.466666666666667], [1.72857534E12, 16.116666666666667], [1.72856904E12, 6.45], [1.72857006E12, 5.916666666666667], [1.72857228E12, 12.0], [1.72857552E12, 16.033333333333335], [1.72857654E12, 18.766666666666666], [1.7285685E12, 6.333333333333333], [1.72857738E12, 17.5], [1.72857174E12, 11.333333333333334], [1.72857072E12, 10.983333333333333], [1.72857516E12, 15.283333333333333], [1.72857054E12, 6.433333333333334], [1.72857276E12, 11.55], [1.72856952E12, 6.45], [1.72857414E12, 15.8], [1.72857636E12, 17.733333333333334], [1.72857498E12, 15.783333333333333], [1.7285772E12, 17.7], [1.72856868E12, 5.9], [1.7285709E12, 11.883333333333333], [1.72857312E12, 11.4], [1.72857294E12, 11.366666666666667], [1.72857618E12, 17.416666666666668], [1.72857396E12, 15.766666666666667], [1.7285697E12, 6.266666666666667], [1.72857192E12, 11.383333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72857756E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.38333333333333336, "minX": 1.72856772E12, "maxY": 18.766666666666666, "series": [{"data": [[1.7285748E12, 15.966666666666667], [1.72856916E12, 6.383333333333334], [1.72857138E12, 12.2], [1.72857582E12, 17.8], [1.72857378E12, 15.75], [1.728576E12, 18.116666666666667], [1.72857702E12, 17.816666666666666], [1.7285724E12, 11.566666666666666], [1.72856796E12, 3.066666666666667], [1.72857018E12, 5.716666666666667], [1.72856832E12, 6.75], [1.72856934E12, 6.833333333333333], [1.72857156E12, 11.5], [1.72857342E12, 4.25], [1.72857564E12, 15.3], [1.72857036E12, 5.933333333333334], [1.7285736E12, 16.283333333333335], [1.72856814E12, 6.35], [1.72857258E12, 12.25], [1.72857462E12, 15.6], [1.72857684E12, 16.5], [1.72857546E12, 15.65], [1.7285688E12, 5.85], [1.72856982E12, 6.466666666666667], [1.72857204E12, 11.016666666666667], [1.72857084E12, 11.916666666666666], [1.72857666E12, 18.2], [1.72856862E12, 6.616666666666666], [1.72857306E12, 11.566666666666666], [1.72857444E12, 15.616666666666667], [1.72856898E12, 6.416666666666667], [1.72857528E12, 16.45], [1.72857222E12, 11.9], [1.7285712E12, 12.566666666666666], [1.7285763E12, 17.916666666666668], [1.72856778E12, 3.283333333333333], [1.72857102E12, 11.583333333333334], [1.72857324E12, 11.716666666666667], [1.72857426E12, 16.066666666666666], [1.72857648E12, 17.616666666666667], [1.7285775E12, 11.333333333333334], [1.72857E12, 6.333333333333333], [1.7285727E12, 12.533333333333333], [1.72856946E12, 6.166666666666667], [1.72857168E12, 12.2], [1.7285739E12, 16.0], [1.72857612E12, 17.4], [1.72856826E12, 6.0], [1.7285715E12, 11.3], [1.72857408E12, 17.2], [1.72857048E12, 6.95], [1.7285751E12, 16.45], [1.72857732E12, 15.866666666666667], [1.72856964E12, 6.25], [1.72857594E12, 18.516666666666666], [1.72857186E12, 11.983333333333333], [1.72857372E12, 15.75], [1.72857714E12, 17.066666666666666], [1.72857492E12, 16.066666666666666], [1.72856844E12, 5.866666666666666], [1.72857066E12, 4.466666666666667], [1.72857288E12, 11.666666666666666], [1.72857012E12, 5.833333333333333], [1.72857354E12, 16.633333333333333], [1.72857576E12, 18.333333333333332], [1.72857234E12, 11.7], [1.72857678E12, 17.366666666666667], [1.7285679E12, 3.15], [1.72857474E12, 16.75], [1.72857696E12, 17.083333333333332], [1.72856892E12, 6.3], [1.72857114E12, 11.633333333333333], [1.72857336E12, 11.066666666666666], [1.7285703E12, 6.016666666666667], [1.72857252E12, 12.016666666666667], [1.72856928E12, 6.283333333333333], [1.7285766E12, 17.933333333333334], [1.72857438E12, 15.083333333333334], [1.72857456E12, 16.083333333333332], [1.72856808E12, 5.216666666666667], [1.72857132E12, 12.383333333333333], [1.7285691E12, 5.933333333333334], [1.72857558E12, 15.333333333333334], [1.72857642E12, 17.133333333333333], [1.72857078E12, 12.25], [1.728573E12, 11.783333333333333], [1.72856976E12, 6.233333333333333], [1.7285742E12, 16.116666666666667], [1.72856856E12, 6.35], [1.72856958E12, 6.083333333333333], [1.7285718E12, 12.616666666666667], [1.7285754E12, 17.25], [1.72857318E12, 11.733333333333333], [1.72857402E12, 16.066666666666666], [1.72857624E12, 18.05], [1.72857726E12, 18.133333333333333], [1.72856772E12, 2.6166666666666667], [1.72856994E12, 6.766666666666667], [1.72857216E12, 11.383333333333333], [1.72856874E12, 5.983333333333333], [1.72857198E12, 11.6], [1.72857522E12, 15.866666666666667], [1.72857744E12, 18.366666666666667], [1.72857096E12, 12.333333333333334], [1.72857384E12, 15.1], [1.7285682E12, 6.416666666666667], [1.72857042E12, 6.25], [1.72857264E12, 11.566666666666666], [1.72857486E12, 16.35], [1.72857708E12, 17.766666666666666], [1.72857246E12, 11.75], [1.72857504E12, 16.566666666666666], [1.72857606E12, 18.2], [1.72856922E12, 6.233333333333333], [1.72857144E12, 11.566666666666666], [1.7285706E12, 5.75], [1.7285769E12, 17.85], [1.72856838E12, 6.05], [1.72857282E12, 11.0], [1.72857468E12, 16.65], [1.7285694E12, 6.5], [1.72857162E12, 11.533333333333333], [1.72857366E12, 15.8], [1.72857588E12, 18.2], [1.72857108E12, 11.783333333333333], [1.7285745E12, 17.0], [1.72857672E12, 16.816666666666666], [1.72856784E12, 3.2333333333333334], [1.72856886E12, 5.966666666666667], [1.7285733E12, 11.4], [1.72856988E12, 5.933333333333334], [1.7285757E12, 12.3], [1.7285721E12, 11.566666666666666], [1.72857348E12, 16.7], [1.72856802E12, 3.1], [1.72857126E12, 11.033333333333333], [1.72857432E12, 16.433333333333334], [1.72857756E12, 0.38333333333333336], [1.72857024E12, 6.466666666666667], [1.72857534E12, 16.116666666666667], [1.72856904E12, 6.45], [1.72857006E12, 5.916666666666667], [1.72857228E12, 12.0], [1.72857552E12, 16.033333333333335], [1.72857654E12, 18.766666666666666], [1.7285685E12, 6.333333333333333], [1.72857738E12, 17.5], [1.72857174E12, 11.333333333333334], [1.72857072E12, 10.983333333333333], [1.72857516E12, 15.283333333333333], [1.72857054E12, 6.433333333333334], [1.72857276E12, 11.55], [1.72856952E12, 6.45], [1.72857414E12, 15.8], [1.72857636E12, 17.733333333333334], [1.72857498E12, 15.783333333333333], [1.7285772E12, 17.7], [1.72856868E12, 5.9], [1.7285709E12, 11.883333333333333], [1.72857312E12, 11.4], [1.72857294E12, 11.366666666666667], [1.72857618E12, 17.416666666666668], [1.72857396E12, 15.766666666666667], [1.7285697E12, 6.266666666666667], [1.72857192E12, 11.383333333333333]], "isOverall": false, "label": "getmap-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72857756E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.38333333333333336, "minX": 1.72856772E12, "maxY": 18.766666666666666, "series": [{"data": [[1.7285748E12, 15.966666666666667], [1.72856916E12, 6.383333333333334], [1.72857138E12, 12.2], [1.72857582E12, 17.8], [1.72857378E12, 15.75], [1.728576E12, 18.116666666666667], [1.72857702E12, 17.816666666666666], [1.7285724E12, 11.566666666666666], [1.72856796E12, 3.066666666666667], [1.72857018E12, 5.716666666666667], [1.72856832E12, 6.75], [1.72856934E12, 6.833333333333333], [1.72857156E12, 11.5], [1.72857342E12, 4.25], [1.72857564E12, 15.3], [1.72857036E12, 5.933333333333334], [1.7285736E12, 16.283333333333335], [1.72856814E12, 6.35], [1.72857258E12, 12.25], [1.72857462E12, 15.6], [1.72857684E12, 16.5], [1.72857546E12, 15.65], [1.7285688E12, 5.85], [1.72856982E12, 6.466666666666667], [1.72857204E12, 11.016666666666667], [1.72857084E12, 11.916666666666666], [1.72857666E12, 18.2], [1.72856862E12, 6.616666666666666], [1.72857306E12, 11.566666666666666], [1.72857444E12, 15.616666666666667], [1.72856898E12, 6.416666666666667], [1.72857528E12, 16.45], [1.72857222E12, 11.9], [1.7285712E12, 12.566666666666666], [1.7285763E12, 17.916666666666668], [1.72856778E12, 3.283333333333333], [1.72857102E12, 11.583333333333334], [1.72857324E12, 11.716666666666667], [1.72857426E12, 16.066666666666666], [1.72857648E12, 17.616666666666667], [1.7285775E12, 11.333333333333334], [1.72857E12, 6.333333333333333], [1.7285727E12, 12.533333333333333], [1.72856946E12, 6.166666666666667], [1.72857168E12, 12.2], [1.7285739E12, 16.0], [1.72857612E12, 17.4], [1.72856826E12, 6.0], [1.7285715E12, 11.3], [1.72857408E12, 17.2], [1.72857048E12, 6.95], [1.7285751E12, 16.45], [1.72857732E12, 15.866666666666667], [1.72856964E12, 6.25], [1.72857594E12, 18.516666666666666], [1.72857186E12, 11.983333333333333], [1.72857372E12, 15.75], [1.72857714E12, 17.066666666666666], [1.72857492E12, 16.066666666666666], [1.72856844E12, 5.866666666666666], [1.72857066E12, 4.466666666666667], [1.72857288E12, 11.666666666666666], [1.72857012E12, 5.833333333333333], [1.72857354E12, 16.633333333333333], [1.72857576E12, 18.333333333333332], [1.72857234E12, 11.7], [1.72857678E12, 17.366666666666667], [1.7285679E12, 3.15], [1.72857474E12, 16.75], [1.72857696E12, 17.083333333333332], [1.72856892E12, 6.3], [1.72857114E12, 11.633333333333333], [1.72857336E12, 11.066666666666666], [1.7285703E12, 6.016666666666667], [1.72857252E12, 12.016666666666667], [1.72856928E12, 6.283333333333333], [1.7285766E12, 17.933333333333334], [1.72857438E12, 15.083333333333334], [1.72857456E12, 16.083333333333332], [1.72856808E12, 5.216666666666667], [1.72857132E12, 12.383333333333333], [1.7285691E12, 5.933333333333334], [1.72857558E12, 15.333333333333334], [1.72857642E12, 17.133333333333333], [1.72857078E12, 12.25], [1.728573E12, 11.783333333333333], [1.72856976E12, 6.233333333333333], [1.7285742E12, 16.116666666666667], [1.72856856E12, 6.35], [1.72856958E12, 6.083333333333333], [1.7285718E12, 12.616666666666667], [1.7285754E12, 17.25], [1.72857318E12, 11.733333333333333], [1.72857402E12, 16.066666666666666], [1.72857624E12, 18.05], [1.72857726E12, 18.133333333333333], [1.72856772E12, 2.6166666666666667], [1.72856994E12, 6.766666666666667], [1.72857216E12, 11.383333333333333], [1.72856874E12, 5.983333333333333], [1.72857198E12, 11.6], [1.72857522E12, 15.866666666666667], [1.72857744E12, 18.366666666666667], [1.72857096E12, 12.333333333333334], [1.72857384E12, 15.1], [1.7285682E12, 6.416666666666667], [1.72857042E12, 6.25], [1.72857264E12, 11.566666666666666], [1.72857486E12, 16.35], [1.72857708E12, 17.766666666666666], [1.72857246E12, 11.75], [1.72857504E12, 16.566666666666666], [1.72857606E12, 18.2], [1.72856922E12, 6.233333333333333], [1.72857144E12, 11.566666666666666], [1.7285706E12, 5.75], [1.7285769E12, 17.85], [1.72856838E12, 6.05], [1.72857282E12, 11.0], [1.72857468E12, 16.65], [1.7285694E12, 6.5], [1.72857162E12, 11.533333333333333], [1.72857366E12, 15.8], [1.72857588E12, 18.2], [1.72857108E12, 11.783333333333333], [1.7285745E12, 17.0], [1.72857672E12, 16.816666666666666], [1.72856784E12, 3.2333333333333334], [1.72856886E12, 5.966666666666667], [1.7285733E12, 11.4], [1.72856988E12, 5.933333333333334], [1.7285757E12, 12.3], [1.7285721E12, 11.566666666666666], [1.72857348E12, 16.7], [1.72856802E12, 3.1], [1.72857126E12, 11.033333333333333], [1.72857432E12, 16.433333333333334], [1.72857756E12, 0.38333333333333336], [1.72857024E12, 6.466666666666667], [1.72857534E12, 16.116666666666667], [1.72856904E12, 6.45], [1.72857006E12, 5.916666666666667], [1.72857228E12, 12.0], [1.72857552E12, 16.033333333333335], [1.72857654E12, 18.766666666666666], [1.7285685E12, 6.333333333333333], [1.72857738E12, 17.5], [1.72857174E12, 11.333333333333334], [1.72857072E12, 10.983333333333333], [1.72857516E12, 15.283333333333333], [1.72857054E12, 6.433333333333334], [1.72857276E12, 11.55], [1.72856952E12, 6.45], [1.72857414E12, 15.8], [1.72857636E12, 17.733333333333334], [1.72857498E12, 15.783333333333333], [1.7285772E12, 17.7], [1.72856868E12, 5.9], [1.7285709E12, 11.883333333333333], [1.72857312E12, 11.4], [1.72857294E12, 11.366666666666667], [1.72857618E12, 17.416666666666668], [1.72857396E12, 15.766666666666667], [1.7285697E12, 6.266666666666667], [1.72857192E12, 11.383333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72857756E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

