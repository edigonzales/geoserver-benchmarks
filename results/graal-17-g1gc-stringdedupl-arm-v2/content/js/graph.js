/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 41.0, "minX": 0.0, "maxY": 4139.0, "series": [{"data": [[0.0, 41.0], [0.1, 54.0], [0.2, 57.0], [0.3, 60.0], [0.4, 61.0], [0.5, 63.0], [0.6, 64.0], [0.7, 65.0], [0.8, 66.0], [0.9, 67.0], [1.0, 67.0], [1.1, 68.0], [1.2, 69.0], [1.3, 70.0], [1.4, 70.0], [1.5, 71.0], [1.6, 72.0], [1.7, 72.0], [1.8, 73.0], [1.9, 73.0], [2.0, 74.0], [2.1, 74.0], [2.2, 75.0], [2.3, 76.0], [2.4, 76.0], [2.5, 77.0], [2.6, 77.0], [2.7, 78.0], [2.8, 78.0], [2.9, 79.0], [3.0, 79.0], [3.1, 79.0], [3.2, 80.0], [3.3, 80.0], [3.4, 81.0], [3.5, 81.0], [3.6, 82.0], [3.7, 82.0], [3.8, 83.0], [3.9, 83.0], [4.0, 83.0], [4.1, 84.0], [4.2, 84.0], [4.3, 84.0], [4.4, 85.0], [4.5, 85.0], [4.6, 86.0], [4.7, 86.0], [4.8, 86.0], [4.9, 87.0], [5.0, 87.0], [5.1, 87.0], [5.2, 88.0], [5.3, 88.0], [5.4, 89.0], [5.5, 89.0], [5.6, 89.0], [5.7, 90.0], [5.8, 90.0], [5.9, 90.0], [6.0, 91.0], [6.1, 91.0], [6.2, 91.0], [6.3, 92.0], [6.4, 92.0], [6.5, 92.0], [6.6, 92.0], [6.7, 93.0], [6.8, 93.0], [6.9, 93.0], [7.0, 94.0], [7.1, 94.0], [7.2, 95.0], [7.3, 95.0], [7.4, 95.0], [7.5, 96.0], [7.6, 96.0], [7.7, 96.0], [7.8, 96.0], [7.9, 97.0], [8.0, 97.0], [8.1, 97.0], [8.2, 98.0], [8.3, 98.0], [8.4, 98.0], [8.5, 99.0], [8.6, 99.0], [8.7, 99.0], [8.8, 100.0], [8.9, 100.0], [9.0, 100.0], [9.1, 101.0], [9.2, 101.0], [9.3, 101.0], [9.4, 102.0], [9.5, 102.0], [9.6, 102.0], [9.7, 103.0], [9.8, 103.0], [9.9, 103.0], [10.0, 103.0], [10.1, 104.0], [10.2, 104.0], [10.3, 104.0], [10.4, 105.0], [10.5, 105.0], [10.6, 105.0], [10.7, 106.0], [10.8, 106.0], [10.9, 106.0], [11.0, 107.0], [11.1, 107.0], [11.2, 107.0], [11.3, 108.0], [11.4, 108.0], [11.5, 108.0], [11.6, 109.0], [11.7, 109.0], [11.8, 109.0], [11.9, 110.0], [12.0, 110.0], [12.1, 110.0], [12.2, 110.0], [12.3, 111.0], [12.4, 111.0], [12.5, 111.0], [12.6, 112.0], [12.7, 112.0], [12.8, 112.0], [12.9, 113.0], [13.0, 113.0], [13.1, 113.0], [13.2, 114.0], [13.3, 114.0], [13.4, 114.0], [13.5, 115.0], [13.6, 115.0], [13.7, 115.0], [13.8, 116.0], [13.9, 116.0], [14.0, 116.0], [14.1, 117.0], [14.2, 117.0], [14.3, 117.0], [14.4, 118.0], [14.5, 118.0], [14.6, 118.0], [14.7, 118.0], [14.8, 119.0], [14.9, 119.0], [15.0, 119.0], [15.1, 120.0], [15.2, 120.0], [15.3, 120.0], [15.4, 121.0], [15.5, 121.0], [15.6, 121.0], [15.7, 122.0], [15.8, 122.0], [15.9, 122.0], [16.0, 123.0], [16.1, 123.0], [16.2, 123.0], [16.3, 124.0], [16.4, 124.0], [16.5, 124.0], [16.6, 125.0], [16.7, 125.0], [16.8, 125.0], [16.9, 126.0], [17.0, 126.0], [17.1, 126.0], [17.2, 127.0], [17.3, 127.0], [17.4, 127.0], [17.5, 128.0], [17.6, 128.0], [17.7, 128.0], [17.8, 129.0], [17.9, 129.0], [18.0, 129.0], [18.1, 130.0], [18.2, 130.0], [18.3, 130.0], [18.4, 131.0], [18.5, 131.0], [18.6, 131.0], [18.7, 132.0], [18.8, 132.0], [18.9, 132.0], [19.0, 133.0], [19.1, 133.0], [19.2, 133.0], [19.3, 134.0], [19.4, 134.0], [19.5, 135.0], [19.6, 135.0], [19.7, 135.0], [19.8, 136.0], [19.9, 136.0], [20.0, 136.0], [20.1, 137.0], [20.2, 137.0], [20.3, 137.0], [20.4, 138.0], [20.5, 138.0], [20.6, 139.0], [20.7, 139.0], [20.8, 139.0], [20.9, 140.0], [21.0, 140.0], [21.1, 141.0], [21.2, 141.0], [21.3, 141.0], [21.4, 142.0], [21.5, 142.0], [21.6, 142.0], [21.7, 143.0], [21.8, 143.0], [21.9, 144.0], [22.0, 144.0], [22.1, 144.0], [22.2, 145.0], [22.3, 145.0], [22.4, 146.0], [22.5, 146.0], [22.6, 146.0], [22.7, 147.0], [22.8, 147.0], [22.9, 148.0], [23.0, 148.0], [23.1, 149.0], [23.2, 149.0], [23.3, 149.0], [23.4, 150.0], [23.5, 150.0], [23.6, 151.0], [23.7, 151.0], [23.8, 152.0], [23.9, 152.0], [24.0, 152.0], [24.1, 153.0], [24.2, 153.0], [24.3, 154.0], [24.4, 154.0], [24.5, 155.0], [24.6, 155.0], [24.7, 155.0], [24.8, 156.0], [24.9, 156.0], [25.0, 157.0], [25.1, 157.0], [25.2, 158.0], [25.3, 158.0], [25.4, 159.0], [25.5, 159.0], [25.6, 160.0], [25.7, 160.0], [25.8, 161.0], [25.9, 161.0], [26.0, 162.0], [26.1, 162.0], [26.2, 163.0], [26.3, 163.0], [26.4, 164.0], [26.5, 164.0], [26.6, 165.0], [26.7, 165.0], [26.8, 166.0], [26.9, 166.0], [27.0, 167.0], [27.1, 167.0], [27.2, 168.0], [27.3, 168.0], [27.4, 169.0], [27.5, 169.0], [27.6, 170.0], [27.7, 170.0], [27.8, 171.0], [27.9, 172.0], [28.0, 172.0], [28.1, 173.0], [28.2, 173.0], [28.3, 174.0], [28.4, 174.0], [28.5, 175.0], [28.6, 176.0], [28.7, 176.0], [28.8, 177.0], [28.9, 178.0], [29.0, 178.0], [29.1, 179.0], [29.2, 180.0], [29.3, 180.0], [29.4, 181.0], [29.5, 182.0], [29.6, 182.0], [29.7, 183.0], [29.8, 184.0], [29.9, 184.0], [30.0, 185.0], [30.1, 186.0], [30.2, 187.0], [30.3, 187.0], [30.4, 188.0], [30.5, 189.0], [30.6, 190.0], [30.7, 190.0], [30.8, 191.0], [30.9, 192.0], [31.0, 192.0], [31.1, 193.0], [31.2, 194.0], [31.3, 194.0], [31.4, 195.0], [31.5, 196.0], [31.6, 197.0], [31.7, 198.0], [31.8, 198.0], [31.9, 199.0], [32.0, 200.0], [32.1, 201.0], [32.2, 201.0], [32.3, 202.0], [32.4, 203.0], [32.5, 204.0], [32.6, 205.0], [32.7, 206.0], [32.8, 206.0], [32.9, 207.0], [33.0, 208.0], [33.1, 209.0], [33.2, 210.0], [33.3, 211.0], [33.4, 212.0], [33.5, 213.0], [33.6, 214.0], [33.7, 215.0], [33.8, 216.0], [33.9, 217.0], [34.0, 218.0], [34.1, 219.0], [34.2, 220.0], [34.3, 220.0], [34.4, 222.0], [34.5, 223.0], [34.6, 224.0], [34.7, 225.0], [34.8, 226.0], [34.9, 227.0], [35.0, 228.0], [35.1, 229.0], [35.2, 230.0], [35.3, 231.0], [35.4, 233.0], [35.5, 234.0], [35.6, 235.0], [35.7, 236.0], [35.8, 238.0], [35.9, 239.0], [36.0, 240.0], [36.1, 242.0], [36.2, 243.0], [36.3, 244.0], [36.4, 246.0], [36.5, 247.0], [36.6, 248.0], [36.7, 250.0], [36.8, 251.0], [36.9, 253.0], [37.0, 254.0], [37.1, 256.0], [37.2, 257.0], [37.3, 259.0], [37.4, 260.0], [37.5, 262.0], [37.6, 263.0], [37.7, 265.0], [37.8, 266.0], [37.9, 268.0], [38.0, 270.0], [38.1, 272.0], [38.2, 273.0], [38.3, 275.0], [38.4, 277.0], [38.5, 278.0], [38.6, 280.0], [38.7, 282.0], [38.8, 284.0], [38.9, 286.0], [39.0, 288.0], [39.1, 290.0], [39.2, 292.0], [39.3, 294.0], [39.4, 296.0], [39.5, 298.0], [39.6, 301.0], [39.7, 303.0], [39.8, 305.0], [39.9, 308.0], [40.0, 310.0], [40.1, 312.0], [40.2, 315.0], [40.3, 317.0], [40.4, 320.0], [40.5, 322.0], [40.6, 324.0], [40.7, 327.0], [40.8, 330.0], [40.9, 332.0], [41.0, 335.0], [41.1, 338.0], [41.2, 341.0], [41.3, 343.0], [41.4, 346.0], [41.5, 349.0], [41.6, 352.0], [41.7, 356.0], [41.8, 359.0], [41.9, 362.0], [42.0, 366.0], [42.1, 369.0], [42.2, 373.0], [42.3, 375.0], [42.4, 379.0], [42.5, 383.0], [42.6, 387.0], [42.7, 391.0], [42.8, 394.0], [42.9, 397.0], [43.0, 401.0], [43.1, 405.0], [43.2, 409.0], [43.3, 412.0], [43.4, 416.0], [43.5, 419.0], [43.6, 423.0], [43.7, 427.0], [43.8, 431.0], [43.9, 435.0], [44.0, 439.0], [44.1, 443.0], [44.2, 447.0], [44.3, 451.0], [44.4, 455.0], [44.5, 458.0], [44.6, 462.0], [44.7, 466.0], [44.8, 471.0], [44.9, 475.0], [45.0, 478.0], [45.1, 482.0], [45.2, 486.0], [45.3, 490.0], [45.4, 494.0], [45.5, 498.0], [45.6, 501.0], [45.7, 505.0], [45.8, 509.0], [45.9, 512.0], [46.0, 515.0], [46.1, 519.0], [46.2, 523.0], [46.3, 526.0], [46.4, 530.0], [46.5, 534.0], [46.6, 538.0], [46.7, 541.0], [46.8, 545.0], [46.9, 548.0], [47.0, 552.0], [47.1, 555.0], [47.2, 559.0], [47.3, 562.0], [47.4, 565.0], [47.5, 569.0], [47.6, 572.0], [47.7, 576.0], [47.8, 579.0], [47.9, 582.0], [48.0, 585.0], [48.1, 588.0], [48.2, 591.0], [48.3, 595.0], [48.4, 597.0], [48.5, 600.0], [48.6, 604.0], [48.7, 607.0], [48.8, 610.0], [48.9, 613.0], [49.0, 616.0], [49.1, 619.0], [49.2, 622.0], [49.3, 625.0], [49.4, 628.0], [49.5, 631.0], [49.6, 634.0], [49.7, 637.0], [49.8, 639.0], [49.9, 642.0], [50.0, 645.0], [50.1, 648.0], [50.2, 650.0], [50.3, 653.0], [50.4, 655.0], [50.5, 658.0], [50.6, 660.0], [50.7, 664.0], [50.8, 666.0], [50.9, 668.0], [51.0, 671.0], [51.1, 674.0], [51.2, 677.0], [51.3, 679.0], [51.4, 681.0], [51.5, 684.0], [51.6, 686.0], [51.7, 689.0], [51.8, 691.0], [51.9, 694.0], [52.0, 697.0], [52.1, 699.0], [52.2, 702.0], [52.3, 704.0], [52.4, 706.0], [52.5, 708.0], [52.6, 711.0], [52.7, 713.0], [52.8, 715.0], [52.9, 717.0], [53.0, 719.0], [53.1, 722.0], [53.2, 724.0], [53.3, 726.0], [53.4, 728.0], [53.5, 730.0], [53.6, 733.0], [53.7, 735.0], [53.8, 737.0], [53.9, 739.0], [54.0, 742.0], [54.1, 744.0], [54.2, 746.0], [54.3, 748.0], [54.4, 751.0], [54.5, 753.0], [54.6, 755.0], [54.7, 757.0], [54.8, 759.0], [54.9, 762.0], [55.0, 764.0], [55.1, 765.0], [55.2, 767.0], [55.3, 769.0], [55.4, 771.0], [55.5, 773.0], [55.6, 775.0], [55.7, 777.0], [55.8, 779.0], [55.9, 781.0], [56.0, 783.0], [56.1, 786.0], [56.2, 788.0], [56.3, 790.0], [56.4, 792.0], [56.5, 794.0], [56.6, 796.0], [56.7, 798.0], [56.8, 800.0], [56.9, 802.0], [57.0, 804.0], [57.1, 806.0], [57.2, 808.0], [57.3, 810.0], [57.4, 812.0], [57.5, 813.0], [57.6, 816.0], [57.7, 818.0], [57.8, 820.0], [57.9, 822.0], [58.0, 824.0], [58.1, 826.0], [58.2, 828.0], [58.3, 830.0], [58.4, 832.0], [58.5, 833.0], [58.6, 835.0], [58.7, 837.0], [58.8, 839.0], [58.9, 841.0], [59.0, 843.0], [59.1, 845.0], [59.2, 847.0], [59.3, 849.0], [59.4, 851.0], [59.5, 853.0], [59.6, 855.0], [59.7, 857.0], [59.8, 859.0], [59.9, 861.0], [60.0, 863.0], [60.1, 865.0], [60.2, 867.0], [60.3, 869.0], [60.4, 871.0], [60.5, 873.0], [60.6, 874.0], [60.7, 876.0], [60.8, 878.0], [60.9, 880.0], [61.0, 882.0], [61.1, 884.0], [61.2, 886.0], [61.3, 888.0], [61.4, 890.0], [61.5, 892.0], [61.6, 894.0], [61.7, 896.0], [61.8, 898.0], [61.9, 900.0], [62.0, 902.0], [62.1, 904.0], [62.2, 906.0], [62.3, 907.0], [62.4, 909.0], [62.5, 911.0], [62.6, 913.0], [62.7, 915.0], [62.8, 917.0], [62.9, 919.0], [63.0, 921.0], [63.1, 922.0], [63.2, 924.0], [63.3, 926.0], [63.4, 928.0], [63.5, 930.0], [63.6, 932.0], [63.7, 934.0], [63.8, 936.0], [63.9, 938.0], [64.0, 940.0], [64.1, 942.0], [64.2, 944.0], [64.3, 945.0], [64.4, 947.0], [64.5, 949.0], [64.6, 951.0], [64.7, 953.0], [64.8, 955.0], [64.9, 957.0], [65.0, 958.0], [65.1, 960.0], [65.2, 962.0], [65.3, 965.0], [65.4, 966.0], [65.5, 968.0], [65.6, 970.0], [65.7, 972.0], [65.8, 974.0], [65.9, 976.0], [66.0, 978.0], [66.1, 980.0], [66.2, 982.0], [66.3, 983.0], [66.4, 985.0], [66.5, 987.0], [66.6, 989.0], [66.7, 991.0], [66.8, 993.0], [66.9, 995.0], [67.0, 997.0], [67.1, 999.0], [67.2, 1001.0], [67.3, 1003.0], [67.4, 1005.0], [67.5, 1007.0], [67.6, 1009.0], [67.7, 1011.0], [67.8, 1013.0], [67.9, 1015.0], [68.0, 1017.0], [68.1, 1018.0], [68.2, 1020.0], [68.3, 1022.0], [68.4, 1024.0], [68.5, 1026.0], [68.6, 1028.0], [68.7, 1030.0], [68.8, 1032.0], [68.9, 1034.0], [69.0, 1036.0], [69.1, 1038.0], [69.2, 1040.0], [69.3, 1042.0], [69.4, 1044.0], [69.5, 1045.0], [69.6, 1047.0], [69.7, 1050.0], [69.8, 1052.0], [69.9, 1054.0], [70.0, 1056.0], [70.1, 1057.0], [70.2, 1059.0], [70.3, 1061.0], [70.4, 1063.0], [70.5, 1065.0], [70.6, 1067.0], [70.7, 1069.0], [70.8, 1071.0], [70.9, 1073.0], [71.0, 1075.0], [71.1, 1077.0], [71.2, 1079.0], [71.3, 1081.0], [71.4, 1083.0], [71.5, 1085.0], [71.6, 1087.0], [71.7, 1089.0], [71.8, 1091.0], [71.9, 1093.0], [72.0, 1095.0], [72.1, 1097.0], [72.2, 1099.0], [72.3, 1101.0], [72.4, 1102.0], [72.5, 1104.0], [72.6, 1106.0], [72.7, 1108.0], [72.8, 1110.0], [72.9, 1113.0], [73.0, 1114.0], [73.1, 1117.0], [73.2, 1119.0], [73.3, 1121.0], [73.4, 1123.0], [73.5, 1125.0], [73.6, 1127.0], [73.7, 1129.0], [73.8, 1131.0], [73.9, 1133.0], [74.0, 1135.0], [74.1, 1137.0], [74.2, 1139.0], [74.3, 1141.0], [74.4, 1143.0], [74.5, 1146.0], [74.6, 1148.0], [74.7, 1150.0], [74.8, 1152.0], [74.9, 1155.0], [75.0, 1157.0], [75.1, 1160.0], [75.2, 1162.0], [75.3, 1164.0], [75.4, 1166.0], [75.5, 1168.0], [75.6, 1170.0], [75.7, 1172.0], [75.8, 1175.0], [75.9, 1177.0], [76.0, 1179.0], [76.1, 1181.0], [76.2, 1183.0], [76.3, 1185.0], [76.4, 1187.0], [76.5, 1189.0], [76.6, 1192.0], [76.7, 1194.0], [76.8, 1196.0], [76.9, 1199.0], [77.0, 1201.0], [77.1, 1203.0], [77.2, 1206.0], [77.3, 1208.0], [77.4, 1210.0], [77.5, 1213.0], [77.6, 1214.0], [77.7, 1217.0], [77.8, 1219.0], [77.9, 1221.0], [78.0, 1224.0], [78.1, 1227.0], [78.2, 1229.0], [78.3, 1231.0], [78.4, 1234.0], [78.5, 1236.0], [78.6, 1238.0], [78.7, 1240.0], [78.8, 1243.0], [78.9, 1245.0], [79.0, 1248.0], [79.1, 1250.0], [79.2, 1252.0], [79.3, 1255.0], [79.4, 1257.0], [79.5, 1259.0], [79.6, 1262.0], [79.7, 1264.0], [79.8, 1266.0], [79.9, 1269.0], [80.0, 1271.0], [80.1, 1274.0], [80.2, 1276.0], [80.3, 1279.0], [80.4, 1281.0], [80.5, 1283.0], [80.6, 1285.0], [80.7, 1288.0], [80.8, 1290.0], [80.9, 1293.0], [81.0, 1295.0], [81.1, 1298.0], [81.2, 1300.0], [81.3, 1303.0], [81.4, 1305.0], [81.5, 1308.0], [81.6, 1310.0], [81.7, 1313.0], [81.8, 1315.0], [81.9, 1318.0], [82.0, 1322.0], [82.1, 1325.0], [82.2, 1328.0], [82.3, 1330.0], [82.4, 1333.0], [82.5, 1335.0], [82.6, 1338.0], [82.7, 1340.0], [82.8, 1343.0], [82.9, 1346.0], [83.0, 1348.0], [83.1, 1351.0], [83.2, 1354.0], [83.3, 1357.0], [83.4, 1359.0], [83.5, 1362.0], [83.6, 1365.0], [83.7, 1368.0], [83.8, 1371.0], [83.9, 1374.0], [84.0, 1377.0], [84.1, 1380.0], [84.2, 1383.0], [84.3, 1386.0], [84.4, 1389.0], [84.5, 1392.0], [84.6, 1395.0], [84.7, 1398.0], [84.8, 1401.0], [84.9, 1404.0], [85.0, 1407.0], [85.1, 1410.0], [85.2, 1413.0], [85.3, 1416.0], [85.4, 1419.0], [85.5, 1422.0], [85.6, 1425.0], [85.7, 1429.0], [85.8, 1432.0], [85.9, 1435.0], [86.0, 1438.0], [86.1, 1442.0], [86.2, 1445.0], [86.3, 1448.0], [86.4, 1451.0], [86.5, 1455.0], [86.6, 1459.0], [86.7, 1462.0], [86.8, 1466.0], [86.9, 1469.0], [87.0, 1473.0], [87.1, 1476.0], [87.2, 1480.0], [87.3, 1483.0], [87.4, 1487.0], [87.5, 1490.0], [87.6, 1494.0], [87.7, 1497.0], [87.8, 1500.0], [87.9, 1504.0], [88.0, 1508.0], [88.1, 1511.0], [88.2, 1515.0], [88.3, 1518.0], [88.4, 1521.0], [88.5, 1524.0], [88.6, 1528.0], [88.7, 1533.0], [88.8, 1537.0], [88.9, 1541.0], [89.0, 1545.0], [89.1, 1549.0], [89.2, 1553.0], [89.3, 1556.0], [89.4, 1560.0], [89.5, 1565.0], [89.6, 1569.0], [89.7, 1573.0], [89.8, 1577.0], [89.9, 1581.0], [90.0, 1585.0], [90.1, 1590.0], [90.2, 1594.0], [90.3, 1599.0], [90.4, 1603.0], [90.5, 1608.0], [90.6, 1613.0], [90.7, 1617.0], [90.8, 1622.0], [90.9, 1627.0], [91.0, 1631.0], [91.1, 1636.0], [91.2, 1642.0], [91.3, 1647.0], [91.4, 1651.0], [91.5, 1656.0], [91.6, 1661.0], [91.7, 1667.0], [91.8, 1672.0], [91.9, 1676.0], [92.0, 1681.0], [92.1, 1685.0], [92.2, 1690.0], [92.3, 1696.0], [92.4, 1702.0], [92.5, 1707.0], [92.6, 1713.0], [92.7, 1718.0], [92.8, 1724.0], [92.9, 1730.0], [93.0, 1736.0], [93.1, 1741.0], [93.2, 1748.0], [93.3, 1753.0], [93.4, 1759.0], [93.5, 1765.0], [93.6, 1771.0], [93.7, 1777.0], [93.8, 1784.0], [93.9, 1790.0], [94.0, 1797.0], [94.1, 1805.0], [94.2, 1810.0], [94.3, 1817.0], [94.4, 1826.0], [94.5, 1833.0], [94.6, 1839.0], [94.7, 1846.0], [94.8, 1852.0], [94.9, 1860.0], [95.0, 1868.0], [95.1, 1876.0], [95.2, 1883.0], [95.3, 1891.0], [95.4, 1899.0], [95.5, 1908.0], [95.6, 1916.0], [95.7, 1924.0], [95.8, 1933.0], [95.9, 1943.0], [96.0, 1952.0], [96.1, 1961.0], [96.2, 1972.0], [96.3, 1981.0], [96.4, 1991.0], [96.5, 2001.0], [96.6, 2011.0], [96.7, 2020.0], [96.8, 2031.0], [96.9, 2043.0], [97.0, 2057.0], [97.1, 2071.0], [97.2, 2083.0], [97.3, 2097.0], [97.4, 2108.0], [97.5, 2123.0], [97.6, 2134.0], [97.7, 2148.0], [97.8, 2163.0], [97.9, 2182.0], [98.0, 2197.0], [98.1, 2215.0], [98.2, 2232.0], [98.3, 2252.0], [98.4, 2271.0], [98.5, 2292.0], [98.6, 2312.0], [98.7, 2339.0], [98.8, 2363.0], [98.9, 2393.0], [99.0, 2423.0], [99.1, 2456.0], [99.2, 2485.0], [99.3, 2530.0], [99.4, 2574.0], [99.5, 2632.0], [99.6, 2705.0], [99.7, 2789.0], [99.8, 2903.0], [99.9, 3103.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 27207.0, "series": [{"data": [[0.0, 10254.0], [600.0, 4276.0], [700.0, 5452.0], [800.0, 5989.0], [900.0, 6134.0], [1000.0, 6014.0], [1100.0, 5501.0], [1200.0, 4951.0], [1300.0, 4188.0], [1400.0, 3560.0], [1500.0, 2980.0], [100.0, 27207.0], [1600.0, 2391.0], [1700.0, 1965.0], [1800.0, 1610.0], [1900.0, 1262.0], [2000.0, 989.0], [2100.0, 809.0], [2200.0, 621.0], [2300.0, 440.0], [2400.0, 365.0], [2500.0, 245.0], [2600.0, 177.0], [2700.0, 136.0], [2800.0, 102.0], [2900.0, 67.0], [3000.0, 53.0], [3100.0, 50.0], [200.0, 8904.0], [3200.0, 20.0], [3300.0, 13.0], [3400.0, 7.0], [3500.0, 11.0], [3600.0, 9.0], [3700.0, 3.0], [3800.0, 3.0], [4100.0, 3.0], [300.0, 3971.0], [400.0, 3059.0], [500.0, 3409.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 14294.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 53424.0, "series": [{"data": [[0.0, 53424.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 49482.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 14294.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.4782608695652173, "minX": 1.72872168E12, "maxY": 16.0, "series": [{"data": [[1.72872798E12, 12.0], [1.72872888E12, 12.0], [1.72872828E12, 12.0], [1.72872858E12, 12.0], [1.72872786E12, 12.0], [1.72872948E12, 1.7272727272727273], [1.72872816E12, 12.0], [1.72872918E12, 12.0], [1.72872726E12, 12.0], [1.72872756E12, 12.0], [1.72872876E12, 12.0], [1.72872744E12, 12.0], [1.72872846E12, 12.0], [1.72872936E12, 9.651589242053769], [1.72872906E12, 12.0], [1.72872834E12, 12.0], [1.72872774E12, 12.0], [1.72872864E12, 12.0], [1.72872804E12, 12.0], [1.72872762E12, 12.0], [1.72872924E12, 12.0], [1.72872792E12, 12.0], [1.72872894E12, 12.0], [1.72872732E12, 12.0], [1.7287272E12, 11.122448979591837], [1.72872822E12, 12.0], [1.72872912E12, 12.0], [1.72872852E12, 12.0], [1.72872882E12, 12.0], [1.7287281E12, 12.0], [1.7287284E12, 12.0], [1.72872942E12, 4.626780626780627], [1.7287275E12, 12.0], [1.7287278E12, 12.0], [1.72872738E12, 12.0], [1.728729E12, 12.0], [1.72872768E12, 12.0], [1.7287287E12, 12.0], [1.7287293E12, 12.0]], "isOverall": false, "label": "12", "isController": false}, {"data": [[1.7287218E12, 2.0], [1.72872198E12, 2.0], [1.72872192E12, 2.0], [1.72872204E12, 1.6944444444444446], [1.72872174E12, 2.0], [1.72872168E12, 2.0], [1.72872186E12, 2.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.72872294E12, 4.0], [1.72872324E12, 4.0], [1.72872354E12, 4.0], [1.72872444E12, 4.0], [1.72872384E12, 4.0], [1.72872204E12, 3.9970760233918146], [1.72872366E12, 4.0], [1.72872396E12, 4.0], [1.72872426E12, 4.0], [1.72872234E12, 4.0], [1.72872264E12, 4.0], [1.72872246E12, 4.0], [1.72872276E12, 4.0], [1.72872306E12, 4.0], [1.72872336E12, 4.0], [1.72872318E12, 4.0], [1.72872348E12, 4.0], [1.7287245E12, 3.854111405835544], [1.72872216E12, 4.0], [1.72872378E12, 4.0], [1.72872408E12, 4.0], [1.7287239E12, 4.0], [1.7287242E12, 4.0], [1.72872228E12, 4.0], [1.72872258E12, 4.0], [1.72872288E12, 4.0], [1.7287227E12, 4.0], [1.728723E12, 4.0], [1.7287233E12, 4.0], [1.7287236E12, 4.0], [1.72872438E12, 4.0], [1.72872342E12, 4.0], [1.72872456E12, 1.4782608695652173], [1.72872372E12, 4.0], [1.72872402E12, 4.0], [1.7287221E12, 4.0], [1.72872432E12, 4.0], [1.7287224E12, 4.0], [1.72872414E12, 4.0], [1.72872222E12, 4.0], [1.72872252E12, 4.0], [1.72872282E12, 4.0], [1.72872312E12, 4.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.7287302E12, 16.0], [1.7287299E12, 16.0], [1.7287305E12, 16.0], [1.7287308E12, 16.0], [1.72872948E12, 15.963103122043506], [1.7287311E12, 16.0], [1.72873008E12, 16.0], [1.72872978E12, 16.0], [1.72873038E12, 16.0], [1.72873068E12, 16.0], [1.72873098E12, 16.0], [1.72872996E12, 16.0], [1.72872966E12, 16.0], [1.72873056E12, 16.0], [1.72873026E12, 16.0], [1.72873086E12, 16.0], [1.72873116E12, 14.696381288614303], [1.72872984E12, 16.0], [1.72872954E12, 16.0], [1.72873044E12, 16.0], [1.72873014E12, 16.0], [1.72873074E12, 16.0], [1.72873104E12, 16.0], [1.72872972E12, 16.0], [1.72873032E12, 16.0], [1.72873002E12, 16.0], [1.72873062E12, 16.0], [1.72873092E12, 16.0], [1.7287296E12, 16.0], [1.72873122E12, 5.732704402515726]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.72872504E12, 8.0], [1.72872666E12, 8.0], [1.72872474E12, 8.0], [1.72872696E12, 8.0], [1.72872636E12, 8.0], [1.72872606E12, 8.0], [1.72872624E12, 8.0], [1.72872594E12, 8.0], [1.72872564E12, 8.0], [1.72872534E12, 8.0], [1.72872552E12, 8.0], [1.72872714E12, 7.92296511627907], [1.72872522E12, 8.0], [1.72872492E12, 8.0], [1.72872654E12, 8.0], [1.72872462E12, 8.0], [1.72872684E12, 8.0], [1.7287248E12, 8.0], [1.72872642E12, 8.0], [1.72872672E12, 8.0], [1.72872612E12, 8.0], [1.72872582E12, 8.0], [1.728726E12, 8.0], [1.7287257E12, 8.0], [1.7287254E12, 8.0], [1.72872702E12, 8.0], [1.7287251E12, 8.0], [1.72872528E12, 8.0], [1.7287269E12, 8.0], [1.72872498E12, 8.0], [1.7287272E12, 4.456310679611648], [1.72872468E12, 8.0], [1.7287263E12, 8.0], [1.7287266E12, 8.0], [1.72872456E12, 7.996282527881044], [1.72872618E12, 8.0], [1.72872648E12, 8.0], [1.72872588E12, 8.0], [1.72872558E12, 8.0], [1.72872576E12, 8.0], [1.72872546E12, 8.0], [1.72872516E12, 8.0], [1.72872678E12, 8.0], [1.72872486E12, 8.0], [1.72872708E12, 8.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72873122E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 540.0329670329671, "minX": 1.0, "maxY": 921.8874999999999, "series": [{"data": [[2.0, 616.5630630630627], [8.0, 662.6120127312299], [9.0, 687.3972602739724], [10.0, 540.0329670329671], [11.0, 675.6887417218544], [3.0, 582.9799196787145], [12.0, 724.7793629917621], [13.0, 921.8874999999999], [14.0, 827.3333333333333], [15.0, 747.5064655172414], [1.0, 630.9245283018871], [4.0, 627.2133891213372], [16.0, 876.7713123223996], [5.0, 676.6857142857144], [6.0, 630.3212121212122], [7.0, 649.8235294117646]], "isOverall": false, "label": "getmap", "isController": false}, {"data": [[10.713984641638147, 732.731373720128]], "isOverall": false, "label": "getmap-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.72872168E12, "maxY": 5.7466993666666664E7, "series": [{"data": [[1.7287302E12, 5.643039636666667E7], [1.72872474E12, 3.793934805E7], [1.72872696E12, 3.7363826666666664E7], [1.72872354E12, 2.069037395E7], [1.72872798E12, 4.9623551016666666E7], [1.72872594E12, 3.5856298983333334E7], [1.72872816E12, 5.0268775266666666E7], [1.72872918E12, 5.1307896E7], [1.72872234E12, 1.9831299466666665E7], [1.72872714E12, 3.71379614E7], [1.72873038E12, 5.664384193333333E7], [1.72872492E12, 3.590909225E7], [1.72872936E12, 4.226351131666667E7], [1.72872336E12, 1.85205905E7], [1.72872834E12, 5.085643896666667E7], [1.72872318E12, 1.9488719066666666E7], [1.72872216E12, 1.9625186483333334E7], [1.72872612E12, 3.574325243333333E7], [1.72873056E12, 5.695406075E7], [1.72872198E12, 9504736.9], [1.7287242E12, 1.887443365E7], [1.7287251E12, 3.569284346666667E7], [1.72872732E12, 5.025622375E7], [1.72872954E12, 5.585189871666667E7], [1.72872528E12, 3.671731475E7], [1.728723E12, 1.8119089066666666E7], [1.72873074E12, 5.5755442483333334E7], [1.7287263E12, 3.674055118333333E7], [1.72872852E12, 5.2117873233333334E7], [1.7287218E12, 9559930.366666667], [1.72872972E12, 5.473444968333333E7], [1.72872648E12, 3.7029502083333336E7], [1.72872402E12, 1.926779625E7], [1.7287275E12, 5.162155168333333E7], [1.72872546E12, 3.75980287E7], [1.72872768E12, 5.17070842E7], [1.7287287E12, 5.147637003333333E7], [1.72873092E12, 5.593407946666667E7], [1.72872282E12, 1.9372205483333334E7], [1.72872666E12, 3.796557468333333E7], [1.7287299E12, 5.64741329E7], [1.72872444E12, 1.8136058066666666E7], [1.72872888E12, 5.136802218333333E7], [1.72872384E12, 2.002308715E7], [1.72872366E12, 2.0016668516666666E7], [1.72872786E12, 4.765657053333333E7], [1.7287311E12, 5.39751829E7], [1.72872564E12, 3.636682165E7], [1.72873008E12, 5.6749541266666666E7], [1.72872264E12, 1.95839215E7], [1.72872246E12, 2.0167117016666666E7], [1.72872462E12, 3.680653478333333E7], [1.72872684E12, 3.5602795733333334E7], [1.72872906E12, 5.1071955516666666E7], [1.7287248E12, 3.78328951E7], [1.72872348E12, 1.967435455E7], [1.72872582E12, 3.6730286266666666E7], [1.72872804E12, 5.0929901416666664E7], [1.72873026E12, 5.585113781666667E7], [1.728726E12, 3.6635266833333336E7], [1.72872924E12, 4.956739868333333E7], [1.72872228E12, 1.9218366716666665E7], [1.72872702E12, 3.669344021666667E7], [1.72873044E12, 5.5907629583333336E7], [1.72872498E12, 3.750491438333333E7], [1.7287272E12, 1.82971302E7], [1.7287233E12, 1.876025955E7], [1.72872822E12, 5.02079873E7], [1.72872618E12, 3.61235042E7], [1.7287284E12, 4.908390818333333E7], [1.72872942E12, 1.7632621116666667E7], [1.7287221E12, 1.9250785633333333E7], [1.72872432E12, 2.022643895E7], [1.72872414E12, 1.877849115E7], [1.72872738E12, 4.9812619016666666E7], [1.72873062E12, 5.601720463333333E7], [1.7287296E12, 5.69597187E7], [1.72872516E12, 3.479795515E7], [1.72872312E12, 2.0321462616666667E7], [1.72872294E12, 2.0805706783333335E7], [1.72872192E12, 9978444.416666666], [1.72872636E12, 3.59708227E7], [1.72872858E12, 4.911718995E7], [1.7287308E12, 5.250717235E7], [1.72872174E12, 1.01161956E7], [1.72872396E12, 2.02474522E7], [1.72872756E12, 5.106051621666667E7], [1.72872978E12, 5.49829819E7], [1.72872534E12, 3.719455296666667E7], [1.72872552E12, 3.7512825916666664E7], [1.72872876E12, 4.7569041483333334E7], [1.72872276E12, 1.9990607816666666E7], [1.72872654E12, 3.629221965E7], [1.72873098E12, 5.566325415E7], [1.72872996E12, 5.572717931666667E7], [1.7287245E12, 1.8426734483333334E7], [1.72872672E12, 3.7813684016666666E7], [1.72872378E12, 1.94707179E7], [1.72872774E12, 5.08424193E7], [1.7287257E12, 3.688837143333333E7], [1.72872792E12, 5.061808805E7], [1.72872894E12, 4.971301961666667E7], [1.72873116E12, 5.227163931666667E7], [1.72872258E12, 1.9763537866666667E7], [1.7287269E12, 3.683807325E7], [1.72873014E12, 5.5153239766666666E7], [1.72872468E12, 3.496966875E7], [1.72872912E12, 5.010723056666667E7], [1.7287236E12, 1.907486505E7], [1.72872342E12, 1.9095171766666666E7], [1.7287281E12, 5.129678706666667E7], [1.72872588E12, 3.739360613333333E7], [1.72873032E12, 5.493685671666667E7], [1.7287224E12, 1.998264045E7], [1.72872222E12, 1.95074511E7], [1.72872486E12, 3.674270386666667E7], [1.72872708E12, 3.651631536666667E7], [1.7287293E12, 5.0501044483333334E7], [1.72872504E12, 3.7743023016666666E7], [1.72872324E12, 2.0217526783333335E7], [1.72872606E12, 3.64285621E7], [1.72872828E12, 4.8632067266666666E7], [1.7287305E12, 5.6687636983333334E7], [1.72872204E12, 1.6359448533333333E7], [1.72872624E12, 3.83415114E7], [1.72872948E12, 5.0601770516666666E7], [1.72872426E12, 1.9060760983333334E7], [1.72872726E12, 5.067534893333333E7], [1.72872522E12, 3.5903216016666666E7], [1.72872744E12, 5.0241288516666666E7], [1.72873068E12, 5.5521873516666666E7], [1.72872846E12, 5.141954035E7], [1.72872306E12, 1.9850766566666666E7], [1.72872642E12, 3.5770856416666664E7], [1.72872966E12, 5.60522575E7], [1.72872864E12, 5.138215486666667E7], [1.72872186E12, 1.01611943E7], [1.72872408E12, 2.0385519133333333E7], [1.7287239E12, 2.027484005E7], [1.72872762E12, 5.0845183416666664E7], [1.72873086E12, 5.631949495E7], [1.7287254E12, 3.603681655E7], [1.72872984E12, 5.7466993666666664E7], [1.72872288E12, 1.9934816583333332E7], [1.7287227E12, 2.0323706016666666E7], [1.72872168E12, 9732098.15], [1.72872438E12, 1.8674285816666666E7], [1.7287266E12, 3.702940518333333E7], [1.72872882E12, 4.945231428333333E7], [1.72873104E12, 5.6176244833333336E7], [1.72872456E12, 2.9132802233333334E7], [1.72872372E12, 1.8577176466666665E7], [1.72872558E12, 3.661604086666667E7], [1.7287278E12, 5.000751986666667E7], [1.72873002E12, 5.5786939733333334E7], [1.72872576E12, 3.637121113333333E7], [1.728729E12, 5.18249614E7], [1.72872252E12, 1.980867325E7], [1.72872678E12, 3.690565743333333E7], [1.72873122E12, 1.7565571633333333E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7287302E12, 0.0], [1.72872474E12, 0.0], [1.72872696E12, 0.0], [1.72872354E12, 0.0], [1.72872798E12, 0.0], [1.72872594E12, 0.0], [1.72872816E12, 0.0], [1.72872918E12, 0.0], [1.72872234E12, 0.0], [1.72872714E12, 0.0], [1.72873038E12, 0.0], [1.72872492E12, 0.0], [1.72872936E12, 0.0], [1.72872336E12, 0.0], [1.72872834E12, 0.0], [1.72872318E12, 0.0], [1.72872216E12, 0.0], [1.72872612E12, 0.0], [1.72873056E12, 0.0], [1.72872198E12, 0.0], [1.7287242E12, 0.0], [1.7287251E12, 0.0], [1.72872732E12, 0.0], [1.72872954E12, 0.0], [1.72872528E12, 0.0], [1.728723E12, 0.0], [1.72873074E12, 0.0], [1.7287263E12, 0.0], [1.72872852E12, 0.0], [1.7287218E12, 0.0], [1.72872972E12, 0.0], [1.72872648E12, 0.0], [1.72872402E12, 0.0], [1.7287275E12, 0.0], [1.72872546E12, 0.0], [1.72872768E12, 0.0], [1.7287287E12, 0.0], [1.72873092E12, 0.0], [1.72872282E12, 0.0], [1.72872666E12, 0.0], [1.7287299E12, 0.0], [1.72872444E12, 0.0], [1.72872888E12, 0.0], [1.72872384E12, 0.0], [1.72872366E12, 0.0], [1.72872786E12, 0.0], [1.7287311E12, 0.0], [1.72872564E12, 0.0], [1.72873008E12, 0.0], [1.72872264E12, 0.0], [1.72872246E12, 0.0], [1.72872462E12, 0.0], [1.72872684E12, 0.0], [1.72872906E12, 0.0], [1.7287248E12, 0.0], [1.72872348E12, 0.0], [1.72872582E12, 0.0], [1.72872804E12, 0.0], [1.72873026E12, 0.0], [1.728726E12, 0.0], [1.72872924E12, 0.0], [1.72872228E12, 0.0], [1.72872702E12, 0.0], [1.72873044E12, 0.0], [1.72872498E12, 0.0], [1.7287272E12, 0.0], [1.7287233E12, 0.0], [1.72872822E12, 0.0], [1.72872618E12, 0.0], [1.7287284E12, 0.0], [1.72872942E12, 0.0], [1.7287221E12, 0.0], [1.72872432E12, 0.0], [1.72872414E12, 0.0], [1.72872738E12, 0.0], [1.72873062E12, 0.0], [1.7287296E12, 0.0], [1.72872516E12, 0.0], [1.72872312E12, 0.0], [1.72872294E12, 0.0], [1.72872192E12, 0.0], [1.72872636E12, 0.0], [1.72872858E12, 0.0], [1.7287308E12, 0.0], [1.72872174E12, 0.0], [1.72872396E12, 0.0], [1.72872756E12, 0.0], [1.72872978E12, 0.0], [1.72872534E12, 0.0], [1.72872552E12, 0.0], [1.72872876E12, 0.0], [1.72872276E12, 0.0], [1.72872654E12, 0.0], [1.72873098E12, 0.0], [1.72872996E12, 0.0], [1.7287245E12, 0.0], [1.72872672E12, 0.0], [1.72872378E12, 0.0], [1.72872774E12, 0.0], [1.7287257E12, 0.0], [1.72872792E12, 0.0], [1.72872894E12, 0.0], [1.72873116E12, 0.0], [1.72872258E12, 0.0], [1.7287269E12, 0.0], [1.72873014E12, 0.0], [1.72872468E12, 0.0], [1.72872912E12, 0.0], [1.7287236E12, 0.0], [1.72872342E12, 0.0], [1.7287281E12, 0.0], [1.72872588E12, 0.0], [1.72873032E12, 0.0], [1.7287224E12, 0.0], [1.72872222E12, 0.0], [1.72872486E12, 0.0], [1.72872708E12, 0.0], [1.7287293E12, 0.0], [1.72872504E12, 0.0], [1.72872324E12, 0.0], [1.72872606E12, 0.0], [1.72872828E12, 0.0], [1.7287305E12, 0.0], [1.72872204E12, 0.0], [1.72872624E12, 0.0], [1.72872948E12, 0.0], [1.72872426E12, 0.0], [1.72872726E12, 0.0], [1.72872522E12, 0.0], [1.72872744E12, 0.0], [1.72873068E12, 0.0], [1.72872846E12, 0.0], [1.72872306E12, 0.0], [1.72872642E12, 0.0], [1.72872966E12, 0.0], [1.72872864E12, 0.0], [1.72872186E12, 0.0], [1.72872408E12, 0.0], [1.7287239E12, 0.0], [1.72872762E12, 0.0], [1.72873086E12, 0.0], [1.7287254E12, 0.0], [1.72872984E12, 0.0], [1.72872288E12, 0.0], [1.7287227E12, 0.0], [1.72872168E12, 0.0], [1.72872438E12, 0.0], [1.7287266E12, 0.0], [1.72872882E12, 0.0], [1.72873104E12, 0.0], [1.72872456E12, 0.0], [1.72872372E12, 0.0], [1.72872558E12, 0.0], [1.7287278E12, 0.0], [1.72873002E12, 0.0], [1.72872576E12, 0.0], [1.728729E12, 0.0], [1.72872252E12, 0.0], [1.72872678E12, 0.0], [1.72873122E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72873122E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 557.7169312169309, "minX": 1.72872168E12, "maxY": 940.8878048780497, "series": [{"data": [[1.7287302E12, 876.5894160583942], [1.72872474E12, 661.7791666666665], [1.72872696E12, 668.6671309192199], [1.72872354E12, 662.2845303867404], [1.72872798E12, 712.8766169154234], [1.72872594E12, 675.3578500707216], [1.72872816E12, 736.4233502538071], [1.72872918E12, 741.7925696594424], [1.72872234E12, 692.8428571428566], [1.72872714E12, 690.4171511627902], [1.72873038E12, 879.3844036697243], [1.72872492E12, 659.6323731138543], [1.72872936E12, 705.4400977995103], [1.72872336E12, 595.8557213930349], [1.72872834E12, 759.4399999999999], [1.72872318E12, 615.1076923076927], [1.72872216E12, 613.6725888324878], [1.72872612E12, 659.112792297111], [1.72873056E12, 940.8878048780497], [1.72872198E12, 610.2462311557791], [1.7287242E12, 656.4636118598384], [1.7287251E12, 674.5241477272725], [1.72872732E12, 707.7268244575937], [1.72872954E12, 869.4854809437392], [1.72872528E12, 663.0521978021977], [1.728723E12, 616.6191709844562], [1.72873074E12, 860.5165622202323], [1.7287263E12, 648.9905913978492], [1.72872852E12, 700.7096774193552], [1.7287218E12, 605.5175879396984], [1.72872972E12, 864.690990990991], [1.72872648E12, 676.6878531073445], [1.72872402E12, 658.3726027397261], [1.7287275E12, 749.7843749999997], [1.72872546E12, 663.9750346740635], [1.72872768E12, 721.723723723724], [1.7287287E12, 700.6099221789882], [1.72873092E12, 853.8351063829791], [1.72872282E12, 651.3487738419615], [1.72872666E12, 681.5296610169496], [1.7287299E12, 886.3200371057516], [1.72872444E12, 618.7969151670956], [1.72872888E12, 745.2712215320906], [1.72872384E12, 613.3580562659852], [1.72872366E12, 619.298200514139], [1.72872786E12, 709.6798418972329], [1.7287311E12, 902.0830188679238], [1.72872564E12, 611.9593392630239], [1.72873008E12, 855.8159999999997], [1.72872264E12, 631.6404199475061], [1.72872246E12, 624.7246753246752], [1.72872462E12, 683.7277936962746], [1.72872684E12, 664.5103448275858], [1.72872906E12, 717.255721393035], [1.7287248E12, 647.7072192513372], [1.72872348E12, 603.7719298245617], [1.72872582E12, 670.4789325842696], [1.72872804E12, 699.8759689922482], [1.72873026E12, 842.2958735733096], [1.728726E12, 672.0224403927066], [1.72872924E12, 734.5715736040618], [1.72872228E12, 639.9946380697056], [1.72872702E12, 683.7738264580365], [1.72873044E12, 924.1906130268192], [1.72872498E12, 675.3098591549297], [1.7287272E12, 648.4134078212292], [1.7287233E12, 587.3308823529411], [1.72872822E12, 752.4521556256576], [1.72872618E12, 674.5289957567179], [1.7287284E12, 698.2439261418848], [1.72872942E12, 625.1737891737891], [1.7287221E12, 640.9758064516133], [1.72872432E12, 627.2161458333333], [1.72872414E12, 606.4020356234097], [1.72872738E12, 710.3032384690874], [1.72873062E12, 882.3186003683244], [1.7287296E12, 864.5661896243287], [1.72872516E12, 638.6124338624329], [1.72872312E12, 623.4304123711339], [1.72872294E12, 641.2679045092835], [1.72872192E12, 688.46511627907], [1.72872636E12, 635.0939153439155], [1.72872858E12, 710.9584980237147], [1.7287308E12, 874.25], [1.72872174E12, 558.1877934272298], [1.72872396E12, 649.9239130434784], [1.72872756E12, 725.6925403225797], [1.72872978E12, 837.6829694323144], [1.72872534E12, 690.6199421965321], [1.72872552E12, 655.3125], [1.72872876E12, 720.2197802197804], [1.72872276E12, 689.2270114942525], [1.72872654E12, 662.4041379310339], [1.72873098E12, 880.1646734130638], [1.72872996E12, 865.4892086330937], [1.7287245E12, 601.2493368700262], [1.72872672E12, 673.9129213483138], [1.72872378E12, 638.291777188329], [1.72872774E12, 742.7325102880662], [1.7287257E12, 644.9784075573548], [1.72872792E12, 752.1637122002081], [1.72872894E12, 734.7176350662581], [1.72873116E12, 784.7528684907325], [1.72872258E12, 623.8215223097113], [1.7287269E12, 659.6206896551724], [1.72873014E12, 916.4295302013429], [1.72872468E12, 647.4304812834229], [1.72872912E12, 674.4343339587238], [1.7287236E12, 599.2336683417084], [1.72872342E12, 648.7777777777779], [1.7287281E12, 763.6918172157275], [1.72872588E12, 698.2702312138732], [1.72873032E12, 846.3899647887322], [1.7287224E12, 633.8643617021273], [1.72872222E12, 615.4241645244217], [1.72872486E12, 648.5758807588079], [1.72872708E12, 670.2914923291487], [1.7287293E12, 760.4027484143766], [1.72872504E12, 629.8888888888894], [1.72872324E12, 608.3629441624367], [1.72872606E12, 636.291556728232], [1.72872828E12, 675.9793427230051], [1.7287305E12, 860.5532490974728], [1.72872204E12, 557.7169312169309], [1.72872624E12, 671.2601398601406], [1.72872948E12, 824.145131086141], [1.72872426E12, 667.4453781512611], [1.72872726E12, 694.973938223938], [1.72872522E12, 643.1438172043008], [1.72872744E12, 740.6268041237122], [1.72873068E12, 905.8423040604339], [1.72872846E12, 725.5191146881299], [1.72872306E12, 671.9719101123599], [1.72872642E12, 618.0], [1.72872966E12, 847.5485865724385], [1.72872864E12, 732.3634517766494], [1.72872186E12, 574.191387559809], [1.72872408E12, 679.2073863636368], [1.7287239E12, 584.1192214111929], [1.72872762E12, 800.6525612472158], [1.72873086E12, 882.9908003679843], [1.7287254E12, 667.842837273991], [1.72872984E12, 895.4276377217546], [1.72872288E12, 594.9702233250624], [1.7287227E12, 696.115606936417], [1.72872168E12, 634.1918604651166], [1.72872438E12, 562.032863849765], [1.7287266E12, 667.6521739130442], [1.72872882E12, 703.4803536345777], [1.72873104E12, 932.741747572816], [1.72872456E12, 668.147950089127], [1.72872372E12, 602.468671679198], [1.72872558E12, 680.5883190883197], [1.7287278E12, 719.7071213640932], [1.72873002E12, 898.9466292134832], [1.72872576E12, 685.3527738264576], [1.728729E12, 716.3349900596438], [1.72872252E12, 614.4030612244896], [1.72872678E12, 670.8039215686276], [1.72873122E12, 680.6918238993717]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72873122E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 380.9201877934274, "minX": 1.72872168E12, "maxY": 639.3034146341458, "series": [{"data": [[1.7287302E12, 592.4881386861309], [1.72872474E12, 452.986111111111], [1.72872696E12, 460.0696378830086], [1.72872354E12, 453.71270718232057], [1.72872798E12, 491.33830845771126], [1.72872594E12, 467.5219236209338], [1.72872816E12, 505.22639593908644], [1.72872918E12, 503.9504643962849], [1.72872234E12, 481.6742857142854], [1.72872714E12, 474.21366279069747], [1.72873038E12, 596.3642201834866], [1.72872492E12, 462.0164609053498], [1.72872936E12, 486.07334963325167], [1.72872336E12, 419.0422885572139], [1.72872834E12, 519.577894736842], [1.72872318E12, 423.6948717948718], [1.72872216E12, 423.54314720812175], [1.72872612E12, 458.43466299862456], [1.72873056E12, 639.3034146341458], [1.72872198E12, 427.643216080402], [1.7287242E12, 463.2345013477091], [1.7287251E12, 467.20596590909054], [1.72872732E12, 485.78303747534545], [1.72872954E12, 592.3194192377492], [1.72872528E12, 457.43956043956047], [1.728723E12, 434.77979274611397], [1.72873074E12, 583.5819158460174], [1.7287263E12, 450.84005376344066], [1.72872852E12, 476.0400782013685], [1.7287218E12, 422.8190954773869], [1.72872972E12, 592.9576576576571], [1.72872648E12, 469.8418079096045], [1.72872402E12, 457.56712328767117], [1.7287275E12, 511.2770833333335], [1.72872546E12, 457.47850208044406], [1.72872768E12, 490.27127127127085], [1.7287287E12, 475.463035019455], [1.72873092E12, 585.6108156028369], [1.72872282E12, 451.49046321525907], [1.72872666E12, 467.86581920903956], [1.7287299E12, 599.6289424860867], [1.72872444E12, 434.59897172236504], [1.72872888E12, 510.8478260869572], [1.72872384E12, 419.7570332480815], [1.72872366E12, 428.9280205655527], [1.72872786E12, 491.38241106719397], [1.7287311E12, 620.477358490566], [1.72872564E12, 423.98729351969484], [1.72873008E12, 583.9457777777772], [1.72872264E12, 438.21784776902865], [1.72872246E12, 430.8493506493505], [1.72872462E12, 475.18481375358203], [1.72872684E12, 464.7158620689653], [1.72872906E12, 492.3731343283583], [1.7287248E12, 446.1002673796795], [1.72872348E12, 417.3383458646616], [1.72872582E12, 463.9199438202252], [1.72872804E12, 477.59399224806225], [1.72873026E12, 571.970149253732], [1.728726E12, 463.9985974754559], [1.72872924E12, 507.3096446700508], [1.72872228E12, 446.3136729222516], [1.72872702E12, 475.2944523470837], [1.72873044E12, 628.8438697318003], [1.72872498E12, 463.64788732394317], [1.7287272E12, 447.14525139664784], [1.7287233E12, 409.96568627451006], [1.72872822E12, 517.7181913774973], [1.72872618E12, 466.025459688826], [1.7287284E12, 484.18658892128303], [1.72872942E12, 431.84045584045606], [1.7287221E12, 442.3790322580646], [1.72872432E12, 428.7994791666664], [1.72872414E12, 423.68702290076357], [1.72872738E12, 487.90480863591773], [1.72873062E12, 599.1040515653774], [1.7287296E12, 585.7262969588561], [1.72872516E12, 447.6574074074076], [1.72872312E12, 429.39948453608275], [1.72872294E12, 436.67374005305044], [1.72872192E12, 478.6511627906977], [1.72872636E12, 440.3015873015872], [1.72872858E12, 493.07015810276704], [1.7287308E12, 599.2919708029202], [1.72872174E12, 380.9201877934274], [1.72872396E12, 446.5135869565217], [1.72872756E12, 495.4112903225807], [1.72872978E12, 571.9842794759813], [1.72872534E12, 479.40317919075096], [1.72872552E12, 453.2663043478261], [1.72872876E12, 499.9740259740259], [1.72872276E12, 479.3706896551723], [1.72872654E12, 457.78482758620703], [1.72873098E12, 598.9503219871206], [1.72872996E12, 595.0503597122299], [1.7287245E12, 415.8063660477453], [1.72872672E12, 463.4016853932581], [1.72872378E12, 444.679045092838], [1.72872774E12, 509.2376543209877], [1.7287257E12, 447.097165991903], [1.72872792E12, 513.0427528675704], [1.72872894E12, 505.83792048929695], [1.72873116E12, 536.7466902030009], [1.72872258E12, 430.16535433070857], [1.7287269E12, 453.0731034482756], [1.72873014E12, 621.7344199424746], [1.72872468E12, 457.2620320855614], [1.72872912E12, 460.5703564727953], [1.7287236E12, 416.1507537688442], [1.72872342E12, 450.98644986449875], [1.7287281E12, 517.6014877789581], [1.72872588E12, 482.6098265895955], [1.72873032E12, 578.49911971831], [1.7287224E12, 434.73138297872316], [1.72872222E12, 426.0719794344475], [1.72872486E12, 448.8130081300814], [1.72872708E12, 465.58158995815944], [1.7287293E12, 519.5898520084559], [1.72872504E12, 433.05228758169926], [1.72872324E12, 417.56091370558374], [1.72872606E12, 443.5118733509237], [1.72872828E12, 465.977464788732], [1.7287305E12, 584.5685920577608], [1.72872204E12, 389.3439153439152], [1.72872624E12, 460.61818181818205], [1.72872948E12, 567.8801498127331], [1.72872426E12, 464.38095238095275], [1.72872726E12, 473.7905405405408], [1.72872522E12, 446.9865591397846], [1.72872744E12, 505.63608247422707], [1.72873068E12, 615.3588290840412], [1.72872846E12, 494.689134808853], [1.72872306E12, 463.37359550561763], [1.72872642E12, 431.47361647361663], [1.72872966E12, 575.3197879858656], [1.72872864E12, 496.8751269035532], [1.72872186E12, 394.8421052631579], [1.72872408E12, 464.4829545454545], [1.7287239E12, 399.5839416058393], [1.72872762E12, 546.227171492205], [1.72873086E12, 598.9172033118676], [1.7287254E12, 465.5716272600834], [1.72872984E12, 600.6582633053217], [1.72872288E12, 409.56079404466516], [1.7287227E12, 478.64739884393066], [1.72872168E12, 430.9593023255813], [1.72872438E12, 390.6901408450706], [1.7287266E12, 458.5652173913046], [1.72872882E12, 483.37622789783876], [1.72873104E12, 630.1077669902919], [1.72872456E12, 462.10516934046376], [1.72872372E12, 422.94987468671707], [1.72872558E12, 472.6695156695155], [1.7287278E12, 492.0732196589769], [1.72873002E12, 608.6029962546817], [1.72872576E12, 474.8904694167852], [1.728729E12, 488.81709741550685], [1.72872252E12, 424.20918367346906], [1.72872678E12, 465.404761904762], [1.72873122E12, 467.89937106918256]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72873122E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72872168E12, "maxY": 4.9E-324, "series": [{"data": [[1.7287302E12, 0.0], [1.72872474E12, 0.0], [1.72872696E12, 0.0], [1.72872354E12, 0.0], [1.72872798E12, 0.0], [1.72872594E12, 0.0], [1.72872816E12, 0.0], [1.72872918E12, 0.0], [1.72872234E12, 0.0], [1.72872714E12, 0.0], [1.72873038E12, 0.0], [1.72872492E12, 0.0], [1.72872936E12, 0.0], [1.72872336E12, 0.0], [1.72872834E12, 0.0], [1.72872318E12, 0.0], [1.72872216E12, 0.0], [1.72872612E12, 0.0], [1.72873056E12, 0.0], [1.72872198E12, 0.0], [1.7287242E12, 0.0], [1.7287251E12, 0.0], [1.72872732E12, 0.0], [1.72872954E12, 0.0], [1.72872528E12, 0.0], [1.728723E12, 0.0], [1.72873074E12, 0.0], [1.7287263E12, 0.0], [1.72872852E12, 0.0], [1.7287218E12, 0.0], [1.72872972E12, 0.0], [1.72872648E12, 0.0], [1.72872402E12, 0.0], [1.7287275E12, 0.0], [1.72872546E12, 0.0], [1.72872768E12, 0.0], [1.7287287E12, 0.0], [1.72873092E12, 0.0], [1.72872282E12, 0.0], [1.72872666E12, 0.0], [1.7287299E12, 0.0], [1.72872444E12, 0.0], [1.72872888E12, 0.0], [1.72872384E12, 0.0], [1.72872366E12, 0.0], [1.72872786E12, 0.0], [1.7287311E12, 0.0], [1.72872564E12, 0.0], [1.72873008E12, 0.0], [1.72872264E12, 0.0], [1.72872246E12, 0.0], [1.72872462E12, 0.0], [1.72872684E12, 0.0], [1.72872906E12, 0.0], [1.7287248E12, 0.0], [1.72872348E12, 0.0], [1.72872582E12, 0.0], [1.72872804E12, 0.0], [1.72873026E12, 0.0], [1.728726E12, 0.0], [1.72872924E12, 0.0], [1.72872228E12, 0.0], [1.72872702E12, 0.0], [1.72873044E12, 0.0], [1.72872498E12, 0.0], [1.7287272E12, 0.0], [1.7287233E12, 0.0], [1.72872822E12, 0.0], [1.72872618E12, 0.0], [1.7287284E12, 0.0], [1.72872942E12, 0.0], [1.7287221E12, 0.0], [1.72872432E12, 0.0], [1.72872414E12, 0.0], [1.72872738E12, 0.0], [1.72873062E12, 0.0], [1.7287296E12, 0.0], [1.72872516E12, 0.0], [1.72872312E12, 0.0], [1.72872294E12, 0.0], [1.72872192E12, 0.0], [1.72872636E12, 0.0], [1.72872858E12, 0.0], [1.7287308E12, 0.0], [1.72872174E12, 0.0], [1.72872396E12, 0.0], [1.72872756E12, 0.0], [1.72872978E12, 0.0], [1.72872534E12, 0.0], [1.72872552E12, 0.0], [1.72872876E12, 0.0], [1.72872276E12, 0.0], [1.72872654E12, 0.0], [1.72873098E12, 0.0], [1.72872996E12, 0.0], [1.7287245E12, 0.0], [1.72872672E12, 0.0], [1.72872378E12, 0.0], [1.72872774E12, 0.0], [1.7287257E12, 0.0], [1.72872792E12, 0.0], [1.72872894E12, 0.0], [1.72873116E12, 0.0], [1.72872258E12, 0.0], [1.7287269E12, 0.0], [1.72873014E12, 0.0], [1.72872468E12, 0.0], [1.72872912E12, 0.0], [1.7287236E12, 0.0], [1.72872342E12, 0.0], [1.7287281E12, 0.0], [1.72872588E12, 0.0], [1.72873032E12, 0.0], [1.7287224E12, 0.0], [1.72872222E12, 0.0], [1.72872486E12, 0.0], [1.72872708E12, 0.0], [1.7287293E12, 0.0], [1.72872504E12, 0.0], [1.72872324E12, 0.0], [1.72872606E12, 0.0], [1.72872828E12, 0.0], [1.7287305E12, 0.0], [1.72872204E12, 0.0], [1.72872624E12, 0.0], [1.72872948E12, 0.0], [1.72872426E12, 0.0], [1.72872726E12, 0.0], [1.72872522E12, 0.0], [1.72872744E12, 0.0], [1.72873068E12, 0.0], [1.72872846E12, 0.0], [1.72872306E12, 0.0], [1.72872642E12, 0.0], [1.72872966E12, 0.0], [1.72872864E12, 0.0], [1.72872186E12, 0.0], [1.72872408E12, 0.0], [1.7287239E12, 0.0], [1.72872762E12, 0.0], [1.72873086E12, 0.0], [1.7287254E12, 0.0], [1.72872984E12, 0.0], [1.72872288E12, 0.0], [1.7287227E12, 0.0], [1.72872168E12, 0.0], [1.72872438E12, 0.0], [1.7287266E12, 0.0], [1.72872882E12, 0.0], [1.72873104E12, 0.0], [1.72872456E12, 0.0], [1.72872372E12, 0.0], [1.72872558E12, 0.0], [1.7287278E12, 0.0], [1.72873002E12, 0.0], [1.72872576E12, 0.0], [1.728729E12, 0.0], [1.72872252E12, 0.0], [1.72872678E12, 0.0], [1.72873122E12, 0.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72873122E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 41.0, "minX": 1.72872168E12, "maxY": 4139.0, "series": [{"data": [[1.7287302E12, 3673.0], [1.72872474E12, 2457.0], [1.72872696E12, 2937.0], [1.72872354E12, 2524.0], [1.72872798E12, 2817.0], [1.72872594E12, 2470.0], [1.72872816E12, 3045.0], [1.72872918E12, 2845.0], [1.72872234E12, 2130.0], [1.72872714E12, 2795.0], [1.72873038E12, 3349.0], [1.72872492E12, 2490.0], [1.72872936E12, 2652.0], [1.72872336E12, 2124.0], [1.72872834E12, 2711.0], [1.72872318E12, 2437.0], [1.72872216E12, 2280.0], [1.72872612E12, 2561.0], [1.72873056E12, 3764.0], [1.72872198E12, 2193.0], [1.7287242E12, 2597.0], [1.7287251E12, 2758.0], [1.72872732E12, 3219.0], [1.72872954E12, 3513.0], [1.72872528E12, 2597.0], [1.728723E12, 2581.0], [1.72873074E12, 3803.0], [1.7287263E12, 2419.0], [1.72872852E12, 2720.0], [1.7287218E12, 2590.0], [1.72872972E12, 4130.0], [1.72872648E12, 2516.0], [1.72872402E12, 2512.0], [1.7287275E12, 3230.0], [1.72872546E12, 2664.0], [1.72872768E12, 3194.0], [1.7287287E12, 2718.0], [1.72873092E12, 3382.0], [1.72872282E12, 2279.0], [1.72872666E12, 2971.0], [1.7287299E12, 3603.0], [1.72872444E12, 2437.0], [1.72872888E12, 2646.0], [1.72872384E12, 2174.0], [1.72872366E12, 2183.0], [1.72872786E12, 2827.0], [1.7287311E12, 3577.0], [1.72872564E12, 2381.0], [1.72873008E12, 4136.0], [1.72872264E12, 2691.0], [1.72872246E12, 2303.0], [1.72872462E12, 2620.0], [1.72872684E12, 2825.0], [1.72872906E12, 3129.0], [1.7287248E12, 2536.0], [1.72872348E12, 2483.0], [1.72872582E12, 2630.0], [1.72872804E12, 2515.0], [1.72873026E12, 3194.0], [1.728726E12, 2539.0], [1.72872924E12, 2850.0], [1.72872228E12, 2513.0], [1.72872702E12, 2282.0], [1.72873044E12, 3446.0], [1.72872498E12, 2728.0], [1.7287272E12, 2477.0], [1.7287233E12, 2410.0], [1.72872822E12, 2691.0], [1.72872618E12, 2538.0], [1.7287284E12, 3046.0], [1.72872942E12, 2395.0], [1.7287221E12, 2008.0], [1.72872432E12, 2146.0], [1.72872414E12, 2342.0], [1.72872738E12, 2788.0], [1.72873062E12, 3144.0], [1.7287296E12, 3162.0], [1.72872516E12, 2538.0], [1.72872312E12, 2423.0], [1.72872294E12, 2615.0], [1.72872192E12, 2043.0], [1.72872636E12, 2552.0], [1.72872858E12, 2751.0], [1.7287308E12, 3471.0], [1.72872174E12, 2088.0], [1.72872396E12, 2606.0], [1.72872756E12, 3104.0], [1.72872978E12, 3300.0], [1.72872534E12, 2549.0], [1.72872552E12, 2633.0], [1.72872876E12, 3118.0], [1.72872276E12, 2068.0], [1.72872654E12, 2415.0], [1.72873098E12, 3229.0], [1.72872996E12, 3500.0], [1.7287245E12, 2199.0], [1.72872672E12, 2518.0], [1.72872378E12, 2130.0], [1.72872774E12, 3089.0], [1.7287257E12, 2339.0], [1.72872792E12, 3098.0], [1.72872894E12, 2684.0], [1.72873116E12, 3451.0], [1.72872258E12, 2247.0], [1.7287269E12, 2400.0], [1.72873014E12, 4139.0], [1.72872468E12, 2555.0], [1.72872912E12, 2813.0], [1.7287236E12, 2265.0], [1.72872342E12, 2127.0], [1.7287281E12, 3308.0], [1.72872588E12, 2714.0], [1.72873032E12, 3553.0], [1.7287224E12, 2202.0], [1.72872222E12, 2222.0], [1.72872486E12, 2523.0], [1.72872708E12, 2765.0], [1.7287293E12, 3277.0], [1.72872504E12, 2524.0], [1.72872324E12, 2450.0], [1.72872606E12, 2684.0], [1.72872828E12, 3002.0], [1.7287305E12, 3665.0], [1.72872204E12, 2093.0], [1.72872624E12, 2375.0], [1.72872948E12, 3257.0], [1.72872426E12, 2565.0], [1.72872726E12, 2632.0], [1.72872522E12, 2720.0], [1.72872744E12, 2703.0], [1.72873068E12, 3840.0], [1.72872846E12, 2764.0], [1.72872306E12, 2572.0], [1.72872642E12, 2550.0], [1.72872966E12, 3287.0], [1.72872864E12, 2832.0], [1.72872186E12, 2092.0], [1.72872408E12, 2067.0], [1.7287239E12, 1793.0], [1.72872762E12, 3044.0], [1.72873086E12, 3516.0], [1.7287254E12, 2584.0], [1.72872984E12, 3603.0], [1.72872288E12, 1938.0], [1.7287227E12, 2592.0], [1.72872168E12, 2179.0], [1.72872438E12, 2007.0], [1.7287266E12, 2530.0], [1.72872882E12, 2907.0], [1.72873104E12, 3865.0], [1.72872456E12, 2252.0], [1.72872372E12, 2230.0], [1.72872558E12, 2405.0], [1.7287278E12, 2932.0], [1.72873002E12, 3603.0], [1.72872576E12, 2686.0], [1.728729E12, 2632.0], [1.72872252E12, 2487.0], [1.72872678E12, 2472.0], [1.72873122E12, 2348.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7287302E12, 1921.0], [1.72872474E12, 1436.8], [1.72872696E12, 1490.5000000000005], [1.72872354E12, 1380.6], [1.72872798E12, 1577.4], [1.72872594E12, 1392.4], [1.72872816E12, 1595.7999999999997], [1.72872918E12, 1547.0], [1.72872234E12, 1361.9], [1.72872714E12, 1477.8000000000002], [1.72873038E12, 1880.1], [1.72872492E12, 1430.0], [1.72872936E12, 1465.7000000000003], [1.72872336E12, 1295.5], [1.72872834E12, 1679.3999999999999], [1.72872318E12, 1292.7], [1.72872216E12, 1355.0], [1.72872612E12, 1468.0000000000007], [1.72873056E12, 1977.1999999999998], [1.72872198E12, 1324.0], [1.7287242E12, 1319.2], [1.7287251E12, 1427.0], [1.72872732E12, 1559.5], [1.72872954E12, 1912.7], [1.72872528E12, 1397.3000000000002], [1.728723E12, 1335.9], [1.72873074E12, 1876.4], [1.7287263E12, 1361.5], [1.72872852E12, 1531.6], [1.7287218E12, 1330.0], [1.72872972E12, 1866.6999999999998], [1.72872648E12, 1439.4], [1.72872402E12, 1416.6000000000004], [1.7287275E12, 1544.9], [1.72872546E12, 1426.2000000000003], [1.72872768E12, 1572.0], [1.7287287E12, 1559.5], [1.72873092E12, 1845.7000000000003], [1.72872282E12, 1437.3999999999999], [1.72872666E12, 1458.2], [1.7287299E12, 1915.0], [1.72872444E12, 1312.0], [1.72872888E12, 1556.0], [1.72872384E12, 1370.4000000000003], [1.72872366E12, 1341.0], [1.72872786E12, 1572.0], [1.7287311E12, 1925.8999999999996], [1.72872564E12, 1340.4], [1.72873008E12, 1815.4], [1.72872264E12, 1381.8], [1.72872246E12, 1331.4], [1.72872462E12, 1427.2], [1.72872684E12, 1391.0], [1.72872906E12, 1561.0], [1.7287248E12, 1406.4], [1.72872348E12, 1344.0], [1.72872582E12, 1399.4], [1.72872804E12, 1552.5000000000002], [1.72873026E12, 1892.0], [1.728726E12, 1446.8000000000002], [1.72872924E12, 1549.6], [1.72872228E12, 1371.0], [1.72872702E12, 1407.8000000000002], [1.72873044E12, 1906.5], [1.72872498E12, 1408.1], [1.7287272E12, 1433.2000000000003], [1.7287233E12, 1282.4000000000005], [1.72872822E12, 1576.6000000000001], [1.72872618E12, 1415.6000000000008], [1.7287284E12, 1495.0], [1.72872942E12, 1287.0], [1.7287221E12, 1315.8], [1.72872432E12, 1359.0], [1.72872414E12, 1343.0], [1.72872738E12, 1568.0], [1.72873062E12, 1941.3000000000002], [1.7287296E12, 1901.9], [1.72872516E12, 1340.0], [1.72872312E12, 1304.0000000000002], [1.72872294E12, 1353.8], [1.72872192E12, 1355.0000000000002], [1.72872636E12, 1376.8000000000004], [1.72872858E12, 1535.8000000000002], [1.7287308E12, 1912.9], [1.72872174E12, 1266.3999999999999], [1.72872396E12, 1379.0000000000002], [1.72872756E12, 1596.9000000000003], [1.72872978E12, 1824.4], [1.72872534E12, 1438.4], [1.72872552E12, 1432.1000000000004], [1.72872876E12, 1521.2000000000003], [1.72872276E12, 1359.0], [1.72872654E12, 1411.6], [1.72873098E12, 1919.8000000000002], [1.72872996E12, 1859.5000000000007], [1.7287245E12, 1304.6], [1.72872672E12, 1432.7], [1.72872378E12, 1361.1999999999998], [1.72872774E12, 1566.4], [1.7287257E12, 1395.6000000000017], [1.72872792E12, 1607.0], [1.72872894E12, 1529.8000000000002], [1.72873116E12, 1748.4], [1.72872258E12, 1375.8000000000002], [1.7287269E12, 1383.3999999999999], [1.72873014E12, 1940.2], [1.72872468E12, 1395.8000000000002], [1.72872912E12, 1496.9], [1.7287236E12, 1371.5], [1.72872342E12, 1382.0], [1.7287281E12, 1644.400000000001], [1.72872588E12, 1448.2000000000003], [1.72873032E12, 1849.2000000000003], [1.7287224E12, 1330.2], [1.72872222E12, 1356.0], [1.72872486E12, 1403.3000000000006], [1.72872708E12, 1398.4], [1.7287293E12, 1606.0000000000007], [1.72872504E12, 1420.1999999999998], [1.72872324E12, 1377.0], [1.72872606E12, 1411.1], [1.72872828E12, 1508.4], [1.7287305E12, 1917.1], [1.72872204E12, 1269.0000000000005], [1.72872624E12, 1479.0], [1.72872948E12, 1810.2], [1.72872426E12, 1349.7999999999997], [1.72872726E12, 1533.1000000000004], [1.72872522E12, 1409.5], [1.72872744E12, 1608.6999999999998], [1.72873068E12, 1876.0], [1.72872846E12, 1580.5], [1.72872306E12, 1372.5000000000002], [1.72872642E12, 1356.6000000000001], [1.72872966E12, 1815.6000000000004], [1.72872864E12, 1564.3999999999999], [1.72872186E12, 1293.0], [1.72872408E12, 1452.1], [1.7287239E12, 1263.0], [1.72872762E12, 1637.0000000000002], [1.72873086E12, 1929.2], [1.7287254E12, 1382.0], [1.72872984E12, 1905.800000000001], [1.72872288E12, 1323.6000000000004], [1.7287227E12, 1458.0], [1.72872168E12, 1397.2000000000007], [1.72872438E12, 1247.2], [1.7287266E12, 1446.0], [1.72872882E12, 1593.0], [1.72873104E12, 2028.6], [1.72872456E12, 1489.8], [1.72872372E12, 1286.0], [1.72872558E12, 1475.4], [1.7287278E12, 1559.4], [1.72873002E12, 1888.1], [1.72872576E12, 1444.8000000000002], [1.728729E12, 1572.3000000000002], [1.72872252E12, 1298.0], [1.72872678E12, 1466.0], [1.72873122E12, 1440.8000000000002]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7287302E12, 2773.18], [1.72872474E12, 2107.8099999999986], [1.72872696E12, 2185.3399999999992], [1.72872354E12, 2004.1000000000001], [1.72872798E12, 2328.879999999997], [1.72872594E12, 2123.759999999999], [1.72872816E12, 2348.54], [1.72872918E12, 2401.099999999996], [1.72872234E12, 2043.41], [1.72872714E12, 2017.7700000000013], [1.72873038E12, 2705.629999999999], [1.72872492E12, 1989.800000000001], [1.72872936E12, 2188.4499999999975], [1.72872336E12, 1919.1299999999992], [1.72872834E12, 2435.3600000000006], [1.72872318E12, 1936.0999999999954], [1.72872216E12, 1888.7000000000016], [1.72872612E12, 2135.6000000000004], [1.72873056E12, 2785.74], [1.72872198E12, 1945.0], [1.7287242E12, 1959.6399999999996], [1.7287251E12, 2118.4500000000007], [1.72872732E12, 2293.4500000000003], [1.72872954E12, 2844.8600000000038], [1.72872528E12, 2054.9700000000003], [1.728723E12, 2315.2999999999993], [1.72873074E12, 2916.879999999998], [1.7287263E12, 2034.9499999999996], [1.72872852E12, 2218.52], [1.7287218E12, 1927.0], [1.72872972E12, 2804.78], [1.72872648E12, 1996.9099999999999], [1.72872402E12, 2160.1999999999994], [1.7287275E12, 2360.7799999999997], [1.72872546E12, 2171.1399999999994], [1.72872768E12, 2237.0], [1.7287287E12, 2380.8100000000004], [1.72873092E12, 2814.8100000000004], [1.72872282E12, 2077.3599999999997], [1.72872666E12, 2317.4899999999957], [1.7287299E12, 2858.170000000003], [1.72872444E12, 2029.900000000005], [1.72872888E12, 2280.3], [1.72872384E12, 1975.5199999999977], [1.72872366E12, 2112.1000000000004], [1.72872786E12, 2281.53], [1.7287311E12, 2777.580000000002], [1.72872564E12, 2038.3600000000001], [1.72873008E12, 2700.1800000000003], [1.72872264E12, 1999.8400000000006], [1.72872246E12, 1955.359999999999], [1.72872462E12, 2347.25], [1.72872684E12, 2022.66], [1.72872906E12, 2350.099999999999], [1.7287248E12, 2129.08], [1.72872348E12, 2184.0], [1.72872582E12, 2305.31], [1.72872804E12, 2297.739999999999], [1.72873026E12, 2829.0], [1.728726E12, 2155.76], [1.72872924E12, 2480.8999999999996], [1.72872228E12, 1868.419999999999], [1.72872702E12, 1974.5600000000004], [1.72873044E12, 2812.4999999999986], [1.72872498E12, 2127.68], [1.7287272E12, 2143.1800000000026], [1.7287233E12, 1753.329999999998], [1.72872822E12, 2321.1600000000003], [1.72872618E12, 2088.439999999997], [1.7287284E12, 2331.100000000002], [1.72872942E12, 2096.320000000002], [1.7287221E12, 1836.6799999999985], [1.72872432E12, 2027.8999999999999], [1.72872414E12, 1955.12], [1.72872738E12, 2142.3999999999987], [1.72873062E12, 2667.029999999996], [1.7287296E12, 2804.6799999999985], [1.72872516E12, 2067.2999999999993], [1.72872312E12, 2032.5700000000038], [1.72872294E12, 1961.3999999999978], [1.72872192E12, 2020.3700000000003], [1.72872636E12, 2134.489999999998], [1.72872858E12, 2296.75], [1.7287308E12, 2878.7799999999993], [1.72872174E12, 2051.999999999999], [1.72872396E12, 2067.57], [1.72872756E12, 2285.199999999996], [1.72872978E12, 2749.0], [1.72872534E12, 2103.2400000000016], [1.72872552E12, 2100.19], [1.72872876E12, 2219.78], [1.72872276E12, 1886.0299999999995], [1.72872654E12, 2170.48], [1.72873098E12, 2872.8799999999974], [1.72872996E12, 2842.87], [1.7287245E12, 2047.8799999999983], [1.72872672E12, 2109.48], [1.72872378E12, 1999.7599999999998], [1.72872774E12, 2409.8599999999997], [1.7287257E12, 1922.2800000000007], [1.72872792E12, 2384.7999999999997], [1.72872894E12, 2291.8399999999956], [1.72873116E12, 2625.2400000000052], [1.72872258E12, 1905.2400000000002], [1.7287269E12, 2262.32], [1.72873014E12, 2901.6399999999962], [1.72872468E12, 2116.3799999999997], [1.72872912E12, 2107.6099999999988], [1.7287236E12, 1847.5499999999995], [1.72872342E12, 1947.900000000002], [1.7287281E12, 2286.2000000000016], [1.72872588E12, 2019.2900000000022], [1.72873032E12, 2627.8999999999965], [1.7287224E12, 2108.38], [1.72872222E12, 1916.6000000000004], [1.72872486E12, 2154.1600000000008], [1.72872708E12, 2113.4800000000005], [1.7287293E12, 2272.7799999999993], [1.72872504E12, 2186.120000000001], [1.72872324E12, 2199.9500000000007], [1.72872606E12, 2030.3299999999995], [1.72872828E12, 2237.5199999999977], [1.7287305E12, 2756.4000000000033], [1.72872204E12, 1746.2599999999998], [1.72872624E12, 2182.640000000001], [1.72872948E12, 2653.849999999998], [1.72872426E12, 1950.1800000000005], [1.72872726E12, 2374.9699999999975], [1.72872522E12, 2143.9999999999973], [1.72872744E12, 2263.3199999999997], [1.72873068E12, 3017.4000000000005], [1.72872846E12, 2258.45], [1.72872306E12, 2141.900000000001], [1.72872642E12, 2031.6400000000003], [1.72872966E12, 2783.6900000000005], [1.72872864E12, 2362.419999999999], [1.72872186E12, 1950.8], [1.72872408E12, 1891.7899999999984], [1.7287239E12, 1635.6399999999999], [1.72872762E12, 2316.0699999999997], [1.72873086E12, 2851.279999999995], [1.7287254E12, 1993.6], [1.72872984E12, 2882.56], [1.72872288E12, 1690.3599999999997], [1.7287227E12, 2031.2599999999989], [1.72872168E12, 2106.730000000001], [1.72872438E12, 1866.0], [1.7287266E12, 1973.5400000000004], [1.72872882E12, 2278.0], [1.72873104E12, 2938.819999999995], [1.72872456E12, 2000.98], [1.72872372E12, 1969.0], [1.72872558E12, 2080.79], [1.7287278E12, 2417.12], [1.72873002E12, 2890.7899999999995], [1.72872576E12, 2393.1600000000017], [1.728729E12, 2331.8299999999986], [1.72872252E12, 2015.9699999999996], [1.72872678E12, 2127.000000000001], [1.72873122E12, 1975.53]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7287302E12, 2168.2999999999943], [1.72872474E12, 1662.7499999999995], [1.72872696E12, 1752.6499999999994], [1.72872354E12, 1606.549999999998], [1.72872798E12, 1812.4999999999995], [1.72872594E12, 1667.4], [1.72872816E12, 1872.6999999999998], [1.72872918E12, 1829.5], [1.72872234E12, 1629.45], [1.72872714E12, 1629.2999999999997], [1.72873038E12, 2135.6000000000004], [1.72872492E12, 1667.0], [1.72872936E12, 1710.6999999999985], [1.72872336E12, 1463.3499999999997], [1.72872834E12, 1938.3999999999992], [1.72872318E12, 1539.8], [1.72872216E12, 1576.25], [1.72872612E12, 1674.8000000000002], [1.72873056E12, 2227.8999999999996], [1.72872198E12, 1563.0], [1.7287242E12, 1538.1999999999998], [1.7287251E12, 1640.75], [1.72872732E12, 1813.0], [1.72872954E12, 2205.5499999999997], [1.72872528E12, 1599.6499999999999], [1.728723E12, 1484.4999999999998], [1.72873074E12, 2184.6999999999994], [1.7287263E12, 1558.5], [1.72872852E12, 1787.9999999999993], [1.7287218E12, 1570.0], [1.72872972E12, 2249.8500000000004], [1.72872648E12, 1670.2999999999997], [1.72872402E12, 1597.0], [1.7287275E12, 1874.3999999999965], [1.72872546E12, 1741.6], [1.72872768E12, 1807.0], [1.7287287E12, 1834.2499999999993], [1.72873092E12, 2149.0], [1.72872282E12, 1598.7999999999997], [1.72872666E12, 1743.4499999999991], [1.7287299E12, 2253.1], [1.72872444E12, 1535.5], [1.72872888E12, 1836.9499999999998], [1.72872384E12, 1602.5999999999992], [1.72872366E12, 1525.5], [1.72872786E12, 1796.6999999999998], [1.7287311E12, 2207.85], [1.72872564E12, 1556.3999999999992], [1.72873008E12, 2131.300000000001], [1.72872264E12, 1588.1999999999996], [1.72872246E12, 1534.6], [1.72872462E12, 1682.1999999999998], [1.72872684E12, 1625.8999999999987], [1.72872906E12, 1857.3999999999999], [1.7287248E12, 1669.8999999999983], [1.72872348E12, 1554.0], [1.72872582E12, 1623.000000000001], [1.72872804E12, 1818.7999999999993], [1.72873026E12, 2270.0], [1.728726E12, 1697.8999999999999], [1.72872924E12, 1844.6999999999994], [1.72872228E12, 1574.8000000000002], [1.72872702E12, 1604.9999999999998], [1.72873044E12, 2235.75], [1.72872498E12, 1689.499999999998], [1.7287272E12, 1627.15], [1.7287233E12, 1484.55], [1.72872822E12, 1830.8], [1.72872618E12, 1619.6000000000001], [1.7287284E12, 1797.0], [1.72872942E12, 1492.8], [1.7287221E12, 1505.6499999999994], [1.72872432E12, 1596.5], [1.72872414E12, 1609.4999999999998], [1.72872738E12, 1763.0], [1.72873062E12, 2192.2999999999997], [1.7287296E12, 2222.0499999999993], [1.72872516E12, 1577.9499999999998], [1.72872312E12, 1499.3499999999983], [1.72872294E12, 1564.4999999999995], [1.72872192E12, 1580.55], [1.72872636E12, 1675.0499999999997], [1.72872858E12, 1837.7499999999995], [1.7287308E12, 2194.1499999999996], [1.72872174E12, 1585.6], [1.72872396E12, 1617.6000000000001], [1.72872756E12, 1828.6999999999998], [1.72872978E12, 2140.8], [1.72872534E12, 1715.1000000000001], [1.72872552E12, 1664.9499999999998], [1.72872876E12, 1734.8], [1.72872276E12, 1653.0500000000002], [1.72872654E12, 1625.6999999999998], [1.72873098E12, 2204.999999999999], [1.72872996E12, 2172.4499999999994], [1.7287245E12, 1553.2999999999993], [1.72872672E12, 1705.8000000000006], [1.72872378E12, 1670.0999999999997], [1.72872774E12, 1790.4499999999994], [1.7287257E12, 1620.6], [1.72872792E12, 1915.0], [1.72872894E12, 1745.9], [1.72873116E12, 2087.1999999999994], [1.72872258E12, 1595.9], [1.7287269E12, 1574.6999999999998], [1.72873014E12, 2250.5999999999995], [1.72872468E12, 1676.4999999999995], [1.72872912E12, 1750.3], [1.7287236E12, 1539.6999999999994], [1.72872342E12, 1504.5], [1.7287281E12, 1862.0], [1.72872588E12, 1721.0500000000002], [1.72873032E12, 2134.099999999998], [1.7287224E12, 1586.299999999999], [1.72872222E12, 1514.5], [1.72872486E12, 1645.05], [1.72872708E12, 1683.7000000000003], [1.7287293E12, 1903.65], [1.72872504E12, 1660.2999999999993], [1.72872324E12, 1562.5], [1.72872606E12, 1603.7999999999993], [1.72872828E12, 1740.4999999999995], [1.7287305E12, 2172.7999999999993], [1.72872204E12, 1455.15], [1.72872624E12, 1770.1999999999998], [1.72872948E12, 2060.3499999999995], [1.72872426E12, 1609.6], [1.72872726E12, 1851.3999999999996], [1.72872522E12, 1589.0], [1.72872744E12, 1803.0499999999993], [1.72873068E12, 2208.0], [1.72872846E12, 1850.25], [1.72872306E12, 1686.0], [1.72872642E12, 1630.1], [1.72872966E12, 2147.399999999996], [1.72872864E12, 1848.1999999999996], [1.72872186E12, 1505.0], [1.72872408E12, 1643.35], [1.7287239E12, 1423.6], [1.72872762E12, 1907.2999999999997], [1.72873086E12, 2207.7999999999997], [1.7287254E12, 1588.0], [1.72872984E12, 2235.3999999999996], [1.72872288E12, 1510.7999999999993], [1.7287227E12, 1639.6499999999996], [1.72872168E12, 1593.2499999999998], [1.72872438E12, 1482.7999999999997], [1.7287266E12, 1644.3], [1.72872882E12, 1771.1499999999999], [1.72873104E12, 2301.749999999999], [1.72872456E12, 1693.8], [1.72872372E12, 1517.0], [1.72872558E12, 1746.7000000000005], [1.7287278E12, 1870.5999999999995], [1.72873002E12, 2240.8499999999995], [1.72872576E12, 1678.3999999999992], [1.728729E12, 1872.8999999999999], [1.72872252E12, 1545.1], [1.72872678E12, 1713.25], [1.72873122E12, 1679.25]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.7287302E12, 53.0], [1.72872474E12, 59.0], [1.72872696E12, 53.0], [1.72872354E12, 55.0], [1.72872798E12, 49.0], [1.72872594E12, 61.0], [1.72872816E12, 55.0], [1.72872918E12, 44.0], [1.72872234E12, 66.0], [1.72872714E12, 50.0], [1.72873038E12, 51.0], [1.72872492E12, 52.0], [1.72872936E12, 52.0], [1.72872336E12, 54.0], [1.72872834E12, 52.0], [1.72872318E12, 60.0], [1.72872216E12, 62.0], [1.72872612E12, 53.0], [1.72873056E12, 56.0], [1.72872198E12, 68.0], [1.7287242E12, 54.0], [1.7287251E12, 58.0], [1.72872732E12, 65.0], [1.72872954E12, 44.0], [1.72872528E12, 63.0], [1.728723E12, 52.0], [1.72873074E12, 47.0], [1.7287263E12, 56.0], [1.72872852E12, 51.0], [1.7287218E12, 56.0], [1.72872972E12, 51.0], [1.72872648E12, 58.0], [1.72872402E12, 59.0], [1.7287275E12, 51.0], [1.72872546E12, 51.0], [1.72872768E12, 57.0], [1.7287287E12, 46.0], [1.72873092E12, 52.0], [1.72872282E12, 56.0], [1.72872666E12, 55.0], [1.7287299E12, 44.0], [1.72872444E12, 61.0], [1.72872888E12, 52.0], [1.72872384E12, 55.0], [1.72872366E12, 63.0], [1.72872786E12, 54.0], [1.7287311E12, 62.0], [1.72872564E12, 57.0], [1.72873008E12, 48.0], [1.72872264E12, 51.0], [1.72872246E12, 56.0], [1.72872462E12, 54.0], [1.72872684E12, 51.0], [1.72872906E12, 49.0], [1.7287248E12, 53.0], [1.72872348E12, 51.0], [1.72872582E12, 52.0], [1.72872804E12, 52.0], [1.72873026E12, 63.0], [1.728726E12, 50.0], [1.72872924E12, 49.0], [1.72872228E12, 53.0], [1.72872702E12, 50.0], [1.72873044E12, 66.0], [1.72872498E12, 55.0], [1.7287272E12, 63.0], [1.7287233E12, 63.0], [1.72872822E12, 43.0], [1.72872618E12, 56.0], [1.7287284E12, 57.0], [1.72872942E12, 59.0], [1.7287221E12, 64.0], [1.72872432E12, 54.0], [1.72872414E12, 53.0], [1.72872738E12, 48.0], [1.72873062E12, 62.0], [1.7287296E12, 54.0], [1.72872516E12, 56.0], [1.72872312E12, 50.0], [1.72872294E12, 51.0], [1.72872192E12, 59.0], [1.72872636E12, 58.0], [1.72872858E12, 48.0], [1.7287308E12, 52.0], [1.72872174E12, 63.0], [1.72872396E12, 60.0], [1.72872756E12, 47.0], [1.72872978E12, 58.0], [1.72872534E12, 49.0], [1.72872552E12, 48.0], [1.72872876E12, 50.0], [1.72872276E12, 62.0], [1.72872654E12, 55.0], [1.72873098E12, 59.0], [1.72872996E12, 54.0], [1.7287245E12, 56.0], [1.72872672E12, 41.0], [1.72872378E12, 49.0], [1.72872774E12, 58.0], [1.7287257E12, 52.0], [1.72872792E12, 52.0], [1.72872894E12, 60.0], [1.72873116E12, 53.0], [1.72872258E12, 66.0], [1.7287269E12, 60.0], [1.72873014E12, 55.0], [1.72872468E12, 57.0], [1.72872912E12, 55.0], [1.7287236E12, 50.0], [1.72872342E12, 55.0], [1.7287281E12, 51.0], [1.72872588E12, 53.0], [1.72873032E12, 56.0], [1.7287224E12, 53.0], [1.72872222E12, 57.0], [1.72872486E12, 53.0], [1.72872708E12, 46.0], [1.7287293E12, 55.0], [1.72872504E12, 60.0], [1.72872324E12, 56.0], [1.72872606E12, 45.0], [1.72872828E12, 53.0], [1.7287305E12, 61.0], [1.72872204E12, 51.0], [1.72872624E12, 51.0], [1.72872948E12, 48.0], [1.72872426E12, 44.0], [1.72872726E12, 57.0], [1.72872522E12, 52.0], [1.72872744E12, 60.0], [1.72873068E12, 56.0], [1.72872846E12, 56.0], [1.72872306E12, 53.0], [1.72872642E12, 47.0], [1.72872966E12, 62.0], [1.72872864E12, 54.0], [1.72872186E12, 55.0], [1.72872408E12, 55.0], [1.7287239E12, 51.0], [1.72872762E12, 49.0], [1.72873086E12, 47.0], [1.7287254E12, 61.0], [1.72872984E12, 64.0], [1.72872288E12, 59.0], [1.7287227E12, 50.0], [1.72872168E12, 58.0], [1.72872438E12, 56.0], [1.7287266E12, 54.0], [1.72872882E12, 52.0], [1.72873104E12, 57.0], [1.72872456E12, 51.0], [1.72872372E12, 60.0], [1.72872558E12, 51.0], [1.7287278E12, 47.0], [1.72873002E12, 58.0], [1.72872576E12, 49.0], [1.728729E12, 48.0], [1.72872252E12, 58.0], [1.72872678E12, 47.0], [1.72873122E12, 60.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7287302E12, 778.5], [1.72872474E12, 593.5], [1.72872696E12, 580.5], [1.72872354E12, 650.0], [1.72872798E12, 632.0], [1.72872594E12, 682.0], [1.72872816E12, 654.0], [1.72872918E12, 696.0], [1.72872234E12, 651.5], [1.72872714E12, 628.5], [1.72873038E12, 827.5], [1.72872492E12, 634.0], [1.72872936E12, 661.0], [1.72872336E12, 517.0], [1.72872834E12, 697.0], [1.72872318E12, 593.0], [1.72872216E12, 556.0], [1.72872612E12, 547.0], [1.72873056E12, 894.0], [1.72872198E12, 520.0], [1.7287242E12, 649.0], [1.7287251E12, 640.0], [1.72872732E12, 607.5], [1.72872954E12, 724.5], [1.72872528E12, 607.5], [1.728723E12, 519.5], [1.72873074E12, 754.0], [1.7287263E12, 620.5], [1.72872852E12, 587.0], [1.7287218E12, 452.0], [1.72872972E12, 772.0], [1.72872648E12, 644.0], [1.72872402E12, 614.0], [1.7287275E12, 704.5], [1.72872546E12, 588.0], [1.72872768E12, 655.0], [1.7287287E12, 587.5], [1.72873092E12, 727.0], [1.72872282E12, 635.0], [1.72872666E12, 625.0], [1.7287299E12, 782.0], [1.72872444E12, 545.0], [1.72872888E12, 696.0], [1.72872384E12, 480.0], [1.72872366E12, 572.0], [1.72872786E12, 612.0], [1.7287311E12, 847.5], [1.72872564E12, 481.0], [1.72873008E12, 773.0], [1.72872264E12, 573.0], [1.72872246E12, 575.0], [1.72872462E12, 667.0], [1.72872684E12, 603.0], [1.72872906E12, 644.0], [1.7287248E12, 537.5], [1.72872348E12, 502.0], [1.72872582E12, 605.0], [1.72872804E12, 584.0], [1.72873026E12, 631.0], [1.728726E12, 609.0], [1.72872924E12, 664.0], [1.72872228E12, 635.0], [1.72872702E12, 684.0], [1.72873044E12, 851.5], [1.72872498E12, 650.5], [1.7287272E12, 547.0], [1.7287233E12, 501.0], [1.72872822E12, 702.0], [1.72872618E12, 610.0], [1.7287284E12, 606.0], [1.72872942E12, 543.0], [1.7287221E12, 628.5], [1.72872432E12, 535.5], [1.72872414E12, 529.0], [1.72872738E12, 660.0], [1.72873062E12, 807.0], [1.7287296E12, 748.0], [1.72872516E12, 562.5], [1.72872312E12, 547.0], [1.72872294E12, 646.0], [1.72872192E12, 691.0], [1.72872636E12, 493.5], [1.72872858E12, 625.5], [1.7287308E12, 778.0], [1.72872174E12, 341.0], [1.72872396E12, 630.5], [1.72872756E12, 655.5], [1.72872978E12, 729.0], [1.72872534E12, 654.0], [1.72872552E12, 579.0], [1.72872876E12, 655.0], [1.72872276E12, 710.5], [1.72872654E12, 631.0], [1.72873098E12, 774.0], [1.72872996E12, 746.5], [1.7287245E12, 513.0], [1.72872672E12, 637.0], [1.72872378E12, 620.0], [1.72872774E12, 669.5], [1.7287257E12, 593.0], [1.72872792E12, 696.0], [1.72872894E12, 705.0], [1.72873116E12, 618.0], [1.72872258E12, 540.0], [1.7287269E12, 577.0], [1.72873014E12, 830.0], [1.72872468E12, 544.0], [1.72872912E12, 541.5], [1.7287236E12, 476.5], [1.72872342E12, 631.0], [1.7287281E12, 725.0], [1.72872588E12, 670.5], [1.72873032E12, 758.0], [1.7287224E12, 621.0], [1.72872222E12, 596.0], [1.72872486E12, 551.0], [1.72872708E12, 622.0], [1.7287293E12, 722.5], [1.72872504E12, 498.0], [1.72872324E12, 519.0], [1.72872606E12, 524.0], [1.72872828E12, 551.0], [1.7287305E12, 761.5], [1.72872204E12, 442.5], [1.72872624E12, 577.0], [1.72872948E12, 681.0], [1.72872426E12, 671.0], [1.72872726E12, 561.5], [1.72872522E12, 574.0], [1.72872744E12, 685.5], [1.72873068E12, 805.0], [1.72872846E12, 634.5], [1.72872306E12, 674.0], [1.72872642E12, 485.0], [1.72872966E12, 752.0], [1.72872864E12, 678.0], [1.72872186E12, 449.0], [1.72872408E12, 646.0], [1.7287239E12, 511.0], [1.72872762E12, 783.0], [1.72873086E12, 760.0], [1.7287254E12, 644.0], [1.72872984E12, 831.0], [1.72872288E12, 506.0], [1.7287227E12, 690.5], [1.72872168E12, 558.5], [1.72872438E12, 448.0], [1.7287266E12, 599.0], [1.72872882E12, 593.5], [1.72873104E12, 848.0], [1.72872456E12, 602.0], [1.72872372E12, 513.0], [1.72872558E12, 622.5], [1.7287278E12, 653.0], [1.72873002E12, 807.0], [1.72872576E12, 643.0], [1.728729E12, 618.5], [1.72872252E12, 581.0], [1.72872678E12, 580.5], [1.72873122E12, 685.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72873122E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 218.0, "minX": 1.0, "maxY": 935.0, "series": [{"data": [[2.0, 921.0], [33.0, 243.0], [32.0, 223.5], [35.0, 286.0], [3.0, 867.0], [4.0, 827.0], [5.0, 780.0], [6.0, 690.0], [7.0, 665.0], [8.0, 609.0], [9.0, 633.0], [10.0, 700.5], [11.0, 713.0], [12.0, 738.0], [13.0, 721.0], [14.0, 664.0], [15.0, 680.0], [1.0, 935.0], [16.0, 632.0], [17.0, 631.5], [18.0, 660.0], [19.0, 559.0], [20.0, 521.0], [21.0, 496.0], [22.0, 456.0], [23.0, 413.0], [24.0, 382.0], [25.0, 318.0], [26.0, 314.0], [27.0, 299.0], [28.0, 343.5], [29.0, 273.0], [30.0, 231.0], [31.0, 218.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 35.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 158.0, "minX": 1.0, "maxY": 644.5, "series": [{"data": [[2.0, 640.5], [33.0, 158.0], [32.0, 162.5], [35.0, 204.5], [3.0, 611.0], [4.0, 581.0], [5.0, 558.0], [6.0, 512.5], [7.0, 486.0], [8.0, 460.0], [9.0, 471.5], [10.0, 514.0], [11.0, 520.0], [12.0, 545.0], [13.0, 532.0], [14.0, 492.0], [15.0, 503.0], [1.0, 644.5], [16.0, 474.0], [17.0, 476.0], [18.0, 490.0], [19.0, 425.0], [20.0, 401.5], [21.0, 373.0], [22.0, 337.5], [23.0, 298.0], [24.0, 270.0], [25.0, 212.0], [26.0, 207.0], [27.0, 201.0], [28.0, 227.5], [29.0, 183.0], [30.0, 159.5], [31.0, 168.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 35.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.8666666666666667, "minX": 1.72872168E12, "maxY": 19.083333333333332, "series": [{"data": [[1.7287302E12, 18.266666666666666], [1.72872474E12, 12.0], [1.72872696E12, 11.966666666666667], [1.72872354E12, 6.033333333333333], [1.72872798E12, 16.75], [1.72872594E12, 11.783333333333333], [1.72872816E12, 16.416666666666668], [1.72872918E12, 16.15], [1.72872234E12, 5.833333333333333], [1.72872714E12, 11.45], [1.72873038E12, 18.166666666666668], [1.72872492E12, 12.15], [1.72872936E12, 13.566666666666666], [1.72872336E12, 6.7], [1.72872834E12, 15.833333333333334], [1.72872318E12, 6.5], [1.72872216E12, 6.566666666666666], [1.72872612E12, 12.116666666666667], [1.72873056E12, 17.083333333333332], [1.72872198E12, 3.316666666666667], [1.7287242E12, 6.183333333333334], [1.7287251E12, 11.733333333333333], [1.72872732E12, 16.9], [1.72872954E12, 18.366666666666667], [1.72872528E12, 12.133333333333333], [1.728723E12, 6.433333333333334], [1.72873074E12, 18.616666666666667], [1.7287263E12, 12.4], [1.72872852E12, 17.05], [1.7287218E12, 3.316666666666667], [1.72872972E12, 18.5], [1.72872648E12, 11.8], [1.72872402E12, 6.083333333333333], [1.7287275E12, 16.0], [1.72872546E12, 12.016666666666667], [1.72872768E12, 16.65], [1.7287287E12, 17.133333333333333], [1.72873092E12, 18.8], [1.72872282E12, 6.116666666666666], [1.72872666E12, 11.8], [1.7287299E12, 17.966666666666665], [1.72872444E12, 6.483333333333333], [1.72872888E12, 16.1], [1.72872384E12, 6.516666666666667], [1.72872366E12, 6.483333333333333], [1.72872786E12, 16.866666666666667], [1.7287311E12, 17.666666666666668], [1.72872564E12, 13.116666666666667], [1.72873008E12, 18.75], [1.72872264E12, 6.35], [1.72872246E12, 6.416666666666667], [1.72872462E12, 11.633333333333333], [1.72872684E12, 12.083333333333334], [1.72872906E12, 16.75], [1.7287248E12, 12.466666666666667], [1.72872348E12, 6.65], [1.72872582E12, 11.866666666666667], [1.72872804E12, 17.2], [1.72873026E12, 18.983333333333334], [1.728726E12, 11.883333333333333], [1.72872924E12, 16.416666666666668], [1.72872228E12, 6.216666666666667], [1.72872702E12, 11.716666666666667], [1.72873044E12, 17.4], [1.72872498E12, 11.833333333333334], [1.7287272E12, 6.05], [1.7287233E12, 6.8], [1.72872822E12, 15.85], [1.72872618E12, 11.783333333333333], [1.7287284E12, 17.15], [1.72872942E12, 5.75], [1.7287221E12, 6.2], [1.72872432E12, 6.4], [1.72872414E12, 6.55], [1.72872738E12, 16.983333333333334], [1.72873062E12, 18.1], [1.7287296E12, 18.633333333333333], [1.72872516E12, 12.6], [1.72872312E12, 6.466666666666667], [1.72872294E12, 6.283333333333333], [1.72872192E12, 2.8666666666666667], [1.72872636E12, 12.6], [1.72872858E12, 16.866666666666667], [1.7287308E12, 18.266666666666666], [1.72872174E12, 3.55], [1.72872396E12, 6.133333333333334], [1.72872756E12, 16.533333333333335], [1.72872978E12, 19.083333333333332], [1.72872534E12, 11.533333333333333], [1.72872552E12, 12.266666666666667], [1.72872876E12, 16.683333333333334], [1.72872276E12, 5.8], [1.72872654E12, 12.083333333333334], [1.72873098E12, 18.116666666666667], [1.72872996E12, 18.533333333333335], [1.7287245E12, 6.25], [1.72872672E12, 11.866666666666667], [1.72872378E12, 6.283333333333333], [1.72872774E12, 16.2], [1.7287257E12, 12.35], [1.72872792E12, 15.983333333333333], [1.72872894E12, 16.35], [1.72873116E12, 18.783333333333335], [1.72872258E12, 6.366666666666666], [1.7287269E12, 12.083333333333334], [1.72873014E12, 17.383333333333333], [1.72872468E12, 12.466666666666667], [1.72872912E12, 17.766666666666666], [1.7287236E12, 6.633333333333334], [1.72872342E12, 6.15], [1.7287281E12, 15.683333333333334], [1.72872588E12, 11.533333333333333], [1.72873032E12, 18.933333333333334], [1.7287224E12, 6.266666666666667], [1.72872222E12, 6.483333333333333], [1.72872486E12, 12.3], [1.72872708E12, 11.95], [1.7287293E12, 15.766666666666667], [1.72872504E12, 12.75], [1.72872324E12, 6.566666666666666], [1.72872606E12, 12.633333333333333], [1.72872828E12, 17.75], [1.7287305E12, 18.466666666666665], [1.72872204E12, 6.333333333333333], [1.72872624E12, 11.916666666666666], [1.72872948E12, 18.033333333333335], [1.72872426E12, 5.95], [1.72872726E12, 17.266666666666666], [1.72872522E12, 12.4], [1.72872744E12, 16.166666666666668], [1.72873068E12, 17.65], [1.72872846E12, 16.566666666666666], [1.72872306E12, 5.933333333333334], [1.72872642E12, 12.95], [1.72872966E12, 18.866666666666667], [1.72872864E12, 16.416666666666668], [1.72872186E12, 3.4833333333333334], [1.72872408E12, 5.866666666666666], [1.7287239E12, 6.85], [1.72872762E12, 14.966666666666667], [1.72873086E12, 18.116666666666667], [1.7287254E12, 11.983333333333333], [1.72872984E12, 17.85], [1.72872288E12, 6.716666666666667], [1.7287227E12, 5.766666666666667], [1.72872168E12, 2.9], [1.72872438E12, 7.1], [1.7287266E12, 11.883333333333333], [1.72872882E12, 16.966666666666665], [1.72873104E12, 17.166666666666668], [1.72872456E12, 9.45], [1.72872372E12, 6.65], [1.72872558E12, 11.7], [1.7287278E12, 16.616666666666667], [1.72873002E12, 17.8], [1.72872576E12, 11.716666666666667], [1.728729E12, 16.766666666666666], [1.72872252E12, 6.516666666666667], [1.72872678E12, 11.9], [1.72873122E12, 5.133333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72873122E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2.8666666666666667, "minX": 1.72872168E12, "maxY": 19.083333333333332, "series": [{"data": [[1.7287302E12, 18.266666666666666], [1.72872474E12, 12.0], [1.72872696E12, 11.966666666666667], [1.72872354E12, 6.033333333333333], [1.72872798E12, 16.75], [1.72872594E12, 11.783333333333333], [1.72872816E12, 16.416666666666668], [1.72872918E12, 16.15], [1.72872234E12, 5.833333333333333], [1.72872714E12, 11.466666666666667], [1.72873038E12, 18.166666666666668], [1.72872492E12, 12.15], [1.72872936E12, 13.633333333333333], [1.72872336E12, 6.7], [1.72872834E12, 15.833333333333334], [1.72872318E12, 6.5], [1.72872216E12, 6.566666666666666], [1.72872612E12, 12.116666666666667], [1.72873056E12, 17.083333333333332], [1.72872198E12, 3.316666666666667], [1.7287242E12, 6.183333333333334], [1.7287251E12, 11.733333333333333], [1.72872732E12, 16.9], [1.72872954E12, 18.366666666666667], [1.72872528E12, 12.133333333333333], [1.728723E12, 6.433333333333334], [1.72873074E12, 18.616666666666667], [1.7287263E12, 12.4], [1.72872852E12, 17.05], [1.7287218E12, 3.316666666666667], [1.72872972E12, 18.5], [1.72872648E12, 11.8], [1.72872402E12, 6.083333333333333], [1.7287275E12, 16.0], [1.72872546E12, 12.016666666666667], [1.72872768E12, 16.65], [1.7287287E12, 17.133333333333333], [1.72873092E12, 18.8], [1.72872282E12, 6.116666666666666], [1.72872666E12, 11.8], [1.7287299E12, 17.966666666666665], [1.72872444E12, 6.483333333333333], [1.72872888E12, 16.1], [1.72872384E12, 6.516666666666667], [1.72872366E12, 6.483333333333333], [1.72872786E12, 16.866666666666667], [1.7287311E12, 17.666666666666668], [1.72872564E12, 13.116666666666667], [1.72873008E12, 18.75], [1.72872264E12, 6.35], [1.72872246E12, 6.416666666666667], [1.72872462E12, 11.633333333333333], [1.72872684E12, 12.083333333333334], [1.72872906E12, 16.75], [1.7287248E12, 12.466666666666667], [1.72872348E12, 6.65], [1.72872582E12, 11.866666666666667], [1.72872804E12, 17.2], [1.72873026E12, 18.983333333333334], [1.728726E12, 11.883333333333333], [1.72872924E12, 16.416666666666668], [1.72872228E12, 6.216666666666667], [1.72872702E12, 11.716666666666667], [1.72873044E12, 17.4], [1.72872498E12, 11.833333333333334], [1.7287272E12, 5.966666666666667], [1.7287233E12, 6.8], [1.72872822E12, 15.85], [1.72872618E12, 11.783333333333333], [1.7287284E12, 17.15], [1.72872942E12, 5.85], [1.7287221E12, 6.2], [1.72872432E12, 6.4], [1.72872414E12, 6.55], [1.72872738E12, 16.983333333333334], [1.72873062E12, 18.1], [1.7287296E12, 18.633333333333333], [1.72872516E12, 12.6], [1.72872312E12, 6.466666666666667], [1.72872294E12, 6.283333333333333], [1.72872192E12, 2.8666666666666667], [1.72872636E12, 12.6], [1.72872858E12, 16.866666666666667], [1.7287308E12, 18.266666666666666], [1.72872174E12, 3.55], [1.72872396E12, 6.133333333333334], [1.72872756E12, 16.533333333333335], [1.72872978E12, 19.083333333333332], [1.72872534E12, 11.533333333333333], [1.72872552E12, 12.266666666666667], [1.72872876E12, 16.683333333333334], [1.72872276E12, 5.8], [1.72872654E12, 12.083333333333334], [1.72873098E12, 18.116666666666667], [1.72872996E12, 18.533333333333335], [1.7287245E12, 6.283333333333333], [1.72872672E12, 11.866666666666667], [1.72872378E12, 6.283333333333333], [1.72872774E12, 16.2], [1.7287257E12, 12.35], [1.72872792E12, 15.983333333333333], [1.72872894E12, 16.35], [1.72873116E12, 18.883333333333333], [1.72872258E12, 6.35], [1.7287269E12, 12.083333333333334], [1.72873014E12, 17.383333333333333], [1.72872468E12, 12.466666666666667], [1.72872912E12, 17.766666666666666], [1.7287236E12, 6.633333333333334], [1.72872342E12, 6.15], [1.7287281E12, 15.683333333333334], [1.72872588E12, 11.533333333333333], [1.72873032E12, 18.933333333333334], [1.7287224E12, 6.266666666666667], [1.72872222E12, 6.483333333333333], [1.72872486E12, 12.3], [1.72872708E12, 11.95], [1.7287293E12, 15.766666666666667], [1.72872504E12, 12.75], [1.72872324E12, 6.566666666666666], [1.72872606E12, 12.633333333333333], [1.72872828E12, 17.75], [1.7287305E12, 18.466666666666665], [1.72872204E12, 6.3], [1.72872624E12, 11.916666666666666], [1.72872948E12, 17.8], [1.72872426E12, 5.95], [1.72872726E12, 17.266666666666666], [1.72872522E12, 12.4], [1.72872744E12, 16.166666666666668], [1.72873068E12, 17.65], [1.72872846E12, 16.566666666666666], [1.72872306E12, 5.933333333333334], [1.72872642E12, 12.95], [1.72872966E12, 18.866666666666667], [1.72872864E12, 16.416666666666668], [1.72872186E12, 3.4833333333333334], [1.72872408E12, 5.866666666666666], [1.7287239E12, 6.85], [1.72872762E12, 14.966666666666667], [1.72873086E12, 18.116666666666667], [1.7287254E12, 11.983333333333333], [1.72872984E12, 17.85], [1.72872288E12, 6.716666666666667], [1.7287227E12, 5.766666666666667], [1.72872168E12, 2.8666666666666667], [1.72872438E12, 7.1], [1.7287266E12, 11.883333333333333], [1.72872882E12, 16.966666666666665], [1.72873104E12, 17.166666666666668], [1.72872456E12, 9.35], [1.72872372E12, 6.65], [1.72872558E12, 11.7], [1.7287278E12, 16.616666666666667], [1.72873002E12, 17.8], [1.72872576E12, 11.716666666666667], [1.728729E12, 16.766666666666666], [1.72872252E12, 6.533333333333333], [1.72872678E12, 11.9], [1.72873122E12, 5.3]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72873122E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 2.8666666666666667, "minX": 1.72872168E12, "maxY": 19.083333333333332, "series": [{"data": [[1.7287302E12, 18.266666666666666], [1.72872474E12, 12.0], [1.72872696E12, 11.966666666666667], [1.72872354E12, 6.033333333333333], [1.72872798E12, 16.75], [1.72872594E12, 11.783333333333333], [1.72872816E12, 16.416666666666668], [1.72872918E12, 16.15], [1.72872234E12, 5.833333333333333], [1.72872714E12, 11.466666666666667], [1.72873038E12, 18.166666666666668], [1.72872492E12, 12.15], [1.72872936E12, 13.633333333333333], [1.72872336E12, 6.7], [1.72872834E12, 15.833333333333334], [1.72872318E12, 6.5], [1.72872216E12, 6.566666666666666], [1.72872612E12, 12.116666666666667], [1.72873056E12, 17.083333333333332], [1.72872198E12, 3.316666666666667], [1.7287242E12, 6.183333333333334], [1.7287251E12, 11.733333333333333], [1.72872732E12, 16.9], [1.72872954E12, 18.366666666666667], [1.72872528E12, 12.133333333333333], [1.728723E12, 6.433333333333334], [1.72873074E12, 18.616666666666667], [1.7287263E12, 12.4], [1.72872852E12, 17.05], [1.7287218E12, 3.316666666666667], [1.72872972E12, 18.5], [1.72872648E12, 11.8], [1.72872402E12, 6.083333333333333], [1.7287275E12, 16.0], [1.72872546E12, 12.016666666666667], [1.72872768E12, 16.65], [1.7287287E12, 17.133333333333333], [1.72873092E12, 18.8], [1.72872282E12, 6.116666666666666], [1.72872666E12, 11.8], [1.7287299E12, 17.966666666666665], [1.72872444E12, 6.483333333333333], [1.72872888E12, 16.1], [1.72872384E12, 6.516666666666667], [1.72872366E12, 6.483333333333333], [1.72872786E12, 16.866666666666667], [1.7287311E12, 17.666666666666668], [1.72872564E12, 13.116666666666667], [1.72873008E12, 18.75], [1.72872264E12, 6.35], [1.72872246E12, 6.416666666666667], [1.72872462E12, 11.633333333333333], [1.72872684E12, 12.083333333333334], [1.72872906E12, 16.75], [1.7287248E12, 12.466666666666667], [1.72872348E12, 6.65], [1.72872582E12, 11.866666666666667], [1.72872804E12, 17.2], [1.72873026E12, 18.983333333333334], [1.728726E12, 11.883333333333333], [1.72872924E12, 16.416666666666668], [1.72872228E12, 6.216666666666667], [1.72872702E12, 11.716666666666667], [1.72873044E12, 17.4], [1.72872498E12, 11.833333333333334], [1.7287272E12, 5.966666666666667], [1.7287233E12, 6.8], [1.72872822E12, 15.85], [1.72872618E12, 11.783333333333333], [1.7287284E12, 17.15], [1.72872942E12, 5.85], [1.7287221E12, 6.2], [1.72872432E12, 6.4], [1.72872414E12, 6.55], [1.72872738E12, 16.983333333333334], [1.72873062E12, 18.1], [1.7287296E12, 18.633333333333333], [1.72872516E12, 12.6], [1.72872312E12, 6.466666666666667], [1.72872294E12, 6.283333333333333], [1.72872192E12, 2.8666666666666667], [1.72872636E12, 12.6], [1.72872858E12, 16.866666666666667], [1.7287308E12, 18.266666666666666], [1.72872174E12, 3.55], [1.72872396E12, 6.133333333333334], [1.72872756E12, 16.533333333333335], [1.72872978E12, 19.083333333333332], [1.72872534E12, 11.533333333333333], [1.72872552E12, 12.266666666666667], [1.72872876E12, 16.683333333333334], [1.72872276E12, 5.8], [1.72872654E12, 12.083333333333334], [1.72873098E12, 18.116666666666667], [1.72872996E12, 18.533333333333335], [1.7287245E12, 6.283333333333333], [1.72872672E12, 11.866666666666667], [1.72872378E12, 6.283333333333333], [1.72872774E12, 16.2], [1.7287257E12, 12.35], [1.72872792E12, 15.983333333333333], [1.72872894E12, 16.35], [1.72873116E12, 18.883333333333333], [1.72872258E12, 6.35], [1.7287269E12, 12.083333333333334], [1.72873014E12, 17.383333333333333], [1.72872468E12, 12.466666666666667], [1.72872912E12, 17.766666666666666], [1.7287236E12, 6.633333333333334], [1.72872342E12, 6.15], [1.7287281E12, 15.683333333333334], [1.72872588E12, 11.533333333333333], [1.72873032E12, 18.933333333333334], [1.7287224E12, 6.266666666666667], [1.72872222E12, 6.483333333333333], [1.72872486E12, 12.3], [1.72872708E12, 11.95], [1.7287293E12, 15.766666666666667], [1.72872504E12, 12.75], [1.72872324E12, 6.566666666666666], [1.72872606E12, 12.633333333333333], [1.72872828E12, 17.75], [1.7287305E12, 18.466666666666665], [1.72872204E12, 6.3], [1.72872624E12, 11.916666666666666], [1.72872948E12, 17.8], [1.72872426E12, 5.95], [1.72872726E12, 17.266666666666666], [1.72872522E12, 12.4], [1.72872744E12, 16.166666666666668], [1.72873068E12, 17.65], [1.72872846E12, 16.566666666666666], [1.72872306E12, 5.933333333333334], [1.72872642E12, 12.95], [1.72872966E12, 18.866666666666667], [1.72872864E12, 16.416666666666668], [1.72872186E12, 3.4833333333333334], [1.72872408E12, 5.866666666666666], [1.7287239E12, 6.85], [1.72872762E12, 14.966666666666667], [1.72873086E12, 18.116666666666667], [1.7287254E12, 11.983333333333333], [1.72872984E12, 17.85], [1.72872288E12, 6.716666666666667], [1.7287227E12, 5.766666666666667], [1.72872168E12, 2.8666666666666667], [1.72872438E12, 7.1], [1.7287266E12, 11.883333333333333], [1.72872882E12, 16.966666666666665], [1.72873104E12, 17.166666666666668], [1.72872456E12, 9.35], [1.72872372E12, 6.65], [1.72872558E12, 11.7], [1.7287278E12, 16.616666666666667], [1.72873002E12, 17.8], [1.72872576E12, 11.716666666666667], [1.728729E12, 16.766666666666666], [1.72872252E12, 6.533333333333333], [1.72872678E12, 11.9], [1.72873122E12, 5.3]], "isOverall": false, "label": "getmap-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72873122E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2.8666666666666667, "minX": 1.72872168E12, "maxY": 19.083333333333332, "series": [{"data": [[1.7287302E12, 18.266666666666666], [1.72872474E12, 12.0], [1.72872696E12, 11.966666666666667], [1.72872354E12, 6.033333333333333], [1.72872798E12, 16.75], [1.72872594E12, 11.783333333333333], [1.72872816E12, 16.416666666666668], [1.72872918E12, 16.15], [1.72872234E12, 5.833333333333333], [1.72872714E12, 11.466666666666667], [1.72873038E12, 18.166666666666668], [1.72872492E12, 12.15], [1.72872936E12, 13.633333333333333], [1.72872336E12, 6.7], [1.72872834E12, 15.833333333333334], [1.72872318E12, 6.5], [1.72872216E12, 6.566666666666666], [1.72872612E12, 12.116666666666667], [1.72873056E12, 17.083333333333332], [1.72872198E12, 3.316666666666667], [1.7287242E12, 6.183333333333334], [1.7287251E12, 11.733333333333333], [1.72872732E12, 16.9], [1.72872954E12, 18.366666666666667], [1.72872528E12, 12.133333333333333], [1.728723E12, 6.433333333333334], [1.72873074E12, 18.616666666666667], [1.7287263E12, 12.4], [1.72872852E12, 17.05], [1.7287218E12, 3.316666666666667], [1.72872972E12, 18.5], [1.72872648E12, 11.8], [1.72872402E12, 6.083333333333333], [1.7287275E12, 16.0], [1.72872546E12, 12.016666666666667], [1.72872768E12, 16.65], [1.7287287E12, 17.133333333333333], [1.72873092E12, 18.8], [1.72872282E12, 6.116666666666666], [1.72872666E12, 11.8], [1.7287299E12, 17.966666666666665], [1.72872444E12, 6.483333333333333], [1.72872888E12, 16.1], [1.72872384E12, 6.516666666666667], [1.72872366E12, 6.483333333333333], [1.72872786E12, 16.866666666666667], [1.7287311E12, 17.666666666666668], [1.72872564E12, 13.116666666666667], [1.72873008E12, 18.75], [1.72872264E12, 6.35], [1.72872246E12, 6.416666666666667], [1.72872462E12, 11.633333333333333], [1.72872684E12, 12.083333333333334], [1.72872906E12, 16.75], [1.7287248E12, 12.466666666666667], [1.72872348E12, 6.65], [1.72872582E12, 11.866666666666667], [1.72872804E12, 17.2], [1.72873026E12, 18.983333333333334], [1.728726E12, 11.883333333333333], [1.72872924E12, 16.416666666666668], [1.72872228E12, 6.216666666666667], [1.72872702E12, 11.716666666666667], [1.72873044E12, 17.4], [1.72872498E12, 11.833333333333334], [1.7287272E12, 5.966666666666667], [1.7287233E12, 6.8], [1.72872822E12, 15.85], [1.72872618E12, 11.783333333333333], [1.7287284E12, 17.15], [1.72872942E12, 5.85], [1.7287221E12, 6.2], [1.72872432E12, 6.4], [1.72872414E12, 6.55], [1.72872738E12, 16.983333333333334], [1.72873062E12, 18.1], [1.7287296E12, 18.633333333333333], [1.72872516E12, 12.6], [1.72872312E12, 6.466666666666667], [1.72872294E12, 6.283333333333333], [1.72872192E12, 2.8666666666666667], [1.72872636E12, 12.6], [1.72872858E12, 16.866666666666667], [1.7287308E12, 18.266666666666666], [1.72872174E12, 3.55], [1.72872396E12, 6.133333333333334], [1.72872756E12, 16.533333333333335], [1.72872978E12, 19.083333333333332], [1.72872534E12, 11.533333333333333], [1.72872552E12, 12.266666666666667], [1.72872876E12, 16.683333333333334], [1.72872276E12, 5.8], [1.72872654E12, 12.083333333333334], [1.72873098E12, 18.116666666666667], [1.72872996E12, 18.533333333333335], [1.7287245E12, 6.283333333333333], [1.72872672E12, 11.866666666666667], [1.72872378E12, 6.283333333333333], [1.72872774E12, 16.2], [1.7287257E12, 12.35], [1.72872792E12, 15.983333333333333], [1.72872894E12, 16.35], [1.72873116E12, 18.883333333333333], [1.72872258E12, 6.35], [1.7287269E12, 12.083333333333334], [1.72873014E12, 17.383333333333333], [1.72872468E12, 12.466666666666667], [1.72872912E12, 17.766666666666666], [1.7287236E12, 6.633333333333334], [1.72872342E12, 6.15], [1.7287281E12, 15.683333333333334], [1.72872588E12, 11.533333333333333], [1.72873032E12, 18.933333333333334], [1.7287224E12, 6.266666666666667], [1.72872222E12, 6.483333333333333], [1.72872486E12, 12.3], [1.72872708E12, 11.95], [1.7287293E12, 15.766666666666667], [1.72872504E12, 12.75], [1.72872324E12, 6.566666666666666], [1.72872606E12, 12.633333333333333], [1.72872828E12, 17.75], [1.7287305E12, 18.466666666666665], [1.72872204E12, 6.3], [1.72872624E12, 11.916666666666666], [1.72872948E12, 17.8], [1.72872426E12, 5.95], [1.72872726E12, 17.266666666666666], [1.72872522E12, 12.4], [1.72872744E12, 16.166666666666668], [1.72873068E12, 17.65], [1.72872846E12, 16.566666666666666], [1.72872306E12, 5.933333333333334], [1.72872642E12, 12.95], [1.72872966E12, 18.866666666666667], [1.72872864E12, 16.416666666666668], [1.72872186E12, 3.4833333333333334], [1.72872408E12, 5.866666666666666], [1.7287239E12, 6.85], [1.72872762E12, 14.966666666666667], [1.72873086E12, 18.116666666666667], [1.7287254E12, 11.983333333333333], [1.72872984E12, 17.85], [1.72872288E12, 6.716666666666667], [1.7287227E12, 5.766666666666667], [1.72872168E12, 2.8666666666666667], [1.72872438E12, 7.1], [1.7287266E12, 11.883333333333333], [1.72872882E12, 16.966666666666665], [1.72873104E12, 17.166666666666668], [1.72872456E12, 9.35], [1.72872372E12, 6.65], [1.72872558E12, 11.7], [1.7287278E12, 16.616666666666667], [1.72873002E12, 17.8], [1.72872576E12, 11.716666666666667], [1.728729E12, 16.766666666666666], [1.72872252E12, 6.533333333333333], [1.72872678E12, 11.9], [1.72873122E12, 5.3]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72873122E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

