/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 39.0, "minX": 0.0, "maxY": 4699.0, "series": [{"data": [[0.0, 39.0], [0.1, 53.0], [0.2, 57.0], [0.3, 59.0], [0.4, 61.0], [0.5, 62.0], [0.6, 63.0], [0.7, 65.0], [0.8, 65.0], [0.9, 66.0], [1.0, 67.0], [1.1, 68.0], [1.2, 69.0], [1.3, 70.0], [1.4, 70.0], [1.5, 71.0], [1.6, 72.0], [1.7, 72.0], [1.8, 73.0], [1.9, 73.0], [2.0, 74.0], [2.1, 74.0], [2.2, 75.0], [2.3, 75.0], [2.4, 76.0], [2.5, 76.0], [2.6, 77.0], [2.7, 77.0], [2.8, 78.0], [2.9, 78.0], [3.0, 79.0], [3.1, 79.0], [3.2, 80.0], [3.3, 80.0], [3.4, 80.0], [3.5, 81.0], [3.6, 81.0], [3.7, 82.0], [3.8, 82.0], [3.9, 83.0], [4.0, 83.0], [4.1, 83.0], [4.2, 84.0], [4.3, 84.0], [4.4, 84.0], [4.5, 85.0], [4.6, 85.0], [4.7, 85.0], [4.8, 86.0], [4.9, 86.0], [5.0, 87.0], [5.1, 87.0], [5.2, 87.0], [5.3, 88.0], [5.4, 88.0], [5.5, 88.0], [5.6, 89.0], [5.7, 89.0], [5.8, 89.0], [5.9, 90.0], [6.0, 90.0], [6.1, 90.0], [6.2, 90.0], [6.3, 91.0], [6.4, 91.0], [6.5, 92.0], [6.6, 92.0], [6.7, 92.0], [6.8, 93.0], [6.9, 93.0], [7.0, 93.0], [7.1, 93.0], [7.2, 94.0], [7.3, 94.0], [7.4, 94.0], [7.5, 95.0], [7.6, 95.0], [7.7, 95.0], [7.8, 96.0], [7.9, 96.0], [8.0, 96.0], [8.1, 97.0], [8.2, 97.0], [8.3, 97.0], [8.4, 98.0], [8.5, 98.0], [8.6, 98.0], [8.7, 99.0], [8.8, 99.0], [8.9, 99.0], [9.0, 100.0], [9.1, 100.0], [9.2, 100.0], [9.3, 100.0], [9.4, 101.0], [9.5, 101.0], [9.6, 101.0], [9.7, 102.0], [9.8, 102.0], [9.9, 102.0], [10.0, 102.0], [10.1, 103.0], [10.2, 103.0], [10.3, 103.0], [10.4, 104.0], [10.5, 104.0], [10.6, 104.0], [10.7, 105.0], [10.8, 105.0], [10.9, 105.0], [11.0, 105.0], [11.1, 106.0], [11.2, 106.0], [11.3, 106.0], [11.4, 107.0], [11.5, 107.0], [11.6, 107.0], [11.7, 108.0], [11.8, 108.0], [11.9, 108.0], [12.0, 109.0], [12.1, 109.0], [12.2, 109.0], [12.3, 109.0], [12.4, 110.0], [12.5, 110.0], [12.6, 110.0], [12.7, 111.0], [12.8, 111.0], [12.9, 111.0], [13.0, 112.0], [13.1, 112.0], [13.2, 112.0], [13.3, 113.0], [13.4, 113.0], [13.5, 113.0], [13.6, 114.0], [13.7, 114.0], [13.8, 114.0], [13.9, 115.0], [14.0, 115.0], [14.1, 115.0], [14.2, 115.0], [14.3, 116.0], [14.4, 116.0], [14.5, 116.0], [14.6, 117.0], [14.7, 117.0], [14.8, 117.0], [14.9, 118.0], [15.0, 118.0], [15.1, 118.0], [15.2, 119.0], [15.3, 119.0], [15.4, 119.0], [15.5, 119.0], [15.6, 120.0], [15.7, 120.0], [15.8, 120.0], [15.9, 121.0], [16.0, 121.0], [16.1, 121.0], [16.2, 122.0], [16.3, 122.0], [16.4, 123.0], [16.5, 123.0], [16.6, 123.0], [16.7, 124.0], [16.8, 124.0], [16.9, 124.0], [17.0, 125.0], [17.1, 125.0], [17.2, 125.0], [17.3, 125.0], [17.4, 126.0], [17.5, 126.0], [17.6, 126.0], [17.7, 127.0], [17.8, 127.0], [17.9, 127.0], [18.0, 128.0], [18.1, 128.0], [18.2, 128.0], [18.3, 129.0], [18.4, 129.0], [18.5, 129.0], [18.6, 130.0], [18.7, 130.0], [18.8, 130.0], [18.9, 131.0], [19.0, 131.0], [19.1, 131.0], [19.2, 132.0], [19.3, 132.0], [19.4, 132.0], [19.5, 133.0], [19.6, 133.0], [19.7, 133.0], [19.8, 134.0], [19.9, 134.0], [20.0, 135.0], [20.1, 135.0], [20.2, 135.0], [20.3, 136.0], [20.4, 136.0], [20.5, 136.0], [20.6, 137.0], [20.7, 137.0], [20.8, 137.0], [20.9, 138.0], [21.0, 138.0], [21.1, 139.0], [21.2, 139.0], [21.3, 139.0], [21.4, 140.0], [21.5, 140.0], [21.6, 140.0], [21.7, 141.0], [21.8, 141.0], [21.9, 142.0], [22.0, 142.0], [22.1, 142.0], [22.2, 143.0], [22.3, 143.0], [22.4, 144.0], [22.5, 144.0], [22.6, 144.0], [22.7, 145.0], [22.8, 145.0], [22.9, 145.0], [23.0, 146.0], [23.1, 146.0], [23.2, 147.0], [23.3, 147.0], [23.4, 147.0], [23.5, 148.0], [23.6, 148.0], [23.7, 149.0], [23.8, 149.0], [23.9, 150.0], [24.0, 150.0], [24.1, 151.0], [24.2, 151.0], [24.3, 151.0], [24.4, 152.0], [24.5, 152.0], [24.6, 153.0], [24.7, 153.0], [24.8, 154.0], [24.9, 154.0], [25.0, 155.0], [25.1, 155.0], [25.2, 156.0], [25.3, 156.0], [25.4, 156.0], [25.5, 157.0], [25.6, 157.0], [25.7, 158.0], [25.8, 158.0], [25.9, 159.0], [26.0, 159.0], [26.1, 160.0], [26.2, 160.0], [26.3, 161.0], [26.4, 161.0], [26.5, 162.0], [26.6, 162.0], [26.7, 163.0], [26.8, 163.0], [26.9, 164.0], [27.0, 165.0], [27.1, 165.0], [27.2, 166.0], [27.3, 166.0], [27.4, 167.0], [27.5, 167.0], [27.6, 168.0], [27.7, 168.0], [27.8, 169.0], [27.9, 169.0], [28.0, 170.0], [28.1, 171.0], [28.2, 171.0], [28.3, 172.0], [28.4, 172.0], [28.5, 173.0], [28.6, 173.0], [28.7, 174.0], [28.8, 174.0], [28.9, 175.0], [29.0, 176.0], [29.1, 176.0], [29.2, 177.0], [29.3, 178.0], [29.4, 178.0], [29.5, 179.0], [29.6, 179.0], [29.7, 180.0], [29.8, 181.0], [29.9, 181.0], [30.0, 182.0], [30.1, 183.0], [30.2, 183.0], [30.3, 184.0], [30.4, 185.0], [30.5, 185.0], [30.6, 186.0], [30.7, 187.0], [30.8, 188.0], [30.9, 189.0], [31.0, 189.0], [31.1, 190.0], [31.2, 191.0], [31.3, 191.0], [31.4, 192.0], [31.5, 193.0], [31.6, 194.0], [31.7, 194.0], [31.8, 195.0], [31.9, 196.0], [32.0, 197.0], [32.1, 198.0], [32.2, 198.0], [32.3, 199.0], [32.4, 200.0], [32.5, 201.0], [32.6, 202.0], [32.7, 202.0], [32.8, 203.0], [32.9, 204.0], [33.0, 205.0], [33.1, 206.0], [33.2, 207.0], [33.3, 208.0], [33.4, 209.0], [33.5, 209.0], [33.6, 210.0], [33.7, 211.0], [33.8, 212.0], [33.9, 213.0], [34.0, 214.0], [34.1, 215.0], [34.2, 216.0], [34.3, 217.0], [34.4, 218.0], [34.5, 219.0], [34.6, 220.0], [34.7, 221.0], [34.8, 222.0], [34.9, 223.0], [35.0, 224.0], [35.1, 226.0], [35.2, 227.0], [35.3, 228.0], [35.4, 229.0], [35.5, 230.0], [35.6, 231.0], [35.7, 233.0], [35.8, 234.0], [35.9, 235.0], [36.0, 236.0], [36.1, 238.0], [36.2, 239.0], [36.3, 240.0], [36.4, 242.0], [36.5, 243.0], [36.6, 245.0], [36.7, 246.0], [36.8, 247.0], [36.9, 249.0], [37.0, 250.0], [37.1, 252.0], [37.2, 253.0], [37.3, 255.0], [37.4, 257.0], [37.5, 258.0], [37.6, 260.0], [37.7, 262.0], [37.8, 263.0], [37.9, 265.0], [38.0, 266.0], [38.1, 268.0], [38.2, 270.0], [38.3, 272.0], [38.4, 274.0], [38.5, 276.0], [38.6, 278.0], [38.7, 280.0], [38.8, 281.0], [38.9, 283.0], [39.0, 285.0], [39.1, 287.0], [39.2, 290.0], [39.3, 292.0], [39.4, 294.0], [39.5, 296.0], [39.6, 298.0], [39.7, 300.0], [39.8, 303.0], [39.9, 305.0], [40.0, 307.0], [40.1, 310.0], [40.2, 312.0], [40.3, 315.0], [40.4, 318.0], [40.5, 321.0], [40.6, 323.0], [40.7, 326.0], [40.8, 329.0], [40.9, 331.0], [41.0, 334.0], [41.1, 337.0], [41.2, 340.0], [41.3, 343.0], [41.4, 346.0], [41.5, 349.0], [41.6, 352.0], [41.7, 355.0], [41.8, 358.0], [41.9, 362.0], [42.0, 366.0], [42.1, 369.0], [42.2, 373.0], [42.3, 376.0], [42.4, 380.0], [42.5, 383.0], [42.6, 387.0], [42.7, 391.0], [42.8, 394.0], [42.9, 398.0], [43.0, 402.0], [43.1, 406.0], [43.2, 409.0], [43.3, 414.0], [43.4, 418.0], [43.5, 422.0], [43.6, 426.0], [43.7, 430.0], [43.8, 434.0], [43.9, 438.0], [44.0, 443.0], [44.1, 447.0], [44.2, 452.0], [44.3, 457.0], [44.4, 461.0], [44.5, 466.0], [44.6, 471.0], [44.7, 476.0], [44.8, 481.0], [44.9, 487.0], [45.0, 492.0], [45.1, 498.0], [45.2, 502.0], [45.3, 507.0], [45.4, 512.0], [45.5, 517.0], [45.6, 522.0], [45.7, 527.0], [45.8, 531.0], [45.9, 536.0], [46.0, 540.0], [46.1, 544.0], [46.2, 549.0], [46.3, 553.0], [46.4, 557.0], [46.5, 561.0], [46.6, 566.0], [46.7, 570.0], [46.8, 575.0], [46.9, 580.0], [47.0, 584.0], [47.1, 588.0], [47.2, 592.0], [47.3, 597.0], [47.4, 601.0], [47.5, 605.0], [47.6, 610.0], [47.7, 613.0], [47.8, 617.0], [47.9, 622.0], [48.0, 626.0], [48.1, 630.0], [48.2, 634.0], [48.3, 637.0], [48.4, 641.0], [48.5, 645.0], [48.6, 648.0], [48.7, 652.0], [48.8, 656.0], [48.9, 659.0], [49.0, 662.0], [49.1, 665.0], [49.2, 668.0], [49.3, 672.0], [49.4, 674.0], [49.5, 677.0], [49.6, 681.0], [49.7, 684.0], [49.8, 687.0], [49.9, 691.0], [50.0, 694.0], [50.1, 698.0], [50.2, 701.0], [50.3, 704.0], [50.4, 707.0], [50.5, 711.0], [50.6, 714.0], [50.7, 717.0], [50.8, 720.0], [50.9, 722.0], [51.0, 725.0], [51.1, 728.0], [51.2, 731.0], [51.3, 734.0], [51.4, 737.0], [51.5, 740.0], [51.6, 743.0], [51.7, 745.0], [51.8, 748.0], [51.9, 751.0], [52.0, 754.0], [52.1, 757.0], [52.2, 760.0], [52.3, 762.0], [52.4, 765.0], [52.5, 767.0], [52.6, 770.0], [52.7, 772.0], [52.8, 775.0], [52.9, 779.0], [53.0, 781.0], [53.1, 784.0], [53.2, 787.0], [53.3, 789.0], [53.4, 792.0], [53.5, 795.0], [53.6, 798.0], [53.7, 801.0], [53.8, 803.0], [53.9, 806.0], [54.0, 808.0], [54.1, 811.0], [54.2, 814.0], [54.3, 816.0], [54.4, 819.0], [54.5, 821.0], [54.6, 824.0], [54.7, 826.0], [54.8, 828.0], [54.9, 831.0], [55.0, 833.0], [55.1, 835.0], [55.2, 838.0], [55.3, 840.0], [55.4, 843.0], [55.5, 845.0], [55.6, 848.0], [55.7, 850.0], [55.8, 853.0], [55.9, 855.0], [56.0, 857.0], [56.1, 860.0], [56.2, 862.0], [56.3, 865.0], [56.4, 867.0], [56.5, 869.0], [56.6, 871.0], [56.7, 874.0], [56.8, 876.0], [56.9, 878.0], [57.0, 880.0], [57.1, 882.0], [57.2, 885.0], [57.3, 887.0], [57.4, 889.0], [57.5, 891.0], [57.6, 894.0], [57.7, 896.0], [57.8, 898.0], [57.9, 901.0], [58.0, 903.0], [58.1, 905.0], [58.2, 907.0], [58.3, 909.0], [58.4, 912.0], [58.5, 914.0], [58.6, 917.0], [58.7, 919.0], [58.8, 921.0], [58.9, 924.0], [59.0, 926.0], [59.1, 928.0], [59.2, 931.0], [59.3, 933.0], [59.4, 935.0], [59.5, 937.0], [59.6, 939.0], [59.7, 941.0], [59.8, 943.0], [59.9, 946.0], [60.0, 948.0], [60.1, 949.0], [60.2, 952.0], [60.3, 954.0], [60.4, 956.0], [60.5, 958.0], [60.6, 961.0], [60.7, 963.0], [60.8, 965.0], [60.9, 967.0], [61.0, 968.0], [61.1, 971.0], [61.2, 973.0], [61.3, 975.0], [61.4, 977.0], [61.5, 979.0], [61.6, 981.0], [61.7, 984.0], [61.8, 986.0], [61.9, 988.0], [62.0, 990.0], [62.1, 992.0], [62.2, 994.0], [62.3, 996.0], [62.4, 998.0], [62.5, 1000.0], [62.6, 1002.0], [62.7, 1004.0], [62.8, 1006.0], [62.9, 1008.0], [63.0, 1010.0], [63.1, 1012.0], [63.2, 1014.0], [63.3, 1016.0], [63.4, 1018.0], [63.5, 1020.0], [63.6, 1022.0], [63.7, 1024.0], [63.8, 1026.0], [63.9, 1029.0], [64.0, 1031.0], [64.1, 1033.0], [64.2, 1035.0], [64.3, 1037.0], [64.4, 1039.0], [64.5, 1042.0], [64.6, 1044.0], [64.7, 1046.0], [64.8, 1048.0], [64.9, 1050.0], [65.0, 1052.0], [65.1, 1054.0], [65.2, 1056.0], [65.3, 1058.0], [65.4, 1061.0], [65.5, 1063.0], [65.6, 1065.0], [65.7, 1067.0], [65.8, 1069.0], [65.9, 1071.0], [66.0, 1073.0], [66.1, 1075.0], [66.2, 1078.0], [66.3, 1080.0], [66.4, 1082.0], [66.5, 1084.0], [66.6, 1086.0], [66.7, 1088.0], [66.8, 1090.0], [66.9, 1092.0], [67.0, 1094.0], [67.1, 1097.0], [67.2, 1099.0], [67.3, 1101.0], [67.4, 1103.0], [67.5, 1105.0], [67.6, 1107.0], [67.7, 1109.0], [67.8, 1112.0], [67.9, 1114.0], [68.0, 1116.0], [68.1, 1118.0], [68.2, 1121.0], [68.3, 1123.0], [68.4, 1125.0], [68.5, 1127.0], [68.6, 1129.0], [68.7, 1131.0], [68.8, 1133.0], [68.9, 1136.0], [69.0, 1138.0], [69.1, 1140.0], [69.2, 1142.0], [69.3, 1144.0], [69.4, 1146.0], [69.5, 1148.0], [69.6, 1151.0], [69.7, 1153.0], [69.8, 1155.0], [69.9, 1157.0], [70.0, 1160.0], [70.1, 1162.0], [70.2, 1164.0], [70.3, 1167.0], [70.4, 1169.0], [70.5, 1171.0], [70.6, 1173.0], [70.7, 1175.0], [70.8, 1177.0], [70.9, 1179.0], [71.0, 1182.0], [71.1, 1184.0], [71.2, 1186.0], [71.3, 1188.0], [71.4, 1190.0], [71.5, 1192.0], [71.6, 1195.0], [71.7, 1197.0], [71.8, 1199.0], [71.9, 1201.0], [72.0, 1203.0], [72.1, 1205.0], [72.2, 1208.0], [72.3, 1210.0], [72.4, 1212.0], [72.5, 1214.0], [72.6, 1217.0], [72.7, 1219.0], [72.8, 1222.0], [72.9, 1224.0], [73.0, 1226.0], [73.1, 1228.0], [73.2, 1230.0], [73.3, 1233.0], [73.4, 1235.0], [73.5, 1237.0], [73.6, 1239.0], [73.7, 1241.0], [73.8, 1244.0], [73.9, 1246.0], [74.0, 1249.0], [74.1, 1251.0], [74.2, 1254.0], [74.3, 1256.0], [74.4, 1258.0], [74.5, 1260.0], [74.6, 1262.0], [74.7, 1265.0], [74.8, 1267.0], [74.9, 1269.0], [75.0, 1272.0], [75.1, 1274.0], [75.2, 1276.0], [75.3, 1278.0], [75.4, 1281.0], [75.5, 1283.0], [75.6, 1285.0], [75.7, 1288.0], [75.8, 1290.0], [75.9, 1292.0], [76.0, 1294.0], [76.1, 1297.0], [76.2, 1299.0], [76.3, 1301.0], [76.4, 1303.0], [76.5, 1306.0], [76.6, 1308.0], [76.7, 1311.0], [76.8, 1313.0], [76.9, 1315.0], [77.0, 1318.0], [77.1, 1320.0], [77.2, 1323.0], [77.3, 1325.0], [77.4, 1328.0], [77.5, 1330.0], [77.6, 1332.0], [77.7, 1335.0], [77.8, 1337.0], [77.9, 1340.0], [78.0, 1342.0], [78.1, 1345.0], [78.2, 1347.0], [78.3, 1350.0], [78.4, 1352.0], [78.5, 1355.0], [78.6, 1357.0], [78.7, 1360.0], [78.8, 1362.0], [78.9, 1365.0], [79.0, 1367.0], [79.1, 1370.0], [79.2, 1372.0], [79.3, 1375.0], [79.4, 1378.0], [79.5, 1380.0], [79.6, 1383.0], [79.7, 1386.0], [79.8, 1388.0], [79.9, 1391.0], [80.0, 1394.0], [80.1, 1396.0], [80.2, 1399.0], [80.3, 1402.0], [80.4, 1404.0], [80.5, 1407.0], [80.6, 1409.0], [80.7, 1412.0], [80.8, 1415.0], [80.9, 1417.0], [81.0, 1420.0], [81.1, 1423.0], [81.2, 1426.0], [81.3, 1429.0], [81.4, 1432.0], [81.5, 1435.0], [81.6, 1437.0], [81.7, 1440.0], [81.8, 1443.0], [81.9, 1445.0], [82.0, 1448.0], [82.1, 1451.0], [82.2, 1455.0], [82.3, 1457.0], [82.4, 1460.0], [82.5, 1463.0], [82.6, 1465.0], [82.7, 1468.0], [82.8, 1471.0], [82.9, 1474.0], [83.0, 1477.0], [83.1, 1480.0], [83.2, 1483.0], [83.3, 1486.0], [83.4, 1489.0], [83.5, 1493.0], [83.6, 1496.0], [83.7, 1498.0], [83.8, 1502.0], [83.9, 1505.0], [84.0, 1508.0], [84.1, 1511.0], [84.2, 1514.0], [84.3, 1518.0], [84.4, 1521.0], [84.5, 1524.0], [84.6, 1528.0], [84.7, 1530.0], [84.8, 1534.0], [84.9, 1537.0], [85.0, 1540.0], [85.1, 1543.0], [85.2, 1547.0], [85.3, 1550.0], [85.4, 1553.0], [85.5, 1557.0], [85.6, 1560.0], [85.7, 1564.0], [85.8, 1567.0], [85.9, 1570.0], [86.0, 1574.0], [86.1, 1577.0], [86.2, 1580.0], [86.3, 1583.0], [86.4, 1587.0], [86.5, 1590.0], [86.6, 1593.0], [86.7, 1598.0], [86.8, 1601.0], [86.9, 1605.0], [87.0, 1608.0], [87.1, 1612.0], [87.2, 1615.0], [87.3, 1619.0], [87.4, 1623.0], [87.5, 1626.0], [87.6, 1630.0], [87.7, 1634.0], [87.8, 1638.0], [87.9, 1642.0], [88.0, 1646.0], [88.1, 1650.0], [88.2, 1653.0], [88.3, 1657.0], [88.4, 1662.0], [88.5, 1666.0], [88.6, 1671.0], [88.7, 1675.0], [88.8, 1679.0], [88.9, 1683.0], [89.0, 1686.0], [89.1, 1690.0], [89.2, 1694.0], [89.3, 1699.0], [89.4, 1704.0], [89.5, 1708.0], [89.6, 1712.0], [89.7, 1716.0], [89.8, 1722.0], [89.9, 1726.0], [90.0, 1730.0], [90.1, 1735.0], [90.2, 1740.0], [90.3, 1745.0], [90.4, 1749.0], [90.5, 1753.0], [90.6, 1758.0], [90.7, 1763.0], [90.8, 1767.0], [90.9, 1772.0], [91.0, 1776.0], [91.1, 1780.0], [91.2, 1785.0], [91.3, 1790.0], [91.4, 1796.0], [91.5, 1801.0], [91.6, 1807.0], [91.7, 1812.0], [91.8, 1818.0], [91.9, 1822.0], [92.0, 1828.0], [92.1, 1833.0], [92.2, 1838.0], [92.3, 1844.0], [92.4, 1849.0], [92.5, 1854.0], [92.6, 1860.0], [92.7, 1866.0], [92.8, 1871.0], [92.9, 1877.0], [93.0, 1883.0], [93.1, 1890.0], [93.2, 1897.0], [93.3, 1904.0], [93.4, 1909.0], [93.5, 1915.0], [93.6, 1921.0], [93.7, 1927.0], [93.8, 1934.0], [93.9, 1940.0], [94.0, 1947.0], [94.1, 1954.0], [94.2, 1963.0], [94.3, 1970.0], [94.4, 1977.0], [94.5, 1984.0], [94.6, 1991.0], [94.7, 1998.0], [94.8, 2005.0], [94.9, 2013.0], [95.0, 2022.0], [95.1, 2029.0], [95.2, 2038.0], [95.3, 2046.0], [95.4, 2057.0], [95.5, 2065.0], [95.6, 2073.0], [95.7, 2083.0], [95.8, 2092.0], [95.9, 2101.0], [96.0, 2111.0], [96.1, 2120.0], [96.2, 2132.0], [96.3, 2143.0], [96.4, 2152.0], [96.5, 2163.0], [96.6, 2173.0], [96.7, 2184.0], [96.8, 2195.0], [96.9, 2205.0], [97.0, 2217.0], [97.1, 2231.0], [97.2, 2244.0], [97.3, 2257.0], [97.4, 2270.0], [97.5, 2286.0], [97.6, 2300.0], [97.7, 2314.0], [97.8, 2331.0], [97.9, 2349.0], [98.0, 2364.0], [98.1, 2381.0], [98.2, 2400.0], [98.3, 2421.0], [98.4, 2445.0], [98.5, 2466.0], [98.6, 2492.0], [98.7, 2516.0], [98.8, 2545.0], [98.9, 2577.0], [99.0, 2611.0], [99.1, 2640.0], [99.2, 2676.0], [99.3, 2714.0], [99.4, 2762.0], [99.5, 2826.0], [99.6, 2888.0], [99.7, 2976.0], [99.8, 3106.0], [99.9, 3280.0], [100.0, 4699.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 27374.0, "series": [{"data": [[0.0, 10546.0], [600.0, 3276.0], [700.0, 4114.0], [800.0, 4886.0], [900.0, 5441.0], [1000.0, 5587.0], [1100.0, 5374.0], [1200.0, 5149.0], [1300.0, 4674.0], [1400.0, 4133.0], [1500.0, 3538.0], [100.0, 27374.0], [1600.0, 2990.0], [1700.0, 2524.0], [1800.0, 2090.0], [1900.0, 1750.0], [2000.0, 1341.0], [2100.0, 1127.0], [2200.0, 880.0], [2300.0, 706.0], [2400.0, 506.0], [2500.0, 389.0], [2600.0, 354.0], [2700.0, 235.0], [2800.0, 192.0], [2900.0, 116.0], [3000.0, 82.0], [3100.0, 88.0], [200.0, 8574.0], [3200.0, 42.0], [3300.0, 33.0], [3400.0, 27.0], [3500.0, 10.0], [3600.0, 9.0], [3700.0, 10.0], [3800.0, 5.0], [3900.0, 6.0], [4000.0, 2.0], [4100.0, 4.0], [4200.0, 2.0], [4600.0, 1.0], [300.0, 3824.0], [400.0, 2584.0], [500.0, 2605.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 19026.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 52932.0, "series": [{"data": [[0.0, 52932.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 45242.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 19026.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.7849462365591393, "minX": 1.72882338E12, "maxY": 16.0, "series": [{"data": [[1.728831E12, 12.0], [1.7288307E12, 12.0], [1.72882968E12, 12.0], [1.7288313E12, 12.0], [1.72882938E12, 12.0], [1.7288316E12, 10.797011207970112], [1.72883028E12, 12.0], [1.72882998E12, 12.0], [1.72883088E12, 12.0], [1.72883058E12, 12.0], [1.72882956E12, 12.0], [1.72883118E12, 12.0], [1.72882926E12, 11.460526315789474], [1.72883148E12, 12.0], [1.72883016E12, 12.0], [1.72882986E12, 12.0], [1.72883076E12, 12.0], [1.72883046E12, 12.0], [1.72882944E12, 12.0], [1.72883106E12, 12.0], [1.72883136E12, 12.0], [1.72883004E12, 12.0], [1.72883166E12, 6.231388329979879], [1.72882974E12, 12.0], [1.72883064E12, 12.0], [1.72883034E12, 12.0], [1.72883124E12, 12.0], [1.72882932E12, 12.0], [1.72883094E12, 12.0], [1.72882992E12, 12.0], [1.72883154E12, 12.0], [1.72882962E12, 12.0], [1.72883052E12, 12.0], [1.72883022E12, 12.0], [1.72883112E12, 12.0], [1.72883082E12, 12.0], [1.7288298E12, 12.0], [1.72883142E12, 12.0], [1.7288295E12, 12.0], [1.72883172E12, 3.2330827067669183], [1.7288304E12, 12.0], [1.7288301E12, 12.0]], "isOverall": false, "label": "12", "isController": false}, {"data": [[1.72882374E12, 1.8666666666666667], [1.72882356E12, 2.0], [1.72882338E12, 2.0], [1.72882368E12, 2.0], [1.7288235E12, 2.0], [1.72882362E12, 2.0], [1.72882344E12, 2.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.72882374E12, 3.995614035087722], [1.72882584E12, 4.0], [1.72882404E12, 4.0], [1.72882554E12, 4.0], [1.72882434E12, 4.0], [1.72882524E12, 4.0], [1.72882464E12, 4.0], [1.72882446E12, 4.0], [1.72882512E12, 4.0], [1.72882476E12, 4.0], [1.72882614E12, 4.0], [1.72882632E12, 1.7849462365591393], [1.72882602E12, 4.0], [1.72882386E12, 4.0], [1.72882572E12, 4.0], [1.72882416E12, 4.0], [1.72882542E12, 4.0], [1.72882398E12, 4.0], [1.7288256E12, 4.0], [1.72882428E12, 4.0], [1.7288253E12, 4.0], [1.72882458E12, 4.0], [1.728825E12, 4.0], [1.72882488E12, 4.0], [1.7288247E12, 4.0], [1.7288262E12, 4.0], [1.7288259E12, 4.0], [1.72882608E12, 4.0], [1.7288238E12, 4.0], [1.72882578E12, 4.0], [1.7288241E12, 4.0], [1.72882548E12, 4.0], [1.7288244E12, 4.0], [1.72882518E12, 4.0], [1.72882422E12, 4.0], [1.72882536E12, 4.0], [1.72882452E12, 4.0], [1.72882506E12, 4.0], [1.72882482E12, 4.0], [1.72882494E12, 4.0], [1.72882626E12, 2.883928571428571], [1.72882596E12, 4.0], [1.72882392E12, 4.0], [1.72882566E12, 4.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.72883262E12, 16.0], [1.72883292E12, 16.0], [1.72883322E12, 16.0], [1.7288319E12, 16.0], [1.72883352E12, 16.0], [1.7288322E12, 16.0], [1.7288325E12, 16.0], [1.7288328E12, 16.0], [1.7288331E12, 16.0], [1.72883178E12, 16.0], [1.72883208E12, 16.0], [1.72883238E12, 16.0], [1.72883268E12, 16.0], [1.72883298E12, 16.0], [1.7288334E12, 16.0], [1.72883328E12, 16.0], [1.72883196E12, 16.0], [1.72883346E12, 16.0], [1.72883226E12, 16.0], [1.72883256E12, 16.0], [1.72883286E12, 16.0], [1.72883316E12, 16.0], [1.72883184E12, 16.0], [1.72883358E12, 12.582004555808647], [1.72883214E12, 16.0], [1.72883244E12, 16.0], [1.72883274E12, 16.0], [1.72883364E12, 2.7857142857142856], [1.72883304E12, 16.0], [1.72883334E12, 16.0], [1.72883172E12, 15.90322580645161], [1.72883202E12, 16.0], [1.72883232E12, 16.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.72882746E12, 8.0], [1.72882686E12, 8.0], [1.72882908E12, 8.0], [1.72882704E12, 8.0], [1.72882866E12, 8.0], [1.72882644E12, 8.0], [1.72882806E12, 8.0], [1.72882824E12, 8.0], [1.72882926E12, 5.140740740740739], [1.72882764E12, 8.0], [1.72882722E12, 8.0], [1.72882662E12, 8.0], [1.72882884E12, 8.0], [1.7288265E12, 8.0], [1.72882872E12, 8.0], [1.72882812E12, 8.0], [1.7288277E12, 8.0], [1.7288271E12, 8.0], [1.7288289E12, 8.0], [1.72882728E12, 8.0], [1.72882668E12, 8.0], [1.7288283E12, 8.0], [1.72882848E12, 8.0], [1.72882788E12, 8.0], [1.72882776E12, 8.0], [1.72882878E12, 8.0], [1.72882716E12, 8.0], [1.72882674E12, 8.0], [1.72882896E12, 8.0], [1.72882836E12, 8.0], [1.72882632E12, 7.988764044943825], [1.72882794E12, 8.0], [1.72882734E12, 8.0], [1.72882914E12, 8.0], [1.72882752E12, 8.0], [1.72882692E12, 8.0], [1.72882854E12, 8.0], [1.7288268E12, 8.0], [1.72882842E12, 8.0], [1.72882782E12, 8.0], [1.728828E12, 8.0], [1.72882902E12, 8.0], [1.7288274E12, 8.0], [1.72882698E12, 8.0], [1.7288292E12, 7.6666666666666705], [1.72882638E12, 8.0], [1.7288286E12, 8.0], [1.72882656E12, 8.0], [1.72882818E12, 8.0], [1.72882758E12, 8.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72883364E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 631.2957848837209, "minX": 1.0, "maxY": 980.060975609756, "series": [{"data": [[2.0, 631.2957848837209], [8.0, 729.0814298334187], [9.0, 871.3999999999996], [10.0, 792.6616541353382], [11.0, 767.1026856240131], [3.0, 714.879518072289], [12.0, 792.959140218112], [13.0, 774.5632183908046], [14.0, 912.9038461538465], [15.0, 980.060975609756], [1.0, 774.0375000000001], [4.0, 635.9936509932095], [16.0, 937.2797611444635], [5.0, 698.3505154639174], [6.0, 732.9928057553961], [7.0, 723.8503740648379]], "isOverall": false, "label": "getmap", "isController": false}, {"data": [[10.721006825938721, 790.6063651877133]], "isOverall": false, "label": "getmap-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.72882338E12, "maxY": 5.4067361516666666E7, "series": [{"data": [[1.72882584E12, 1.9769484316666666E7], [1.7288313E12, 4.613926171666667E7], [1.72882464E12, 1.9572785316666666E7], [1.72882686E12, 3.37393397E7], [1.72882908E12, 3.3785752766666666E7], [1.72882446E12, 1.9789905583333332E7], [1.72882704E12, 3.23870191E7], [1.72883028E12, 4.605976428333333E7], [1.72883352E12, 5.25419017E7], [1.7288325E12, 5.31134741E7], [1.72882806E12, 3.2634275783333335E7], [1.72882344E12, 1.0099223666666666E7], [1.72882824E12, 3.3828562333333336E7], [1.72882602E12, 1.9870350933333334E7], [1.72882926E12, 1.6999678916666668E7], [1.72883148E12, 4.536997613333333E7], [1.72882722E12, 3.385441421666667E7], [1.72882428E12, 1.8906717933333334E7], [1.72883046E12, 4.467845855E7], [1.72883268E12, 4.9842697E7], [1.728825E12, 1.9174544716666665E7], [1.72882944E12, 4.5428755916666664E7], [1.7288265E12, 3.1920509266666666E7], [1.72882872E12, 3.376809015E7], [1.72882974E12, 4.674870045E7], [1.72883196E12, 5.076073346666667E7], [1.7288277E12, 3.3346616433333334E7], [1.72883094E12, 4.4763579166666664E7], [1.72883316E12, 5.066184235E7], [1.7288238E12, 1.8909205033333335E7], [1.72882548E12, 1.9400833233333334E7], [1.72882992E12, 4.64787107E7], [1.7288289E12, 3.389462968333333E7], [1.72883214E12, 5.330572715E7], [1.72882482E12, 1.972801415E7], [1.72882668E12, 3.350847585E7], [1.72883112E12, 4.616640488333333E7], [1.72883334E12, 5.344757203333333E7], [1.72882362E12, 9938895.183333334], [1.72882566E12, 2.0084698216666665E7], [1.72882788E12, 3.35921071E7], [1.7288301E12, 4.6036431833333336E7], [1.72883232E12, 5.199624885E7], [1.72883262E12, 5.4067361516666666E7], [1.72882374E12, 1.4272937966666667E7], [1.72882716E12, 3.24622627E7], [1.72882938E12, 4.644756538333333E7], [1.7288316E12, 4.289941435E7], [1.72882512E12, 1.8735267283333335E7], [1.72882476E12, 1.9823403083333332E7], [1.72882614E12, 1.76978137E7], [1.72882836E12, 3.2927301366666667E7], [1.72883058E12, 4.5053179166666664E7], [1.7288328E12, 5.325524511666667E7], [1.72882632E12, 1.2829104616666667E7], [1.72882956E12, 4.6391941416666664E7], [1.72882356E12, 1.012268355E7], [1.72882734E12, 3.425914893333333E7], [1.72883178E12, 5.103588853333333E7], [1.72883076E12, 4.5030365416666664E7], [1.7288253E12, 2.047238265E7], [1.72882752E12, 3.363021886666667E7], [1.72882458E12, 1.9524065333333332E7], [1.72882854E12, 3.2622723216666665E7], [1.72883298E12, 5.315283845E7], [1.7288268E12, 3.3743323233333334E7], [1.72883004E12, 4.6164914333333336E7], [1.72883346E12, 5.22176592E7], [1.72882782E12, 3.3081787966666665E7], [1.72883226E12, 5.318318111666667E7], [1.72883124E12, 4.659171078333333E7], [1.72882578E12, 1.8734566333333332E7], [1.728828E12, 3.2897453466666665E7], [1.7288241E12, 2.0084963366666667E7], [1.72882902E12, 3.439453818333333E7], [1.72882698E12, 3.1747437283333335E7], [1.72883244E12, 5.1056059833333336E7], [1.72883022E12, 4.735021871666667E7], [1.7288292E12, 3.3579226583333336E7], [1.72883364E12, 1935219.15], [1.72882494E12, 2.003339295E7], [1.72882818E12, 3.398037318333333E7], [1.72883142E12, 4.70103289E7], [1.7288304E12, 4.585731293333333E7], [1.72882596E12, 1.85112841E7], [1.72882392E12, 1.9954523916666668E7], [1.72882746E12, 3.317824365E7], [1.72882404E12, 1.8966424583333332E7], [1.7288307E12, 4.7247640016666666E7], [1.72883292E12, 5.2563708483333334E7], [1.72882524E12, 2.0283107066666666E7], [1.72882968E12, 4.685181893333333E7], [1.72882866E12, 3.52170139E7], [1.7288319E12, 5.309643353333333E7], [1.72882644E12, 3.2975234383333333E7], [1.72883088E12, 4.688664795E7], [1.7288331E12, 5.26484465E7], [1.72882386E12, 1.9552029266666666E7], [1.72882542E12, 1.9498116333333332E7], [1.72882764E12, 3.468281086666667E7], [1.72882986E12, 4.6380174333333336E7], [1.72883208E12, 5.121905025E7], [1.7288256E12, 1.9171800633333333E7], [1.72882488E12, 1.924477675E7], [1.72882662E12, 3.4241490666666664E7], [1.72882884E12, 3.225166365E7], [1.72883106E12, 4.516586378333333E7], [1.72883328E12, 5.137600515E7], [1.72882338E12, 7561165.75], [1.72883034E12, 4.440133368333333E7], [1.72883256E12, 5.092312225E7], [1.7288259E12, 1.8340628116666667E7], [1.72882812E12, 3.2080200783333335E7], [1.72882608E12, 1.919784275E7], [1.72882932E12, 4.584936506666667E7], [1.7288271E12, 3.165289775E7], [1.72883154E12, 4.6405861583333336E7], [1.7288244E12, 1.9541052966666665E7], [1.72883358E12, 4.164072403333333E7], [1.72882422E12, 2.0404542383333333E7], [1.72883052E12, 4.67830097E7], [1.72882506E12, 1.8009818583333332E7], [1.72882728E12, 3.2549030866666667E7], [1.7288283E12, 3.355827268333333E7], [1.72883274E12, 5.1845316233333334E7], [1.72882626E12, 1.2242911333333334E7], [1.72882848E12, 3.339100075E7], [1.7288295E12, 4.582725485E7], [1.72883172E12, 2.6557163016666666E7], [1.728831E12, 4.512356495E7], [1.72882554E12, 1.9403226333333332E7], [1.72882776E12, 3.3318162383333333E7], [1.72882434E12, 1.9813322983333334E7], [1.72882878E12, 3.40513842E7], [1.72883322E12, 5.2693844E7], [1.72882674E12, 3.1861355E7], [1.72882896E12, 3.344976535E7], [1.72882998E12, 4.38921057E7], [1.7288322E12, 5.187192603333333E7], [1.72882794E12, 3.357940955E7], [1.72883118E12, 4.614399436666667E7], [1.72882572E12, 1.9836417183333334E7], [1.72883016E12, 4.627561675E7], [1.72882416E12, 2.0111059266666666E7], [1.72882398E12, 1.88405835E7], [1.72882914E12, 3.29649618E7], [1.72883238E12, 5.255972503333333E7], [1.72882692E12, 3.39753709E7], [1.7288334E12, 5.2814274333333336E7], [1.72883136E12, 4.517250861666667E7], [1.7288247E12, 1.89000578E7], [1.72882842E12, 3.3048493383333333E7], [1.72883166E12, 2.480136265E7], [1.7288262E12, 1.6363945983333332E7], [1.72883064E12, 4.7306067E7], [1.72882368E12, 9300838.383333333], [1.72883286E12, 5.265073221666667E7], [1.7288235E12, 9210518.8], [1.72882518E12, 1.8807215666666668E7], [1.7288274E12, 3.375142215E7], [1.72882962E12, 4.700845036666667E7], [1.72883184E12, 5.00910308E7], [1.72882536E12, 1.8412508E7], [1.72882452E12, 1.930327275E7], [1.72882638E12, 3.432874063333333E7], [1.7288286E12, 3.365379663333333E7], [1.72883082E12, 4.581911471666667E7], [1.72883304E12, 5.227830218333333E7], [1.72882656E12, 3.4480518583333336E7], [1.7288298E12, 4.7065974166666664E7], [1.72882758E12, 3.2304628383333333E7], [1.72883202E12, 5.1581142083333336E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72882584E12, 0.0], [1.7288313E12, 0.0], [1.72882464E12, 0.0], [1.72882686E12, 0.0], [1.72882908E12, 0.0], [1.72882446E12, 0.0], [1.72882704E12, 0.0], [1.72883028E12, 0.0], [1.72883352E12, 0.0], [1.7288325E12, 0.0], [1.72882806E12, 0.0], [1.72882344E12, 0.0], [1.72882824E12, 0.0], [1.72882602E12, 0.0], [1.72882926E12, 0.0], [1.72883148E12, 0.0], [1.72882722E12, 0.0], [1.72882428E12, 0.0], [1.72883046E12, 0.0], [1.72883268E12, 0.0], [1.728825E12, 0.0], [1.72882944E12, 0.0], [1.7288265E12, 0.0], [1.72882872E12, 0.0], [1.72882974E12, 0.0], [1.72883196E12, 0.0], [1.7288277E12, 0.0], [1.72883094E12, 0.0], [1.72883316E12, 0.0], [1.7288238E12, 0.0], [1.72882548E12, 0.0], [1.72882992E12, 0.0], [1.7288289E12, 0.0], [1.72883214E12, 0.0], [1.72882482E12, 0.0], [1.72882668E12, 0.0], [1.72883112E12, 0.0], [1.72883334E12, 0.0], [1.72882362E12, 0.0], [1.72882566E12, 0.0], [1.72882788E12, 0.0], [1.7288301E12, 0.0], [1.72883232E12, 0.0], [1.72883262E12, 0.0], [1.72882374E12, 0.0], [1.72882716E12, 0.0], [1.72882938E12, 0.0], [1.7288316E12, 0.0], [1.72882512E12, 0.0], [1.72882476E12, 0.0], [1.72882614E12, 0.0], [1.72882836E12, 0.0], [1.72883058E12, 0.0], [1.7288328E12, 0.0], [1.72882632E12, 0.0], [1.72882956E12, 0.0], [1.72882356E12, 0.0], [1.72882734E12, 0.0], [1.72883178E12, 0.0], [1.72883076E12, 0.0], [1.7288253E12, 0.0], [1.72882752E12, 0.0], [1.72882458E12, 0.0], [1.72882854E12, 0.0], [1.72883298E12, 0.0], [1.7288268E12, 0.0], [1.72883004E12, 0.0], [1.72883346E12, 0.0], [1.72882782E12, 0.0], [1.72883226E12, 0.0], [1.72883124E12, 0.0], [1.72882578E12, 0.0], [1.728828E12, 0.0], [1.7288241E12, 0.0], [1.72882902E12, 0.0], [1.72882698E12, 0.0], [1.72883244E12, 0.0], [1.72883022E12, 0.0], [1.7288292E12, 0.0], [1.72883364E12, 0.0], [1.72882494E12, 0.0], [1.72882818E12, 0.0], [1.72883142E12, 0.0], [1.7288304E12, 0.0], [1.72882596E12, 0.0], [1.72882392E12, 0.0], [1.72882746E12, 0.0], [1.72882404E12, 0.0], [1.7288307E12, 0.0], [1.72883292E12, 0.0], [1.72882524E12, 0.0], [1.72882968E12, 0.0], [1.72882866E12, 0.0], [1.7288319E12, 0.0], [1.72882644E12, 0.0], [1.72883088E12, 0.0], [1.7288331E12, 0.0], [1.72882386E12, 0.0], [1.72882542E12, 0.0], [1.72882764E12, 0.0], [1.72882986E12, 0.0], [1.72883208E12, 0.0], [1.7288256E12, 0.0], [1.72882488E12, 0.0], [1.72882662E12, 0.0], [1.72882884E12, 0.0], [1.72883106E12, 0.0], [1.72883328E12, 0.0], [1.72882338E12, 0.0], [1.72883034E12, 0.0], [1.72883256E12, 0.0], [1.7288259E12, 0.0], [1.72882812E12, 0.0], [1.72882608E12, 0.0], [1.72882932E12, 0.0], [1.7288271E12, 0.0], [1.72883154E12, 0.0], [1.7288244E12, 0.0], [1.72883358E12, 0.0], [1.72882422E12, 0.0], [1.72883052E12, 0.0], [1.72882506E12, 0.0], [1.72882728E12, 0.0], [1.7288283E12, 0.0], [1.72883274E12, 0.0], [1.72882626E12, 0.0], [1.72882848E12, 0.0], [1.7288295E12, 0.0], [1.72883172E12, 0.0], [1.728831E12, 0.0], [1.72882554E12, 0.0], [1.72882776E12, 0.0], [1.72882434E12, 0.0], [1.72882878E12, 0.0], [1.72883322E12, 0.0], [1.72882674E12, 0.0], [1.72882896E12, 0.0], [1.72882998E12, 0.0], [1.7288322E12, 0.0], [1.72882794E12, 0.0], [1.72883118E12, 0.0], [1.72882572E12, 0.0], [1.72883016E12, 0.0], [1.72882416E12, 0.0], [1.72882398E12, 0.0], [1.72882914E12, 0.0], [1.72883238E12, 0.0], [1.72882692E12, 0.0], [1.7288334E12, 0.0], [1.72883136E12, 0.0], [1.7288247E12, 0.0], [1.72882842E12, 0.0], [1.72883166E12, 0.0], [1.7288262E12, 0.0], [1.72883064E12, 0.0], [1.72882368E12, 0.0], [1.72883286E12, 0.0], [1.7288235E12, 0.0], [1.72882518E12, 0.0], [1.7288274E12, 0.0], [1.72882962E12, 0.0], [1.72883184E12, 0.0], [1.72882536E12, 0.0], [1.72882452E12, 0.0], [1.72882638E12, 0.0], [1.7288286E12, 0.0], [1.72883082E12, 0.0], [1.72883304E12, 0.0], [1.72882656E12, 0.0], [1.7288298E12, 0.0], [1.72882758E12, 0.0], [1.72883202E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72883364E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 564.1855345911949, "minX": 1.72882338E12, "maxY": 1009.476793248945, "series": [{"data": [[1.72882584E12, 690.1296829971176], [1.7288313E12, 806.8262331838565], [1.72882464E12, 626.8929503916455], [1.72882686E12, 723.974397590362], [1.72882908E12, 741.3931888544892], [1.72882446E12, 700.6434782608696], [1.72882704E12, 722.1501501501498], [1.72883028E12, 858.8004778972513], [1.72883352E12, 932.6094961240309], [1.7288325E12, 960.7555331991948], [1.72882806E12, 715.961194029851], [1.72882344E12, 578.591346153846], [1.72882824E12, 739.6461538461535], [1.72882602E12, 645.7231182795698], [1.72882926E12, 697.098265895954], [1.72883148E12, 800.8976640711904], [1.72882722E12, 756.0662460567819], [1.72882428E12, 620.5773195876282], [1.72883046E12, 772.0580021482272], [1.72883268E12, 897.492509363297], [1.728825E12, 576.4396135265702], [1.72882944E12, 756.1827731092433], [1.7288265E12, 690.0969609261939], [1.72882872E12, 766.3423566878979], [1.72882974E12, 833.4907192575413], [1.72883196E12, 919.0854126679462], [1.7288277E12, 742.0495356037156], [1.72883094E12, 814.6519274376404], [1.72883316E12, 899.3482726423912], [1.7288238E12, 625.4881889763776], [1.72882548E12, 611.007614213198], [1.72882992E12, 783.1310942578549], [1.7288289E12, 742.8858024691357], [1.72883214E12, 978.2520408163267], [1.72882482E12, 626.8276762402091], [1.72882668E12, 728.4382530120482], [1.72883112E12, 828.4175317185687], [1.72883334E12, 906.9415094339633], [1.72882362E12, 625.6052631578947], [1.72882566E12, 636.2058047493409], [1.72882788E12, 739.9599383667187], [1.7288301E12, 785.4575163398698], [1.72883232E12, 951.0365974282893], [1.72883262E12, 921.7533460803053], [1.72882374E12, 564.1855345911949], [1.72882716E12, 750.9032761310447], [1.72882938E12, 783.862255965294], [1.7288316E12, 807.4856787048564], [1.72882512E12, 659.433701657459], [1.72882476E12, 682.3514285714283], [1.72882614E12, 577.0966183574883], [1.72882836E12, 722.9668674698798], [1.72883058E12, 750.6170655567112], [1.7288328E12, 976.0222897669703], [1.72882632E12, 696.9815498154978], [1.72882956E12, 848.7301775147936], [1.72882356E12, 613.2525773195873], [1.72882734E12, 733.5000000000007], [1.72883178E12, 884.515291936976], [1.72883076E12, 787.9760348583883], [1.7288253E12, 635.1206434316351], [1.72882752E12, 701.0863836017576], [1.72882458E12, 636.1243386243389], [1.72882854E12, 714.0000000000008], [1.72883298E12, 947.0439453124991], [1.7288268E12, 761.5892575039493], [1.72883004E12, 816.9749715585898], [1.72883346E12, 934.3492682926825], [1.72882782E12, 754.1795275590559], [1.72883226E12, 932.9961352657009], [1.72883124E12, 793.0912087912085], [1.72882578E12, 676.2556179775278], [1.728828E12, 702.8243045387992], [1.7288241E12, 669.1717451523537], [1.72882902E12, 735.324615384615], [1.72882698E12, 745.7782945736437], [1.72883244E12, 957.6370887337976], [1.72883022E12, 787.3888888888889], [1.7288292E12, 745.6097560975601], [1.72883364E12, 914.8214285714287], [1.72882494E12, 632.3926701570682], [1.72882818E12, 730.0977099236641], [1.72883142E12, 804.0513392857141], [1.7288304E12, 759.0736842105266], [1.72882596E12, 688.1436781609193], [1.72882392E12, 657.9756097560978], [1.72882746E12, 744.221705426357], [1.72882404E12, 658.961538461538], [1.7288307E12, 772.8514531754564], [1.72883292E12, 1009.476793248945], [1.72882524E12, 635.4345549738216], [1.72882968E12, 833.4317129629636], [1.72882866E12, 729.3212121212129], [1.7288319E12, 963.9759277833496], [1.72882644E12, 722.1561561561557], [1.72883088E12, 743.0256673511294], [1.7288331E12, 925.5153846153843], [1.72882386E12, 623.9791666666664], [1.72882542E12, 643.8074866310162], [1.72882764E12, 738.837423312883], [1.72882986E12, 833.0464576074337], [1.72883208E12, 897.7478991596643], [1.7288256E12, 589.0074257425741], [1.72882488E12, 639.6906666666669], [1.72882662E12, 714.899700598803], [1.72882884E12, 704.1666666666661], [1.72883106E12, 787.3576881134144], [1.72883328E12, 913.2119771863125], [1.72882338E12, 673.5725190839696], [1.72883034E12, 807.3475815523061], [1.72883256E12, 916.9616858237549], [1.7288259E12, 600.4611528822052], [1.72882812E12, 728.7875569044005], [1.72882608E12, 615.6443298969067], [1.72882932E12, 766.2382978723407], [1.7288271E12, 702.246696035242], [1.72883154E12, 819.2531356898521], [1.7288244E12, 679.6381766381762], [1.72883358E12, 805.685649202734], [1.72882422E12, 628.5538057742782], [1.72883052E12, 839.4900816802809], [1.72882506E12, 591.9434889434887], [1.72882728E12, 748.353032659409], [1.7288283E12, 718.1701492537313], [1.72883274E12, 946.3353057199213], [1.72882626E12, 714.0089285714291], [1.72882848E12, 738.1787365177203], [1.7288295E12, 792.4867256637169], [1.72883172E12, 870.2388059701498], [1.728831E12, 758.9041095890414], [1.72882554E12, 626.4778067885121], [1.72882776E12, 746.3034055727552], [1.72882434E12, 656.7589041095888], [1.72882878E12, 743.3224806201557], [1.72883322E12, 946.0734126984122], [1.72882674E12, 704.3028064992623], [1.72882896E12, 725.7951807228909], [1.72882998E12, 773.937634408601], [1.7288322E12, 943.7690782953418], [1.72882794E12, 738.5987654320984], [1.72883118E12, 792.7878453038675], [1.72882572E12, 673.1601123595507], [1.72883016E12, 774.0419806243266], [1.72882416E12, 620.1321243523317], [1.72882398E12, 587.7220843672457], [1.72882914E12, 742.6604938271608], [1.72883238E12, 938.6144814090021], [1.72882692E12, 693.4775036284469], [1.7288334E12, 985.7661538461542], [1.72883136E12, 739.9288659793822], [1.7288247E12, 619.7364341085281], [1.72882842E12, 671.2142857142854], [1.72883166E12, 716.2012072434601], [1.7288262E12, 678.3240223463689], [1.72883064E12, 787.8884026258202], [1.72882368E12, 639.0105820105822], [1.72883286E12, 942.8195266272187], [1.7288235E12, 607.0151515151513], [1.72882518E12, 618.5518134715029], [1.7288274E12, 718.6382660687589], [1.72882962E12, 785.0629750271446], [1.72883184E12, 949.2401185770749], [1.72882536E12, 618.5192802056562], [1.72882452E12, 676.3954802259884], [1.72882638E12, 787.7138211382113], [1.7288286E12, 750.9358372456965], [1.72883082E12, 817.9702176403215], [1.72883304E12, 966.5740365111554], [1.72882656E12, 743.128682170542], [1.7288298E12, 779.2958963282941], [1.72882758E12, 684.5464949928466], [1.72883202E12, 925.3781190019189]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72883364E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 392.77358490566036, "minX": 1.72882338E12, "maxY": 716.8881856540087, "series": [{"data": [[1.72882584E12, 473.1873198847261], [1.7288313E12, 577.9282511210761], [1.72882464E12, 433.4516971279374], [1.72882686E12, 519.6957831325303], [1.72882908E12, 532.7027863777089], [1.72882446E12, 485.0434782608696], [1.72882704E12, 525.5300300300298], [1.72883028E12, 611.2986857825568], [1.72883352E12, 662.2936046511633], [1.7288325E12, 678.1468812877264], [1.72882806E12, 521.7552238805977], [1.72882344E12, 396.6875000000001], [1.72882824E12, 530.324615384616], [1.72882602E12, 443.4327956989248], [1.72882926E12, 501.8815028901735], [1.72883148E12, 575.5450500556176], [1.72882722E12, 546.6403785488965], [1.72882428E12, 432.4046391752577], [1.72883046E12, 554.4650912996773], [1.72883268E12, 641.1348314606741], [1.728825E12, 400.1570048309185], [1.72882944E12, 542.9138655462191], [1.7288265E12, 503.2836468885669], [1.72882872E12, 552.7388535031856], [1.72882974E12, 597.4477958236649], [1.72883196E12, 653.3685220729367], [1.7288277E12, 535.953560371516], [1.72883094E12, 584.763038548752], [1.72883316E12, 645.067226890755], [1.7288238E12, 434.3149606299213], [1.72882548E12, 423.8071065989847], [1.72882992E12, 557.2405200433375], [1.7288289E12, 534.7283950617281], [1.72883214E12, 690.317346938776], [1.72882482E12, 432.3864229765013], [1.72882668E12, 526.6581325301206], [1.72883112E12, 593.6689734717414], [1.72883334E12, 642.2584905660376], [1.72882362E12, 433.37368421052616], [1.72882566E12, 437.31926121372015], [1.72882788E12, 531.9553158705703], [1.7288301E12, 564.3082788671011], [1.72883232E12, 675.074183976261], [1.72883262E12, 652.9847036328865], [1.72882374E12, 392.77358490566036], [1.72882716E12, 543.4726989079558], [1.72882938E12, 561.6984815618222], [1.7288316E12, 578.8779576587801], [1.72882512E12, 461.2845303867403], [1.72882476E12, 473.0399999999999], [1.72882614E12, 409.51932367149794], [1.72882836E12, 521.984939759037], [1.72883058E12, 543.8459937565043], [1.7288328E12, 691.1823708206678], [1.72882632E12, 509.38007380073816], [1.72882956E12, 605.8508875739644], [1.72882356E12, 422.07216494845375], [1.72882734E12, 527.1840490797555], [1.72883178E12, 633.5078776645032], [1.72883076E12, 568.7461873638342], [1.7288253E12, 435.107238605898], [1.72882752E12, 505.276720351391], [1.72882458E12, 440.39682539682536], [1.72882854E12, 516.2354694485845], [1.72883298E12, 670.9472656250002], [1.7288268E12, 550.2180094786729], [1.72883004E12, 582.9169510807748], [1.72883346E12, 669.8721951219511], [1.72882782E12, 547.0677165354335], [1.72883226E12, 662.6850241545886], [1.72883124E12, 567.4142857142848], [1.72882578E12, 471.33988764044943], [1.728828E12, 508.48609077598854], [1.7288241E12, 463.1578947368423], [1.72882902E12, 528.4107692307698], [1.72882698E12, 541.6356589147288], [1.72883244E12, 683.2313060817539], [1.72883022E12, 558.7494553376908], [1.7288292E12, 533.90243902439], [1.72883364E12, 665.0714285714286], [1.72882494E12, 432.1099476439789], [1.72882818E12, 524.735877862595], [1.72883142E12, 572.7265624999997], [1.7288304E12, 544.0642105263157], [1.72882596E12, 485.47413793103414], [1.72882392E12, 456.78048780487785], [1.72882746E12, 539.9906976744189], [1.72882404E12, 461.1263736263739], [1.7288307E12, 550.2518837459636], [1.72883292E12, 716.8881856540087], [1.72882524E12, 438.20418848167503], [1.72882968E12, 593.6712962962966], [1.72882866E12, 522.3742424242432], [1.7288319E12, 679.9608826479438], [1.72882644E12, 525.1396396396398], [1.72883088E12, 529.991786447639], [1.7288331E12, 656.6798076923072], [1.72882386E12, 431.49479166666674], [1.72882542E12, 446.0561497326201], [1.72882764E12, 529.9524539877295], [1.72882986E12, 593.9117305458775], [1.72883208E12, 641.1988795518203], [1.7288256E12, 407.2277227722772], [1.72882488E12, 444.52266666666645], [1.72882662E12, 514.4311377245507], [1.72882884E12, 512.6651917404132], [1.72883106E12, 566.4809160305343], [1.72883328E12, 653.2015209125483], [1.72882338E12, 465.6946564885495], [1.72883034E12, 583.6535433070866], [1.72883256E12, 653.459770114943], [1.7288259E12, 421.6015037593984], [1.72882812E12, 527.9301972685884], [1.72882608E12, 424.50773195876286], [1.72882932E12, 546.9414893617021], [1.7288271E12, 511.4713656387664], [1.72883154E12, 589.7354618015962], [1.7288244E12, 469.4643874643872], [1.72883358E12, 578.9738041002267], [1.72882422E12, 430.31496062992136], [1.72883052E12, 603.0315052508761], [1.72882506E12, 417.55773955773935], [1.72882728E12, 545.2410575427682], [1.7288283E12, 517.0597014925373], [1.72883274E12, 675.4171597633128], [1.72882626E12, 512.1964285714287], [1.72882848E12, 534.9075500770413], [1.7288295E12, 566.0232300884966], [1.72883172E12, 624.0764925373126], [1.728831E12, 546.9346680716552], [1.72882554E12, 435.54569190600535], [1.72882776E12, 541.5975232198142], [1.72882434E12, 452.65479452054785], [1.72882878E12, 533.947286821706], [1.72883322E12, 669.3293650793647], [1.72882674E12, 514.234859675037], [1.72882896E12, 525.8283132530128], [1.72882998E12, 558.5139784946238], [1.7288322E12, 667.8889990089202], [1.72882794E12, 532.2716049382714], [1.72883118E12, 567.6574585635359], [1.72882572E12, 461.0730337078651], [1.72883016E12, 555.5392895586658], [1.72882416E12, 425.89896373056996], [1.72882398E12, 409.5955334987591], [1.72882914E12, 540.7253086419752], [1.72883238E12, 667.7133072407049], [1.72882692E12, 497.6908563134975], [1.7288334E12, 698.8758974358975], [1.72883136E12, 531.5731958762881], [1.7288247E12, 431.4082687338503], [1.72882842E12, 486.4173669467786], [1.72883166E12, 521.3018108651916], [1.7288262E12, 496.8072625698323], [1.72883064E12, 559.9026258205683], [1.72882368E12, 450.7037037037036], [1.72883286E12, 669.5907297830381], [1.7288235E12, 425.2474747474747], [1.72882518E12, 430.88082901554395], [1.7288274E12, 518.1778774289984], [1.72882962E12, 559.0021715526605], [1.72883184E12, 674.9100790513833], [1.72882536E12, 434.9203084832904], [1.72882452E12, 468.6807909604521], [1.72882638E12, 568.7788617886181], [1.7288286E12, 539.7589984350545], [1.72883082E12, 583.9828178694165], [1.72883304E12, 684.7687626774858], [1.72882656E12, 532.0759689922477], [1.7288298E12, 555.1717062634985], [1.72882758E12, 496.728183118741], [1.72883202E12, 661.5652591170837]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72883364E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72882338E12, "maxY": 4.9E-324, "series": [{"data": [[1.72882584E12, 0.0], [1.7288313E12, 0.0], [1.72882464E12, 0.0], [1.72882686E12, 0.0], [1.72882908E12, 0.0], [1.72882446E12, 0.0], [1.72882704E12, 0.0], [1.72883028E12, 0.0], [1.72883352E12, 0.0], [1.7288325E12, 0.0], [1.72882806E12, 0.0], [1.72882344E12, 0.0], [1.72882824E12, 0.0], [1.72882602E12, 0.0], [1.72882926E12, 0.0], [1.72883148E12, 0.0], [1.72882722E12, 0.0], [1.72882428E12, 0.0], [1.72883046E12, 0.0], [1.72883268E12, 0.0], [1.728825E12, 0.0], [1.72882944E12, 0.0], [1.7288265E12, 0.0], [1.72882872E12, 0.0], [1.72882974E12, 0.0], [1.72883196E12, 0.0], [1.7288277E12, 0.0], [1.72883094E12, 0.0], [1.72883316E12, 0.0], [1.7288238E12, 0.0], [1.72882548E12, 0.0], [1.72882992E12, 0.0], [1.7288289E12, 0.0], [1.72883214E12, 0.0], [1.72882482E12, 0.0], [1.72882668E12, 0.0], [1.72883112E12, 0.0], [1.72883334E12, 0.0], [1.72882362E12, 0.0], [1.72882566E12, 0.0], [1.72882788E12, 0.0], [1.7288301E12, 0.0], [1.72883232E12, 0.0], [1.72883262E12, 0.0], [1.72882374E12, 0.0], [1.72882716E12, 0.0], [1.72882938E12, 0.0], [1.7288316E12, 0.0], [1.72882512E12, 0.0], [1.72882476E12, 0.0], [1.72882614E12, 0.0], [1.72882836E12, 0.0], [1.72883058E12, 0.0], [1.7288328E12, 0.0], [1.72882632E12, 0.0], [1.72882956E12, 0.0], [1.72882356E12, 0.0], [1.72882734E12, 0.0], [1.72883178E12, 0.0], [1.72883076E12, 0.0], [1.7288253E12, 0.0], [1.72882752E12, 0.0], [1.72882458E12, 0.0], [1.72882854E12, 0.0], [1.72883298E12, 0.0], [1.7288268E12, 0.0], [1.72883004E12, 0.0], [1.72883346E12, 0.0], [1.72882782E12, 0.0], [1.72883226E12, 0.0], [1.72883124E12, 0.0], [1.72882578E12, 0.0], [1.728828E12, 0.0], [1.7288241E12, 0.0], [1.72882902E12, 0.0], [1.72882698E12, 0.0], [1.72883244E12, 0.0], [1.72883022E12, 0.0], [1.7288292E12, 0.0], [1.72883364E12, 0.0], [1.72882494E12, 0.0], [1.72882818E12, 0.0], [1.72883142E12, 0.0], [1.7288304E12, 0.0], [1.72882596E12, 0.0], [1.72882392E12, 0.0], [1.72882746E12, 0.0], [1.72882404E12, 0.0], [1.7288307E12, 0.0], [1.72883292E12, 0.0], [1.72882524E12, 0.0], [1.72882968E12, 0.0], [1.72882866E12, 0.0], [1.7288319E12, 0.0], [1.72882644E12, 0.0], [1.72883088E12, 0.0], [1.7288331E12, 0.0], [1.72882386E12, 0.0], [1.72882542E12, 0.0], [1.72882764E12, 0.0], [1.72882986E12, 0.0], [1.72883208E12, 0.0], [1.7288256E12, 0.0], [1.72882488E12, 0.0], [1.72882662E12, 0.0], [1.72882884E12, 0.0], [1.72883106E12, 0.0], [1.72883328E12, 0.0], [1.72882338E12, 0.0], [1.72883034E12, 0.0], [1.72883256E12, 0.0], [1.7288259E12, 0.0], [1.72882812E12, 0.0], [1.72882608E12, 0.0], [1.72882932E12, 0.0], [1.7288271E12, 0.0], [1.72883154E12, 0.0], [1.7288244E12, 0.0], [1.72883358E12, 0.0], [1.72882422E12, 0.0], [1.72883052E12, 0.0], [1.72882506E12, 0.0], [1.72882728E12, 0.0], [1.7288283E12, 0.0], [1.72883274E12, 0.0], [1.72882626E12, 0.0], [1.72882848E12, 0.0], [1.7288295E12, 0.0], [1.72883172E12, 0.0], [1.728831E12, 0.0], [1.72882554E12, 0.0], [1.72882776E12, 0.0], [1.72882434E12, 0.0], [1.72882878E12, 0.0], [1.72883322E12, 0.0], [1.72882674E12, 0.0], [1.72882896E12, 0.0], [1.72882998E12, 0.0], [1.7288322E12, 0.0], [1.72882794E12, 0.0], [1.72883118E12, 0.0], [1.72882572E12, 0.0], [1.72883016E12, 0.0], [1.72882416E12, 0.0], [1.72882398E12, 0.0], [1.72882914E12, 0.0], [1.72883238E12, 0.0], [1.72882692E12, 0.0], [1.7288334E12, 0.0], [1.72883136E12, 0.0], [1.7288247E12, 0.0], [1.72882842E12, 0.0], [1.72883166E12, 0.0], [1.7288262E12, 0.0], [1.72883064E12, 0.0], [1.72882368E12, 0.0], [1.72883286E12, 0.0], [1.7288235E12, 0.0], [1.72882518E12, 0.0], [1.7288274E12, 0.0], [1.72882962E12, 0.0], [1.72883184E12, 0.0], [1.72882536E12, 0.0], [1.72882452E12, 0.0], [1.72882638E12, 0.0], [1.7288286E12, 0.0], [1.72883082E12, 0.0], [1.72883304E12, 0.0], [1.72882656E12, 0.0], [1.7288298E12, 0.0], [1.72882758E12, 0.0], [1.72883202E12, 0.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72883364E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 39.0, "minX": 1.72882338E12, "maxY": 4699.0, "series": [{"data": [[1.72882584E12, 2131.0], [1.7288313E12, 3137.0], [1.72882464E12, 2164.0], [1.72882686E12, 2721.0], [1.72882908E12, 2799.0], [1.72882446E12, 1953.0], [1.72882704E12, 2913.0], [1.72883028E12, 3148.0], [1.72883352E12, 3740.0], [1.7288325E12, 4198.0], [1.72882806E12, 2688.0], [1.72882344E12, 2143.0], [1.72882824E12, 2661.0], [1.72882602E12, 2099.0], [1.72882926E12, 2578.0], [1.72883148E12, 3197.0], [1.72882722E12, 2615.0], [1.72882428E12, 2290.0], [1.72883046E12, 3132.0], [1.72883268E12, 3538.0], [1.728825E12, 2506.0], [1.72882944E12, 2810.0], [1.7288265E12, 2726.0], [1.72882872E12, 2898.0], [1.72882974E12, 2761.0], [1.72883196E12, 3458.0], [1.7288277E12, 2778.0], [1.72883094E12, 3348.0], [1.72883316E12, 3778.0], [1.7288238E12, 1998.0], [1.72882548E12, 2117.0], [1.72882992E12, 3462.0], [1.7288289E12, 2951.0], [1.72883214E12, 3969.0], [1.72882482E12, 2346.0], [1.72882668E12, 2702.0], [1.72883112E12, 3037.0], [1.72883334E12, 3478.0], [1.72882362E12, 1963.0], [1.72882566E12, 2072.0], [1.72882788E12, 2625.0], [1.7288301E12, 2894.0], [1.72883232E12, 3753.0], [1.72883262E12, 3974.0], [1.72882374E12, 2213.0], [1.72882716E12, 2725.0], [1.72882938E12, 3232.0], [1.7288316E12, 2928.0], [1.72882512E12, 2086.0], [1.72882476E12, 2588.0], [1.72882614E12, 2429.0], [1.72882836E12, 2813.0], [1.72883058E12, 3044.0], [1.7288328E12, 3402.0], [1.72882632E12, 2386.0], [1.72882956E12, 2832.0], [1.72882356E12, 2586.0], [1.72882734E12, 2771.0], [1.72883178E12, 3663.0], [1.72883076E12, 3148.0], [1.7288253E12, 2173.0], [1.72882752E12, 2624.0], [1.72882458E12, 2352.0], [1.72882854E12, 2541.0], [1.72883298E12, 3405.0], [1.7288268E12, 2910.0], [1.72883004E12, 3121.0], [1.72883346E12, 3841.0], [1.72882782E12, 2895.0], [1.72883226E12, 3363.0], [1.72883124E12, 2999.0], [1.72882578E12, 2508.0], [1.728828E12, 2840.0], [1.7288241E12, 2348.0], [1.72882902E12, 2675.0], [1.72882698E12, 2988.0], [1.72883244E12, 4699.0], [1.72883022E12, 3450.0], [1.7288292E12, 2731.0], [1.72883364E12, 1807.0], [1.72882494E12, 2444.0], [1.72882818E12, 2719.0], [1.72883142E12, 3023.0], [1.7288304E12, 2850.0], [1.72882596E12, 2336.0], [1.72882392E12, 1963.0], [1.72882746E12, 2827.0], [1.72882404E12, 2128.0], [1.7288307E12, 2897.0], [1.72883292E12, 3910.0], [1.72882524E12, 2609.0], [1.72882968E12, 3187.0], [1.72882866E12, 2985.0], [1.7288319E12, 3579.0], [1.72882644E12, 2908.0], [1.72883088E12, 2997.0], [1.7288331E12, 3708.0], [1.72882386E12, 2263.0], [1.72882542E12, 2450.0], [1.72882764E12, 2890.0], [1.72882986E12, 3542.0], [1.72883208E12, 3376.0], [1.7288256E12, 2199.0], [1.72882488E12, 2567.0], [1.72882662E12, 2634.0], [1.72882884E12, 2507.0], [1.72883106E12, 3132.0], [1.72883328E12, 3572.0], [1.72882338E12, 2457.0], [1.72883034E12, 3311.0], [1.72883256E12, 3707.0], [1.7288259E12, 2553.0], [1.72882812E12, 2630.0], [1.72882608E12, 2306.0], [1.72882932E12, 2904.0], [1.7288271E12, 2926.0], [1.72883154E12, 3114.0], [1.7288244E12, 2714.0], [1.72883358E12, 3480.0], [1.72882422E12, 2523.0], [1.72883052E12, 3262.0], [1.72882506E12, 2372.0], [1.72882728E12, 2482.0], [1.7288283E12, 2571.0], [1.72883274E12, 4213.0], [1.72882626E12, 2335.0], [1.72882848E12, 2891.0], [1.7288295E12, 2774.0], [1.72883172E12, 3283.0], [1.728831E12, 3181.0], [1.72882554E12, 2178.0], [1.72882776E12, 2781.0], [1.72882434E12, 2638.0], [1.72882878E12, 2760.0], [1.72883322E12, 3609.0], [1.72882674E12, 2723.0], [1.72882896E12, 3048.0], [1.72882998E12, 2977.0], [1.7288322E12, 4174.0], [1.72882794E12, 2721.0], [1.72883118E12, 2922.0], [1.72882572E12, 2610.0], [1.72883016E12, 2693.0], [1.72882416E12, 2485.0], [1.72882398E12, 2559.0], [1.72882914E12, 3094.0], [1.72883238E12, 4079.0], [1.72882692E12, 2667.0], [1.7288334E12, 4271.0], [1.72883136E12, 3136.0], [1.7288247E12, 2735.0], [1.72882842E12, 2695.0], [1.72883166E12, 2842.0], [1.7288262E12, 2814.0], [1.72883064E12, 3158.0], [1.72882368E12, 1899.0], [1.72883286E12, 3917.0], [1.7288235E12, 2059.0], [1.72882518E12, 2406.0], [1.7288274E12, 2955.0], [1.72882962E12, 3414.0], [1.72883184E12, 3737.0], [1.72882536E12, 2114.0], [1.72882452E12, 2189.0], [1.72882638E12, 2635.0], [1.7288286E12, 2753.0], [1.72883082E12, 3191.0], [1.72883304E12, 3968.0], [1.72882656E12, 2795.0], [1.7288298E12, 3295.0], [1.72882758E12, 2635.0], [1.72883202E12, 3865.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72882584E12, 1524.7999999999997], [1.7288313E12, 1764.5000000000002], [1.72882464E12, 1360.6000000000004], [1.72882686E12, 1641.0], [1.72882908E12, 1560.6000000000001], [1.72882446E12, 1434.2000000000005], [1.72882704E12, 1534.3000000000002], [1.72883028E12, 1866.6000000000001], [1.72883352E12, 2037.9000000000008], [1.7288325E12, 2069.0], [1.72882806E12, 1581.2999999999997], [1.72882344E12, 1302.0], [1.72882824E12, 1639.5999999999997], [1.72882602E12, 1371.4], [1.72882926E12, 1594.2], [1.72883148E12, 1710.0], [1.72882722E12, 1612.0], [1.72882428E12, 1337.1], [1.72883046E12, 1697.4000000000005], [1.72883268E12, 1980.1], [1.728825E12, 1308.5], [1.72882944E12, 1707.7], [1.7288265E12, 1547.0], [1.72882872E12, 1638.8000000000002], [1.72882974E12, 1759.5000000000002], [1.72883196E12, 1982.9000000000003], [1.7288277E12, 1558.9], [1.72883094E12, 1756.7], [1.72883316E12, 1979.4], [1.7288238E12, 1298.2], [1.72882548E12, 1319.0], [1.72882992E12, 1741.0000000000005], [1.7288289E12, 1585.4], [1.72883214E12, 2097.0], [1.72882482E12, 1282.0000000000005], [1.72882668E12, 1584.5], [1.72883112E12, 1747.6000000000004], [1.72883334E12, 2000.0], [1.72882362E12, 1313.9], [1.72882566E12, 1360.0], [1.72882788E12, 1567.0], [1.7288301E12, 1752.0], [1.72883232E12, 2036.400000000001], [1.72883262E12, 2025.5000000000005], [1.72882374E12, 1263.7000000000003], [1.72882716E12, 1613.6000000000001], [1.72882938E12, 1730.2000000000007], [1.7288316E12, 1681.4], [1.72882512E12, 1403.7], [1.72882476E12, 1418.7], [1.72882614E12, 1295.0], [1.72882836E12, 1524.5], [1.72883058E12, 1652.6000000000001], [1.7288328E12, 2065.2], [1.72882632E12, 1568.2000000000003], [1.72882956E12, 1751.9999999999995], [1.72882356E12, 1323.5], [1.72882734E12, 1569.7], [1.72883178E12, 1953.0], [1.72883076E12, 1781.6000000000001], [1.7288253E12, 1420.2000000000003], [1.72882752E12, 1546.0], [1.72882458E12, 1390.7000000000003], [1.72882854E12, 1577.4], [1.72883298E12, 2061.5], [1.7288268E12, 1575.4], [1.72883004E12, 1776.0], [1.72883346E12, 2003.1999999999998], [1.72882782E12, 1584.1999999999998], [1.72883226E12, 2055.8], [1.72883124E12, 1758.5], [1.72882578E12, 1402.5], [1.728828E12, 1561.4], [1.7288241E12, 1327.0], [1.72882902E12, 1576.6999999999998], [1.72882698E12, 1604.9999999999998], [1.72883244E12, 2020.0], [1.72883022E12, 1728.3000000000002], [1.7288292E12, 1612.1999999999998], [1.72883364E12, 1703.4], [1.72882494E12, 1381.6999999999998], [1.72882818E12, 1592.6], [1.72883142E12, 1711.9], [1.7288304E12, 1703.6], [1.72882596E12, 1341.2], [1.72882392E12, 1410.0], [1.72882746E12, 1596.4], [1.72882404E12, 1396.5], [1.7288307E12, 1674.0], [1.72883292E12, 2126.1], [1.72882524E12, 1339.7999999999997], [1.72882968E12, 1809.5], [1.72882866E12, 1576.8], [1.7288319E12, 2085.8], [1.72882644E12, 1539.400000000002], [1.72883088E12, 1684.5], [1.7288331E12, 2003.5], [1.72882386E12, 1377.0], [1.72882542E12, 1376.5], [1.72882764E12, 1551.1000000000001], [1.72882986E12, 1727.8000000000004], [1.72883208E12, 1977.8000000000002], [1.7288256E12, 1322.5], [1.72882488E12, 1330.2000000000005], [1.72882662E12, 1569.0], [1.72882884E12, 1511.2], [1.72883106E12, 1691.0], [1.72883328E12, 1992.4], [1.72882338E12, 1435.0], [1.72883034E12, 1712.0], [1.72883256E12, 2062.5], [1.7288259E12, 1334.0], [1.72882812E12, 1588.0], [1.72882608E12, 1350.6000000000001], [1.72882932E12, 1750.1999999999998], [1.7288271E12, 1567.2000000000003], [1.72883154E12, 1748.2], [1.7288244E12, 1453.8], [1.72883358E12, 1769.2000000000003], [1.72882422E12, 1318.0], [1.72883052E12, 1793.4000000000003], [1.72882506E12, 1317.6], [1.72882728E12, 1549.2000000000003], [1.7288283E12, 1525.3999999999999], [1.72883274E12, 2044.5], [1.72882626E12, 1596.0], [1.72882848E12, 1587.0], [1.7288295E12, 1724.5], [1.72883172E12, 1877.6000000000001], [1.728831E12, 1658.0], [1.72882554E12, 1341.4], [1.72882776E12, 1601.8000000000004], [1.72882434E12, 1463.6000000000001], [1.72882878E12, 1687.3999999999999], [1.72883322E12, 2082.1000000000004], [1.72882674E12, 1583.0], [1.72882896E12, 1577.0], [1.72882998E12, 1710.0], [1.7288322E12, 2081.0], [1.72882794E12, 1598.8000000000004], [1.72883118E12, 1681.9999999999998], [1.72882572E12, 1450.6000000000001], [1.72883016E12, 1724.0], [1.72882416E12, 1370.6], [1.72882398E12, 1287.8000000000002], [1.72882914E12, 1587.8000000000004], [1.72883238E12, 2024.1000000000001], [1.72882692E12, 1575.0], [1.7288334E12, 2110.8], [1.72883136E12, 1669.0], [1.7288247E12, 1370.3999999999999], [1.72882842E12, 1522.0], [1.72883166E12, 1568.6], [1.7288262E12, 1498.4000000000003], [1.72883064E12, 1740.5], [1.72882368E12, 1332.0], [1.72883286E12, 2060.5], [1.7288235E12, 1361.1], [1.72882518E12, 1372.2], [1.7288274E12, 1614.0], [1.72882962E12, 1731.4], [1.72883184E12, 2078.9000000000005], [1.72882536E12, 1321.0], [1.72882452E12, 1429.0], [1.72882638E12, 1702.1999999999998], [1.7288286E12, 1588.0], [1.72883082E12, 1731.2000000000003], [1.72883304E12, 2040.8000000000004], [1.72882656E12, 1625.4], [1.7288298E12, 1716.0], [1.72882758E12, 1537.0], [1.72883202E12, 2042.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72882584E12, 2031.3199999999988], [1.7288313E12, 2458.8499999999967], [1.72882464E12, 1912.5999999999997], [1.72882686E12, 2340.500000000001], [1.72882908E12, 2325.71], [1.72882446E12, 1852.16], [1.72882704E12, 2332.8800000000015], [1.72883028E12, 2579.2400000000007], [1.72883352E12, 2853.0199999999995], [1.7288325E12, 2871.999999999999], [1.72882806E12, 2133.74], [1.72882344E12, 1951.5799999999995], [1.72882824E12, 2341.3500000000004], [1.72882602E12, 1951.2799999999988], [1.72882926E12, 2280.199999999999], [1.72883148E12, 2619.0], [1.72882722E12, 2353.8999999999987], [1.72882428E12, 1987.260000000001], [1.72883046E12, 2450.72], [1.72883268E12, 2850.0599999999986], [1.728825E12, 1980.650000000002], [1.72882944E12, 2359.88], [1.7288265E12, 2150.3600000000006], [1.72882872E12, 2459.310000000002], [1.72882974E12, 2344.1000000000004], [1.72883196E12, 3015.6299999999965], [1.7288277E12, 2481.8599999999983], [1.72883094E12, 2627.68], [1.72883316E12, 2824.3999999999996], [1.7288238E12, 1862.0800000000004], [1.72882548E12, 2050.2], [1.72882992E12, 2659.16], [1.7288289E12, 2398.1], [1.72883214E12, 3075.1299999999983], [1.72882482E12, 2019.7999999999934], [1.72882668E12, 2304.7500000000023], [1.72883112E12, 2477.959999999998], [1.72883334E12, 2898.380000000004], [1.72882362E12, 1910.2200000000003], [1.72882566E12, 1898.8], [1.72882788E12, 2282.5], [1.7288301E12, 2376.769999999999], [1.72883232E12, 3151.04], [1.72883262E12, 2930.199999999999], [1.72882374E12, 1837.67], [1.72882716E12, 2321.6400000000003], [1.72882938E12, 2517.1799999999994], [1.7288316E12, 2481.040000000001], [1.72882512E12, 1965.6100000000001], [1.72882476E12, 2170.96], [1.72882614E12, 1866.8500000000013], [1.72882836E12, 2266.8000000000015], [1.72883058E12, 2455.2999999999997], [1.7288328E12, 3006.92], [1.72882632E12, 2050.239999999996], [1.72882956E12, 2524.699999999998], [1.72882356E12, 2053.0500000000065], [1.72882734E12, 2394.88], [1.72883178E12, 2996.800000000003], [1.72883076E12, 2562.009999999999], [1.7288253E12, 2011.7799999999995], [1.72882752E12, 2103.959999999998], [1.72882458E12, 1781.0099999999964], [1.72882854E12, 2279.239999999999], [1.72883298E12, 2972.75], [1.7288268E12, 2408.0399999999986], [1.72883004E12, 2531.800000000004], [1.72883346E12, 2870.58], [1.72882782E12, 2254.5199999999995], [1.72883226E12, 2858.28], [1.72883124E12, 2592.2599999999984], [1.72882578E12, 2006.5000000000018], [1.728828E12, 2246.639999999999], [1.7288241E12, 2119.68], [1.72882902E12, 2158.5400000000004], [1.72882698E12, 2324.4799999999977], [1.72883244E12, 2954.88], [1.72883022E12, 2484.8199999999933], [1.7288292E12, 2207.5600000000004], [1.72883364E12, 1807.0], [1.72882494E12, 2247.7900000000013], [1.72882818E12, 2240.3999999999996], [1.72883142E12, 2504.0099999999984], [1.7288304E12, 2376.01], [1.72882596E12, 2009.2899999999993], [1.72882392E12, 1872.5000000000007], [1.72882746E12, 2255.24], [1.72882404E12, 1977.150000000002], [1.7288307E12, 2401.0000000000014], [1.72883292E12, 3094.04], [1.72882524E12, 2115.6300000000006], [1.72882968E12, 2595.7500000000014], [1.72882866E12, 2408.29], [1.7288319E12, 3086.18], [1.72882644E12, 2408.4700000000025], [1.72883088E12, 2561.25], [1.7288331E12, 3180.95], [1.72882386E12, 1969.0999999999974], [1.72882542E12, 2182.75], [1.72882764E12, 2380.9900000000007], [1.72882986E12, 2715.8599999999997], [1.72883208E12, 3014.2799999999997], [1.7288256E12, 1949.9499999999982], [1.72882488E12, 1852.0800000000004], [1.72882662E12, 2272.779999999998], [1.72882884E12, 2201.3300000000027], [1.72883106E12, 2515.2199999999984], [1.72883328E12, 2887.05], [1.72882338E12, 2328.0400000000027], [1.72883034E12, 2545.9], [1.72883256E12, 2966.95], [1.7288259E12, 2059.0], [1.72882812E12, 2269.4], [1.72882608E12, 2018.0800000000017], [1.72882932E12, 2596.8500000000004], [1.7288271E12, 2153.3999999999987], [1.72883154E12, 2403.0], [1.7288244E12, 2050.0800000000017], [1.72883358E12, 2749.3700000000035], [1.72882422E12, 2034.1200000000003], [1.72883052E12, 2763.179999999999], [1.72882506E12, 1833.5200000000013], [1.72882728E12, 2175.599999999998], [1.7288283E12, 2371.689999999998], [1.72883274E12, 3004.950000000001], [1.72882626E12, 2203.5], [1.72882848E12, 2274.5], [1.7288295E12, 2460.3500000000004], [1.72883172E12, 2824.6], [1.728831E12, 2400.5], [1.72882554E12, 1999.4799999999982], [1.72882776E12, 2284.7299999999987], [1.72882434E12, 2041.0399999999986], [1.72882878E12, 2277.319999999998], [1.72883322E12, 3009.0999999999995], [1.72882674E12, 2207.88], [1.72882896E12, 2388.75], [1.72882998E12, 2433.699999999998], [1.7288322E12, 3093.5999999999976], [1.72882794E12, 2391.6099999999997], [1.72883118E12, 2509.6399999999967], [1.72882572E12, 2298.2700000000013], [1.72883016E12, 2499.2000000000003], [1.72882416E12, 1845.17], [1.72882398E12, 1895.3599999999988], [1.72882914E12, 2126.329999999999], [1.72883238E12, 3007.93], [1.72882692E12, 2264.9000000000005], [1.7288334E12, 3089.6000000000004], [1.72883136E12, 2332.989999999999], [1.7288247E12, 2222.7200000000007], [1.72882842E12, 2252.8], [1.72883166E12, 2333.219999999999], [1.7288262E12, 2209.750000000002], [1.72883064E12, 2598.5500000000006], [1.72882368E12, 1822.4999999999995], [1.72883286E12, 3100.9000000000005], [1.7288235E12, 2038.2099999999998], [1.72882518E12, 2052.26], [1.7288274E12, 2182.199999999998], [1.72882962E12, 2598.1799999999967], [1.72883184E12, 2978.3700000000003], [1.72882536E12, 1823.3000000000002], [1.72882452E12, 2096.3999999999996], [1.72882638E12, 2468.0800000000004], [1.7288286E12, 2146.2000000000003], [1.72883082E12, 2586.0], [1.72883304E12, 3126.54], [1.72882656E12, 2380.819999999997], [1.7288298E12, 2478.46], [1.72882758E12, 2113.0], [1.72883202E12, 2968.6899999999987]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72882584E12, 1722.0], [1.7288313E12, 2030.0999999999995], [1.72882464E12, 1560.5999999999992], [1.72882686E12, 1896.25], [1.72882908E12, 1850.5499999999997], [1.72882446E12, 1625.0], [1.72882704E12, 1767.8999999999999], [1.72883028E12, 2130.1], [1.72883352E12, 2371.7], [1.7288325E12, 2300.25], [1.72882806E12, 1777.3999999999992], [1.72882344E12, 1517.8999999999994], [1.72882824E12, 1975.35], [1.72882602E12, 1634.3999999999999], [1.72882926E12, 1803.7999999999993], [1.72883148E12, 1996.0], [1.72882722E12, 1918.0], [1.72882428E12, 1595.55], [1.72883046E12, 1979.4], [1.72883268E12, 2313.1499999999996], [1.728825E12, 1516.75], [1.72882944E12, 1925.3999999999996], [1.7288265E12, 1764.1999999999998], [1.72882872E12, 1900.2999999999997], [1.72882974E12, 1989.6999999999998], [1.72883196E12, 2358.85], [1.7288277E12, 1782.3], [1.72883094E12, 1995.85], [1.72883316E12, 2263.0], [1.7288238E12, 1460.3999999999999], [1.72882548E12, 1634.0], [1.72882992E12, 2023.9999999999998], [1.7288289E12, 1774.2999999999988], [1.72883214E12, 2388.7999999999997], [1.72882482E12, 1493.8], [1.72882668E12, 1824.25], [1.72883112E12, 2034.3999999999978], [1.72883334E12, 2296.95], [1.72882362E12, 1581.4999999999995], [1.72882566E12, 1601.0], [1.72882788E12, 1804.0], [1.7288301E12, 1986.05], [1.72883232E12, 2342.8], [1.72883262E12, 2418.1499999999996], [1.72882374E12, 1474.5500000000002], [1.72882716E12, 1844.799999999999], [1.72882938E12, 1996.0999999999995], [1.7288316E12, 2006.7999999999997], [1.72882512E12, 1519.2499999999998], [1.72882476E12, 1632.8999999999996], [1.72882614E12, 1480.0], [1.72882836E12, 1864.25], [1.72883058E12, 1943.9], [1.7288328E12, 2378.7999999999997], [1.72882632E12, 1791.7999999999997], [1.72882956E12, 2081.0], [1.72882356E12, 1568.0], [1.72882734E12, 1933.7500000000005], [1.72883178E12, 2250.0], [1.72883076E12, 2053.2], [1.7288253E12, 1663.2000000000003], [1.72882752E12, 1775.7999999999995], [1.72882458E12, 1545.2], [1.72882854E12, 1770.3999999999999], [1.72883298E12, 2341.0], [1.7288268E12, 1875.4999999999998], [1.72883004E12, 2025.0], [1.72883346E12, 2301.1], [1.72882782E12, 1909.599999999998], [1.72883226E12, 2345.399999999999], [1.72883124E12, 2074.8999999999996], [1.72882578E12, 1632.35], [1.728828E12, 1793.3999999999996], [1.7288241E12, 1647.4999999999995], [1.72882902E12, 1780.35], [1.72882698E12, 1754.5999999999988], [1.72883244E12, 2378.7999999999993], [1.72883022E12, 1940.4999999999995], [1.7288292E12, 1803.599999999999], [1.72883364E12, 1790.35], [1.72882494E12, 1696.6499999999976], [1.72882818E12, 1818.7999999999997], [1.72883142E12, 1973.3], [1.7288304E12, 2015.4499999999998], [1.72882596E12, 1523.5500000000002], [1.72882392E12, 1561.0], [1.72882746E12, 1943.7999999999984], [1.72882404E12, 1558.5], [1.7288307E12, 1984.0], [1.72883292E12, 2383.2999999999997], [1.72882524E12, 1550.5499999999993], [1.72882968E12, 2033.25], [1.72882866E12, 1906.8999999999985], [1.7288319E12, 2398.899999999999], [1.72882644E12, 1817.65], [1.72883088E12, 1973.5], [1.7288331E12, 2388.7], [1.72882386E12, 1591.5], [1.72882542E12, 1580.5], [1.72882764E12, 1829.7], [1.72882986E12, 1982.1], [1.72883208E12, 2297.0], [1.7288256E12, 1526.25], [1.72882488E12, 1642.1999999999998], [1.72882662E12, 1859.6499999999999], [1.72882884E12, 1750.199999999999], [1.72883106E12, 1913.0], [1.72883328E12, 2310.3999999999996], [1.72882338E12, 1820.9999999999995], [1.72883034E12, 2012.5], [1.72883256E12, 2425.5], [1.7288259E12, 1546.0], [1.72882812E12, 1919.0], [1.72882608E12, 1598.5999999999995], [1.72882932E12, 2030.8999999999999], [1.7288271E12, 1732.2999999999997], [1.72883154E12, 2049.099999999999], [1.7288244E12, 1663.3999999999996], [1.72883358E12, 2068.25], [1.72882422E12, 1568.599999999999], [1.72883052E12, 2103.2999999999997], [1.72882506E12, 1460.3999999999985], [1.72882728E12, 1733.9999999999989], [1.7288283E12, 1729.8999999999999], [1.72883274E12, 2357.0], [1.72882626E12, 1744.5], [1.72882848E12, 1848.0], [1.7288295E12, 2005.75], [1.72883172E12, 2272.199999999999], [1.728831E12, 1940.0], [1.72882554E12, 1543.1999999999998], [1.72882776E12, 1818.0], [1.72882434E12, 1590.3999999999996], [1.72882878E12, 1880.1], [1.72883322E12, 2371.3999999999996], [1.72882674E12, 1829.0000000000002], [1.72882896E12, 1846.0], [1.72882998E12, 1930.4499999999998], [1.7288322E12, 2402.0], [1.72882794E12, 1854.0499999999995], [1.72883118E12, 1931.6999999999998], [1.72882572E12, 1689.9999999999995], [1.72883016E12, 2005.5], [1.72882416E12, 1494.4499999999994], [1.72882398E12, 1496.799999999999], [1.72882914E12, 1812.1999999999998], [1.72883238E12, 2366.5499999999997], [1.72882692E12, 1801.5], [1.7288334E12, 2473.2], [1.72883136E12, 1931.849999999999], [1.7288247E12, 1565.9999999999995], [1.72882842E12, 1783.25], [1.72883166E12, 1848.0999999999997], [1.7288262E12, 1651.45], [1.72883064E12, 1983.75], [1.72882368E12, 1505.0], [1.72883286E12, 2326.5], [1.7288235E12, 1615.2999999999993], [1.72882518E12, 1545.8999999999999], [1.7288274E12, 1858.5], [1.72882962E12, 2016.6], [1.72883184E12, 2462.3999999999996], [1.72882536E12, 1487.0], [1.72882452E12, 1659.5], [1.72882638E12, 1966.9999999999995], [1.7288286E12, 1792.0], [1.72883082E12, 2014.999999999999], [1.72883304E12, 2365.7], [1.72882656E12, 1846.1999999999996], [1.7288298E12, 1935.0999999999997], [1.72882758E12, 1744.0], [1.72883202E12, 2375.8999999999987]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72882584E12, 58.0], [1.7288313E12, 43.0], [1.72882464E12, 56.0], [1.72882686E12, 54.0], [1.72882908E12, 51.0], [1.72882446E12, 56.0], [1.72882704E12, 53.0], [1.72883028E12, 58.0], [1.72883352E12, 58.0], [1.7288325E12, 50.0], [1.72882806E12, 45.0], [1.72882344E12, 68.0], [1.72882824E12, 52.0], [1.72882602E12, 47.0], [1.72882926E12, 64.0], [1.72883148E12, 48.0], [1.72882722E12, 47.0], [1.72882428E12, 59.0], [1.72883046E12, 61.0], [1.72883268E12, 51.0], [1.728825E12, 54.0], [1.72882944E12, 57.0], [1.7288265E12, 58.0], [1.72882872E12, 52.0], [1.72882974E12, 52.0], [1.72883196E12, 51.0], [1.7288277E12, 49.0], [1.72883094E12, 55.0], [1.72883316E12, 54.0], [1.7288238E12, 63.0], [1.72882548E12, 57.0], [1.72882992E12, 46.0], [1.7288289E12, 50.0], [1.72883214E12, 54.0], [1.72882482E12, 59.0], [1.72882668E12, 52.0], [1.72883112E12, 42.0], [1.72883334E12, 50.0], [1.72882362E12, 60.0], [1.72882566E12, 57.0], [1.72882788E12, 56.0], [1.7288301E12, 52.0], [1.72883232E12, 65.0], [1.72883262E12, 46.0], [1.72882374E12, 54.0], [1.72882716E12, 56.0], [1.72882938E12, 53.0], [1.7288316E12, 55.0], [1.72882512E12, 57.0], [1.72882476E12, 56.0], [1.72882614E12, 59.0], [1.72882836E12, 58.0], [1.72883058E12, 55.0], [1.7288328E12, 55.0], [1.72882632E12, 65.0], [1.72882956E12, 56.0], [1.72882356E12, 59.0], [1.72882734E12, 54.0], [1.72883178E12, 55.0], [1.72883076E12, 51.0], [1.7288253E12, 55.0], [1.72882752E12, 63.0], [1.72882458E12, 64.0], [1.72882854E12, 47.0], [1.72883298E12, 55.0], [1.7288268E12, 58.0], [1.72883004E12, 44.0], [1.72883346E12, 53.0], [1.72882782E12, 47.0], [1.72883226E12, 53.0], [1.72883124E12, 49.0], [1.72882578E12, 59.0], [1.728828E12, 55.0], [1.7288241E12, 56.0], [1.72882902E12, 49.0], [1.72882698E12, 50.0], [1.72883244E12, 42.0], [1.72883022E12, 47.0], [1.7288292E12, 59.0], [1.72883364E12, 82.0], [1.72882494E12, 57.0], [1.72882818E12, 55.0], [1.72883142E12, 48.0], [1.7288304E12, 47.0], [1.72882596E12, 65.0], [1.72882392E12, 58.0], [1.72882746E12, 54.0], [1.72882404E12, 62.0], [1.7288307E12, 51.0], [1.72883292E12, 50.0], [1.72882524E12, 45.0], [1.72882968E12, 49.0], [1.72882866E12, 53.0], [1.7288319E12, 58.0], [1.72882644E12, 53.0], [1.72883088E12, 58.0], [1.7288331E12, 51.0], [1.72882386E12, 62.0], [1.72882542E12, 59.0], [1.72882764E12, 58.0], [1.72882986E12, 58.0], [1.72883208E12, 56.0], [1.7288256E12, 54.0], [1.72882488E12, 55.0], [1.72882662E12, 56.0], [1.72882884E12, 52.0], [1.72883106E12, 54.0], [1.72883328E12, 56.0], [1.72882338E12, 63.0], [1.72883034E12, 51.0], [1.72883256E12, 57.0], [1.7288259E12, 54.0], [1.72882812E12, 60.0], [1.72882608E12, 48.0], [1.72882932E12, 52.0], [1.7288271E12, 56.0], [1.72883154E12, 45.0], [1.7288244E12, 51.0], [1.72883358E12, 55.0], [1.72882422E12, 53.0], [1.72883052E12, 55.0], [1.72882506E12, 59.0], [1.72882728E12, 60.0], [1.7288283E12, 56.0], [1.72883274E12, 54.0], [1.72882626E12, 58.0], [1.72882848E12, 55.0], [1.7288295E12, 53.0], [1.72883172E12, 51.0], [1.728831E12, 53.0], [1.72882554E12, 52.0], [1.72882776E12, 54.0], [1.72882434E12, 56.0], [1.72882878E12, 50.0], [1.72883322E12, 39.0], [1.72882674E12, 55.0], [1.72882896E12, 57.0], [1.72882998E12, 52.0], [1.7288322E12, 49.0], [1.72882794E12, 50.0], [1.72883118E12, 44.0], [1.72882572E12, 62.0], [1.72883016E12, 48.0], [1.72882416E12, 61.0], [1.72882398E12, 52.0], [1.72882914E12, 50.0], [1.72883238E12, 51.0], [1.72882692E12, 55.0], [1.7288334E12, 47.0], [1.72883136E12, 51.0], [1.7288247E12, 54.0], [1.72882842E12, 53.0], [1.72883166E12, 54.0], [1.7288262E12, 52.0], [1.72883064E12, 59.0], [1.72882368E12, 60.0], [1.72883286E12, 48.0], [1.7288235E12, 62.0], [1.72882518E12, 60.0], [1.7288274E12, 53.0], [1.72882962E12, 51.0], [1.72883184E12, 55.0], [1.72882536E12, 49.0], [1.72882452E12, 55.0], [1.72882638E12, 50.0], [1.7288286E12, 57.0], [1.72883082E12, 51.0], [1.72883304E12, 59.0], [1.72882656E12, 52.0], [1.7288298E12, 57.0], [1.72882758E12, 52.0], [1.72883202E12, 53.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72882584E12, 676.0], [1.7288313E12, 728.5], [1.72882464E12, 624.0], [1.72882686E12, 566.0], [1.72882908E12, 694.5], [1.72882446E12, 710.0], [1.72882704E12, 694.0], [1.72883028E12, 825.0], [1.72883352E12, 823.5], [1.7288325E12, 879.0], [1.72882806E12, 633.5], [1.72882344E12, 303.5], [1.72882824E12, 657.5], [1.72882602E12, 578.5], [1.72882926E12, 569.5], [1.72883148E12, 744.0], [1.72882722E12, 718.5], [1.72882428E12, 573.5], [1.72883046E12, 630.0], [1.72883268E12, 763.5], [1.728825E12, 435.5], [1.72882944E12, 677.0], [1.7288265E12, 565.0], [1.72882872E12, 716.0], [1.72882974E12, 844.5], [1.72883196E12, 762.5], [1.7288277E12, 693.0], [1.72883094E12, 719.0], [1.72883316E12, 801.0], [1.7288238E12, 613.0], [1.72882548E12, 491.5], [1.72882992E12, 702.0], [1.7288289E12, 659.5], [1.72883214E12, 926.5], [1.72882482E12, 565.0], [1.72882668E12, 635.0], [1.72883112E12, 795.0], [1.72883334E12, 807.0], [1.72882362E12, 576.0], [1.72882566E12, 570.0], [1.72882788E12, 765.0], [1.7288301E12, 701.0], [1.72883232E12, 860.0], [1.72883262E12, 799.5], [1.72882374E12, 477.0], [1.72882716E12, 679.0], [1.72882938E12, 700.5], [1.7288316E12, 833.0], [1.72882512E12, 631.0], [1.72882476E12, 702.0], [1.72882614E12, 465.5], [1.72882836E12, 665.0], [1.72883058E12, 621.0], [1.7288328E12, 921.0], [1.72882632E12, 533.0], [1.72882956E12, 814.0], [1.72882356E12, 546.5], [1.72882734E12, 672.0], [1.72883178E12, 695.0], [1.72883076E12, 711.0], [1.7288253E12, 557.0], [1.72882752E12, 604.0], [1.72882458E12, 575.5], [1.72882854E12, 643.0], [1.72883298E12, 874.0], [1.7288268E12, 772.0], [1.72883004E12, 783.0], [1.72883346E12, 880.0], [1.72882782E12, 736.0], [1.72883226E12, 796.0], [1.72883124E12, 682.5], [1.72882578E12, 647.5], [1.728828E12, 551.0], [1.7288241E12, 671.0], [1.72882902E12, 698.0], [1.72882698E12, 689.0], [1.72883244E12, 895.0], [1.72883022E12, 684.0], [1.7288292E12, 676.0], [1.72883364E12, 970.0], [1.72882494E12, 598.0], [1.72882818E12, 658.0], [1.72883142E12, 761.0], [1.7288304E12, 620.5], [1.72882596E12, 695.5], [1.72882392E12, 648.0], [1.72882746E12, 680.0], [1.72882404E12, 595.5], [1.7288307E12, 672.0], [1.72883292E12, 967.0], [1.72882524E12, 578.5], [1.72882968E12, 758.0], [1.72882866E12, 648.5], [1.7288319E12, 890.0], [1.72882644E12, 689.5], [1.72883088E12, 540.5], [1.7288331E12, 851.0], [1.72882386E12, 557.5], [1.72882542E12, 605.5], [1.72882764E12, 668.5], [1.72882986E12, 787.0], [1.72883208E12, 762.0], [1.7288256E12, 404.5], [1.72882488E12, 639.0], [1.72882662E12, 613.5], [1.72882884E12, 627.0], [1.72883106E12, 724.0], [1.72883328E12, 790.5], [1.72882338E12, 580.0], [1.72883034E12, 788.0], [1.72883256E12, 752.0], [1.7288259E12, 529.0], [1.72882812E12, 609.0], [1.72882608E12, 506.0], [1.72882932E12, 620.0], [1.7288271E12, 617.0], [1.72883154E12, 795.0], [1.7288244E12, 665.0], [1.72883358E12, 702.5], [1.72882422E12, 602.0], [1.72883052E12, 813.0], [1.72882506E12, 486.0], [1.72882728E12, 745.0], [1.7288283E12, 654.5], [1.72883274E12, 885.0], [1.72882626E12, 678.5], [1.72882848E12, 691.0], [1.7288295E12, 754.0], [1.72883172E12, 759.5], [1.728831E12, 667.0], [1.72882554E12, 595.0], [1.72882776E12, 701.5], [1.72882434E12, 611.0], [1.72882878E12, 663.0], [1.72883322E12, 856.0], [1.72882674E12, 629.0], [1.72882896E12, 674.5], [1.72882998E12, 659.0], [1.7288322E12, 813.0], [1.72882794E12, 675.5], [1.72883118E12, 764.0], [1.72882572E12, 616.5], [1.72883016E12, 683.0], [1.72882416E12, 522.0], [1.72882398E12, 500.0], [1.72882914E12, 719.5], [1.72883238E12, 846.0], [1.72882692E12, 566.0], [1.7288334E12, 895.0], [1.72883136E12, 568.0], [1.7288247E12, 518.0], [1.72882842E12, 455.5], [1.72883166E12, 662.0], [1.7288262E12, 563.0], [1.72883064E12, 695.5], [1.72882368E12, 661.0], [1.72883286E12, 845.0], [1.7288235E12, 468.0], [1.72882518E12, 577.0], [1.7288274E12, 634.0], [1.72882962E12, 698.0], [1.72883184E12, 830.5], [1.72882536E12, 616.0], [1.72882452E12, 662.0], [1.72882638E12, 773.0], [1.7288286E12, 725.0], [1.72883082E12, 796.0], [1.72883304E12, 852.0], [1.72882656E12, 695.0], [1.7288298E12, 668.0], [1.72882758E12, 584.0], [1.72883202E12, 793.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72883364E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 187.0, "minX": 1.0, "maxY": 1132.5, "series": [{"data": [[2.0, 948.0], [33.0, 384.0], [32.0, 187.0], [34.0, 349.5], [38.0, 233.0], [3.0, 876.5], [4.0, 822.5], [5.0, 795.0], [6.0, 733.0], [7.0, 716.0], [8.0, 702.0], [9.0, 756.0], [10.0, 721.0], [11.0, 769.0], [12.0, 796.0], [13.0, 743.0], [14.0, 731.0], [15.0, 744.0], [1.0, 1132.5], [16.0, 659.0], [17.0, 648.0], [18.0, 626.0], [19.0, 529.5], [20.0, 480.5], [21.0, 372.0], [22.0, 399.0], [23.0, 390.0], [24.0, 316.0], [25.0, 332.0], [26.0, 267.5], [27.0, 282.0], [28.0, 271.5], [29.0, 251.0], [30.0, 311.0], [31.0, 259.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 38.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 124.5, "minX": 1.0, "maxY": 782.5, "series": [{"data": [[2.0, 675.0], [33.0, 282.5], [32.0, 124.5], [34.0, 265.0], [38.0, 130.5], [3.0, 623.0], [4.0, 593.5], [5.0, 573.0], [6.0, 544.0], [7.0, 535.0], [8.0, 522.0], [9.0, 570.0], [10.0, 557.5], [11.0, 597.0], [12.0, 614.0], [13.0, 576.0], [14.0, 573.0], [15.0, 576.0], [1.0, 782.5], [16.0, 512.5], [17.0, 513.5], [18.0, 494.5], [19.0, 412.5], [20.0, 366.0], [21.0, 267.0], [22.0, 290.5], [23.0, 272.5], [24.0, 208.0], [25.0, 222.0], [26.0, 194.0], [27.0, 183.0], [28.0, 174.5], [29.0, 171.0], [30.0, 243.0], [31.0, 164.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 38.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.4166666666666667, "minX": 1.72882338E12, "maxY": 17.983333333333334, "series": [{"data": [[1.72882584E12, 5.783333333333333], [1.7288313E12, 14.866666666666667], [1.72882464E12, 6.383333333333334], [1.72882686E12, 11.066666666666666], [1.72882908E12, 10.766666666666667], [1.72882446E12, 5.75], [1.72882704E12, 11.1], [1.72883028E12, 13.95], [1.72883352E12, 17.2], [1.7288325E12, 16.566666666666666], [1.72882806E12, 11.166666666666666], [1.72882344E12, 3.466666666666667], [1.72882824E12, 10.833333333333334], [1.72882602E12, 6.2], [1.72882926E12, 5.85], [1.72883148E12, 14.983333333333333], [1.72882722E12, 10.566666666666666], [1.72882428E12, 6.466666666666667], [1.72883046E12, 15.516666666666667], [1.72883268E12, 17.8], [1.728825E12, 6.9], [1.72882944E12, 15.866666666666667], [1.7288265E12, 11.516666666666667], [1.72882872E12, 10.466666666666667], [1.72882974E12, 14.366666666666667], [1.72883196E12, 17.366666666666667], [1.7288277E12, 10.766666666666667], [1.72883094E12, 14.7], [1.72883316E12, 17.85], [1.7288238E12, 6.35], [1.72882548E12, 6.566666666666666], [1.72882992E12, 15.383333333333333], [1.7288289E12, 10.8], [1.72883214E12, 16.333333333333332], [1.72882482E12, 6.383333333333334], [1.72882668E12, 11.066666666666666], [1.72883112E12, 14.45], [1.72883334E12, 17.666666666666668], [1.72882362E12, 3.1666666666666665], [1.72882566E12, 6.316666666666666], [1.72882788E12, 10.816666666666666], [1.7288301E12, 15.3], [1.72883232E12, 16.85], [1.72883262E12, 17.433333333333334], [1.72882374E12, 5.333333333333333], [1.72882716E12, 10.683333333333334], [1.72882938E12, 15.366666666666667], [1.7288316E12, 13.316666666666666], [1.72882512E12, 6.033333333333333], [1.72882476E12, 5.833333333333333], [1.72882614E12, 6.9], [1.72882836E12, 11.066666666666666], [1.72883058E12, 16.016666666666666], [1.7288328E12, 16.45], [1.72882632E12, 4.616666666666666], [1.72882956E12, 14.083333333333334], [1.72882356E12, 3.2333333333333334], [1.72882734E12, 10.866666666666667], [1.72883178E12, 17.983333333333334], [1.72883076E12, 15.3], [1.7288253E12, 6.216666666666667], [1.72882752E12, 11.383333333333333], [1.72882458E12, 6.3], [1.72882854E12, 11.183333333333334], [1.72883298E12, 17.066666666666666], [1.7288268E12, 10.55], [1.72883004E12, 14.65], [1.72883346E12, 17.083333333333332], [1.72882782E12, 10.583333333333334], [1.72883226E12, 17.25], [1.72883124E12, 15.166666666666666], [1.72882578E12, 5.933333333333334], [1.728828E12, 11.383333333333333], [1.7288241E12, 6.016666666666667], [1.72882902E12, 10.833333333333334], [1.72882698E12, 10.75], [1.72883244E12, 16.716666666666665], [1.72883022E12, 15.3], [1.7288292E12, 10.233333333333333], [1.72883364E12, 0.4166666666666667], [1.72882494E12, 6.366666666666666], [1.72882818E12, 10.916666666666666], [1.72883142E12, 14.933333333333334], [1.7288304E12, 15.833333333333334], [1.72882596E12, 5.8], [1.72882392E12, 6.15], [1.72882746E12, 10.75], [1.72882404E12, 6.066666666666666], [1.7288307E12, 15.483333333333333], [1.72883292E12, 15.8], [1.72882524E12, 6.366666666666666], [1.72882968E12, 14.4], [1.72882866E12, 11.0], [1.7288319E12, 16.616666666666667], [1.72882644E12, 11.1], [1.72883088E12, 16.233333333333334], [1.7288331E12, 17.333333333333332], [1.72882386E12, 6.4], [1.72882542E12, 6.233333333333333], [1.72882764E12, 10.866666666666667], [1.72882986E12, 14.35], [1.72883208E12, 17.85], [1.7288256E12, 6.733333333333333], [1.72882488E12, 6.25], [1.72882662E12, 11.133333333333333], [1.72882884E12, 11.3], [1.72883106E12, 15.283333333333333], [1.72883328E12, 17.533333333333335], [1.72882338E12, 2.216666666666667], [1.72883034E12, 14.816666666666666], [1.72883256E12, 17.4], [1.7288259E12, 6.65], [1.72882812E12, 10.983333333333333], [1.72882608E12, 6.466666666666667], [1.72882932E12, 15.666666666666666], [1.7288271E12, 11.35], [1.72883154E12, 14.616666666666667], [1.7288244E12, 5.85], [1.72883358E12, 14.416666666666666], [1.72882422E12, 6.35], [1.72883052E12, 14.283333333333333], [1.72882506E12, 6.783333333333333], [1.72882728E12, 10.716666666666667], [1.7288283E12, 11.166666666666666], [1.72883274E12, 16.9], [1.72882626E12, 3.7], [1.72882848E12, 10.816666666666666], [1.7288295E12, 15.066666666666666], [1.72883172E12, 9.133333333333333], [1.728831E12, 15.816666666666666], [1.72882554E12, 6.383333333333334], [1.72882776E12, 10.766666666666667], [1.72882434E12, 6.083333333333333], [1.72882878E12, 10.75], [1.72883322E12, 16.8], [1.72882674E12, 11.283333333333333], [1.72882896E12, 11.066666666666666], [1.72882998E12, 15.5], [1.7288322E12, 16.816666666666666], [1.72882794E12, 10.8], [1.72883118E12, 15.083333333333334], [1.72882572E12, 5.933333333333334], [1.72883016E12, 15.483333333333333], [1.72882416E12, 6.433333333333334], [1.72882398E12, 6.716666666666667], [1.72882914E12, 10.8], [1.72883238E12, 17.033333333333335], [1.72882692E12, 11.483333333333333], [1.7288334E12, 16.25], [1.72883136E12, 16.166666666666668], [1.7288247E12, 6.45], [1.72882842E12, 11.9], [1.72883166E12, 8.216666666666667], [1.7288262E12, 5.966666666666667], [1.72883064E12, 15.233333333333333], [1.72882368E12, 3.15], [1.72883286E12, 16.9], [1.7288235E12, 3.3], [1.72882518E12, 6.433333333333334], [1.7288274E12, 11.15], [1.72882962E12, 15.35], [1.72883184E12, 16.866666666666667], [1.72882536E12, 6.483333333333333], [1.72882452E12, 5.9], [1.72882638E12, 10.25], [1.7288286E12, 10.65], [1.72883082E12, 14.55], [1.72883304E12, 16.433333333333334], [1.72882656E12, 10.75], [1.7288298E12, 15.433333333333334], [1.72882758E12, 11.65], [1.72883202E12, 17.366666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72883364E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.72882338E12, "maxY": 17.983333333333334, "series": [{"data": [[1.72882584E12, 5.783333333333333], [1.7288313E12, 14.866666666666667], [1.72882464E12, 6.383333333333334], [1.72882686E12, 11.066666666666666], [1.72882908E12, 10.766666666666667], [1.72882446E12, 5.75], [1.72882704E12, 11.1], [1.72883028E12, 13.95], [1.72883352E12, 17.2], [1.7288325E12, 16.566666666666666], [1.72882806E12, 11.166666666666666], [1.72882344E12, 3.466666666666667], [1.72882824E12, 10.833333333333334], [1.72882602E12, 6.2], [1.72882926E12, 5.766666666666667], [1.72883148E12, 14.983333333333333], [1.72882722E12, 10.566666666666666], [1.72882428E12, 6.466666666666667], [1.72883046E12, 15.516666666666667], [1.72883268E12, 17.8], [1.728825E12, 6.9], [1.72882944E12, 15.866666666666667], [1.7288265E12, 11.516666666666667], [1.72882872E12, 10.466666666666667], [1.72882974E12, 14.366666666666667], [1.72883196E12, 17.366666666666667], [1.7288277E12, 10.766666666666667], [1.72883094E12, 14.7], [1.72883316E12, 17.85], [1.7288238E12, 6.35], [1.72882548E12, 6.566666666666666], [1.72882992E12, 15.383333333333333], [1.7288289E12, 10.8], [1.72883214E12, 16.333333333333332], [1.72882482E12, 6.383333333333334], [1.72882668E12, 11.066666666666666], [1.72883112E12, 14.45], [1.72883334E12, 17.666666666666668], [1.72882362E12, 3.1666666666666665], [1.72882566E12, 6.316666666666666], [1.72882788E12, 10.816666666666666], [1.7288301E12, 15.3], [1.72883232E12, 16.85], [1.72883262E12, 17.433333333333334], [1.72882374E12, 5.3], [1.72882716E12, 10.683333333333334], [1.72882938E12, 15.366666666666667], [1.7288316E12, 13.383333333333333], [1.72882512E12, 6.033333333333333], [1.72882476E12, 5.833333333333333], [1.72882614E12, 6.9], [1.72882836E12, 11.066666666666666], [1.72883058E12, 16.016666666666666], [1.7288328E12, 16.45], [1.72882632E12, 4.516666666666667], [1.72882956E12, 14.083333333333334], [1.72882356E12, 3.2333333333333334], [1.72882734E12, 10.866666666666667], [1.72883178E12, 17.983333333333334], [1.72883076E12, 15.3], [1.7288253E12, 6.216666666666667], [1.72882752E12, 11.383333333333333], [1.72882458E12, 6.3], [1.72882854E12, 11.183333333333334], [1.72883298E12, 17.066666666666666], [1.7288268E12, 10.55], [1.72883004E12, 14.65], [1.72883346E12, 17.083333333333332], [1.72882782E12, 10.583333333333334], [1.72883226E12, 17.25], [1.72883124E12, 15.166666666666666], [1.72882578E12, 5.933333333333334], [1.728828E12, 11.383333333333333], [1.7288241E12, 6.016666666666667], [1.72882902E12, 10.833333333333334], [1.72882698E12, 10.75], [1.72883244E12, 16.716666666666665], [1.72883022E12, 15.3], [1.7288292E12, 10.25], [1.72883364E12, 0.4666666666666667], [1.72882494E12, 6.366666666666666], [1.72882818E12, 10.916666666666666], [1.72883142E12, 14.933333333333334], [1.7288304E12, 15.833333333333334], [1.72882596E12, 5.8], [1.72882392E12, 6.15], [1.72882746E12, 10.75], [1.72882404E12, 6.066666666666666], [1.7288307E12, 15.483333333333333], [1.72883292E12, 15.8], [1.72882524E12, 6.366666666666666], [1.72882968E12, 14.4], [1.72882866E12, 11.0], [1.7288319E12, 16.616666666666667], [1.72882644E12, 11.1], [1.72883088E12, 16.233333333333334], [1.7288331E12, 17.333333333333332], [1.72882386E12, 6.4], [1.72882542E12, 6.233333333333333], [1.72882764E12, 10.866666666666667], [1.72882986E12, 14.35], [1.72883208E12, 17.85], [1.7288256E12, 6.733333333333333], [1.72882488E12, 6.25], [1.72882662E12, 11.133333333333333], [1.72882884E12, 11.3], [1.72883106E12, 15.283333333333333], [1.72883328E12, 17.533333333333335], [1.72882338E12, 2.183333333333333], [1.72883034E12, 14.816666666666666], [1.72883256E12, 17.4], [1.7288259E12, 6.65], [1.72882812E12, 10.983333333333333], [1.72882608E12, 6.466666666666667], [1.72882932E12, 15.666666666666666], [1.7288271E12, 11.35], [1.72883154E12, 14.616666666666667], [1.7288244E12, 5.85], [1.72883358E12, 14.633333333333333], [1.72882422E12, 6.35], [1.72883052E12, 14.283333333333333], [1.72882506E12, 6.783333333333333], [1.72882728E12, 10.716666666666667], [1.7288283E12, 11.166666666666666], [1.72883274E12, 16.9], [1.72882626E12, 3.7333333333333334], [1.72882848E12, 10.816666666666666], [1.7288295E12, 15.066666666666666], [1.72883172E12, 8.933333333333334], [1.728831E12, 15.816666666666666], [1.72882554E12, 6.383333333333334], [1.72882776E12, 10.766666666666667], [1.72882434E12, 6.083333333333333], [1.72882878E12, 10.75], [1.72883322E12, 16.8], [1.72882674E12, 11.283333333333333], [1.72882896E12, 11.066666666666666], [1.72882998E12, 15.5], [1.7288322E12, 16.816666666666666], [1.72882794E12, 10.8], [1.72883118E12, 15.083333333333334], [1.72882572E12, 5.933333333333334], [1.72883016E12, 15.483333333333333], [1.72882416E12, 6.433333333333334], [1.72882398E12, 6.716666666666667], [1.72882914E12, 10.8], [1.72883238E12, 17.033333333333335], [1.72882692E12, 11.483333333333333], [1.7288334E12, 16.25], [1.72883136E12, 16.166666666666668], [1.7288247E12, 6.45], [1.72882842E12, 11.9], [1.72883166E12, 8.283333333333333], [1.7288262E12, 5.966666666666667], [1.72883064E12, 15.233333333333333], [1.72882368E12, 3.15], [1.72883286E12, 16.9], [1.7288235E12, 3.3], [1.72882518E12, 6.433333333333334], [1.7288274E12, 11.15], [1.72882962E12, 15.35], [1.72883184E12, 16.866666666666667], [1.72882536E12, 6.483333333333333], [1.72882452E12, 5.9], [1.72882638E12, 10.25], [1.7288286E12, 10.65], [1.72883082E12, 14.55], [1.72883304E12, 16.433333333333334], [1.72882656E12, 10.75], [1.7288298E12, 15.433333333333334], [1.72882758E12, 11.65], [1.72883202E12, 17.366666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72883364E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.72882338E12, "maxY": 17.983333333333334, "series": [{"data": [[1.72882584E12, 5.783333333333333], [1.7288313E12, 14.866666666666667], [1.72882464E12, 6.383333333333334], [1.72882686E12, 11.066666666666666], [1.72882908E12, 10.766666666666667], [1.72882446E12, 5.75], [1.72882704E12, 11.1], [1.72883028E12, 13.95], [1.72883352E12, 17.2], [1.7288325E12, 16.566666666666666], [1.72882806E12, 11.166666666666666], [1.72882344E12, 3.466666666666667], [1.72882824E12, 10.833333333333334], [1.72882602E12, 6.2], [1.72882926E12, 5.766666666666667], [1.72883148E12, 14.983333333333333], [1.72882722E12, 10.566666666666666], [1.72882428E12, 6.466666666666667], [1.72883046E12, 15.516666666666667], [1.72883268E12, 17.8], [1.728825E12, 6.9], [1.72882944E12, 15.866666666666667], [1.7288265E12, 11.516666666666667], [1.72882872E12, 10.466666666666667], [1.72882974E12, 14.366666666666667], [1.72883196E12, 17.366666666666667], [1.7288277E12, 10.766666666666667], [1.72883094E12, 14.7], [1.72883316E12, 17.85], [1.7288238E12, 6.35], [1.72882548E12, 6.566666666666666], [1.72882992E12, 15.383333333333333], [1.7288289E12, 10.8], [1.72883214E12, 16.333333333333332], [1.72882482E12, 6.383333333333334], [1.72882668E12, 11.066666666666666], [1.72883112E12, 14.45], [1.72883334E12, 17.666666666666668], [1.72882362E12, 3.1666666666666665], [1.72882566E12, 6.316666666666666], [1.72882788E12, 10.816666666666666], [1.7288301E12, 15.3], [1.72883232E12, 16.85], [1.72883262E12, 17.433333333333334], [1.72882374E12, 5.3], [1.72882716E12, 10.683333333333334], [1.72882938E12, 15.366666666666667], [1.7288316E12, 13.383333333333333], [1.72882512E12, 6.033333333333333], [1.72882476E12, 5.833333333333333], [1.72882614E12, 6.9], [1.72882836E12, 11.066666666666666], [1.72883058E12, 16.016666666666666], [1.7288328E12, 16.45], [1.72882632E12, 4.516666666666667], [1.72882956E12, 14.083333333333334], [1.72882356E12, 3.2333333333333334], [1.72882734E12, 10.866666666666667], [1.72883178E12, 17.983333333333334], [1.72883076E12, 15.3], [1.7288253E12, 6.216666666666667], [1.72882752E12, 11.383333333333333], [1.72882458E12, 6.3], [1.72882854E12, 11.183333333333334], [1.72883298E12, 17.066666666666666], [1.7288268E12, 10.55], [1.72883004E12, 14.65], [1.72883346E12, 17.083333333333332], [1.72882782E12, 10.583333333333334], [1.72883226E12, 17.25], [1.72883124E12, 15.166666666666666], [1.72882578E12, 5.933333333333334], [1.728828E12, 11.383333333333333], [1.7288241E12, 6.016666666666667], [1.72882902E12, 10.833333333333334], [1.72882698E12, 10.75], [1.72883244E12, 16.716666666666665], [1.72883022E12, 15.3], [1.7288292E12, 10.25], [1.72883364E12, 0.4666666666666667], [1.72882494E12, 6.366666666666666], [1.72882818E12, 10.916666666666666], [1.72883142E12, 14.933333333333334], [1.7288304E12, 15.833333333333334], [1.72882596E12, 5.8], [1.72882392E12, 6.15], [1.72882746E12, 10.75], [1.72882404E12, 6.066666666666666], [1.7288307E12, 15.483333333333333], [1.72883292E12, 15.8], [1.72882524E12, 6.366666666666666], [1.72882968E12, 14.4], [1.72882866E12, 11.0], [1.7288319E12, 16.616666666666667], [1.72882644E12, 11.1], [1.72883088E12, 16.233333333333334], [1.7288331E12, 17.333333333333332], [1.72882386E12, 6.4], [1.72882542E12, 6.233333333333333], [1.72882764E12, 10.866666666666667], [1.72882986E12, 14.35], [1.72883208E12, 17.85], [1.7288256E12, 6.733333333333333], [1.72882488E12, 6.25], [1.72882662E12, 11.133333333333333], [1.72882884E12, 11.3], [1.72883106E12, 15.283333333333333], [1.72883328E12, 17.533333333333335], [1.72882338E12, 2.183333333333333], [1.72883034E12, 14.816666666666666], [1.72883256E12, 17.4], [1.7288259E12, 6.65], [1.72882812E12, 10.983333333333333], [1.72882608E12, 6.466666666666667], [1.72882932E12, 15.666666666666666], [1.7288271E12, 11.35], [1.72883154E12, 14.616666666666667], [1.7288244E12, 5.85], [1.72883358E12, 14.633333333333333], [1.72882422E12, 6.35], [1.72883052E12, 14.283333333333333], [1.72882506E12, 6.783333333333333], [1.72882728E12, 10.716666666666667], [1.7288283E12, 11.166666666666666], [1.72883274E12, 16.9], [1.72882626E12, 3.7333333333333334], [1.72882848E12, 10.816666666666666], [1.7288295E12, 15.066666666666666], [1.72883172E12, 8.933333333333334], [1.728831E12, 15.816666666666666], [1.72882554E12, 6.383333333333334], [1.72882776E12, 10.766666666666667], [1.72882434E12, 6.083333333333333], [1.72882878E12, 10.75], [1.72883322E12, 16.8], [1.72882674E12, 11.283333333333333], [1.72882896E12, 11.066666666666666], [1.72882998E12, 15.5], [1.7288322E12, 16.816666666666666], [1.72882794E12, 10.8], [1.72883118E12, 15.083333333333334], [1.72882572E12, 5.933333333333334], [1.72883016E12, 15.483333333333333], [1.72882416E12, 6.433333333333334], [1.72882398E12, 6.716666666666667], [1.72882914E12, 10.8], [1.72883238E12, 17.033333333333335], [1.72882692E12, 11.483333333333333], [1.7288334E12, 16.25], [1.72883136E12, 16.166666666666668], [1.7288247E12, 6.45], [1.72882842E12, 11.9], [1.72883166E12, 8.283333333333333], [1.7288262E12, 5.966666666666667], [1.72883064E12, 15.233333333333333], [1.72882368E12, 3.15], [1.72883286E12, 16.9], [1.7288235E12, 3.3], [1.72882518E12, 6.433333333333334], [1.7288274E12, 11.15], [1.72882962E12, 15.35], [1.72883184E12, 16.866666666666667], [1.72882536E12, 6.483333333333333], [1.72882452E12, 5.9], [1.72882638E12, 10.25], [1.7288286E12, 10.65], [1.72883082E12, 14.55], [1.72883304E12, 16.433333333333334], [1.72882656E12, 10.75], [1.7288298E12, 15.433333333333334], [1.72882758E12, 11.65], [1.72883202E12, 17.366666666666667]], "isOverall": false, "label": "getmap-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72883364E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.72882338E12, "maxY": 17.983333333333334, "series": [{"data": [[1.72882584E12, 5.783333333333333], [1.7288313E12, 14.866666666666667], [1.72882464E12, 6.383333333333334], [1.72882686E12, 11.066666666666666], [1.72882908E12, 10.766666666666667], [1.72882446E12, 5.75], [1.72882704E12, 11.1], [1.72883028E12, 13.95], [1.72883352E12, 17.2], [1.7288325E12, 16.566666666666666], [1.72882806E12, 11.166666666666666], [1.72882344E12, 3.466666666666667], [1.72882824E12, 10.833333333333334], [1.72882602E12, 6.2], [1.72882926E12, 5.766666666666667], [1.72883148E12, 14.983333333333333], [1.72882722E12, 10.566666666666666], [1.72882428E12, 6.466666666666667], [1.72883046E12, 15.516666666666667], [1.72883268E12, 17.8], [1.728825E12, 6.9], [1.72882944E12, 15.866666666666667], [1.7288265E12, 11.516666666666667], [1.72882872E12, 10.466666666666667], [1.72882974E12, 14.366666666666667], [1.72883196E12, 17.366666666666667], [1.7288277E12, 10.766666666666667], [1.72883094E12, 14.7], [1.72883316E12, 17.85], [1.7288238E12, 6.35], [1.72882548E12, 6.566666666666666], [1.72882992E12, 15.383333333333333], [1.7288289E12, 10.8], [1.72883214E12, 16.333333333333332], [1.72882482E12, 6.383333333333334], [1.72882668E12, 11.066666666666666], [1.72883112E12, 14.45], [1.72883334E12, 17.666666666666668], [1.72882362E12, 3.1666666666666665], [1.72882566E12, 6.316666666666666], [1.72882788E12, 10.816666666666666], [1.7288301E12, 15.3], [1.72883232E12, 16.85], [1.72883262E12, 17.433333333333334], [1.72882374E12, 5.3], [1.72882716E12, 10.683333333333334], [1.72882938E12, 15.366666666666667], [1.7288316E12, 13.383333333333333], [1.72882512E12, 6.033333333333333], [1.72882476E12, 5.833333333333333], [1.72882614E12, 6.9], [1.72882836E12, 11.066666666666666], [1.72883058E12, 16.016666666666666], [1.7288328E12, 16.45], [1.72882632E12, 4.516666666666667], [1.72882956E12, 14.083333333333334], [1.72882356E12, 3.2333333333333334], [1.72882734E12, 10.866666666666667], [1.72883178E12, 17.983333333333334], [1.72883076E12, 15.3], [1.7288253E12, 6.216666666666667], [1.72882752E12, 11.383333333333333], [1.72882458E12, 6.3], [1.72882854E12, 11.183333333333334], [1.72883298E12, 17.066666666666666], [1.7288268E12, 10.55], [1.72883004E12, 14.65], [1.72883346E12, 17.083333333333332], [1.72882782E12, 10.583333333333334], [1.72883226E12, 17.25], [1.72883124E12, 15.166666666666666], [1.72882578E12, 5.933333333333334], [1.728828E12, 11.383333333333333], [1.7288241E12, 6.016666666666667], [1.72882902E12, 10.833333333333334], [1.72882698E12, 10.75], [1.72883244E12, 16.716666666666665], [1.72883022E12, 15.3], [1.7288292E12, 10.25], [1.72883364E12, 0.4666666666666667], [1.72882494E12, 6.366666666666666], [1.72882818E12, 10.916666666666666], [1.72883142E12, 14.933333333333334], [1.7288304E12, 15.833333333333334], [1.72882596E12, 5.8], [1.72882392E12, 6.15], [1.72882746E12, 10.75], [1.72882404E12, 6.066666666666666], [1.7288307E12, 15.483333333333333], [1.72883292E12, 15.8], [1.72882524E12, 6.366666666666666], [1.72882968E12, 14.4], [1.72882866E12, 11.0], [1.7288319E12, 16.616666666666667], [1.72882644E12, 11.1], [1.72883088E12, 16.233333333333334], [1.7288331E12, 17.333333333333332], [1.72882386E12, 6.4], [1.72882542E12, 6.233333333333333], [1.72882764E12, 10.866666666666667], [1.72882986E12, 14.35], [1.72883208E12, 17.85], [1.7288256E12, 6.733333333333333], [1.72882488E12, 6.25], [1.72882662E12, 11.133333333333333], [1.72882884E12, 11.3], [1.72883106E12, 15.283333333333333], [1.72883328E12, 17.533333333333335], [1.72882338E12, 2.183333333333333], [1.72883034E12, 14.816666666666666], [1.72883256E12, 17.4], [1.7288259E12, 6.65], [1.72882812E12, 10.983333333333333], [1.72882608E12, 6.466666666666667], [1.72882932E12, 15.666666666666666], [1.7288271E12, 11.35], [1.72883154E12, 14.616666666666667], [1.7288244E12, 5.85], [1.72883358E12, 14.633333333333333], [1.72882422E12, 6.35], [1.72883052E12, 14.283333333333333], [1.72882506E12, 6.783333333333333], [1.72882728E12, 10.716666666666667], [1.7288283E12, 11.166666666666666], [1.72883274E12, 16.9], [1.72882626E12, 3.7333333333333334], [1.72882848E12, 10.816666666666666], [1.7288295E12, 15.066666666666666], [1.72883172E12, 8.933333333333334], [1.728831E12, 15.816666666666666], [1.72882554E12, 6.383333333333334], [1.72882776E12, 10.766666666666667], [1.72882434E12, 6.083333333333333], [1.72882878E12, 10.75], [1.72883322E12, 16.8], [1.72882674E12, 11.283333333333333], [1.72882896E12, 11.066666666666666], [1.72882998E12, 15.5], [1.7288322E12, 16.816666666666666], [1.72882794E12, 10.8], [1.72883118E12, 15.083333333333334], [1.72882572E12, 5.933333333333334], [1.72883016E12, 15.483333333333333], [1.72882416E12, 6.433333333333334], [1.72882398E12, 6.716666666666667], [1.72882914E12, 10.8], [1.72883238E12, 17.033333333333335], [1.72882692E12, 11.483333333333333], [1.7288334E12, 16.25], [1.72883136E12, 16.166666666666668], [1.7288247E12, 6.45], [1.72882842E12, 11.9], [1.72883166E12, 8.283333333333333], [1.7288262E12, 5.966666666666667], [1.72883064E12, 15.233333333333333], [1.72882368E12, 3.15], [1.72883286E12, 16.9], [1.7288235E12, 3.3], [1.72882518E12, 6.433333333333334], [1.7288274E12, 11.15], [1.72882962E12, 15.35], [1.72883184E12, 16.866666666666667], [1.72882536E12, 6.483333333333333], [1.72882452E12, 5.9], [1.72882638E12, 10.25], [1.7288286E12, 10.65], [1.72883082E12, 14.55], [1.72883304E12, 16.433333333333334], [1.72882656E12, 10.75], [1.7288298E12, 15.433333333333334], [1.72882758E12, 11.65], [1.72883202E12, 17.366666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72883364E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

