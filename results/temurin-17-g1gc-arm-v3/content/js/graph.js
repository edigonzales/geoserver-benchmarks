/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 35.0, "minX": 0.0, "maxY": 5768.0, "series": [{"data": [[0.0, 35.0], [0.1, 71.0], [0.2, 75.0], [0.3, 77.0], [0.4, 79.0], [0.5, 81.0], [0.6, 83.0], [0.7, 84.0], [0.8, 85.0], [0.9, 87.0], [1.0, 88.0], [1.1, 89.0], [1.2, 90.0], [1.3, 91.0], [1.4, 92.0], [1.5, 93.0], [1.6, 94.0], [1.7, 95.0], [1.8, 96.0], [1.9, 97.0], [2.0, 97.0], [2.1, 98.0], [2.2, 99.0], [2.3, 99.0], [2.4, 100.0], [2.5, 101.0], [2.6, 101.0], [2.7, 102.0], [2.8, 103.0], [2.9, 103.0], [3.0, 104.0], [3.1, 105.0], [3.2, 105.0], [3.3, 106.0], [3.4, 106.0], [3.5, 107.0], [3.6, 108.0], [3.7, 108.0], [3.8, 109.0], [3.9, 109.0], [4.0, 110.0], [4.1, 110.0], [4.2, 111.0], [4.3, 111.0], [4.4, 112.0], [4.5, 112.0], [4.6, 113.0], [4.7, 113.0], [4.8, 114.0], [4.9, 114.0], [5.0, 115.0], [5.1, 115.0], [5.2, 116.0], [5.3, 116.0], [5.4, 117.0], [5.5, 117.0], [5.6, 118.0], [5.7, 118.0], [5.8, 119.0], [5.9, 119.0], [6.0, 119.0], [6.1, 120.0], [6.2, 120.0], [6.3, 121.0], [6.4, 121.0], [6.5, 122.0], [6.6, 122.0], [6.7, 123.0], [6.8, 123.0], [6.9, 124.0], [7.0, 124.0], [7.1, 124.0], [7.2, 125.0], [7.3, 125.0], [7.4, 126.0], [7.5, 126.0], [7.6, 127.0], [7.7, 127.0], [7.8, 128.0], [7.9, 128.0], [8.0, 128.0], [8.1, 129.0], [8.2, 129.0], [8.3, 130.0], [8.4, 130.0], [8.5, 130.0], [8.6, 131.0], [8.7, 131.0], [8.8, 132.0], [8.9, 132.0], [9.0, 132.0], [9.1, 133.0], [9.2, 133.0], [9.3, 134.0], [9.4, 134.0], [9.5, 135.0], [9.6, 135.0], [9.7, 135.0], [9.8, 136.0], [9.9, 136.0], [10.0, 137.0], [10.1, 137.0], [10.2, 138.0], [10.3, 138.0], [10.4, 138.0], [10.5, 139.0], [10.6, 139.0], [10.7, 140.0], [10.8, 140.0], [10.9, 140.0], [11.0, 141.0], [11.1, 141.0], [11.2, 142.0], [11.3, 142.0], [11.4, 142.0], [11.5, 143.0], [11.6, 143.0], [11.7, 144.0], [11.8, 144.0], [11.9, 144.0], [12.0, 145.0], [12.1, 145.0], [12.2, 145.0], [12.3, 146.0], [12.4, 146.0], [12.5, 147.0], [12.6, 147.0], [12.7, 148.0], [12.8, 148.0], [12.9, 148.0], [13.0, 149.0], [13.1, 149.0], [13.2, 150.0], [13.3, 150.0], [13.4, 151.0], [13.5, 151.0], [13.6, 151.0], [13.7, 152.0], [13.8, 152.0], [13.9, 153.0], [14.0, 153.0], [14.1, 154.0], [14.2, 154.0], [14.3, 154.0], [14.4, 155.0], [14.5, 155.0], [14.6, 156.0], [14.7, 156.0], [14.8, 156.0], [14.9, 157.0], [15.0, 157.0], [15.1, 158.0], [15.2, 158.0], [15.3, 159.0], [15.4, 159.0], [15.5, 159.0], [15.6, 160.0], [15.7, 160.0], [15.8, 161.0], [15.9, 161.0], [16.0, 161.0], [16.1, 162.0], [16.2, 162.0], [16.3, 163.0], [16.4, 163.0], [16.5, 164.0], [16.6, 164.0], [16.7, 164.0], [16.8, 165.0], [16.9, 165.0], [17.0, 166.0], [17.1, 166.0], [17.2, 167.0], [17.3, 167.0], [17.4, 167.0], [17.5, 168.0], [17.6, 168.0], [17.7, 169.0], [17.8, 169.0], [17.9, 170.0], [18.0, 170.0], [18.1, 171.0], [18.2, 171.0], [18.3, 172.0], [18.4, 172.0], [18.5, 172.0], [18.6, 173.0], [18.7, 173.0], [18.8, 174.0], [18.9, 174.0], [19.0, 175.0], [19.1, 175.0], [19.2, 175.0], [19.3, 176.0], [19.4, 176.0], [19.5, 177.0], [19.6, 177.0], [19.7, 178.0], [19.8, 178.0], [19.9, 179.0], [20.0, 179.0], [20.1, 180.0], [20.2, 180.0], [20.3, 181.0], [20.4, 181.0], [20.5, 181.0], [20.6, 182.0], [20.7, 182.0], [20.8, 183.0], [20.9, 183.0], [21.0, 184.0], [21.1, 185.0], [21.2, 185.0], [21.3, 186.0], [21.4, 186.0], [21.5, 187.0], [21.6, 187.0], [21.7, 187.0], [21.8, 188.0], [21.9, 189.0], [22.0, 189.0], [22.1, 190.0], [22.2, 190.0], [22.3, 191.0], [22.4, 191.0], [22.5, 192.0], [22.6, 192.0], [22.7, 193.0], [22.8, 193.0], [22.9, 194.0], [23.0, 194.0], [23.1, 195.0], [23.2, 196.0], [23.3, 196.0], [23.4, 197.0], [23.5, 197.0], [23.6, 198.0], [23.7, 198.0], [23.8, 199.0], [23.9, 199.0], [24.0, 200.0], [24.1, 200.0], [24.2, 201.0], [24.3, 201.0], [24.4, 202.0], [24.5, 203.0], [24.6, 203.0], [24.7, 204.0], [24.8, 204.0], [24.9, 205.0], [25.0, 205.0], [25.1, 206.0], [25.2, 206.0], [25.3, 207.0], [25.4, 208.0], [25.5, 208.0], [25.6, 209.0], [25.7, 209.0], [25.8, 210.0], [25.9, 211.0], [26.0, 211.0], [26.1, 212.0], [26.2, 212.0], [26.3, 213.0], [26.4, 214.0], [26.5, 214.0], [26.6, 215.0], [26.7, 215.0], [26.8, 216.0], [26.9, 217.0], [27.0, 217.0], [27.1, 218.0], [27.2, 219.0], [27.3, 220.0], [27.4, 220.0], [27.5, 221.0], [27.6, 222.0], [27.7, 222.0], [27.8, 223.0], [27.9, 224.0], [28.0, 225.0], [28.1, 225.0], [28.2, 226.0], [28.3, 227.0], [28.4, 227.0], [28.5, 228.0], [28.6, 229.0], [28.7, 229.0], [28.8, 230.0], [28.9, 231.0], [29.0, 232.0], [29.1, 232.0], [29.2, 233.0], [29.3, 234.0], [29.4, 234.0], [29.5, 235.0], [29.6, 236.0], [29.7, 237.0], [29.8, 237.0], [29.9, 238.0], [30.0, 239.0], [30.1, 240.0], [30.2, 241.0], [30.3, 241.0], [30.4, 242.0], [30.5, 243.0], [30.6, 244.0], [30.7, 245.0], [30.8, 246.0], [30.9, 247.0], [31.0, 247.0], [31.1, 248.0], [31.2, 249.0], [31.3, 250.0], [31.4, 251.0], [31.5, 252.0], [31.6, 253.0], [31.7, 254.0], [31.8, 254.0], [31.9, 255.0], [32.0, 256.0], [32.1, 257.0], [32.2, 258.0], [32.3, 259.0], [32.4, 260.0], [32.5, 261.0], [32.6, 262.0], [32.7, 263.0], [32.8, 264.0], [32.9, 265.0], [33.0, 266.0], [33.1, 267.0], [33.2, 268.0], [33.3, 269.0], [33.4, 270.0], [33.5, 271.0], [33.6, 272.0], [33.7, 273.0], [33.8, 274.0], [33.9, 275.0], [34.0, 276.0], [34.1, 277.0], [34.2, 278.0], [34.3, 279.0], [34.4, 281.0], [34.5, 282.0], [34.6, 283.0], [34.7, 284.0], [34.8, 286.0], [34.9, 287.0], [35.0, 288.0], [35.1, 289.0], [35.2, 291.0], [35.3, 292.0], [35.4, 294.0], [35.5, 295.0], [35.6, 297.0], [35.7, 298.0], [35.8, 299.0], [35.9, 301.0], [36.0, 302.0], [36.1, 304.0], [36.2, 305.0], [36.3, 307.0], [36.4, 308.0], [36.5, 310.0], [36.6, 311.0], [36.7, 313.0], [36.8, 314.0], [36.9, 316.0], [37.0, 317.0], [37.1, 319.0], [37.2, 321.0], [37.3, 323.0], [37.4, 324.0], [37.5, 326.0], [37.6, 328.0], [37.7, 329.0], [37.8, 331.0], [37.9, 333.0], [38.0, 334.0], [38.1, 337.0], [38.2, 338.0], [38.3, 340.0], [38.4, 342.0], [38.5, 344.0], [38.6, 346.0], [38.7, 348.0], [38.8, 350.0], [38.9, 352.0], [39.0, 354.0], [39.1, 356.0], [39.2, 359.0], [39.3, 361.0], [39.4, 363.0], [39.5, 366.0], [39.6, 368.0], [39.7, 371.0], [39.8, 373.0], [39.9, 376.0], [40.0, 378.0], [40.1, 380.0], [40.2, 383.0], [40.3, 386.0], [40.4, 388.0], [40.5, 391.0], [40.6, 394.0], [40.7, 397.0], [40.8, 400.0], [40.9, 403.0], [41.0, 406.0], [41.1, 409.0], [41.2, 412.0], [41.3, 415.0], [41.4, 419.0], [41.5, 422.0], [41.6, 425.0], [41.7, 428.0], [41.8, 432.0], [41.9, 435.0], [42.0, 439.0], [42.1, 443.0], [42.2, 446.0], [42.3, 450.0], [42.4, 453.0], [42.5, 457.0], [42.6, 461.0], [42.7, 465.0], [42.8, 469.0], [42.9, 473.0], [43.0, 477.0], [43.1, 481.0], [43.2, 485.0], [43.3, 490.0], [43.4, 495.0], [43.5, 499.0], [43.6, 504.0], [43.7, 509.0], [43.8, 514.0], [43.9, 519.0], [44.0, 524.0], [44.1, 529.0], [44.2, 535.0], [44.3, 539.0], [44.4, 544.0], [44.5, 549.0], [44.6, 554.0], [44.7, 561.0], [44.8, 566.0], [44.9, 570.0], [45.0, 576.0], [45.1, 581.0], [45.2, 586.0], [45.3, 591.0], [45.4, 597.0], [45.5, 602.0], [45.6, 607.0], [45.7, 612.0], [45.8, 617.0], [45.9, 623.0], [46.0, 628.0], [46.1, 633.0], [46.2, 639.0], [46.3, 644.0], [46.4, 648.0], [46.5, 653.0], [46.6, 658.0], [46.7, 663.0], [46.8, 669.0], [46.9, 673.0], [47.0, 679.0], [47.1, 683.0], [47.2, 687.0], [47.3, 692.0], [47.4, 696.0], [47.5, 700.0], [47.6, 705.0], [47.7, 709.0], [47.8, 713.0], [47.9, 717.0], [48.0, 722.0], [48.1, 726.0], [48.2, 731.0], [48.3, 735.0], [48.4, 739.0], [48.5, 744.0], [48.6, 747.0], [48.7, 751.0], [48.8, 755.0], [48.9, 760.0], [49.0, 763.0], [49.1, 767.0], [49.2, 771.0], [49.3, 775.0], [49.4, 778.0], [49.5, 782.0], [49.6, 787.0], [49.7, 790.0], [49.8, 793.0], [49.9, 797.0], [50.0, 801.0], [50.1, 804.0], [50.2, 808.0], [50.3, 812.0], [50.4, 815.0], [50.5, 819.0], [50.6, 823.0], [50.7, 826.0], [50.8, 830.0], [50.9, 833.0], [51.0, 837.0], [51.1, 841.0], [51.2, 844.0], [51.3, 848.0], [51.4, 851.0], [51.5, 855.0], [51.6, 858.0], [51.7, 862.0], [51.8, 865.0], [51.9, 867.0], [52.0, 870.0], [52.1, 873.0], [52.2, 876.0], [52.3, 879.0], [52.4, 882.0], [52.5, 885.0], [52.6, 888.0], [52.7, 891.0], [52.8, 894.0], [52.9, 897.0], [53.0, 900.0], [53.1, 902.0], [53.2, 906.0], [53.3, 909.0], [53.4, 912.0], [53.5, 915.0], [53.6, 918.0], [53.7, 921.0], [53.8, 924.0], [53.9, 927.0], [54.0, 930.0], [54.1, 933.0], [54.2, 936.0], [54.3, 939.0], [54.4, 942.0], [54.5, 945.0], [54.6, 948.0], [54.7, 951.0], [54.8, 953.0], [54.9, 956.0], [55.0, 960.0], [55.1, 962.0], [55.2, 965.0], [55.3, 968.0], [55.4, 970.0], [55.5, 973.0], [55.6, 976.0], [55.7, 978.0], [55.8, 981.0], [55.9, 985.0], [56.0, 987.0], [56.1, 990.0], [56.2, 992.0], [56.3, 995.0], [56.4, 998.0], [56.5, 1001.0], [56.6, 1004.0], [56.7, 1006.0], [56.8, 1009.0], [56.9, 1012.0], [57.0, 1015.0], [57.1, 1018.0], [57.2, 1020.0], [57.3, 1022.0], [57.4, 1025.0], [57.5, 1028.0], [57.6, 1030.0], [57.7, 1033.0], [57.8, 1036.0], [57.9, 1039.0], [58.0, 1041.0], [58.1, 1044.0], [58.2, 1046.0], [58.3, 1048.0], [58.4, 1050.0], [58.5, 1053.0], [58.6, 1055.0], [58.7, 1058.0], [58.8, 1060.0], [58.9, 1063.0], [59.0, 1065.0], [59.1, 1068.0], [59.2, 1070.0], [59.3, 1072.0], [59.4, 1075.0], [59.5, 1077.0], [59.6, 1080.0], [59.7, 1082.0], [59.8, 1084.0], [59.9, 1087.0], [60.0, 1090.0], [60.1, 1092.0], [60.2, 1095.0], [60.3, 1097.0], [60.4, 1100.0], [60.5, 1102.0], [60.6, 1105.0], [60.7, 1107.0], [60.8, 1110.0], [60.9, 1112.0], [61.0, 1114.0], [61.1, 1116.0], [61.2, 1119.0], [61.3, 1121.0], [61.4, 1124.0], [61.5, 1126.0], [61.6, 1129.0], [61.7, 1131.0], [61.8, 1133.0], [61.9, 1136.0], [62.0, 1138.0], [62.1, 1141.0], [62.2, 1143.0], [62.3, 1146.0], [62.4, 1148.0], [62.5, 1151.0], [62.6, 1154.0], [62.7, 1156.0], [62.8, 1158.0], [62.9, 1161.0], [63.0, 1163.0], [63.1, 1165.0], [63.2, 1168.0], [63.3, 1171.0], [63.4, 1173.0], [63.5, 1175.0], [63.6, 1178.0], [63.7, 1180.0], [63.8, 1183.0], [63.9, 1185.0], [64.0, 1187.0], [64.1, 1189.0], [64.2, 1191.0], [64.3, 1194.0], [64.4, 1196.0], [64.5, 1199.0], [64.6, 1201.0], [64.7, 1203.0], [64.8, 1206.0], [64.9, 1208.0], [65.0, 1211.0], [65.1, 1213.0], [65.2, 1216.0], [65.3, 1219.0], [65.4, 1221.0], [65.5, 1224.0], [65.6, 1227.0], [65.7, 1229.0], [65.8, 1231.0], [65.9, 1234.0], [66.0, 1236.0], [66.1, 1238.0], [66.2, 1240.0], [66.3, 1243.0], [66.4, 1245.0], [66.5, 1248.0], [66.6, 1250.0], [66.7, 1253.0], [66.8, 1255.0], [66.9, 1258.0], [67.0, 1260.0], [67.1, 1262.0], [67.2, 1265.0], [67.3, 1267.0], [67.4, 1269.0], [67.5, 1271.0], [67.6, 1273.0], [67.7, 1276.0], [67.8, 1278.0], [67.9, 1280.0], [68.0, 1283.0], [68.1, 1286.0], [68.2, 1288.0], [68.3, 1290.0], [68.4, 1293.0], [68.5, 1295.0], [68.6, 1297.0], [68.7, 1300.0], [68.8, 1302.0], [68.9, 1304.0], [69.0, 1307.0], [69.1, 1309.0], [69.2, 1312.0], [69.3, 1314.0], [69.4, 1317.0], [69.5, 1319.0], [69.6, 1322.0], [69.7, 1324.0], [69.8, 1327.0], [69.9, 1329.0], [70.0, 1332.0], [70.1, 1334.0], [70.2, 1337.0], [70.3, 1339.0], [70.4, 1342.0], [70.5, 1345.0], [70.6, 1347.0], [70.7, 1350.0], [70.8, 1352.0], [70.9, 1354.0], [71.0, 1357.0], [71.1, 1360.0], [71.2, 1362.0], [71.3, 1364.0], [71.4, 1367.0], [71.5, 1369.0], [71.6, 1372.0], [71.7, 1374.0], [71.8, 1377.0], [71.9, 1379.0], [72.0, 1382.0], [72.1, 1384.0], [72.2, 1387.0], [72.3, 1389.0], [72.4, 1392.0], [72.5, 1395.0], [72.6, 1397.0], [72.7, 1400.0], [72.8, 1403.0], [72.9, 1405.0], [73.0, 1407.0], [73.1, 1410.0], [73.2, 1412.0], [73.3, 1415.0], [73.4, 1418.0], [73.5, 1420.0], [73.6, 1423.0], [73.7, 1426.0], [73.8, 1428.0], [73.9, 1430.0], [74.0, 1433.0], [74.1, 1435.0], [74.2, 1438.0], [74.3, 1440.0], [74.4, 1443.0], [74.5, 1445.0], [74.6, 1448.0], [74.7, 1451.0], [74.8, 1453.0], [74.9, 1456.0], [75.0, 1459.0], [75.1, 1461.0], [75.2, 1464.0], [75.3, 1467.0], [75.4, 1470.0], [75.5, 1472.0], [75.6, 1475.0], [75.7, 1477.0], [75.8, 1480.0], [75.9, 1483.0], [76.0, 1486.0], [76.1, 1489.0], [76.2, 1492.0], [76.3, 1495.0], [76.4, 1497.0], [76.5, 1500.0], [76.6, 1503.0], [76.7, 1506.0], [76.8, 1509.0], [76.9, 1511.0], [77.0, 1514.0], [77.1, 1517.0], [77.2, 1520.0], [77.3, 1522.0], [77.4, 1526.0], [77.5, 1529.0], [77.6, 1531.0], [77.7, 1534.0], [77.8, 1537.0], [77.9, 1540.0], [78.0, 1542.0], [78.1, 1545.0], [78.2, 1548.0], [78.3, 1551.0], [78.4, 1553.0], [78.5, 1557.0], [78.6, 1560.0], [78.7, 1563.0], [78.8, 1566.0], [78.9, 1569.0], [79.0, 1572.0], [79.1, 1575.0], [79.2, 1578.0], [79.3, 1581.0], [79.4, 1584.0], [79.5, 1587.0], [79.6, 1590.0], [79.7, 1593.0], [79.8, 1596.0], [79.9, 1599.0], [80.0, 1601.0], [80.1, 1605.0], [80.2, 1607.0], [80.3, 1611.0], [80.4, 1614.0], [80.5, 1617.0], [80.6, 1621.0], [80.7, 1624.0], [80.8, 1627.0], [80.9, 1630.0], [81.0, 1633.0], [81.1, 1636.0], [81.2, 1639.0], [81.3, 1642.0], [81.4, 1646.0], [81.5, 1649.0], [81.6, 1652.0], [81.7, 1655.0], [81.8, 1658.0], [81.9, 1661.0], [82.0, 1665.0], [82.1, 1668.0], [82.2, 1671.0], [82.3, 1674.0], [82.4, 1678.0], [82.5, 1681.0], [82.6, 1684.0], [82.7, 1688.0], [82.8, 1691.0], [82.9, 1694.0], [83.0, 1698.0], [83.1, 1701.0], [83.2, 1705.0], [83.3, 1709.0], [83.4, 1712.0], [83.5, 1715.0], [83.6, 1719.0], [83.7, 1723.0], [83.8, 1727.0], [83.9, 1730.0], [84.0, 1734.0], [84.1, 1737.0], [84.2, 1740.0], [84.3, 1743.0], [84.4, 1747.0], [84.5, 1750.0], [84.6, 1755.0], [84.7, 1758.0], [84.8, 1763.0], [84.9, 1766.0], [85.0, 1769.0], [85.1, 1773.0], [85.2, 1777.0], [85.3, 1781.0], [85.4, 1784.0], [85.5, 1788.0], [85.6, 1791.0], [85.7, 1796.0], [85.8, 1799.0], [85.9, 1803.0], [86.0, 1807.0], [86.1, 1811.0], [86.2, 1815.0], [86.3, 1819.0], [86.4, 1822.0], [86.5, 1826.0], [86.6, 1831.0], [86.7, 1835.0], [86.8, 1840.0], [86.9, 1843.0], [87.0, 1847.0], [87.1, 1852.0], [87.2, 1857.0], [87.3, 1861.0], [87.4, 1865.0], [87.5, 1869.0], [87.6, 1873.0], [87.7, 1878.0], [87.8, 1881.0], [87.9, 1885.0], [88.0, 1890.0], [88.1, 1893.0], [88.2, 1898.0], [88.3, 1902.0], [88.4, 1907.0], [88.5, 1912.0], [88.6, 1918.0], [88.7, 1923.0], [88.8, 1928.0], [88.9, 1933.0], [89.0, 1938.0], [89.1, 1943.0], [89.2, 1948.0], [89.3, 1953.0], [89.4, 1958.0], [89.5, 1962.0], [89.6, 1968.0], [89.7, 1973.0], [89.8, 1978.0], [89.9, 1983.0], [90.0, 1988.0], [90.1, 1994.0], [90.2, 1998.0], [90.3, 2004.0], [90.4, 2008.0], [90.5, 2014.0], [90.6, 2019.0], [90.7, 2025.0], [90.8, 2031.0], [90.9, 2037.0], [91.0, 2043.0], [91.1, 2049.0], [91.2, 2055.0], [91.3, 2061.0], [91.4, 2066.0], [91.5, 2072.0], [91.6, 2079.0], [91.7, 2085.0], [91.8, 2091.0], [91.9, 2098.0], [92.0, 2103.0], [92.1, 2109.0], [92.2, 2114.0], [92.3, 2120.0], [92.4, 2127.0], [92.5, 2133.0], [92.6, 2140.0], [92.7, 2147.0], [92.8, 2155.0], [92.9, 2161.0], [93.0, 2168.0], [93.1, 2176.0], [93.2, 2184.0], [93.3, 2192.0], [93.4, 2197.0], [93.5, 2205.0], [93.6, 2212.0], [93.7, 2221.0], [93.8, 2228.0], [93.9, 2236.0], [94.0, 2244.0], [94.1, 2252.0], [94.2, 2261.0], [94.3, 2269.0], [94.4, 2278.0], [94.5, 2288.0], [94.6, 2296.0], [94.7, 2305.0], [94.8, 2314.0], [94.9, 2323.0], [95.0, 2331.0], [95.1, 2339.0], [95.2, 2349.0], [95.3, 2359.0], [95.4, 2369.0], [95.5, 2378.0], [95.6, 2389.0], [95.7, 2399.0], [95.8, 2408.0], [95.9, 2420.0], [96.0, 2432.0], [96.1, 2443.0], [96.2, 2455.0], [96.3, 2469.0], [96.4, 2481.0], [96.5, 2492.0], [96.6, 2506.0], [96.7, 2520.0], [96.8, 2535.0], [96.9, 2548.0], [97.0, 2562.0], [97.1, 2578.0], [97.2, 2592.0], [97.3, 2609.0], [97.4, 2627.0], [97.5, 2644.0], [97.6, 2662.0], [97.7, 2683.0], [97.8, 2707.0], [97.9, 2728.0], [98.0, 2751.0], [98.1, 2772.0], [98.2, 2795.0], [98.3, 2817.0], [98.4, 2845.0], [98.5, 2873.0], [98.6, 2901.0], [98.7, 2930.0], [98.8, 2968.0], [98.9, 3002.0], [99.0, 3034.0], [99.1, 3071.0], [99.2, 3121.0], [99.3, 3174.0], [99.4, 3241.0], [99.5, 3310.0], [99.6, 3402.0], [99.7, 3516.0], [99.8, 3649.0], [99.9, 3864.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 25361.0, "series": [{"data": [[0.0, 2717.0], [600.0, 2360.0], [700.0, 2914.0], [800.0, 3553.0], [900.0, 4041.0], [1000.0, 4634.0], [1100.0, 4848.0], [1200.0, 4881.0], [1300.0, 4684.0], [1400.0, 4418.0], [1500.0, 4065.0], [1600.0, 3662.0], [1700.0, 3217.0], [1800.0, 2848.0], [1900.0, 2327.0], [2000.0, 2011.0], [2100.0, 1761.0], [2300.0, 1254.0], [2200.0, 1409.0], [2400.0, 995.0], [2500.0, 805.0], [2600.0, 613.0], [2800.0, 434.0], [2700.0, 535.0], [2900.0, 348.0], [3000.0, 313.0], [3100.0, 224.0], [3300.0, 134.0], [3200.0, 157.0], [3400.0, 107.0], [3500.0, 90.0], [3600.0, 74.0], [3700.0, 54.0], [3800.0, 43.0], [3900.0, 34.0], [4000.0, 22.0], [4100.0, 11.0], [4300.0, 8.0], [4200.0, 7.0], [4400.0, 8.0], [4600.0, 3.0], [4500.0, 6.0], [4800.0, 2.0], [4700.0, 1.0], [5600.0, 1.0], [5700.0, 1.0], [100.0, 25361.0], [200.0, 13881.0], [300.0, 5835.0], [400.0, 3197.0], [500.0, 2292.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 27539.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 51016.0, "series": [{"data": [[0.0, 51016.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 38645.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 27539.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.72857786E12, "maxY": 16.0, "series": [{"data": [[1.7285853E12, 12.0], [1.72858692E12, 12.0], [1.72858752E12, 12.0], [1.7285847E12, 11.217391304347826], [1.72858734E12, 12.0], [1.72858632E12, 12.0], [1.72858572E12, 12.0], [1.72858512E12, 12.0], [1.72858614E12, 12.0], [1.72858674E12, 12.0], [1.72858554E12, 12.0], [1.72858716E12, 12.0], [1.72858494E12, 12.0], [1.72858596E12, 12.0], [1.72858758E12, 8.978441127694861], [1.72858656E12, 12.0], [1.72858536E12, 12.0], [1.72858638E12, 12.0], [1.72858698E12, 12.0], [1.72858476E12, 12.0], [1.72858578E12, 12.0], [1.7285874E12, 12.0], [1.72858518E12, 12.0], [1.7285862E12, 12.0], [1.7285868E12, 12.0], [1.7285856E12, 12.0], [1.72858662E12, 12.0], [1.728585E12, 12.0], [1.72858722E12, 12.0], [1.72858764E12, 2.67080745341615], [1.72858542E12, 12.0], [1.72858602E12, 12.0], [1.72858482E12, 12.0], [1.72858644E12, 12.0], [1.72858704E12, 12.0], [1.72858584E12, 12.0], [1.72858686E12, 12.0], [1.72858524E12, 12.0], [1.72858746E12, 12.0], [1.72858566E12, 12.0], [1.72858626E12, 12.0], [1.72858506E12, 12.0], [1.72858668E12, 12.0], [1.72858728E12, 12.0], [1.7285871E12, 12.0], [1.72858608E12, 12.0], [1.72858548E12, 12.0], [1.7285877E12, 1.0], [1.72858488E12, 12.0], [1.7285859E12, 12.0], [1.7285865E12, 12.0]], "isOverall": false, "label": "12", "isController": false}, {"data": [[1.72857804E12, 2.0], [1.72857822E12, 2.0], [1.72857816E12, 2.0], [1.72857786E12, 2.0], [1.72857828E12, 1.7812500000000002], [1.72857798E12, 2.0], [1.72857792E12, 2.0], [1.7285781E12, 2.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.72857966E12, 4.0], [1.72857864E12, 4.0], [1.72858026E12, 4.0], [1.72857924E12, 4.0], [1.72858086E12, 4.0], [1.72857984E12, 4.0], [1.72857948E12, 4.0], [1.7285811E12, 4.0], [1.72858008E12, 4.0], [1.72857846E12, 4.0], [1.72858068E12, 4.0], [1.72857906E12, 4.0], [1.72858128E12, 3.8544891640866883], [1.7285787E12, 4.0], [1.72858092E12, 4.0], [1.7285793E12, 4.0], [1.72857828E12, 4.0], [1.7285799E12, 4.0], [1.72857888E12, 4.0], [1.7285805E12, 4.0], [1.72857852E12, 4.0], [1.72858014E12, 4.0], [1.72857912E12, 4.0], [1.72858074E12, 4.0], [1.72858134E12, 2.7114427860696515], [1.72857972E12, 4.0], [1.72858032E12, 4.0], [1.72857996E12, 4.0], [1.72857834E12, 4.0], [1.72858056E12, 4.0], [1.72857894E12, 4.0], [1.72858116E12, 4.0], [1.72857954E12, 4.0], [1.72857918E12, 4.0], [1.7285814E12, 1.634408602150538], [1.72857978E12, 4.0], [1.72857876E12, 4.0], [1.72858038E12, 4.0], [1.72857936E12, 4.0], [1.72858098E12, 4.0], [1.728579E12, 4.0], [1.72858062E12, 4.0], [1.7285796E12, 4.0], [1.72858122E12, 4.0], [1.7285802E12, 4.0], [1.7285808E12, 4.0], [1.72857858E12, 4.0], [1.72858044E12, 4.0], [1.72857882E12, 4.0], [1.72858104E12, 4.0], [1.72857942E12, 4.0], [1.7285784E12, 4.0], [1.72858002E12, 4.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.72858854E12, 16.0], [1.72858884E12, 16.0], [1.72858914E12, 16.0], [1.72858944E12, 16.0], [1.72858926E12, 16.0], [1.72858956E12, 16.0], [1.72858986E12, 3.3414634146341475], [1.72858794E12, 16.0], [1.72858824E12, 16.0], [1.72858806E12, 16.0], [1.72858836E12, 16.0], [1.72858866E12, 16.0], [1.72858896E12, 16.0], [1.72858878E12, 16.0], [1.72858908E12, 16.0], [1.72858776E12, 16.0], [1.72858938E12, 16.0], [1.72858968E12, 16.0], [1.72858788E12, 16.0], [1.7285895E12, 16.0], [1.7285898E12, 11.505449591280653], [1.72858818E12, 16.0], [1.72858848E12, 16.0], [1.7285883E12, 16.0], [1.7285886E12, 16.0], [1.7285889E12, 16.0], [1.7285892E12, 16.0], [1.72858902E12, 16.0], [1.72858932E12, 16.0], [1.728588E12, 16.0], [1.72858962E12, 16.0], [1.7285877E12, 15.955421686746975], [1.72858974E12, 15.974248927038623], [1.72858782E12, 16.0], [1.72858812E12, 16.0], [1.72858842E12, 16.0], [1.72858872E12, 16.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.72858368E12, 8.0], [1.72858308E12, 8.0], [1.7285847E12, 3.640625], [1.72858248E12, 8.0], [1.7285841E12, 8.0], [1.72858146E12, 8.0], [1.72858188E12, 8.0], [1.7285835E12, 8.0], [1.7285829E12, 8.0], [1.7285817E12, 8.0], [1.7285823E12, 8.0], [1.72858452E12, 8.0], [1.72858392E12, 8.0], [1.72858332E12, 8.0], [1.72858272E12, 8.0], [1.72858434E12, 8.0], [1.72858212E12, 8.0], [1.72858152E12, 8.0], [1.72858374E12, 8.0], [1.72858314E12, 8.0], [1.72858254E12, 8.0], [1.72858194E12, 8.0], [1.72858416E12, 8.0], [1.72858356E12, 8.0], [1.72858296E12, 8.0], [1.72858458E12, 8.0], [1.72858236E12, 8.0], [1.72858398E12, 8.0], [1.72858158E12, 8.0], [1.72858176E12, 8.0], [1.72858338E12, 8.0], [1.72858278E12, 8.0], [1.72858218E12, 8.0], [1.7285844E12, 8.0], [1.7285838E12, 8.0], [1.7285832E12, 8.0], [1.7285814E12, 7.98717948717949], [1.7285826E12, 8.0], [1.72858422E12, 8.0], [1.728582E12, 8.0], [1.72858362E12, 8.0], [1.72858302E12, 8.0], [1.72858242E12, 8.0], [1.72858464E12, 7.1342685370741465], [1.72858182E12, 8.0], [1.72858404E12, 8.0], [1.72858344E12, 8.0], [1.72858284E12, 8.0], [1.72858446E12, 8.0], [1.72858224E12, 8.0], [1.72858386E12, 8.0], [1.72858326E12, 8.0], [1.72858164E12, 8.0], [1.72858266E12, 8.0], [1.72858206E12, 8.0], [1.72858428E12, 8.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72858986E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 733.8761061946901, "minX": 1.0, "maxY": 1073.1067599666017, "series": [{"data": [[2.0, 753.8317955997154], [8.0, 815.9907291011948], [9.0, 980.8196721311475], [10.0, 921.0387596899222], [11.0, 774.7062146892657], [3.0, 760.2734693877554], [12.0, 961.3777746359448], [13.0, 1065.2857142857142], [14.0, 1020.5961538461536], [15.0, 934.7247706422021], [1.0, 733.8761061946901], [4.0, 765.1521221985697], [16.0, 1073.1067599666017], [5.0, 754.5], [6.0, 790.4675324675325], [7.0, 813.942528735632]], "isOverall": false, "label": "getmap", "isController": false}, {"data": [[10.72029010238918, 920.9002133105857]], "isOverall": false, "label": "getmap-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.72857786E12, "maxY": 4.775766086666667E7, "series": [{"data": [[1.72857804E12, 7882530.266666667], [1.72858692E12, 3.566081138333333E7], [1.72858914E12, 4.649858688333333E7], [1.72858026E12, 1.5674592316666666E7], [1.7285847E12, 1.4888728116666667E7], [1.72858248E12, 2.8390926366666667E7], [1.72857786E12, 5810793.183333334], [1.72858008E12, 1.6194101433333334E7], [1.7285823E12, 2.83864475E7], [1.72858452E12, 3.0053375566666666E7], [1.72858674E12, 3.784549121666667E7], [1.72858896E12, 4.615388105E7], [1.72858878E12, 4.518630231666667E7], [1.72858434E12, 3.04207873E7], [1.72858212E12, 3.0029076E7], [1.72858656E12, 2.77650605E7], [1.7285799E12, 1.474843305E7], [1.72858638E12, 3.959079535E7], [1.7285886E12, 4.63891137E7], [1.72858194E12, 3.0261060466666665E7], [1.72858416E12, 3.0872904133333333E7], [1.7285862E12, 3.00399707E7], [1.72857972E12, 1.5510082266666668E7], [1.72858398E12, 3.16665496E7], [1.72858842E12, 4.494631435E7], [1.72858158E12, 2.768682295E7], [1.72858176E12, 3.0784877866666667E7], [1.7285838E12, 3.1049438533333335E7], [1.72857954E12, 1.698919605E7], [1.72858602E12, 2.7416336383333333E7], [1.72858824E12, 4.584351185E7], [1.72858806E12, 4.531261675E7], [1.72857918E12, 1.6595628283333333E7], [1.7285814E12, 8241269.983333333], [1.72858362E12, 2.992372945E7], [1.72858584E12, 4.0518634083333336E7], [1.72857936E12, 1.633315435E7], [1.728579E12, 1.5885867283333333E7], [1.72858788E12, 4.405712853333333E7], [1.72858122E12, 1.457069985E7], [1.72858566E12, 3.983907161666667E7], [1.72858344E12, 2.9044641883333333E7], [1.72857882E12, 1.6412722283333333E7], [1.72858104E12, 1.60234259E7], [1.72858326E12, 2.968095615E7], [1.72858548E12, 3.96615724E7], [1.7285877E12, 3.918892521666667E7], [1.72858974E12, 4.635073446666667E7], [1.7285853E12, 4.246002311666667E7], [1.72857864E12, 1.5707657733333332E7], [1.72858308E12, 3.001554515E7], [1.72858752E12, 3.61430522E7], [1.72858086E12, 1.6791502183333334E7], [1.72858734E12, 3.99464696E7], [1.72858956E12, 4.775766086666667E7], [1.7285829E12, 3.0925976916666668E7], [1.72858512E12, 4.092627043333333E7], [1.72858716E12, 4.017882281666667E7], [1.72857846E12, 1.6258372966666667E7], [1.72858068E12, 1.6850212216666665E7], [1.72858494E12, 4.291897205E7], [1.72858938E12, 4.6096316333333336E7], [1.72858272E12, 2.9205037833333332E7], [1.72857828E12, 7974597.933333334], [1.7285805E12, 1.6081838666666666E7], [1.72858698E12, 3.996281825E7], [1.7285892E12, 4.640853625E7], [1.72858254E12, 2.9862041883333333E7], [1.72858476E12, 4.066425463333333E7], [1.72858014E12, 1.638607025E7], [1.72858902E12, 4.5775249166666664E7], [1.72858458E12, 3.15388178E7], [1.72858236E12, 2.919763735E7], [1.7285868E12, 3.859168845E7], [1.7285781E12, 8397728.85], [1.72858032E12, 1.6279226483333332E7], [1.72857996E12, 1.558058595E7], [1.72858662E12, 3.1592304516666666E7], [1.72858884E12, 4.546350685E7], [1.72858218E12, 2.747833295E7], [1.7285844E12, 3.0778013816666666E7], [1.72857792E12, 7881325.183333334], [1.72858644E12, 3.9423666266666666E7], [1.72857978E12, 1.6896334333333332E7], [1.72858422E12, 2.9029934866666667E7], [1.72858866E12, 4.644760431666667E7], [1.728582E12, 3.0156524216666665E7], [1.7285796E12, 1.6536457616666667E7], [1.72858182E12, 2.9504780816666666E7], [1.72858404E12, 3.126087675E7], [1.72858626E12, 2.759059435E7], [1.72858848E12, 4.692622788333333E7], [1.7285883E12, 4.520085315E7], [1.72858386E12, 2.896148855E7], [1.72858608E12, 3.044380605E7], [1.72857942E12, 1.6910536383333333E7], [1.72858164E12, 2.9357484633333333E7], [1.72858812E12, 4.46203169E7], [1.7285859E12, 3.83703138E7], [1.72858368E12, 2.97973904E7], [1.72857924E12, 1.56697387E7], [1.72858146E12, 3.0772918433333334E7], [1.7285835E12, 3.036941465E7], [1.72858572E12, 4.073325005E7], [1.72858794E12, 4.40038569E7], [1.7285811E12, 1.6261192583333334E7], [1.72858554E12, 3.997449131666667E7], [1.72858332E12, 2.9406750783333335E7], [1.72858776E12, 4.316891393333333E7], [1.72857906E12, 1.60732729E7], [1.72858128E12, 1.41007239E7], [1.7285787E12, 1.5853009816666666E7], [1.72858092E12, 1.491403975E7], [1.72858758E12, 3.1648972866666667E7], [1.7285898E12, 3.489656981666667E7], [1.72858314E12, 2.974243505E7], [1.72858536E12, 4.157512078333333E7], [1.72857888E12, 1.7141999866666667E7], [1.7285874E12, 3.9324295916666664E7], [1.72857852E12, 1.632130115E7], [1.72858074E12, 1.6179400733333332E7], [1.72858518E12, 4.23298035E7], [1.72858962E12, 4.555006086666667E7], [1.72858296E12, 2.9153538266666666E7], [1.72858278E12, 2.8659921366666667E7], [1.728585E12, 4.176147578333333E7], [1.72858722E12, 4.0710273E7], [1.72858944E12, 4.602228706666667E7], [1.72857834E12, 1.5555914383333333E7], [1.72858056E12, 1.5606794416666666E7], [1.72858926E12, 4.547512131666667E7], [1.72858482E12, 4.232084678333333E7], [1.72858704E12, 4.1051344E7], [1.72857816E12, 8489373.4], [1.7285826E12, 3.040406745E7], [1.72858038E12, 1.5248935916666666E7], [1.72858908E12, 4.578071035E7], [1.72858686E12, 3.50994604E7], [1.72858242E12, 2.99230705E7], [1.72858464E12, 2.6022435683333334E7], [1.72858668E12, 2.78892899E7], [1.72857798E12, 8217220.116666666], [1.7285802E12, 1.6938385683333334E7], [1.72858446E12, 3.0757382166666668E7], [1.7285889E12, 4.635354343333333E7], [1.72858224E12, 2.9099743783333335E7], [1.72858002E12, 1.5712267E7], [1.72858206E12, 3.0335465666666668E7], [1.72858428E12, 2.9412275633333333E7], [1.7285865E12, 3.600575636666667E7], [1.72858872E12, 4.55229122E7], [1.72857966E12, 1.5853947516666668E7], [1.72858854E12, 4.603681218333333E7], [1.7285841E12, 3.036903785E7], [1.72858188E12, 2.8871192116666667E7], [1.72858632E12, 2.8993448316666666E7], [1.72857984E12, 1.53139598E7], [1.72857948E12, 1.4700495666666666E7], [1.72858614E12, 3.032969025E7], [1.72858836E12, 4.5296888733333334E7], [1.7285817E12, 3.1073329516666666E7], [1.72858392E12, 2.9488121566666666E7], [1.72858596E12, 4.055550988333333E7], [1.72858818E12, 4.698667436666667E7], [1.7285793E12, 1.627419465E7], [1.72858152E12, 2.972605665E7], [1.72858374E12, 2.9155509433333334E7], [1.72858578E12, 4.22429137E7], [1.72857912E12, 1.6675984516666668E7], [1.72858356E12, 3.097396435E7], [1.728588E12, 4.461082678333333E7], [1.72858134E12, 1.1013259383333333E7], [1.72858782E12, 4.396927213333333E7], [1.72858338E12, 2.993456595E7], [1.7285856E12, 4.111034375E7], [1.72858764E12, 8119283.316666666], [1.72857894E12, 1.5889708833333334E7], [1.72858116E12, 1.6215051333333334E7], [1.72858542E12, 4.1236872516666666E7], [1.72858986E12, 4732275.533333333], [1.7285832E12, 2.9581391783333335E7], [1.72857876E12, 1.6632938916666666E7], [1.72858098E12, 1.519071495E7], [1.72858302E12, 2.8594213983333334E7], [1.72858524E12, 4.185204806666667E7], [1.72858746E12, 3.900154715E7], [1.72858968E12, 4.502927668333333E7], [1.7285895E12, 4.583801563333333E7], [1.72858062E12, 1.6745367933333334E7], [1.72858506E12, 4.248826038333333E7], [1.72858284E12, 2.8679100666666668E7], [1.72858728E12, 3.856287918333333E7], [1.7285808E12, 1.62445034E7], [1.72857858E12, 1.6169875716666667E7], [1.7285871E12, 4.1859168833333336E7], [1.72858932E12, 4.265031138333333E7], [1.72857822E12, 7730672.783333333], [1.72858044E12, 1.6202423416666666E7], [1.72858488E12, 4.0169807083333336E7], [1.72858266E12, 2.9585019E7], [1.7285784E12, 1.52286811E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72857804E12, 0.0], [1.72858692E12, 0.0], [1.72858914E12, 0.0], [1.72858026E12, 0.0], [1.7285847E12, 0.0], [1.72858248E12, 0.0], [1.72857786E12, 0.0], [1.72858008E12, 0.0], [1.7285823E12, 0.0], [1.72858452E12, 0.0], [1.72858674E12, 0.0], [1.72858896E12, 0.0], [1.72858878E12, 0.0], [1.72858434E12, 0.0], [1.72858212E12, 0.0], [1.72858656E12, 0.0], [1.7285799E12, 0.0], [1.72858638E12, 0.0], [1.7285886E12, 0.0], [1.72858194E12, 0.0], [1.72858416E12, 0.0], [1.7285862E12, 0.0], [1.72857972E12, 0.0], [1.72858398E12, 0.0], [1.72858842E12, 0.0], [1.72858158E12, 0.0], [1.72858176E12, 0.0], [1.7285838E12, 0.0], [1.72857954E12, 0.0], [1.72858602E12, 0.0], [1.72858824E12, 0.0], [1.72858806E12, 0.0], [1.72857918E12, 0.0], [1.7285814E12, 0.0], [1.72858362E12, 0.0], [1.72858584E12, 0.0], [1.72857936E12, 0.0], [1.728579E12, 0.0], [1.72858788E12, 0.0], [1.72858122E12, 0.0], [1.72858566E12, 0.0], [1.72858344E12, 0.0], [1.72857882E12, 0.0], [1.72858104E12, 0.0], [1.72858326E12, 0.0], [1.72858548E12, 0.0], [1.7285877E12, 0.0], [1.72858974E12, 0.0], [1.7285853E12, 0.0], [1.72857864E12, 0.0], [1.72858308E12, 0.0], [1.72858752E12, 0.0], [1.72858086E12, 0.0], [1.72858734E12, 0.0], [1.72858956E12, 0.0], [1.7285829E12, 0.0], [1.72858512E12, 0.0], [1.72858716E12, 0.0], [1.72857846E12, 0.0], [1.72858068E12, 0.0], [1.72858494E12, 0.0], [1.72858938E12, 0.0], [1.72858272E12, 0.0], [1.72857828E12, 0.0], [1.7285805E12, 0.0], [1.72858698E12, 0.0], [1.7285892E12, 0.0], [1.72858254E12, 0.0], [1.72858476E12, 0.0], [1.72858014E12, 0.0], [1.72858902E12, 0.0], [1.72858458E12, 0.0], [1.72858236E12, 0.0], [1.7285868E12, 0.0], [1.7285781E12, 0.0], [1.72858032E12, 0.0], [1.72857996E12, 0.0], [1.72858662E12, 0.0], [1.72858884E12, 0.0], [1.72858218E12, 0.0], [1.7285844E12, 0.0], [1.72857792E12, 0.0], [1.72858644E12, 0.0], [1.72857978E12, 0.0], [1.72858422E12, 0.0], [1.72858866E12, 0.0], [1.728582E12, 0.0], [1.7285796E12, 0.0], [1.72858182E12, 0.0], [1.72858404E12, 0.0], [1.72858626E12, 0.0], [1.72858848E12, 0.0], [1.7285883E12, 0.0], [1.72858386E12, 0.0], [1.72858608E12, 0.0], [1.72857942E12, 0.0], [1.72858164E12, 0.0], [1.72858812E12, 0.0], [1.7285859E12, 0.0], [1.72858368E12, 0.0], [1.72857924E12, 0.0], [1.72858146E12, 0.0], [1.7285835E12, 0.0], [1.72858572E12, 0.0], [1.72858794E12, 0.0], [1.7285811E12, 0.0], [1.72858554E12, 0.0], [1.72858332E12, 0.0], [1.72858776E12, 0.0], [1.72857906E12, 0.0], [1.72858128E12, 0.0], [1.7285787E12, 0.0], [1.72858092E12, 0.0], [1.72858758E12, 0.0], [1.7285898E12, 0.0], [1.72858314E12, 0.0], [1.72858536E12, 0.0], [1.72857888E12, 0.0], [1.7285874E12, 0.0], [1.72857852E12, 0.0], [1.72858074E12, 0.0], [1.72858518E12, 0.0], [1.72858962E12, 0.0], [1.72858296E12, 0.0], [1.72858278E12, 0.0], [1.728585E12, 0.0], [1.72858722E12, 0.0], [1.72858944E12, 0.0], [1.72857834E12, 0.0], [1.72858056E12, 0.0], [1.72858926E12, 0.0], [1.72858482E12, 0.0], [1.72858704E12, 0.0], [1.72857816E12, 0.0], [1.7285826E12, 0.0], [1.72858038E12, 0.0], [1.72858908E12, 0.0], [1.72858686E12, 0.0], [1.72858242E12, 0.0], [1.72858464E12, 0.0], [1.72858668E12, 0.0], [1.72857798E12, 0.0], [1.7285802E12, 0.0], [1.72858446E12, 0.0], [1.7285889E12, 0.0], [1.72858224E12, 0.0], [1.72858002E12, 0.0], [1.72858206E12, 0.0], [1.72858428E12, 0.0], [1.7285865E12, 0.0], [1.72858872E12, 0.0], [1.72857966E12, 0.0], [1.72858854E12, 0.0], [1.7285841E12, 0.0], [1.72858188E12, 0.0], [1.72858632E12, 0.0], [1.72857984E12, 0.0], [1.72857948E12, 0.0], [1.72858614E12, 0.0], [1.72858836E12, 0.0], [1.7285817E12, 0.0], [1.72858392E12, 0.0], [1.72858596E12, 0.0], [1.72858818E12, 0.0], [1.7285793E12, 0.0], [1.72858152E12, 0.0], [1.72858374E12, 0.0], [1.72858578E12, 0.0], [1.72857912E12, 0.0], [1.72858356E12, 0.0], [1.728588E12, 0.0], [1.72858134E12, 0.0], [1.72858782E12, 0.0], [1.72858338E12, 0.0], [1.7285856E12, 0.0], [1.72858764E12, 0.0], [1.72857894E12, 0.0], [1.72858116E12, 0.0], [1.72858542E12, 0.0], [1.72858986E12, 0.0], [1.7285832E12, 0.0], [1.72857876E12, 0.0], [1.72858098E12, 0.0], [1.72858302E12, 0.0], [1.72858524E12, 0.0], [1.72858746E12, 0.0], [1.72858968E12, 0.0], [1.7285895E12, 0.0], [1.72858062E12, 0.0], [1.72858506E12, 0.0], [1.72858284E12, 0.0], [1.72858728E12, 0.0], [1.7285808E12, 0.0], [1.72857858E12, 0.0], [1.7285871E12, 0.0], [1.72858932E12, 0.0], [1.72857822E12, 0.0], [1.72858044E12, 0.0], [1.72858488E12, 0.0], [1.72858266E12, 0.0], [1.7285784E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72858986E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 687.778097982709, "minX": 1.72857786E12, "maxY": 1357.6805293005673, "series": [{"data": [[1.72857804E12, 746.2641509433965], [1.72858692E12, 1044.662337662339], [1.72858914E12, 1060.723451327434], [1.72858026E12, 742.2615384615384], [1.7285847E12, 746.4635761589403], [1.72858248E12, 856.6630824372764], [1.72857786E12, 862.5652173913045], [1.72858008E12, 763.6019108280256], [1.7285823E12, 801.3862876254178], [1.72858452E12, 826.8529411764715], [1.72858674E12, 1003.468055555555], [1.72858896E12, 1039.498913043478], [1.72858878E12, 1022.2414529914521], [1.72858434E12, 778.2022653721681], [1.72858212E12, 884.4880733944954], [1.72858656E12, 1298.9398907103816], [1.7285799E12, 717.1987951807233], [1.72858638E12, 926.8503225806453], [1.7285886E12, 1056.558370044053], [1.72858194E12, 848.3072824156313], [1.72858416E12, 813.9439728353132], [1.7285862E12, 1170.4975609756095], [1.72857972E12, 764.460063897764], [1.72858398E12, 857.5963963963972], [1.72858842E12, 1060.6611111111117], [1.72858158E12, 796.9416666666667], [1.72858176E12, 819.6905982905977], [1.7285838E12, 855.9516994633282], [1.72857954E12, 852.5689045936398], [1.72858602E12, 1187.0016501650148], [1.72858824E12, 1114.5144508670512], [1.72858806E12, 1054.083516483516], [1.72857918E12, 822.938144329897], [1.7285814E12, 760.4912280701755], [1.72858362E12, 791.0427631578949], [1.72858584E12, 981.753052917232], [1.72857936E12, 742.5046153846155], [1.728579E12, 790.6327868852455], [1.72858788E12, 1159.4866504854363], [1.72858122E12, 690.391304347826], [1.72858566E12, 886.8123456790121], [1.72858344E12, 810.1155778894479], [1.72857882E12, 767.5819935691325], [1.72858104E12, 817.8581081081079], [1.72858326E12, 825.8972602739724], [1.72858548E12, 851.0955188679243], [1.7285877E12, 979.3269916765746], [1.72858974E12, 1035.939914163094], [1.7285853E12, 873.9032648125757], [1.72857864E12, 745.4361370716517], [1.72858308E12, 858.2558139534882], [1.72858752E12, 1000.8885793871866], [1.72858086E12, 764.2126984126988], [1.72858734E12, 974.1140939597316], [1.72858956E12, 1025.0286928799146], [1.7285829E12, 856.8497316636857], [1.72858512E12, 911.0151898734175], [1.72858716E12, 899.1163954943678], [1.72857846E12, 753.4093749999998], [1.72858068E12, 778.4136807817584], [1.72858494E12, 897.8094059405927], [1.72858938E12, 1090.254256526674], [1.72858272E12, 819.9590443686006], [1.72857828E12, 691.4685714285708], [1.7285805E12, 795.3300330033002], [1.72858698E12, 955.4490066225168], [1.7285892E12, 1112.1949250288342], [1.72858254E12, 840.2429577464793], [1.72858476E12, 860.0887290167859], [1.72858014E12, 762.8566878980894], [1.72858902E12, 1145.8259833134682], [1.72858458E12, 840.5200698080283], [1.72858236E12, 861.4318996415764], [1.7285868E12, 868.8423586040917], [1.7285781E12, 702.6802325581393], [1.72858032E12, 763.8857142857145], [1.72857996E12, 771.0926517571886], [1.72858662E12, 1200.9736842105265], [1.72858884E12, 1069.9609810479374], [1.72858218E12, 785.8431372549021], [1.7285844E12, 832.2383419689128], [1.72857792E12, 702.1929824561406], [1.72858644E12, 944.5072083879418], [1.72857978E12, 731.3597560975609], [1.72858422E12, 812.8189509306263], [1.72858866E12, 1015.7302423603792], [1.728582E12, 808.5611390284754], [1.7285796E12, 774.4433656957927], [1.72858182E12, 795.3598673300165], [1.72858404E12, 806.9849498327759], [1.72858626E12, 1201.6677796327212], [1.72858848E12, 1063.7749445676275], [1.7285883E12, 1063.7160356347442], [1.72858386E12, 747.9265625], [1.72858608E12, 1150.979133226324], [1.72857942E12, 781.3594771241833], [1.72858164E12, 844.6567425569174], [1.72858812E12, 1102.7060849598165], [1.7285859E12, 922.6426735218506], [1.72858368E12, 801.3979933110372], [1.72857924E12, 818.2559726962463], [1.72858146E12, 863.3093525179852], [1.7285835E12, 806.3881355932197], [1.72858572E12, 892.6183395291199], [1.72858794E12, 1037.7900968783624], [1.7285811E12, 743.498452012384], [1.72858554E12, 910.5800756620428], [1.72858332E12, 751.3905511811031], [1.72858776E12, 1098.0378874856476], [1.72857906E12, 726.0122699386498], [1.72858128E12, 722.3808049535606], [1.7285787E12, 851.6379928315414], [1.72858092E12, 724.4652567975827], [1.72858758E12, 875.0862354892205], [1.7285898E12, 881.5504087193463], [1.72858314E12, 844.8681898066784], [1.72858536E12, 916.7689345314508], [1.72857888E12, 775.7916666666667], [1.7285874E12, 942.8636959370898], [1.72857852E12, 799.910299003322], [1.72858074E12, 812.8013468013473], [1.72858518E12, 936.6381322957188], [1.72858962E12, 1152.508433734939], [1.72858296E12, 838.4800000000004], [1.72858278E12, 771.2163461538465], [1.728585E12, 879.802696078432], [1.72858722E12, 861.1375598086125], [1.72858944E12, 1057.8272827282728], [1.72857834E12, 718.4534534534532], [1.72858056E12, 687.778097982709], [1.72858926E12, 1061.644839067703], [1.72858482E12, 858.6971496437063], [1.72858704E12, 900.2325], [1.72857816E12, 782.0389610389608], [1.7285826E12, 819.9336734693875], [1.72858038E12, 721.0778443113774], [1.72858908E12, 1136.5136094674565], [1.72858686E12, 951.147802929427], [1.72858242E12, 846.0774647887328], [1.72858464E12, 811.4849699398794], [1.72858668E12, 1247.1012216404897], [1.72857798E12, 713.1607142857143], [1.7285802E12, 766.2147435897435], [1.72858446E12, 791.1151315789474], [1.7285889E12, 1147.0772889417356], [1.72858224E12, 798.3216666666657], [1.72858002E12, 779.681818181818], [1.72858206E12, 741.2071651090343], [1.72858428E12, 845.9222614840985], [1.7285865E12, 975.3586956521739], [1.72858872E12, 1044.0141458106657], [1.72857966E12, 776.2797427652736], [1.72858854E12, 1119.1034883720927], [1.7285841E12, 828.4748700173307], [1.72858188E12, 794.1386138613864], [1.72858632E12, 1281.21869488536], [1.72857984E12, 717.8742514970057], [1.72857948E12, 730.9481707317077], [1.72858614E12, 1357.6805293005673], [1.72858836E12, 1101.4771167048048], [1.7285817E12, 792.0462046204617], [1.72858392E12, 823.7401709401707], [1.72858596E12, 916.5616264294795], [1.72858818E12, 1092.1012514220697], [1.7285793E12, 767.4308681672027], [1.72858152E12, 807.890756302521], [1.72858374E12, 744.0787037037044], [1.72858578E12, 897.2973651191959], [1.72857912E12, 876.0649819494583], [1.72858356E12, 822.0765306122439], [1.728588E12, 1031.9430719656273], [1.72858134E12, 793.606965174129], [1.72858782E12, 1100.3356164383556], [1.72858338E12, 804.5680672268899], [1.7285856E12, 906.2042875157632], [1.72858764E12, 766.1055900621116], [1.72857894E12, 750.8679245283016], [1.72858116E12, 769.3630573248402], [1.72858542E12, 885.4460784313725], [1.72858986E12, 860.9024390243904], [1.7285832E12, 821.7103448275863], [1.72857876E12, 761.8871473354228], [1.72858098E12, 817.3482758620689], [1.72858302E12, 854.397504456328], [1.72858524E12, 916.30612244898], [1.72858746E12, 1004.7226890756302], [1.72858968E12, 1066.0044345898004], [1.7285895E12, 1040.8978260869571], [1.72858062E12, 761.6942675159233], [1.72858506E12, 890.7806691449808], [1.72858284E12, 787.0623973727431], [1.72858728E12, 865.1233373639666], [1.7285808E12, 813.5714285714283], [1.72857858E12, 730.4831804281345], [1.7285871E12, 891.9143920595533], [1.72858932E12, 1032.5969664138674], [1.72857822E12, 767.0064102564105], [1.72858044E12, 784.4934210526316], [1.72858488E12, 839.8489461358316], [1.72858266E12, 845.6984126984128], [1.7285784E12, 773.8961038961038]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72858986E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 482.86743515850156, "minX": 1.72857786E12, "maxY": 940.4858223062383, "series": [{"data": [[1.72857804E12, 522.6729559748429], [1.72858692E12, 722.7012987012981], [1.72858914E12, 733.3893805309726], [1.72858026E12, 525.2338461538459], [1.7285847E12, 519.5033112582782], [1.72858248E12, 603.5645161290327], [1.72857786E12, 604.8586956521737], [1.72858008E12, 535.1050955414014], [1.7285823E12, 563.3896321070237], [1.72858452E12, 582.2906574394464], [1.72858674E12, 696.6763888888892], [1.72858896E12, 720.929347826087], [1.72858878E12, 711.853632478632], [1.72858434E12, 542.0970873786413], [1.72858212E12, 618.2733944954128], [1.72858656E12, 901.1329690346085], [1.7285799E12, 510.82530120481897], [1.72858638E12, 633.0245161290318], [1.7285886E12, 729.894273127754], [1.72858194E12, 591.337477797513], [1.72858416E12, 567.6638370118843], [1.7285862E12, 816.2097560975614], [1.72857972E12, 538.9776357827471], [1.72858398E12, 594.3243243243248], [1.72858842E12, 732.501111111111], [1.72858158E12, 561.5699999999996], [1.72858176E12, 567.5572649572648], [1.7285838E12, 600.2593917710195], [1.72857954E12, 595.2579505300356], [1.72858602E12, 831.3877887788784], [1.72858824E12, 766.9121387283232], [1.72858806E12, 735.6571428571434], [1.72857918E12, 577.7594501718216], [1.7285814E12, 541.0701754385964], [1.72858362E12, 550.6101973684212], [1.72858584E12, 680.7489823609227], [1.72857936E12, 518.9323076923079], [1.728579E12, 559.3540983606555], [1.72858788E12, 798.3944174757262], [1.72858122E12, 489.35362318840595], [1.72858566E12, 619.2666666666664], [1.72858344E12, 568.3969849246231], [1.72857882E12, 533.366559485531], [1.72858104E12, 575.9493243243245], [1.72858326E12, 579.7962328767126], [1.72858548E12, 593.2830188679246], [1.7285877E12, 684.8989298454226], [1.72858974E12, 717.5107296137343], [1.7285853E12, 604.588875453446], [1.72857864E12, 528.8940809968846], [1.72858308E12, 601.2504472271914], [1.72858752E12, 691.6587743732584], [1.72858086E12, 530.2412698412697], [1.72858734E12, 669.4080536912761], [1.72858956E12, 707.191285866099], [1.7285829E12, 589.5098389982107], [1.72858512E12, 629.8797468354435], [1.72858716E12, 629.1251564455572], [1.72857846E12, 529.4937499999996], [1.72858068E12, 541.42996742671], [1.72858494E12, 624.6398514851489], [1.72858938E12, 755.3938706015898], [1.72858272E12, 572.7235494880547], [1.72857828E12, 485.01714285714286], [1.7285805E12, 559.7755775577558], [1.72858698E12, 663.3006622516552], [1.7285892E12, 769.1845444059966], [1.72858254E12, 582.7200704225354], [1.72858476E12, 597.9676258992814], [1.72858014E12, 535.2229299363051], [1.72858902E12, 794.3969010727048], [1.72858458E12, 585.4310645724261], [1.72858236E12, 602.7293906810039], [1.7285868E12, 608.389891696752], [1.7285781E12, 489.40116279069747], [1.72858032E12, 535.6920634920633], [1.72857996E12, 548.172523961662], [1.72858662E12, 826.0838815789473], [1.72858884E12, 744.9409141583052], [1.72858218E12, 554.9803921568616], [1.7285844E12, 581.7582037996543], [1.72857792E12, 492.2923976608186], [1.72858644E12, 652.7824377457405], [1.72857978E12, 503.58841463414643], [1.72858422E12, 572.4856175972927], [1.72858866E12, 702.7207586933613], [1.728582E12, 564.2964824120601], [1.7285796E12, 540.3333333333334], [1.72858182E12, 556.439469320067], [1.72858404E12, 562.714046822742], [1.72858626E12, 842.1469115191993], [1.72858848E12, 738.5121951219513], [1.7285883E12, 740.2928730512257], [1.72858386E12, 526.2374999999994], [1.72858608E12, 790.947030497592], [1.72857942E12, 542.4019607843137], [1.72858164E12, 592.7040280210166], [1.72858812E12, 766.6463834672796], [1.7285859E12, 649.6259640102817], [1.72858368E12, 560.8829431438132], [1.72857924E12, 581.6245733788398], [1.72858146E12, 600.7302158273379], [1.7285835E12, 563.7762711864407], [1.72858572E12, 620.776951672863], [1.72858794E12, 720.7298170075346], [1.7285811E12, 514.8297213622287], [1.72858554E12, 635.9092055485487], [1.72858332E12, 530.4614173228339], [1.72858776E12, 769.940298507461], [1.72857906E12, 505.6503067484661], [1.72858128E12, 511.832817337461], [1.7285787E12, 603.917562724014], [1.72858092E12, 518.8126888217522], [1.72858758E12, 605.9784411276952], [1.7285898E12, 617.0762942779289], [1.72858314E12, 591.4657293497373], [1.72858536E12, 635.7522464698341], [1.72857888E12, 538.7435897435892], [1.7285874E12, 651.6015727391874], [1.72857852E12, 563.3488372093021], [1.72858074E12, 572.4309764309763], [1.72858518E12, 648.177691309987], [1.72858962E12, 796.4759036144571], [1.72858296E12, 589.074782608696], [1.72858278E12, 540.1490384615387], [1.728585E12, 614.7450980392149], [1.72858722E12, 595.5765550239237], [1.72858944E12, 733.6853685368545], [1.72857834E12, 505.5615615615617], [1.72858056E12, 482.86743515850156], [1.72858926E12, 732.5027746947844], [1.72858482E12, 591.7173396674592], [1.72858704E12, 625.9112500000006], [1.72857816E12, 549.2337662337661], [1.7285826E12, 572.045918367347], [1.72858038E12, 513.8622754491016], [1.72858908E12, 789.3195266272188], [1.72858686E12, 664.6138482023968], [1.72858242E12, 591.3714788732402], [1.72858464E12, 566.5050100200393], [1.72858668E12, 850.0855148342056], [1.72857798E12, 496.89285714285717], [1.7285802E12, 531.3141025641024], [1.72858446E12, 557.245065789473], [1.7285889E12, 794.0285374554105], [1.72858224E12, 557.5683333333335], [1.72858002E12, 546.3701298701293], [1.72858206E12, 513.0031152647977], [1.72858428E12, 594.685512367492], [1.7285865E12, 679.1182065217397], [1.72858872E12, 724.669205658324], [1.72857966E12, 546.5627009646306], [1.72858854E12, 776.4395348837212], [1.7285841E12, 577.3674176776425], [1.72858188E12, 563.0792079207926], [1.72858632E12, 897.7583774250443], [1.72857984E12, 507.5988023952097], [1.72857948E12, 521.3414634146343], [1.72858614E12, 940.4858223062383], [1.72858836E12, 766.8043478260867], [1.7285817E12, 544.0858085808587], [1.72858392E12, 576.3743589743584], [1.72858596E12, 631.6404066073688], [1.72858818E12, 753.0364050056888], [1.7285793E12, 536.2958199356916], [1.72858152E12, 568.2369747899165], [1.72858374E12, 523.054012345679], [1.72858578E12, 617.5395232120452], [1.72857912E12, 613.1335740072202], [1.72858356E12, 572.2857142857142], [1.728588E12, 718.3039742212676], [1.72858134E12, 555.1144278606967], [1.72858782E12, 763.7431506849314], [1.72858338E12, 564.2487394957981], [1.7285856E12, 626.5447667087012], [1.72858764E12, 538.2732919254661], [1.72857894E12, 528.1194968553464], [1.72858116E12, 535.0859872611463], [1.72858542E12, 610.5465686274509], [1.72858986E12, 605.7804878048781], [1.7285832E12, 573.9068965517242], [1.72857876E12, 533.1943573667712], [1.72858098E12, 580.8172413793106], [1.72858302E12, 600.2335115864522], [1.72858524E12, 639.206632653061], [1.72858746E12, 696.380952380952], [1.72858968E12, 744.1995565410193], [1.7285895E12, 725.5706521739139], [1.72858062E12, 529.2579617834393], [1.72858506E12, 618.0867410161084], [1.72858284E12, 554.4712643678159], [1.72858728E12, 600.4256348246674], [1.7285808E12, 569.3537414965988], [1.72857858E12, 510.87767584097844], [1.7285871E12, 617.2208436724568], [1.72858932E12, 724.9079089924154], [1.72857822E12, 546.9166666666664], [1.72858044E12, 548.2532894736834], [1.72858488E12, 587.0620608899293], [1.72858266E12, 591.1587301587308], [1.7285784E12, 546.5844155844153]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72858986E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72857786E12, "maxY": 4.9E-324, "series": [{"data": [[1.72857804E12, 0.0], [1.72858692E12, 0.0], [1.72858914E12, 0.0], [1.72858026E12, 0.0], [1.7285847E12, 0.0], [1.72858248E12, 0.0], [1.72857786E12, 0.0], [1.72858008E12, 0.0], [1.7285823E12, 0.0], [1.72858452E12, 0.0], [1.72858674E12, 0.0], [1.72858896E12, 0.0], [1.72858878E12, 0.0], [1.72858434E12, 0.0], [1.72858212E12, 0.0], [1.72858656E12, 0.0], [1.7285799E12, 0.0], [1.72858638E12, 0.0], [1.7285886E12, 0.0], [1.72858194E12, 0.0], [1.72858416E12, 0.0], [1.7285862E12, 0.0], [1.72857972E12, 0.0], [1.72858398E12, 0.0], [1.72858842E12, 0.0], [1.72858158E12, 0.0], [1.72858176E12, 0.0], [1.7285838E12, 0.0], [1.72857954E12, 0.0], [1.72858602E12, 0.0], [1.72858824E12, 0.0], [1.72858806E12, 0.0], [1.72857918E12, 0.0], [1.7285814E12, 0.0], [1.72858362E12, 0.0], [1.72858584E12, 0.0], [1.72857936E12, 0.0], [1.728579E12, 0.0], [1.72858788E12, 0.0], [1.72858122E12, 0.0], [1.72858566E12, 0.0], [1.72858344E12, 0.0], [1.72857882E12, 0.0], [1.72858104E12, 0.0], [1.72858326E12, 0.0], [1.72858548E12, 0.0], [1.7285877E12, 0.0], [1.72858974E12, 0.0], [1.7285853E12, 0.0], [1.72857864E12, 0.0], [1.72858308E12, 0.0], [1.72858752E12, 0.0], [1.72858086E12, 0.0], [1.72858734E12, 0.0], [1.72858956E12, 0.0], [1.7285829E12, 0.0], [1.72858512E12, 0.0], [1.72858716E12, 0.0], [1.72857846E12, 0.0], [1.72858068E12, 0.0], [1.72858494E12, 0.0], [1.72858938E12, 0.0], [1.72858272E12, 0.0], [1.72857828E12, 0.0], [1.7285805E12, 0.0], [1.72858698E12, 0.0], [1.7285892E12, 0.0], [1.72858254E12, 0.0], [1.72858476E12, 0.0], [1.72858014E12, 0.0], [1.72858902E12, 0.0], [1.72858458E12, 0.0], [1.72858236E12, 0.0], [1.7285868E12, 0.0], [1.7285781E12, 0.0], [1.72858032E12, 0.0], [1.72857996E12, 0.0], [1.72858662E12, 0.0], [1.72858884E12, 0.0], [1.72858218E12, 0.0], [1.7285844E12, 0.0], [1.72857792E12, 0.0], [1.72858644E12, 0.0], [1.72857978E12, 0.0], [1.72858422E12, 0.0], [1.72858866E12, 0.0], [1.728582E12, 0.0], [1.7285796E12, 0.0], [1.72858182E12, 0.0], [1.72858404E12, 0.0], [1.72858626E12, 0.0], [1.72858848E12, 0.0], [1.7285883E12, 0.0], [1.72858386E12, 0.0], [1.72858608E12, 0.0], [1.72857942E12, 0.0], [1.72858164E12, 0.0], [1.72858812E12, 0.0], [1.7285859E12, 0.0], [1.72858368E12, 0.0], [1.72857924E12, 0.0], [1.72858146E12, 0.0], [1.7285835E12, 0.0], [1.72858572E12, 0.0], [1.72858794E12, 0.0], [1.7285811E12, 0.0], [1.72858554E12, 0.0], [1.72858332E12, 0.0], [1.72858776E12, 0.0], [1.72857906E12, 0.0], [1.72858128E12, 0.0], [1.7285787E12, 0.0], [1.72858092E12, 0.0], [1.72858758E12, 0.0], [1.7285898E12, 0.0], [1.72858314E12, 0.0], [1.72858536E12, 0.0], [1.72857888E12, 0.0], [1.7285874E12, 0.0], [1.72857852E12, 0.0], [1.72858074E12, 0.0], [1.72858518E12, 0.0], [1.72858962E12, 0.0], [1.72858296E12, 0.0], [1.72858278E12, 0.0], [1.728585E12, 0.0], [1.72858722E12, 0.0], [1.72858944E12, 0.0], [1.72857834E12, 0.0], [1.72858056E12, 0.0], [1.72858926E12, 0.0], [1.72858482E12, 0.0], [1.72858704E12, 0.0], [1.72857816E12, 0.0], [1.7285826E12, 0.0], [1.72858038E12, 0.0], [1.72858908E12, 0.0], [1.72858686E12, 0.0], [1.72858242E12, 0.0], [1.72858464E12, 0.0], [1.72858668E12, 0.0], [1.72857798E12, 0.0], [1.7285802E12, 0.0], [1.72858446E12, 0.0], [1.7285889E12, 0.0], [1.72858224E12, 0.0], [1.72858002E12, 0.0], [1.72858206E12, 0.0], [1.72858428E12, 0.0], [1.7285865E12, 0.0], [1.72858872E12, 0.0], [1.72857966E12, 0.0], [1.72858854E12, 0.0], [1.7285841E12, 0.0], [1.72858188E12, 0.0], [1.72858632E12, 0.0], [1.72857984E12, 0.0], [1.72857948E12, 0.0], [1.72858614E12, 0.0], [1.72858836E12, 0.0], [1.7285817E12, 0.0], [1.72858392E12, 0.0], [1.72858596E12, 0.0], [1.72858818E12, 0.0], [1.7285793E12, 0.0], [1.72858152E12, 0.0], [1.72858374E12, 0.0], [1.72858578E12, 0.0], [1.72857912E12, 0.0], [1.72858356E12, 0.0], [1.728588E12, 0.0], [1.72858134E12, 0.0], [1.72858782E12, 0.0], [1.72858338E12, 0.0], [1.7285856E12, 0.0], [1.72858764E12, 0.0], [1.72857894E12, 0.0], [1.72858116E12, 0.0], [1.72858542E12, 0.0], [1.72858986E12, 0.0], [1.7285832E12, 0.0], [1.72857876E12, 0.0], [1.72858098E12, 0.0], [1.72858302E12, 0.0], [1.72858524E12, 0.0], [1.72858746E12, 0.0], [1.72858968E12, 0.0], [1.7285895E12, 0.0], [1.72858062E12, 0.0], [1.72858506E12, 0.0], [1.72858284E12, 0.0], [1.72858728E12, 0.0], [1.7285808E12, 0.0], [1.72857858E12, 0.0], [1.7285871E12, 0.0], [1.72858932E12, 0.0], [1.72857822E12, 0.0], [1.72858044E12, 0.0], [1.72858488E12, 0.0], [1.72858266E12, 0.0], [1.7285784E12, 0.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72858986E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 35.0, "minX": 1.72857786E12, "maxY": 5768.0, "series": [{"data": [[1.72857804E12, 2848.0], [1.72858692E12, 3829.0], [1.72858914E12, 4539.0], [1.72858026E12, 2159.0], [1.7285847E12, 2826.0], [1.72858248E12, 2600.0], [1.72857786E12, 2649.0], [1.72858008E12, 3008.0], [1.7285823E12, 3278.0], [1.72858452E12, 2960.0], [1.72858674E12, 3596.0], [1.72858896E12, 4172.0], [1.72858878E12, 3766.0], [1.72858434E12, 2977.0], [1.72858212E12, 3417.0], [1.72858656E12, 4487.0], [1.7285799E12, 2810.0], [1.72858638E12, 3588.0], [1.7285886E12, 4266.0], [1.72858194E12, 3062.0], [1.72858416E12, 2642.0], [1.7285862E12, 4808.0], [1.72857972E12, 2759.0], [1.72858398E12, 2657.0], [1.72858842E12, 4541.0], [1.72858158E12, 3028.0], [1.72858176E12, 3017.0], [1.7285838E12, 2960.0], [1.72857954E12, 3079.0], [1.72858602E12, 4841.0], [1.72858824E12, 4196.0], [1.72858806E12, 4499.0], [1.72857918E12, 2225.0], [1.7285814E12, 2461.0], [1.72858362E12, 2842.0], [1.72858584E12, 3647.0], [1.72857936E12, 2331.0], [1.728579E12, 2897.0], [1.72858788E12, 4234.0], [1.72858122E12, 2667.0], [1.72858566E12, 3218.0], [1.72858344E12, 2916.0], [1.72857882E12, 2724.0], [1.72858104E12, 2556.0], [1.72858326E12, 2920.0], [1.72858548E12, 3268.0], [1.7285877E12, 3997.0], [1.72858974E12, 4027.0], [1.7285853E12, 3739.0], [1.72857864E12, 2677.0], [1.72858308E12, 3160.0], [1.72858752E12, 3522.0], [1.72858086E12, 2857.0], [1.72858734E12, 3889.0], [1.72858956E12, 4626.0], [1.7285829E12, 3061.0], [1.72858512E12, 3547.0], [1.72858716E12, 3671.0], [1.72857846E12, 2601.0], [1.72858068E12, 3196.0], [1.72858494E12, 3025.0], [1.72858938E12, 4456.0], [1.72858272E12, 3051.0], [1.72857828E12, 2637.0], [1.7285805E12, 2470.0], [1.72858698E12, 3516.0], [1.7285892E12, 4480.0], [1.72858254E12, 2975.0], [1.72858476E12, 3151.0], [1.72858014E12, 2535.0], [1.72858902E12, 4030.0], [1.72858458E12, 3277.0], [1.72858236E12, 2900.0], [1.7285868E12, 3521.0], [1.7285781E12, 2162.0], [1.72858032E12, 2605.0], [1.72857996E12, 2451.0], [1.72858662E12, 5652.0], [1.72858884E12, 3599.0], [1.72858218E12, 3124.0], [1.7285844E12, 3186.0], [1.72857792E12, 2549.0], [1.72858644E12, 4381.0], [1.72857978E12, 2915.0], [1.72858422E12, 2956.0], [1.72858866E12, 3679.0], [1.728582E12, 2811.0], [1.7285796E12, 2830.0], [1.72858182E12, 3031.0], [1.72858404E12, 3336.0], [1.72858626E12, 4767.0], [1.72858848E12, 4154.0], [1.7285883E12, 3914.0], [1.72858386E12, 2926.0], [1.72858608E12, 4184.0], [1.72857942E12, 3060.0], [1.72858164E12, 2761.0], [1.72858812E12, 5768.0], [1.7285859E12, 3724.0], [1.72858368E12, 2968.0], [1.72857924E12, 2515.0], [1.72858146E12, 2882.0], [1.7285835E12, 3055.0], [1.72858572E12, 3048.0], [1.72858794E12, 4300.0], [1.7285811E12, 2559.0], [1.72858554E12, 3642.0], [1.72858332E12, 3112.0], [1.72858776E12, 3977.0], [1.72857906E12, 2565.0], [1.72858128E12, 3353.0], [1.7285787E12, 2480.0], [1.72858092E12, 3006.0], [1.72858758E12, 3237.0], [1.7285898E12, 3937.0], [1.72858314E12, 2801.0], [1.72858536E12, 3770.0], [1.72857888E12, 2998.0], [1.7285874E12, 3341.0], [1.72857852E12, 2288.0], [1.72858074E12, 2806.0], [1.72858518E12, 3623.0], [1.72858962E12, 4236.0], [1.72858296E12, 3164.0], [1.72858278E12, 3002.0], [1.728585E12, 2934.0], [1.72858722E12, 3444.0], [1.72858944E12, 3905.0], [1.72857834E12, 2602.0], [1.72858056E12, 2496.0], [1.72858926E12, 4207.0], [1.72858482E12, 3629.0], [1.72858704E12, 3288.0], [1.72857816E12, 2393.0], [1.7285826E12, 2918.0], [1.72858038E12, 2592.0], [1.72858908E12, 3835.0], [1.72858686E12, 3959.0], [1.72858242E12, 2911.0], [1.72858464E12, 3123.0], [1.72858668E12, 4531.0], [1.72857798E12, 2365.0], [1.7285802E12, 2676.0], [1.72858446E12, 2547.0], [1.7285889E12, 3975.0], [1.72858224E12, 3245.0], [1.72858002E12, 2546.0], [1.72858206E12, 2885.0], [1.72858428E12, 3401.0], [1.7285865E12, 3541.0], [1.72858872E12, 4350.0], [1.72857966E12, 3058.0], [1.72858854E12, 4547.0], [1.7285841E12, 3081.0], [1.72858188E12, 2745.0], [1.72858632E12, 4044.0], [1.72857984E12, 2459.0], [1.72857948E12, 2768.0], [1.72858614E12, 4432.0], [1.72858836E12, 4526.0], [1.7285817E12, 2987.0], [1.72858392E12, 2986.0], [1.72858596E12, 3553.0], [1.72858818E12, 4643.0], [1.7285793E12, 2592.0], [1.72858152E12, 3194.0], [1.72858374E12, 2680.0], [1.72858578E12, 3879.0], [1.72857912E12, 3045.0], [1.72858356E12, 2873.0], [1.728588E12, 3899.0], [1.72858134E12, 2570.0], [1.72858782E12, 4385.0], [1.72858338E12, 2981.0], [1.7285856E12, 3125.0], [1.72858764E12, 2353.0], [1.72857894E12, 2397.0], [1.72858116E12, 2732.0], [1.72858542E12, 3564.0], [1.72858986E12, 2174.0], [1.7285832E12, 2976.0], [1.72857876E12, 2668.0], [1.72858098E12, 2318.0], [1.72858302E12, 2918.0], [1.72858524E12, 3050.0], [1.72858746E12, 3882.0], [1.72858968E12, 4563.0], [1.7285895E12, 3580.0], [1.72858062E12, 2304.0], [1.72858506E12, 3279.0], [1.72858284E12, 2724.0], [1.72858728E12, 3094.0], [1.7285808E12, 2378.0], [1.72857858E12, 2611.0], [1.7285871E12, 3196.0], [1.72858932E12, 3841.0], [1.72857822E12, 2178.0], [1.72858044E12, 2586.0], [1.72858488E12, 2975.0], [1.72858266E12, 3244.0], [1.7285784E12, 2498.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72857804E12, 1717.0], [1.72858692E12, 2148.6000000000004], [1.72858914E12, 2291.5], [1.72858026E12, 1564.4], [1.7285847E12, 1698.1999999999998], [1.72858248E12, 1730.3000000000002], [1.72857786E12, 1882.6000000000001], [1.72858008E12, 1693.0], [1.7285823E12, 1764.2000000000005], [1.72858452E12, 1716.1000000000004], [1.72858674E12, 2064.9], [1.72858896E12, 2230.9], [1.72858878E12, 2234.0], [1.72858434E12, 1676.5000000000005], [1.72858212E12, 1827.8000000000002], [1.72858656E12, 2738.0], [1.7285799E12, 1576.1], [1.72858638E12, 2048.3999999999996], [1.7285886E12, 2303.1], [1.72858194E12, 1716.8000000000002], [1.72858416E12, 1793.0], [1.7285862E12, 2473.0], [1.72857972E12, 1619.2000000000003], [1.72858398E12, 1853.8000000000002], [1.72858842E12, 2320.8], [1.72858158E12, 1766.0], [1.72858176E12, 1750.9999999999998], [1.7285838E12, 1767.0], [1.72857954E12, 1749.6], [1.72858602E12, 2572.000000000001], [1.72858824E12, 2452.4], [1.72858806E12, 2294.5], [1.72857918E12, 1608.2], [1.7285814E12, 1671.6000000000001], [1.72858362E12, 1669.4], [1.72858584E12, 2056.0], [1.72857936E12, 1646.0000000000002], [1.728579E12, 1676.2000000000007], [1.72858788E12, 2488.0], [1.72858122E12, 1601.4000000000005], [1.72858566E12, 1911.9], [1.72858344E12, 1762.2000000000007], [1.72857882E12, 1695.4], [1.72858104E12, 1693.2], [1.72858326E12, 1806.0], [1.72858548E12, 1873.3000000000002], [1.7285877E12, 2156.0000000000005], [1.72858974E12, 2302.7], [1.7285853E12, 1896.4], [1.72857864E12, 1648.0], [1.72858308E12, 1765.0], [1.72858752E12, 2050.4000000000005], [1.72858086E12, 1638.8000000000002], [1.72858734E12, 2060.2], [1.72858956E12, 2221.4], [1.7285829E12, 1767.0], [1.72858512E12, 1992.8999999999996], [1.72858716E12, 1894.0], [1.72857846E12, 1628.6000000000001], [1.72858068E12, 1636.8], [1.72858494E12, 1901.2], [1.72858938E12, 2369.8], [1.72858272E12, 1772.3000000000002], [1.72857828E12, 1652.8], [1.7285805E12, 1715.2000000000003], [1.72858698E12, 2001.1999999999996], [1.7285892E12, 2316.6000000000004], [1.72858254E12, 1825.1000000000004], [1.72858476E12, 1927.5], [1.72858014E12, 1557.5], [1.72858902E12, 2469.0], [1.72858458E12, 1792.2000000000003], [1.72858236E12, 1756.6000000000001], [1.7285868E12, 1837.8000000000018], [1.7285781E12, 1543.5], [1.72858032E12, 1680.000000000001], [1.72857996E12, 1669.2000000000003], [1.72858662E12, 2696.3], [1.72858884E12, 2310.8], [1.72858218E12, 1695.0000000000014], [1.7285844E12, 1820.0], [1.72857792E12, 1541.0], [1.72858644E12, 2037.4], [1.72857978E12, 1642.2], [1.72858422E12, 1699.8000000000002], [1.72858866E12, 2237.0], [1.728582E12, 1839.4], [1.7285796E12, 1587.0], [1.72858182E12, 1743.2], [1.72858404E12, 1723.9], [1.72858626E12, 2610.0], [1.72858848E12, 2168.8000000000006], [1.7285883E12, 2302.0], [1.72858386E12, 1660.8], [1.72858608E12, 2588.8], [1.72857942E12, 1622.1000000000001], [1.72858164E12, 1794.4], [1.72858812E12, 2318.000000000001], [1.7285859E12, 1938.1], [1.72858368E12, 1730.1], [1.72857924E12, 1621.8000000000002], [1.72858146E12, 1840.8000000000002], [1.7285835E12, 1711.9], [1.72858572E12, 1967.8000000000002], [1.72858794E12, 2214.0], [1.7285811E12, 1640.6], [1.72858554E12, 1995.0000000000005], [1.72858332E12, 1625.8], [1.72858776E12, 2393.2000000000007], [1.72857906E12, 1640.6000000000008], [1.72858128E12, 1550.400000000001], [1.7285787E12, 1678.0], [1.72858092E12, 1550.6000000000001], [1.72858758E12, 1946.2000000000005], [1.7285898E12, 1928.0], [1.72858314E12, 1808.0], [1.72858536E12, 1890.0], [1.72857888E12, 1610.5], [1.7285874E12, 2014.2], [1.72857852E12, 1679.0000000000002], [1.72858074E12, 1672.2], [1.72858518E12, 2028.8000000000006], [1.72858962E12, 2469.7], [1.72858296E12, 1737.4], [1.72858278E12, 1708.5], [1.728585E12, 1858.7000000000007], [1.72858722E12, 1883.9], [1.72858944E12, 2346.0], [1.72857834E12, 1632.6000000000001], [1.72858056E12, 1525.9999999999995], [1.72858926E12, 2304.6000000000004], [1.72858482E12, 1865.4000000000005], [1.72858704E12, 1840.2999999999997], [1.72857816E12, 1628.0], [1.7285826E12, 1803.4], [1.72858038E12, 1530.5], [1.72858908E12, 2356.0], [1.72858686E12, 2100.8], [1.72858242E12, 1787.5], [1.72858464E12, 1720.0], [1.72858668E12, 2775.2], [1.72857798E12, 1584.4999999999993], [1.7285802E12, 1692.7999999999997], [1.72858446E12, 1608.2000000000003], [1.7285889E12, 2325.6000000000004], [1.72858224E12, 1738.8], [1.72858002E12, 1668.7000000000003], [1.72858206E12, 1659.4], [1.72858428E12, 1742.6], [1.7285865E12, 2128.3], [1.72858872E12, 2286.0], [1.72857966E12, 1586.4], [1.72858854E12, 2353.0999999999995], [1.7285841E12, 1783.0000000000002], [1.72858188E12, 1706.6000000000008], [1.72858632E12, 2775.3999999999996], [1.72857984E12, 1589.5], [1.72857948E12, 1620.4000000000008], [1.72858614E12, 2844.0], [1.72858836E12, 2308.5], [1.7285817E12, 1726.4000000000012], [1.72858392E12, 1740.3999999999999], [1.72858596E12, 2000.4000000000003], [1.72858818E12, 2309.0], [1.7285793E12, 1692.8], [1.72858152E12, 1710.4], [1.72858374E12, 1646.1], [1.72858578E12, 1899.2], [1.72857912E12, 1793.0], [1.72858356E12, 1807.0], [1.728588E12, 2258.2000000000007], [1.72858134E12, 1721.8000000000002], [1.72858782E12, 2328.3], [1.72858338E12, 1743.6], [1.7285856E12, 1976.0], [1.72858764E12, 1574.6000000000001], [1.72857894E12, 1585.2], [1.72858116E12, 1616.5], [1.72858542E12, 1896.3000000000002], [1.72858986E12, 1818.7], [1.7285832E12, 1717.1999999999998], [1.72857876E12, 1583.0], [1.72858098E12, 1600.5000000000002], [1.72858302E12, 1834.4], [1.72858524E12, 1907.5], [1.72858746E12, 2101.0], [1.72858968E12, 2209.7], [1.7285895E12, 2249.9], [1.72858062E12, 1594.0], [1.72858506E12, 1847.6000000000001], [1.72858284E12, 1667.0], [1.72858728E12, 1883.2000000000003], [1.7285808E12, 1763.5], [1.72857858E12, 1548.7999999999997], [1.7285871E12, 1952.0], [1.72858932E12, 2258.2], [1.72857822E12, 1617.5], [1.72858044E12, 1670.0], [1.72858488E12, 1820.0], [1.72858266E12, 1790.8], [1.7285784E12, 1570.9000000000005]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72857804E12, 2533.600000000003], [1.72858692E12, 3175.9799999999927], [1.72858914E12, 3248.4500000000025], [1.72858026E12, 2047.8400000000001], [1.7285847E12, 2401.199999999998], [1.72858248E12, 2340.429999999996], [1.72857786E12, 2649.0], [1.72858008E12, 2519.5500000000006], [1.7285823E12, 2468.7999999999993], [1.72858452E12, 2532.42], [1.72858674E12, 3095.7999999999993], [1.72858896E12, 3319.0], [1.72858878E12, 3079.2799999999997], [1.72858434E12, 2650.149999999999], [1.72858212E12, 2578.7999999999975], [1.72858656E12, 3930.5], [1.7285799E12, 2155.4200000000005], [1.72858638E12, 3133.2], [1.7285886E12, 3248.489999999999], [1.72858194E12, 2523.76], [1.72858416E12, 2432.0], [1.7285862E12, 3804.920000000003], [1.72857972E12, 2293.1000000000004], [1.72858398E12, 2345.639999999998], [1.72858842E12, 3408.87], [1.72858158E12, 2561.4100000000008], [1.72858176E12, 2497.7799999999984], [1.7285838E12, 2631.1999999999985], [1.72857954E12, 2811.7600000000057], [1.72858602E12, 3964.7499999999914], [1.72858824E12, 3387.7000000000016], [1.72858806E12, 3340.049999999998], [1.72857918E12, 2143.279999999999], [1.7285814E12, 2214.0400000000004], [1.72858362E12, 2571.5299999999943], [1.72858584E12, 2825.2400000000002], [1.72857936E12, 2098.9400000000005], [1.728579E12, 2250.6], [1.72858788E12, 3608.25], [1.72858122E12, 2475.2800000000007], [1.72858566E12, 2804.0299999999997], [1.72858344E12, 2424.5999999999995], [1.72857882E12, 2159.4], [1.72858104E12, 2391.33], [1.72858326E12, 2525.6499999999987], [1.72858548E12, 2770.0299999999997], [1.7285877E12, 3254.9600000000005], [1.72858974E12, 3291.34], [1.7285853E12, 2723.6400000000003], [1.72857864E12, 2174.9399999999996], [1.72858308E12, 2556.799999999999], [1.72858752E12, 3056.969999999998], [1.72858086E12, 2483.5999999999995], [1.72858734E12, 3061.4999999999973], [1.72858956E12, 3243.8], [1.7285829E12, 2650.7999999999943], [1.72858512E12, 2959.27], [1.72858716E12, 2765.0], [1.72857846E12, 2331.5300000000043], [1.72858068E12, 2517.6400000000053], [1.72858494E12, 2559.0], [1.72858938E12, 3281.6399999999976], [1.72858272E12, 2594.9199999999996], [1.72857828E12, 2403.680000000003], [1.7285805E12, 2260.64], [1.72858698E12, 2977.3599999999974], [1.7285892E12, 3684.359999999995], [1.72858254E12, 2709.9899999999984], [1.72858476E12, 2793.0499999999997], [1.72858014E12, 2417.650000000006], [1.72858902E12, 3520.8], [1.72858458E12, 2350.0999999999985], [1.72858236E12, 2493.0199999999995], [1.7285868E12, 2768.479999999998], [1.7285781E12, 2080.970000000001], [1.72858032E12, 2438.2399999999952], [1.72857996E12, 2310.7200000000003], [1.72858662E12, 4012.1799999999967], [1.72858884E12, 3311.4599999999996], [1.72858218E12, 2582.61], [1.7285844E12, 2670.0000000000045], [1.72857792E12, 2102.600000000001], [1.72858644E12, 2896.9600000000005], [1.72857978E12, 2813.3299999999977], [1.72858422E12, 2483.9600000000005], [1.72858866E12, 3347.5], [1.728582E12, 2629.6199999999985], [1.7285796E12, 2641.4999999999945], [1.72858182E12, 2525.480000000003], [1.72858404E12, 2723.979999999999], [1.72858626E12, 3855.0], [1.72858848E12, 3184.79], [1.7285883E12, 3195.2599999999998], [1.72858386E12, 2269.13], [1.72858608E12, 3737.92], [1.72857942E12, 2505.6000000000013], [1.72858164E12, 2465.879999999999], [1.72858812E12, 3555.119999999999], [1.7285859E12, 2864.1000000000004], [1.72858368E12, 2532.0299999999997], [1.72857924E12, 2301.6600000000003], [1.72858146E12, 2649.1799999999985], [1.7285835E12, 2404.8100000000036], [1.72858572E12, 2877.999999999999], [1.72858794E12, 3609.9000000000033], [1.7285811E12, 2506.2799999999993], [1.72858554E12, 2795.8399999999992], [1.72858332E12, 2384.3999999999996], [1.72858776E12, 3315.039999999999], [1.72857906E12, 2418.84], [1.72858128E12, 2245.8399999999997], [1.7285787E12, 2432.9999999999995], [1.72858092E12, 2301.640000000001], [1.72858758E12, 2812.4400000000005], [1.7285898E12, 2981.8499999999967], [1.72858314E12, 2477.8999999999996], [1.72858536E12, 3030.200000000003], [1.72857888E12, 2569.6100000000006], [1.7285874E12, 3057.000000000001], [1.72857852E12, 2235.88], [1.72858074E12, 2580.9199999999983], [1.72858518E12, 2795.56], [1.72858962E12, 3428.6199999999944], [1.72858296E12, 2728.48], [1.72858278E12, 2380.25], [1.728585E12, 2740.4700000000003], [1.72858722E12, 2650.08], [1.72858944E12, 3256.3999999999996], [1.72857834E12, 2227.440000000001], [1.72858056E12, 2322.5599999999963], [1.72858926E12, 3520.7000000000003], [1.72858482E12, 2678.9199999999964], [1.72858704E12, 2882.980000000001], [1.72857816E12, 2375.95], [1.7285826E12, 2637.53], [1.72858038E12, 2358.349999999999], [1.72858908E12, 3184.699999999998], [1.72858686E12, 3068.640000000001], [1.72858242E12, 2604.7499999999986], [1.72858464E12, 2397.0], [1.72858668E12, 4021.8199999999997], [1.72857798E12, 2347.06], [1.7285802E12, 2441.9900000000007], [1.72858446E12, 2323.0699999999974], [1.7285889E12, 3452.900000000004], [1.72858224E12, 2573.78], [1.72858002E12, 2432.1100000000006], [1.72858206E12, 2283.090000000002], [1.72858428E12, 2600.8900000000012], [1.7285865E12, 3100.9699999999993], [1.72858872E12, 3216.3999999999996], [1.72857966E12, 2350.2799999999997], [1.72858854E12, 3265.109999999999], [1.7285841E12, 2717.2000000000003], [1.72858188E12, 2456.659999999997], [1.72858632E12, 3808.400000000001], [1.72857984E12, 2035.7499999999995], [1.72857948E12, 2237.369999999999], [1.72858614E12, 3943.2000000000053], [1.72858836E12, 3599.5], [1.7285817E12, 2600.1099999999938], [1.72858392E12, 2614.619999999999], [1.72858596E12, 2893.4800000000005], [1.72858818E12, 3573.600000000001], [1.7285793E12, 2349.8799999999997], [1.72858152E12, 2647.04], [1.72858374E12, 2472.67], [1.72858578E12, 2687.079999999999], [1.72857912E12, 2580.179999999998], [1.72858356E12, 2574.2200000000003], [1.728588E12, 3301.72], [1.72858134E12, 2402.4799999999996], [1.72858782E12, 3523.5100000000007], [1.72858338E12, 2484.04], [1.7285856E12, 2767.639999999995], [1.72858764E12, 2305.8799999999997], [1.72857894E12, 2256.81], [1.72858116E12, 2339.7000000000007], [1.72858542E12, 3090.8100000000045], [1.72858986E12, 2174.0], [1.7285832E12, 2627.19], [1.72857876E12, 2524.0000000000014], [1.72858098E12, 2139.609999999999], [1.72858302E12, 2702.999999999999], [1.72858524E12, 2591.2999999999993], [1.72858746E12, 2922.1000000000004], [1.72858968E12, 3367.760000000003], [1.7285895E12, 3312.539999999999], [1.72858062E12, 2182.800000000002], [1.72858506E12, 2764.9599999999973], [1.72858284E12, 2309.0999999999995], [1.72858728E12, 2612.0800000000004], [1.7285808E12, 2202.050000000001], [1.72857858E12, 2318.999999999995], [1.7285871E12, 2907.399999999996], [1.72858932E12, 3159.7199999999993], [1.72857822E12, 2103.900000000001], [1.72858044E12, 2431.0], [1.72858488E12, 2567.2500000000027], [1.72858266E12, 2485.520000000002], [1.7285784E12, 2202.19]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72857804E12, 1919.0], [1.72858692E12, 2608.699999999999], [1.72858914E12, 2560.25], [1.72858026E12, 1779.9999999999998], [1.7285847E12, 1899.3999999999992], [1.72858248E12, 1951.049999999999], [1.72857786E12, 2443.1], [1.72858008E12, 1889.0], [1.7285823E12, 2015.4999999999995], [1.72858452E12, 2032.349999999996], [1.72858674E12, 2451.0], [1.72858896E12, 2622.199999999999], [1.72858878E12, 2484.45], [1.72858434E12, 1922.4499999999996], [1.72858212E12, 2045.8999999999996], [1.72858656E12, 3133.0], [1.7285799E12, 1735.2499999999995], [1.72858638E12, 2402.9999999999995], [1.7285886E12, 2567.1], [1.72858194E12, 1952.5999999999995], [1.72858416E12, 2029.5], [1.7285862E12, 2930.799999999996], [1.72857972E12, 1848.6], [1.72858398E12, 2085.3999999999996], [1.72858842E12, 2708.7], [1.72858158E12, 2064.7499999999995], [1.72858176E12, 2065.1], [1.7285838E12, 2017.0], [1.72857954E12, 2007.6000000000006], [1.72858602E12, 3077.3499999999995], [1.72858824E12, 2817.199999999999], [1.72858806E12, 2579.8999999999987], [1.72857918E12, 1920.6], [1.7285814E12, 1908.0], [1.72858362E12, 1883.0499999999995], [1.72858584E12, 2350.7000000000003], [1.72857936E12, 1839.6999999999998], [1.728579E12, 1910.4999999999998], [1.72858788E12, 2901.0], [1.72858122E12, 1790.3999999999996], [1.72858566E12, 2177.549999999999], [1.72858344E12, 2060.1000000000004], [1.72857882E12, 1819.1999999999996], [1.72858104E12, 1968.35], [1.72858326E12, 2072.5], [1.72858548E12, 2144.2999999999997], [1.7285877E12, 2447.6], [1.72858974E12, 2633.7], [1.7285853E12, 2110.0], [1.72857864E12, 1849.9], [1.72858308E12, 2101.0], [1.72858752E12, 2443.1499999999996], [1.72858086E12, 1989.9999999999998], [1.72858734E12, 2367.199999999999], [1.72858956E12, 2505.8], [1.7285829E12, 2098.0], [1.72858512E12, 2237.8999999999996], [1.72858716E12, 2263.0], [1.72857846E12, 1942.9499999999998], [1.72858068E12, 1921.1999999999998], [1.72858494E12, 2166.2999999999997], [1.72858938E12, 2709.1], [1.72858272E12, 2009.6], [1.72857828E12, 1755.1999999999998], [1.7285805E12, 1934.2000000000003], [1.72858698E12, 2353.3999999999996], [1.7285892E12, 2661.6], [1.72858254E12, 2247.5499999999993], [1.72858476E12, 2283.0], [1.72858014E12, 1783.5], [1.72858902E12, 2730.0], [1.72858458E12, 2006.8999999999999], [1.72858236E12, 2019.1499999999999], [1.7285868E12, 2139.4], [1.7285781E12, 1820.7], [1.72858032E12, 1875.8], [1.72857996E12, 1896.9], [1.72858662E12, 3230.949999999999], [1.72858884E12, 2660.4999999999995], [1.72858218E12, 1985.3500000000004], [1.7285844E12, 2131.0], [1.72857792E12, 1783.8], [1.72858644E12, 2335.5999999999995], [1.72857978E12, 1949.2], [1.72858422E12, 1987.1999999999998], [1.72858866E12, 2678.0], [1.728582E12, 2088.1000000000004], [1.7285796E12, 1809.0], [1.72858182E12, 1987.9999999999998], [1.72858404E12, 2026.1], [1.72858626E12, 3019.0], [1.72858848E12, 2449.0999999999995], [1.7285883E12, 2626.5499999999975], [1.72858386E12, 1889.4499999999994], [1.72858608E12, 2892.5999999999985], [1.72857942E12, 1896.0999999999997], [1.72858164E12, 2006.3999999999996], [1.72858812E12, 2734.3999999999996], [1.7285859E12, 2238.3499999999985], [1.72858368E12, 2082.2999999999997], [1.72857924E12, 1856.8000000000002], [1.72858146E12, 2149.15], [1.7285835E12, 2021.4999999999993], [1.72858572E12, 2326.199999999999], [1.72858794E12, 2599.5], [1.7285811E12, 1937.8000000000002], [1.72858554E12, 2202.2], [1.72858332E12, 1850.1999999999998], [1.72858776E12, 2735.9999999999995], [1.72857906E12, 1872.4499999999994], [1.72858128E12, 1731.8000000000002], [1.7285787E12, 1865.0], [1.72858092E12, 1822.4], [1.72858758E12, 2197.3999999999996], [1.7285898E12, 2233.25], [1.72858314E12, 2064.5], [1.72858536E12, 2145.0], [1.72857888E12, 1963.8999999999987], [1.7285874E12, 2320.5999999999985], [1.72857852E12, 1886.3999999999999], [1.72858074E12, 1947.0999999999997], [1.72858518E12, 2278.7999999999997], [1.72858962E12, 2799.35], [1.72858296E12, 2031.9999999999995], [1.72858278E12, 1990.75], [1.728585E12, 2170.3499999999995], [1.72858722E12, 2177.15], [1.72858944E12, 2623.0], [1.72857834E12, 1854.9], [1.72858056E12, 1758.1999999999998], [1.72858926E12, 2665.2], [1.72858482E12, 2170.5499999999997], [1.72858704E12, 2096.0], [1.72857816E12, 1936.75], [1.7285826E12, 2109.75], [1.72858038E12, 1836.0], [1.72858908E12, 2691.7999999999997], [1.72858686E12, 2329.8], [1.72858242E12, 2076.6499999999996], [1.72858464E12, 1905.0], [1.72858668E12, 3291.399999999999], [1.72857798E12, 1939.949999999999], [1.7285802E12, 2015.0], [1.72858446E12, 1784.55], [1.7285889E12, 2721.4999999999995], [1.72858224E12, 1989.3999999999992], [1.72858002E12, 1866.75], [1.72858206E12, 1953.2000000000003], [1.72858428E12, 1967.1999999999998], [1.7285865E12, 2530.9999999999986], [1.72858872E12, 2662.0], [1.72857966E12, 1841.6], [1.72858854E12, 2773.0999999999985], [1.7285841E12, 2061.1], [1.72858188E12, 2005.6], [1.72858632E12, 3327.0000000000005], [1.72857984E12, 1816.5], [1.72857948E12, 1786.75], [1.72858614E12, 3321.5], [1.72858836E12, 2662.5], [1.7285817E12, 2054.85], [1.72858392E12, 1945.3999999999992], [1.72858596E12, 2345.599999999999], [1.72858818E12, 2714.0], [1.7285793E12, 1918.1999999999996], [1.72858152E12, 1962.799999999999], [1.72858374E12, 1914.7499999999998], [1.72858578E12, 2189.199999999999], [1.72857912E12, 2008.3999999999999], [1.72858356E12, 2169.3499999999985], [1.728588E12, 2650.9999999999995], [1.72858134E12, 1905.9], [1.72858782E12, 2723.2999999999993], [1.72858338E12, 1978.1999999999996], [1.7285856E12, 2270.2999999999993], [1.72858764E12, 1795.3], [1.72857894E12, 1854.2000000000005], [1.72858116E12, 1984.0], [1.72858542E12, 2311.7499999999995], [1.72858986E12, 2094.8499999999995], [1.7285832E12, 2007.6499999999996], [1.72857876E12, 1923.0], [1.72858098E12, 1772.949999999999], [1.72858302E12, 2069.0999999999995], [1.72858524E12, 2205.0], [1.72858746E12, 2439.25], [1.72858968E12, 2617.1499999999983], [1.7285895E12, 2621.7499999999995], [1.72858062E12, 1813.0], [1.72858506E12, 2159.9999999999995], [1.72858284E12, 1915.0], [1.72858728E12, 2151.3999999999996], [1.7285808E12, 1937.0], [1.72857858E12, 1775.6], [1.7285871E12, 2328.95], [1.72858932E12, 2548.999999999999], [1.72857822E12, 1822.3500000000001], [1.72858044E12, 1988.0], [1.72858488E12, 2101.5], [1.72858266E12, 2065.8], [1.7285784E12, 1793.0000000000002]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72857804E12, 90.0], [1.72858692E12, 74.0], [1.72858914E12, 66.0], [1.72858026E12, 76.0], [1.7285847E12, 68.0], [1.72858248E12, 82.0], [1.72857786E12, 89.0], [1.72858008E12, 82.0], [1.7285823E12, 75.0], [1.72858452E12, 70.0], [1.72858674E12, 60.0], [1.72858896E12, 70.0], [1.72858878E12, 75.0], [1.72858434E12, 74.0], [1.72858212E12, 69.0], [1.72858656E12, 89.0], [1.7285799E12, 76.0], [1.72858638E12, 73.0], [1.7285886E12, 69.0], [1.72858194E12, 76.0], [1.72858416E12, 66.0], [1.7285862E12, 101.0], [1.72857972E12, 78.0], [1.72858398E12, 81.0], [1.72858842E12, 64.0], [1.72858158E12, 68.0], [1.72858176E12, 67.0], [1.7285838E12, 73.0], [1.72857954E12, 73.0], [1.72858602E12, 85.0], [1.72858824E12, 71.0], [1.72858806E12, 66.0], [1.72857918E12, 67.0], [1.7285814E12, 90.0], [1.72858362E12, 66.0], [1.72858584E12, 68.0], [1.72857936E12, 74.0], [1.728579E12, 85.0], [1.72858788E12, 62.0], [1.72858122E12, 79.0], [1.72858566E12, 71.0], [1.72858344E12, 71.0], [1.72857882E12, 70.0], [1.72858104E12, 67.0], [1.72858326E12, 74.0], [1.72858548E12, 75.0], [1.7285877E12, 69.0], [1.72858974E12, 67.0], [1.7285853E12, 68.0], [1.72857864E12, 72.0], [1.72858308E12, 76.0], [1.72858752E12, 71.0], [1.72858086E12, 70.0], [1.72858734E12, 71.0], [1.72858956E12, 74.0], [1.7285829E12, 76.0], [1.72858512E12, 66.0], [1.72858716E12, 70.0], [1.72857846E12, 79.0], [1.72858068E12, 75.0], [1.72858494E12, 73.0], [1.72858938E12, 75.0], [1.72858272E12, 68.0], [1.72857828E12, 76.0], [1.7285805E12, 77.0], [1.72858698E12, 68.0], [1.7285892E12, 51.0], [1.72858254E12, 64.0], [1.72858476E12, 63.0], [1.72858014E12, 62.0], [1.72858902E12, 72.0], [1.72858458E12, 76.0], [1.72858236E12, 82.0], [1.7285868E12, 75.0], [1.7285781E12, 70.0], [1.72858032E12, 83.0], [1.72857996E12, 72.0], [1.72858662E12, 83.0], [1.72858884E12, 78.0], [1.72858218E12, 73.0], [1.7285844E12, 69.0], [1.72857792E12, 91.0], [1.72858644E12, 74.0], [1.72857978E12, 67.0], [1.72858422E12, 62.0], [1.72858866E12, 78.0], [1.728582E12, 73.0], [1.7285796E12, 77.0], [1.72858182E12, 73.0], [1.72858404E12, 70.0], [1.72858626E12, 84.0], [1.72858848E12, 53.0], [1.7285883E12, 82.0], [1.72858386E12, 73.0], [1.72858608E12, 92.0], [1.72857942E12, 67.0], [1.72858164E12, 74.0], [1.72858812E12, 76.0], [1.7285859E12, 75.0], [1.72858368E12, 84.0], [1.72857924E12, 72.0], [1.72858146E12, 71.0], [1.7285835E12, 70.0], [1.72858572E12, 68.0], [1.72858794E12, 78.0], [1.7285811E12, 64.0], [1.72858554E12, 73.0], [1.72858332E12, 64.0], [1.72858776E12, 86.0], [1.72857906E12, 68.0], [1.72858128E12, 83.0], [1.7285787E12, 81.0], [1.72858092E12, 76.0], [1.72858758E12, 73.0], [1.7285898E12, 73.0], [1.72858314E12, 74.0], [1.72858536E12, 76.0], [1.72857888E12, 71.0], [1.7285874E12, 68.0], [1.72857852E12, 78.0], [1.72858074E12, 74.0], [1.72858518E12, 72.0], [1.72858962E12, 52.0], [1.72858296E12, 71.0], [1.72858278E12, 71.0], [1.728585E12, 74.0], [1.72858722E12, 76.0], [1.72858944E12, 66.0], [1.72857834E12, 73.0], [1.72858056E12, 71.0], [1.72858926E12, 63.0], [1.72858482E12, 64.0], [1.72858704E12, 78.0], [1.72857816E12, 82.0], [1.7285826E12, 68.0], [1.72858038E12, 72.0], [1.72858908E12, 92.0], [1.72858686E12, 85.0], [1.72858242E12, 62.0], [1.72858464E12, 76.0], [1.72858668E12, 93.0], [1.72857798E12, 70.0], [1.7285802E12, 70.0], [1.72858446E12, 71.0], [1.7285889E12, 77.0], [1.72858224E12, 72.0], [1.72858002E12, 71.0], [1.72858206E12, 70.0], [1.72858428E12, 73.0], [1.7285865E12, 69.0], [1.72858872E12, 86.0], [1.72857966E12, 69.0], [1.72858854E12, 35.0], [1.7285841E12, 73.0], [1.72858188E12, 66.0], [1.72858632E12, 106.0], [1.72857984E12, 76.0], [1.72857948E12, 68.0], [1.72858614E12, 81.0], [1.72858836E12, 79.0], [1.7285817E12, 69.0], [1.72858392E12, 78.0], [1.72858596E12, 66.0], [1.72858818E12, 68.0], [1.7285793E12, 84.0], [1.72858152E12, 72.0], [1.72858374E12, 69.0], [1.72858578E12, 72.0], [1.72857912E12, 67.0], [1.72858356E12, 73.0], [1.728588E12, 64.0], [1.72858134E12, 75.0], [1.72858782E12, 38.0], [1.72858338E12, 62.0], [1.7285856E12, 67.0], [1.72858764E12, 79.0], [1.72857894E12, 63.0], [1.72858116E12, 70.0], [1.72858542E12, 63.0], [1.72858986E12, 81.0], [1.7285832E12, 79.0], [1.72857876E12, 73.0], [1.72858098E12, 70.0], [1.72858302E12, 66.0], [1.72858524E12, 75.0], [1.72858746E12, 67.0], [1.72858968E12, 72.0], [1.7285895E12, 72.0], [1.72858062E12, 68.0], [1.72858506E12, 66.0], [1.72858284E12, 72.0], [1.72858728E12, 76.0], [1.7285808E12, 67.0], [1.72857858E12, 70.0], [1.7285871E12, 71.0], [1.72858932E12, 66.0], [1.72857822E12, 85.0], [1.72858044E12, 67.0], [1.72858488E12, 64.0], [1.72858266E12, 81.0], [1.7285784E12, 71.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72857804E12, 473.0], [1.72858692E12, 940.0], [1.72858914E12, 958.0], [1.72858026E12, 716.0], [1.7285847E12, 584.5], [1.72858248E12, 864.5], [1.72857786E12, 764.0], [1.72858008E12, 701.0], [1.7285823E12, 708.5], [1.72858452E12, 756.5], [1.72858674E12, 924.5], [1.72858896E12, 892.5], [1.72858878E12, 907.0], [1.72858434E12, 616.5], [1.72858212E12, 861.0], [1.72858656E12, 1234.0], [1.7285799E12, 611.5], [1.72858638E12, 717.0], [1.7285886E12, 925.5], [1.72858194E12, 878.0], [1.72858416E12, 708.0], [1.7285862E12, 1033.0], [1.72857972E12, 733.0], [1.72858398E12, 802.0], [1.72858842E12, 918.0], [1.72858158E12, 635.0], [1.72858176E12, 696.0], [1.7285838E12, 865.0], [1.72857954E12, 850.0], [1.72858602E12, 945.0], [1.72858824E12, 1036.0], [1.72858806E12, 945.5], [1.72857918E12, 847.0], [1.7285814E12, 657.0], [1.72858362E12, 707.5], [1.72858584E12, 934.0], [1.72857936E12, 608.0], [1.728579E12, 745.0], [1.72858788E12, 1018.0], [1.72858122E12, 485.0], [1.72858566E12, 792.5], [1.72858344E12, 715.0], [1.72857882E12, 667.0], [1.72858104E12, 791.0], [1.72858326E12, 742.0], [1.72858548E12, 687.0], [1.7285877E12, 739.0], [1.72858974E12, 858.5], [1.7285853E12, 776.0], [1.72857864E12, 631.0], [1.72858308E12, 824.0], [1.72858752E12, 1013.5], [1.72858086E12, 662.0], [1.72858734E12, 895.0], [1.72858956E12, 864.0], [1.7285829E12, 783.0], [1.72858512E12, 811.0], [1.72858716E12, 779.0], [1.72857846E12, 651.0], [1.72858068E12, 738.0], [1.72858494E12, 839.0], [1.72858938E12, 1037.0], [1.72858272E12, 736.0], [1.72857828E12, 485.0], [1.7285805E12, 757.0], [1.72858698E12, 910.0], [1.7285892E12, 1026.0], [1.72858254E12, 745.5], [1.72858476E12, 701.0], [1.72858014E12, 731.5], [1.72858902E12, 1037.0], [1.72858458E12, 819.0], [1.72858236E12, 834.5], [1.7285868E12, 749.0], [1.7285781E12, 609.0], [1.72858032E12, 683.0], [1.72857996E12, 695.0], [1.72858662E12, 976.5], [1.72858884E12, 1013.0], [1.72858218E12, 681.5], [1.7285844E12, 736.0], [1.72857792E12, 430.0], [1.72858644E12, 826.0], [1.72857978E12, 603.0], [1.72858422E12, 736.0], [1.72858866E12, 823.0], [1.728582E12, 664.0], [1.7285796E12, 731.0], [1.72858182E12, 668.0], [1.72858404E12, 706.5], [1.72858626E12, 972.0], [1.72858848E12, 1033.0], [1.7285883E12, 901.0], [1.72858386E12, 623.5], [1.72858608E12, 977.0], [1.72857942E12, 820.5], [1.72858164E12, 806.0], [1.72858812E12, 1023.0], [1.7285859E12, 862.0], [1.72858368E12, 691.0], [1.72857924E12, 866.0], [1.72858146E12, 833.0], [1.7285835E12, 715.5], [1.72858572E12, 769.0], [1.72858794E12, 822.0], [1.7285811E12, 528.0], [1.72858554E12, 853.0], [1.72858332E12, 580.0], [1.72858776E12, 939.0], [1.72857906E12, 565.0], [1.72858128E12, 538.0], [1.7285787E12, 865.0], [1.72858092E12, 695.0], [1.72858758E12, 764.0], [1.7285898E12, 781.0], [1.72858314E12, 843.0], [1.72858536E12, 867.0], [1.72857888E12, 720.5], [1.7285874E12, 859.0], [1.72857852E12, 796.0], [1.72858074E12, 791.0], [1.72858518E12, 879.0], [1.72858962E12, 1072.0], [1.72858296E12, 777.0], [1.72858278E12, 577.0], [1.728585E12, 814.0], [1.72858722E12, 690.0], [1.72858944E12, 906.0], [1.72857834E12, 635.0], [1.72858056E12, 440.0], [1.72858926E12, 948.0], [1.72858482E12, 680.0], [1.72858704E12, 853.0], [1.72857816E12, 723.0], [1.7285826E12, 695.0], [1.72858038E12, 613.0], [1.72858908E12, 1110.0], [1.72858686E12, 817.0], [1.72858242E12, 789.0], [1.72858464E12, 720.0], [1.72858668E12, 952.0], [1.72857798E12, 606.0], [1.7285802E12, 599.0], [1.72858446E12, 760.5], [1.7285889E12, 1104.0], [1.72858224E12, 647.5], [1.72858002E12, 760.5], [1.72858206E12, 503.5], [1.72858428E12, 791.0], [1.7285865E12, 826.5], [1.72858872E12, 842.0], [1.72857966E12, 726.0], [1.72858854E12, 1039.0], [1.7285841E12, 742.0], [1.72858188E12, 734.5], [1.72858632E12, 1196.0], [1.72857984E12, 601.0], [1.72857948E12, 579.5], [1.72858614E12, 1271.0], [1.72858836E12, 962.0], [1.7285817E12, 590.0], [1.72858392E12, 770.0], [1.72858596E12, 758.0], [1.72858818E12, 957.0], [1.7285793E12, 696.0], [1.72858152E12, 715.0], [1.72858374E12, 520.5], [1.72858578E12, 809.0], [1.72857912E12, 857.0], [1.72858356E12, 738.5], [1.728588E12, 873.0], [1.72858134E12, 778.0], [1.72858782E12, 904.5], [1.72858338E12, 698.0], [1.7285856E12, 822.0], [1.72858764E12, 761.0], [1.72857894E12, 686.5], [1.72858116E12, 709.0], [1.72858542E12, 787.0], [1.72858986E12, 906.0], [1.7285832E12, 758.5], [1.72857876E12, 745.0], [1.72858098E12, 845.0], [1.72858302E12, 776.0], [1.72858524E12, 919.0], [1.72858746E12, 984.0], [1.72858968E12, 995.0], [1.7285895E12, 935.0], [1.72858062E12, 688.0], [1.72858506E12, 866.0], [1.72858284E12, 707.0], [1.72858728E12, 734.0], [1.7285808E12, 777.0], [1.72857858E12, 702.0], [1.7285871E12, 757.0], [1.72858932E12, 879.0], [1.72857822E12, 833.0], [1.72858044E12, 737.5], [1.72858488E12, 746.0], [1.72858266E12, 763.0], [1.7285784E12, 748.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72858986E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 255.5, "minX": 1.0, "maxY": 1210.0, "series": [{"data": [[2.0, 1077.0], [32.0, 330.5], [3.0, 1010.0], [4.0, 944.0], [5.0, 887.0], [6.0, 849.0], [7.0, 877.0], [8.0, 879.0], [9.0, 850.0], [10.0, 867.0], [11.0, 891.5], [12.0, 850.0], [13.0, 830.0], [14.0, 759.5], [15.0, 726.0], [1.0, 1210.0], [16.0, 624.0], [17.0, 572.0], [18.0, 535.0], [19.0, 458.5], [20.0, 470.0], [21.0, 474.0], [22.0, 365.5], [23.0, 400.0], [24.0, 312.0], [25.0, 314.0], [26.0, 376.0], [27.0, 347.0], [28.0, 357.0], [29.0, 320.5], [30.0, 255.5], [31.0, 283.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 32.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 165.0, "minX": 1.0, "maxY": 871.0, "series": [{"data": [[2.0, 775.0], [32.0, 186.0], [3.0, 722.0], [4.0, 693.5], [5.0, 662.0], [6.0, 638.5], [7.0, 651.0], [8.0, 655.0], [9.0, 645.0], [10.0, 646.0], [11.0, 665.0], [12.0, 638.0], [13.0, 627.0], [14.0, 583.5], [15.0, 559.0], [1.0, 871.0], [16.0, 462.5], [17.0, 421.0], [18.0, 387.5], [19.0, 305.5], [20.0, 318.5], [21.0, 318.0], [22.0, 237.0], [23.0, 270.0], [24.0, 195.5], [25.0, 187.0], [26.0, 234.0], [27.0, 244.5], [28.0, 230.5], [29.0, 191.0], [30.0, 184.0], [31.0, 165.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 32.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.2666666666666666, "minX": 1.72857786E12, "maxY": 15.816666666666666, "series": [{"data": [[1.72857804E12, 2.65], [1.72858692E12, 11.55], [1.72858914E12, 15.066666666666666], [1.72858026E12, 5.416666666666667], [1.7285847E12, 5.166666666666667], [1.72858248E12, 9.3], [1.72857786E12, 1.5666666666666667], [1.72858008E12, 5.233333333333333], [1.7285823E12, 9.966666666666667], [1.72858452E12, 9.633333333333333], [1.72858674E12, 12.0], [1.72858896E12, 15.333333333333334], [1.72858878E12, 15.6], [1.72858434E12, 10.3], [1.72858212E12, 9.083333333333334], [1.72858656E12, 9.15], [1.7285799E12, 5.533333333333333], [1.72858638E12, 12.916666666666666], [1.7285886E12, 15.133333333333333], [1.72858194E12, 9.383333333333333], [1.72858416E12, 9.816666666666666], [1.7285862E12, 10.25], [1.72857972E12, 5.216666666666667], [1.72858398E12, 9.25], [1.72858842E12, 15.0], [1.72858158E12, 10.0], [1.72858176E12, 9.75], [1.7285838E12, 9.316666666666666], [1.72857954E12, 4.716666666666667], [1.72858602E12, 10.1], [1.72858824E12, 14.416666666666666], [1.72858806E12, 15.166666666666666], [1.72857918E12, 4.85], [1.7285814E12, 2.95], [1.72858362E12, 10.133333333333333], [1.72858584E12, 12.283333333333333], [1.72857936E12, 5.416666666666667], [1.728579E12, 5.083333333333333], [1.72858788E12, 13.733333333333333], [1.72858122E12, 5.75], [1.72858566E12, 13.5], [1.72858344E12, 9.95], [1.72857882E12, 5.183333333333334], [1.72858104E12, 4.933333333333334], [1.72858326E12, 9.733333333333333], [1.72858548E12, 14.133333333333333], [1.7285877E12, 14.266666666666667], [1.72858974E12, 15.516666666666667], [1.7285853E12, 13.783333333333333], [1.72857864E12, 5.35], [1.72858308E12, 9.316666666666666], [1.72858752E12, 11.966666666666667], [1.72858086E12, 5.25], [1.72858734E12, 12.416666666666666], [1.72858956E12, 15.7], [1.7285829E12, 9.316666666666666], [1.72858512E12, 13.166666666666666], [1.72858716E12, 13.316666666666666], [1.72857846E12, 5.333333333333333], [1.72858068E12, 5.116666666666666], [1.72858494E12, 13.466666666666667], [1.72858938E12, 14.683333333333334], [1.72858272E12, 9.766666666666667], [1.72857828E12, 2.95], [1.7285805E12, 5.05], [1.72858698E12, 12.583333333333334], [1.7285892E12, 14.45], [1.72858254E12, 9.466666666666667], [1.72858476E12, 13.9], [1.72858014E12, 5.233333333333333], [1.72858902E12, 13.983333333333333], [1.72858458E12, 9.55], [1.72858236E12, 9.3], [1.7285868E12, 13.85], [1.7285781E12, 2.8666666666666667], [1.72858032E12, 5.25], [1.72857996E12, 5.216666666666667], [1.72858662E12, 10.133333333333333], [1.72858884E12, 14.95], [1.72858218E12, 10.2], [1.7285844E12, 9.65], [1.72857792E12, 2.85], [1.72858644E12, 12.716666666666667], [1.72857978E12, 5.466666666666667], [1.72858422E12, 9.85], [1.72858866E12, 15.816666666666666], [1.728582E12, 9.95], [1.7285796E12, 5.15], [1.72858182E12, 10.05], [1.72858404E12, 9.966666666666667], [1.72858626E12, 9.983333333333333], [1.72858848E12, 15.033333333333333], [1.7285883E12, 14.966666666666667], [1.72858386E12, 10.666666666666666], [1.72858608E12, 10.383333333333333], [1.72857942E12, 5.1], [1.72858164E12, 9.516666666666667], [1.72858812E12, 14.516666666666667], [1.7285859E12, 12.966666666666667], [1.72858368E12, 9.966666666666667], [1.72857924E12, 4.883333333333334], [1.72858146E12, 9.266666666666667], [1.7285835E12, 9.833333333333334], [1.72858572E12, 13.45], [1.72858794E12, 15.483333333333333], [1.7285811E12, 5.383333333333334], [1.72858554E12, 13.216666666666667], [1.72858332E12, 10.583333333333334], [1.72858776E12, 14.516666666666667], [1.72857906E12, 5.433333333333334], [1.72858128E12, 5.366666666666666], [1.7285787E12, 4.65], [1.72858092E12, 5.516666666666667], [1.72858758E12, 9.933333333333334], [1.7285898E12, 12.083333333333334], [1.72858314E12, 9.483333333333333], [1.72858536E12, 12.983333333333333], [1.72857888E12, 5.2], [1.7285874E12, 12.716666666666667], [1.72857852E12, 5.016666666666667], [1.72858074E12, 4.95], [1.72858518E12, 12.85], [1.72858962E12, 13.833333333333334], [1.72858296E12, 9.583333333333334], [1.72858278E12, 10.4], [1.728585E12, 13.6], [1.72858722E12, 13.933333333333334], [1.72858944E12, 15.15], [1.72857834E12, 5.55], [1.72858056E12, 5.783333333333333], [1.72858926E12, 15.016666666666667], [1.72858482E12, 14.033333333333333], [1.72858704E12, 13.333333333333334], [1.72857816E12, 2.566666666666667], [1.7285826E12, 9.8], [1.72858038E12, 5.566666666666666], [1.72858908E12, 14.083333333333334], [1.72858686E12, 12.516666666666667], [1.72858242E12, 9.466666666666667], [1.72858464E12, 8.25], [1.72858668E12, 9.55], [1.72857798E12, 2.8], [1.7285802E12, 5.2], [1.72858446E12, 10.133333333333333], [1.7285889E12, 14.016666666666667], [1.72858224E12, 10.0], [1.72858002E12, 5.133333333333334], [1.72858206E12, 10.7], [1.72858428E12, 9.433333333333334], [1.7285865E12, 12.266666666666667], [1.72858872E12, 15.316666666666666], [1.72857966E12, 5.183333333333334], [1.72858854E12, 14.333333333333334], [1.7285841E12, 9.616666666666667], [1.72858188E12, 10.1], [1.72858632E12, 9.45], [1.72857984E12, 5.566666666666666], [1.72857948E12, 5.466666666666667], [1.72858614E12, 8.816666666666666], [1.72858836E12, 14.566666666666666], [1.7285817E12, 10.1], [1.72858392E12, 9.75], [1.72858596E12, 13.116666666666667], [1.72858818E12, 14.65], [1.7285793E12, 5.183333333333334], [1.72858152E12, 9.916666666666666], [1.72858374E12, 10.8], [1.72858578E12, 13.283333333333333], [1.72857912E12, 4.616666666666666], [1.72858356E12, 9.8], [1.728588E12, 15.516666666666667], [1.72858134E12, 3.3333333333333335], [1.72858782E12, 14.6], [1.72858338E12, 9.916666666666666], [1.7285856E12, 13.216666666666667], [1.72858764E12, 2.6166666666666667], [1.72857894E12, 5.3], [1.72858116E12, 5.233333333333333], [1.72858542E12, 13.6], [1.72858986E12, 1.2666666666666666], [1.7285832E12, 9.666666666666666], [1.72857876E12, 5.316666666666666], [1.72858098E12, 4.833333333333333], [1.72858302E12, 9.35], [1.72858524E12, 13.066666666666666], [1.72858746E12, 11.9], [1.72858968E12, 15.033333333333333], [1.7285895E12, 15.316666666666666], [1.72858062E12, 5.233333333333333], [1.72858506E12, 13.45], [1.72858284E12, 10.15], [1.72858728E12, 13.783333333333333], [1.7285808E12, 4.9], [1.72857858E12, 5.45], [1.7285871E12, 13.433333333333334], [1.72858932E12, 15.383333333333333], [1.72857822E12, 2.6], [1.72858044E12, 5.066666666666666], [1.72858488E12, 14.233333333333333], [1.72858266E12, 9.45], [1.7285784E12, 5.133333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72858986E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.3666666666666667, "minX": 1.72857786E12, "maxY": 15.816666666666666, "series": [{"data": [[1.72857804E12, 2.65], [1.72858692E12, 11.55], [1.72858914E12, 15.066666666666666], [1.72858026E12, 5.416666666666667], [1.7285847E12, 5.033333333333333], [1.72858248E12, 9.3], [1.72857786E12, 1.5333333333333334], [1.72858008E12, 5.233333333333333], [1.7285823E12, 9.966666666666667], [1.72858452E12, 9.633333333333333], [1.72858674E12, 12.0], [1.72858896E12, 15.333333333333334], [1.72858878E12, 15.6], [1.72858434E12, 10.3], [1.72858212E12, 9.083333333333334], [1.72858656E12, 9.15], [1.7285799E12, 5.533333333333333], [1.72858638E12, 12.916666666666666], [1.7285886E12, 15.133333333333333], [1.72858194E12, 9.383333333333333], [1.72858416E12, 9.816666666666666], [1.7285862E12, 10.25], [1.72857972E12, 5.216666666666667], [1.72858398E12, 9.25], [1.72858842E12, 15.0], [1.72858158E12, 10.0], [1.72858176E12, 9.75], [1.7285838E12, 9.316666666666666], [1.72857954E12, 4.716666666666667], [1.72858602E12, 10.1], [1.72858824E12, 14.416666666666666], [1.72858806E12, 15.166666666666666], [1.72857918E12, 4.85], [1.7285814E12, 2.85], [1.72858362E12, 10.133333333333333], [1.72858584E12, 12.283333333333333], [1.72857936E12, 5.416666666666667], [1.728579E12, 5.083333333333333], [1.72858788E12, 13.733333333333333], [1.72858122E12, 5.75], [1.72858566E12, 13.5], [1.72858344E12, 9.95], [1.72857882E12, 5.183333333333334], [1.72858104E12, 4.933333333333334], [1.72858326E12, 9.733333333333333], [1.72858548E12, 14.133333333333333], [1.7285877E12, 14.016666666666667], [1.72858974E12, 15.533333333333333], [1.7285853E12, 13.783333333333333], [1.72857864E12, 5.35], [1.72858308E12, 9.316666666666666], [1.72858752E12, 11.966666666666667], [1.72858086E12, 5.25], [1.72858734E12, 12.416666666666666], [1.72858956E12, 15.683333333333334], [1.7285829E12, 9.316666666666666], [1.72858512E12, 13.166666666666666], [1.72858716E12, 13.316666666666666], [1.72857846E12, 5.333333333333333], [1.72858068E12, 5.116666666666666], [1.72858494E12, 13.466666666666667], [1.72858938E12, 14.683333333333334], [1.72858272E12, 9.766666666666667], [1.72857828E12, 2.9166666666666665], [1.7285805E12, 5.05], [1.72858698E12, 12.583333333333334], [1.7285892E12, 14.45], [1.72858254E12, 9.466666666666667], [1.72858476E12, 13.9], [1.72858014E12, 5.233333333333333], [1.72858902E12, 13.983333333333333], [1.72858458E12, 9.55], [1.72858236E12, 9.3], [1.7285868E12, 13.85], [1.7285781E12, 2.8666666666666667], [1.72858032E12, 5.25], [1.72857996E12, 5.216666666666667], [1.72858662E12, 10.133333333333333], [1.72858884E12, 14.95], [1.72858218E12, 10.2], [1.7285844E12, 9.65], [1.72857792E12, 2.85], [1.72858644E12, 12.716666666666667], [1.72857978E12, 5.466666666666667], [1.72858422E12, 9.85], [1.72858866E12, 15.816666666666666], [1.728582E12, 9.95], [1.7285796E12, 5.15], [1.72858182E12, 10.05], [1.72858404E12, 9.966666666666667], [1.72858626E12, 9.983333333333333], [1.72858848E12, 15.033333333333333], [1.7285883E12, 14.966666666666667], [1.72858386E12, 10.666666666666666], [1.72858608E12, 10.383333333333333], [1.72857942E12, 5.1], [1.72858164E12, 9.516666666666667], [1.72858812E12, 14.516666666666667], [1.7285859E12, 12.966666666666667], [1.72858368E12, 9.966666666666667], [1.72857924E12, 4.883333333333334], [1.72858146E12, 9.266666666666667], [1.7285835E12, 9.833333333333334], [1.72858572E12, 13.45], [1.72858794E12, 15.483333333333333], [1.7285811E12, 5.383333333333334], [1.72858554E12, 13.216666666666667], [1.72858332E12, 10.583333333333334], [1.72858776E12, 14.516666666666667], [1.72857906E12, 5.433333333333334], [1.72858128E12, 5.383333333333334], [1.7285787E12, 4.65], [1.72858092E12, 5.516666666666667], [1.72858758E12, 10.05], [1.7285898E12, 12.233333333333333], [1.72858314E12, 9.483333333333333], [1.72858536E12, 12.983333333333333], [1.72857888E12, 5.2], [1.7285874E12, 12.716666666666667], [1.72857852E12, 5.016666666666667], [1.72858074E12, 4.95], [1.72858518E12, 12.85], [1.72858962E12, 13.833333333333334], [1.72858296E12, 9.583333333333334], [1.72858278E12, 10.4], [1.728585E12, 13.6], [1.72858722E12, 13.933333333333334], [1.72858944E12, 15.15], [1.72857834E12, 5.55], [1.72858056E12, 5.783333333333333], [1.72858926E12, 15.016666666666667], [1.72858482E12, 14.033333333333333], [1.72858704E12, 13.333333333333334], [1.72857816E12, 2.566666666666667], [1.7285826E12, 9.8], [1.72858038E12, 5.566666666666666], [1.72858908E12, 14.083333333333334], [1.72858686E12, 12.516666666666667], [1.72858242E12, 9.466666666666667], [1.72858464E12, 8.316666666666666], [1.72858668E12, 9.55], [1.72857798E12, 2.8], [1.7285802E12, 5.2], [1.72858446E12, 10.133333333333333], [1.7285889E12, 14.016666666666667], [1.72858224E12, 10.0], [1.72858002E12, 5.133333333333334], [1.72858206E12, 10.7], [1.72858428E12, 9.433333333333334], [1.7285865E12, 12.266666666666667], [1.72858872E12, 15.316666666666666], [1.72857966E12, 5.183333333333334], [1.72858854E12, 14.333333333333334], [1.7285841E12, 9.616666666666667], [1.72858188E12, 10.1], [1.72858632E12, 9.45], [1.72857984E12, 5.566666666666666], [1.72857948E12, 5.466666666666667], [1.72858614E12, 8.816666666666666], [1.72858836E12, 14.566666666666666], [1.7285817E12, 10.1], [1.72858392E12, 9.75], [1.72858596E12, 13.116666666666667], [1.72858818E12, 14.65], [1.7285793E12, 5.183333333333334], [1.72858152E12, 9.916666666666666], [1.72858374E12, 10.8], [1.72858578E12, 13.283333333333333], [1.72857912E12, 4.616666666666666], [1.72858356E12, 9.8], [1.728588E12, 15.516666666666667], [1.72858134E12, 3.35], [1.72858782E12, 14.6], [1.72858338E12, 9.916666666666666], [1.7285856E12, 13.216666666666667], [1.72858764E12, 2.683333333333333], [1.72857894E12, 5.3], [1.72858116E12, 5.233333333333333], [1.72858542E12, 13.6], [1.72858986E12, 1.3666666666666667], [1.7285832E12, 9.666666666666666], [1.72857876E12, 5.316666666666666], [1.72858098E12, 4.833333333333333], [1.72858302E12, 9.35], [1.72858524E12, 13.066666666666666], [1.72858746E12, 11.9], [1.72858968E12, 15.033333333333333], [1.7285895E12, 15.333333333333334], [1.72858062E12, 5.233333333333333], [1.72858506E12, 13.45], [1.72858284E12, 10.15], [1.72858728E12, 13.783333333333333], [1.7285808E12, 4.9], [1.72857858E12, 5.45], [1.7285871E12, 13.433333333333334], [1.72858932E12, 15.383333333333333], [1.72857822E12, 2.6], [1.72858044E12, 5.066666666666666], [1.72858488E12, 14.233333333333333], [1.72858266E12, 9.45], [1.7285784E12, 5.133333333333334]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72858986E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.3666666666666667, "minX": 1.72857786E12, "maxY": 15.816666666666666, "series": [{"data": [[1.72857804E12, 2.65], [1.72858692E12, 11.55], [1.72858914E12, 15.066666666666666], [1.72858026E12, 5.416666666666667], [1.7285847E12, 5.033333333333333], [1.72858248E12, 9.3], [1.72857786E12, 1.5333333333333334], [1.72858008E12, 5.233333333333333], [1.7285823E12, 9.966666666666667], [1.72858452E12, 9.633333333333333], [1.72858674E12, 12.0], [1.72858896E12, 15.333333333333334], [1.72858878E12, 15.6], [1.72858434E12, 10.3], [1.72858212E12, 9.083333333333334], [1.72858656E12, 9.15], [1.7285799E12, 5.533333333333333], [1.72858638E12, 12.916666666666666], [1.7285886E12, 15.133333333333333], [1.72858194E12, 9.383333333333333], [1.72858416E12, 9.816666666666666], [1.7285862E12, 10.25], [1.72857972E12, 5.216666666666667], [1.72858398E12, 9.25], [1.72858842E12, 15.0], [1.72858158E12, 10.0], [1.72858176E12, 9.75], [1.7285838E12, 9.316666666666666], [1.72857954E12, 4.716666666666667], [1.72858602E12, 10.1], [1.72858824E12, 14.416666666666666], [1.72858806E12, 15.166666666666666], [1.72857918E12, 4.85], [1.7285814E12, 2.85], [1.72858362E12, 10.133333333333333], [1.72858584E12, 12.283333333333333], [1.72857936E12, 5.416666666666667], [1.728579E12, 5.083333333333333], [1.72858788E12, 13.733333333333333], [1.72858122E12, 5.75], [1.72858566E12, 13.5], [1.72858344E12, 9.95], [1.72857882E12, 5.183333333333334], [1.72858104E12, 4.933333333333334], [1.72858326E12, 9.733333333333333], [1.72858548E12, 14.133333333333333], [1.7285877E12, 14.016666666666667], [1.72858974E12, 15.533333333333333], [1.7285853E12, 13.783333333333333], [1.72857864E12, 5.35], [1.72858308E12, 9.316666666666666], [1.72858752E12, 11.966666666666667], [1.72858086E12, 5.25], [1.72858734E12, 12.416666666666666], [1.72858956E12, 15.683333333333334], [1.7285829E12, 9.316666666666666], [1.72858512E12, 13.166666666666666], [1.72858716E12, 13.316666666666666], [1.72857846E12, 5.333333333333333], [1.72858068E12, 5.116666666666666], [1.72858494E12, 13.466666666666667], [1.72858938E12, 14.683333333333334], [1.72858272E12, 9.766666666666667], [1.72857828E12, 2.9166666666666665], [1.7285805E12, 5.05], [1.72858698E12, 12.583333333333334], [1.7285892E12, 14.45], [1.72858254E12, 9.466666666666667], [1.72858476E12, 13.9], [1.72858014E12, 5.233333333333333], [1.72858902E12, 13.983333333333333], [1.72858458E12, 9.55], [1.72858236E12, 9.3], [1.7285868E12, 13.85], [1.7285781E12, 2.8666666666666667], [1.72858032E12, 5.25], [1.72857996E12, 5.216666666666667], [1.72858662E12, 10.133333333333333], [1.72858884E12, 14.95], [1.72858218E12, 10.2], [1.7285844E12, 9.65], [1.72857792E12, 2.85], [1.72858644E12, 12.716666666666667], [1.72857978E12, 5.466666666666667], [1.72858422E12, 9.85], [1.72858866E12, 15.816666666666666], [1.728582E12, 9.95], [1.7285796E12, 5.15], [1.72858182E12, 10.05], [1.72858404E12, 9.966666666666667], [1.72858626E12, 9.983333333333333], [1.72858848E12, 15.033333333333333], [1.7285883E12, 14.966666666666667], [1.72858386E12, 10.666666666666666], [1.72858608E12, 10.383333333333333], [1.72857942E12, 5.1], [1.72858164E12, 9.516666666666667], [1.72858812E12, 14.516666666666667], [1.7285859E12, 12.966666666666667], [1.72858368E12, 9.966666666666667], [1.72857924E12, 4.883333333333334], [1.72858146E12, 9.266666666666667], [1.7285835E12, 9.833333333333334], [1.72858572E12, 13.45], [1.72858794E12, 15.483333333333333], [1.7285811E12, 5.383333333333334], [1.72858554E12, 13.216666666666667], [1.72858332E12, 10.583333333333334], [1.72858776E12, 14.516666666666667], [1.72857906E12, 5.433333333333334], [1.72858128E12, 5.383333333333334], [1.7285787E12, 4.65], [1.72858092E12, 5.516666666666667], [1.72858758E12, 10.05], [1.7285898E12, 12.233333333333333], [1.72858314E12, 9.483333333333333], [1.72858536E12, 12.983333333333333], [1.72857888E12, 5.2], [1.7285874E12, 12.716666666666667], [1.72857852E12, 5.016666666666667], [1.72858074E12, 4.95], [1.72858518E12, 12.85], [1.72858962E12, 13.833333333333334], [1.72858296E12, 9.583333333333334], [1.72858278E12, 10.4], [1.728585E12, 13.6], [1.72858722E12, 13.933333333333334], [1.72858944E12, 15.15], [1.72857834E12, 5.55], [1.72858056E12, 5.783333333333333], [1.72858926E12, 15.016666666666667], [1.72858482E12, 14.033333333333333], [1.72858704E12, 13.333333333333334], [1.72857816E12, 2.566666666666667], [1.7285826E12, 9.8], [1.72858038E12, 5.566666666666666], [1.72858908E12, 14.083333333333334], [1.72858686E12, 12.516666666666667], [1.72858242E12, 9.466666666666667], [1.72858464E12, 8.316666666666666], [1.72858668E12, 9.55], [1.72857798E12, 2.8], [1.7285802E12, 5.2], [1.72858446E12, 10.133333333333333], [1.7285889E12, 14.016666666666667], [1.72858224E12, 10.0], [1.72858002E12, 5.133333333333334], [1.72858206E12, 10.7], [1.72858428E12, 9.433333333333334], [1.7285865E12, 12.266666666666667], [1.72858872E12, 15.316666666666666], [1.72857966E12, 5.183333333333334], [1.72858854E12, 14.333333333333334], [1.7285841E12, 9.616666666666667], [1.72858188E12, 10.1], [1.72858632E12, 9.45], [1.72857984E12, 5.566666666666666], [1.72857948E12, 5.466666666666667], [1.72858614E12, 8.816666666666666], [1.72858836E12, 14.566666666666666], [1.7285817E12, 10.1], [1.72858392E12, 9.75], [1.72858596E12, 13.116666666666667], [1.72858818E12, 14.65], [1.7285793E12, 5.183333333333334], [1.72858152E12, 9.916666666666666], [1.72858374E12, 10.8], [1.72858578E12, 13.283333333333333], [1.72857912E12, 4.616666666666666], [1.72858356E12, 9.8], [1.728588E12, 15.516666666666667], [1.72858134E12, 3.35], [1.72858782E12, 14.6], [1.72858338E12, 9.916666666666666], [1.7285856E12, 13.216666666666667], [1.72858764E12, 2.683333333333333], [1.72857894E12, 5.3], [1.72858116E12, 5.233333333333333], [1.72858542E12, 13.6], [1.72858986E12, 1.3666666666666667], [1.7285832E12, 9.666666666666666], [1.72857876E12, 5.316666666666666], [1.72858098E12, 4.833333333333333], [1.72858302E12, 9.35], [1.72858524E12, 13.066666666666666], [1.72858746E12, 11.9], [1.72858968E12, 15.033333333333333], [1.7285895E12, 15.333333333333334], [1.72858062E12, 5.233333333333333], [1.72858506E12, 13.45], [1.72858284E12, 10.15], [1.72858728E12, 13.783333333333333], [1.7285808E12, 4.9], [1.72857858E12, 5.45], [1.7285871E12, 13.433333333333334], [1.72858932E12, 15.383333333333333], [1.72857822E12, 2.6], [1.72858044E12, 5.066666666666666], [1.72858488E12, 14.233333333333333], [1.72858266E12, 9.45], [1.7285784E12, 5.133333333333334]], "isOverall": false, "label": "getmap-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72858986E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.3666666666666667, "minX": 1.72857786E12, "maxY": 15.816666666666666, "series": [{"data": [[1.72857804E12, 2.65], [1.72858692E12, 11.55], [1.72858914E12, 15.066666666666666], [1.72858026E12, 5.416666666666667], [1.7285847E12, 5.033333333333333], [1.72858248E12, 9.3], [1.72857786E12, 1.5333333333333334], [1.72858008E12, 5.233333333333333], [1.7285823E12, 9.966666666666667], [1.72858452E12, 9.633333333333333], [1.72858674E12, 12.0], [1.72858896E12, 15.333333333333334], [1.72858878E12, 15.6], [1.72858434E12, 10.3], [1.72858212E12, 9.083333333333334], [1.72858656E12, 9.15], [1.7285799E12, 5.533333333333333], [1.72858638E12, 12.916666666666666], [1.7285886E12, 15.133333333333333], [1.72858194E12, 9.383333333333333], [1.72858416E12, 9.816666666666666], [1.7285862E12, 10.25], [1.72857972E12, 5.216666666666667], [1.72858398E12, 9.25], [1.72858842E12, 15.0], [1.72858158E12, 10.0], [1.72858176E12, 9.75], [1.7285838E12, 9.316666666666666], [1.72857954E12, 4.716666666666667], [1.72858602E12, 10.1], [1.72858824E12, 14.416666666666666], [1.72858806E12, 15.166666666666666], [1.72857918E12, 4.85], [1.7285814E12, 2.85], [1.72858362E12, 10.133333333333333], [1.72858584E12, 12.283333333333333], [1.72857936E12, 5.416666666666667], [1.728579E12, 5.083333333333333], [1.72858788E12, 13.733333333333333], [1.72858122E12, 5.75], [1.72858566E12, 13.5], [1.72858344E12, 9.95], [1.72857882E12, 5.183333333333334], [1.72858104E12, 4.933333333333334], [1.72858326E12, 9.733333333333333], [1.72858548E12, 14.133333333333333], [1.7285877E12, 14.016666666666667], [1.72858974E12, 15.533333333333333], [1.7285853E12, 13.783333333333333], [1.72857864E12, 5.35], [1.72858308E12, 9.316666666666666], [1.72858752E12, 11.966666666666667], [1.72858086E12, 5.25], [1.72858734E12, 12.416666666666666], [1.72858956E12, 15.683333333333334], [1.7285829E12, 9.316666666666666], [1.72858512E12, 13.166666666666666], [1.72858716E12, 13.316666666666666], [1.72857846E12, 5.333333333333333], [1.72858068E12, 5.116666666666666], [1.72858494E12, 13.466666666666667], [1.72858938E12, 14.683333333333334], [1.72858272E12, 9.766666666666667], [1.72857828E12, 2.9166666666666665], [1.7285805E12, 5.05], [1.72858698E12, 12.583333333333334], [1.7285892E12, 14.45], [1.72858254E12, 9.466666666666667], [1.72858476E12, 13.9], [1.72858014E12, 5.233333333333333], [1.72858902E12, 13.983333333333333], [1.72858458E12, 9.55], [1.72858236E12, 9.3], [1.7285868E12, 13.85], [1.7285781E12, 2.8666666666666667], [1.72858032E12, 5.25], [1.72857996E12, 5.216666666666667], [1.72858662E12, 10.133333333333333], [1.72858884E12, 14.95], [1.72858218E12, 10.2], [1.7285844E12, 9.65], [1.72857792E12, 2.85], [1.72858644E12, 12.716666666666667], [1.72857978E12, 5.466666666666667], [1.72858422E12, 9.85], [1.72858866E12, 15.816666666666666], [1.728582E12, 9.95], [1.7285796E12, 5.15], [1.72858182E12, 10.05], [1.72858404E12, 9.966666666666667], [1.72858626E12, 9.983333333333333], [1.72858848E12, 15.033333333333333], [1.7285883E12, 14.966666666666667], [1.72858386E12, 10.666666666666666], [1.72858608E12, 10.383333333333333], [1.72857942E12, 5.1], [1.72858164E12, 9.516666666666667], [1.72858812E12, 14.516666666666667], [1.7285859E12, 12.966666666666667], [1.72858368E12, 9.966666666666667], [1.72857924E12, 4.883333333333334], [1.72858146E12, 9.266666666666667], [1.7285835E12, 9.833333333333334], [1.72858572E12, 13.45], [1.72858794E12, 15.483333333333333], [1.7285811E12, 5.383333333333334], [1.72858554E12, 13.216666666666667], [1.72858332E12, 10.583333333333334], [1.72858776E12, 14.516666666666667], [1.72857906E12, 5.433333333333334], [1.72858128E12, 5.383333333333334], [1.7285787E12, 4.65], [1.72858092E12, 5.516666666666667], [1.72858758E12, 10.05], [1.7285898E12, 12.233333333333333], [1.72858314E12, 9.483333333333333], [1.72858536E12, 12.983333333333333], [1.72857888E12, 5.2], [1.7285874E12, 12.716666666666667], [1.72857852E12, 5.016666666666667], [1.72858074E12, 4.95], [1.72858518E12, 12.85], [1.72858962E12, 13.833333333333334], [1.72858296E12, 9.583333333333334], [1.72858278E12, 10.4], [1.728585E12, 13.6], [1.72858722E12, 13.933333333333334], [1.72858944E12, 15.15], [1.72857834E12, 5.55], [1.72858056E12, 5.783333333333333], [1.72858926E12, 15.016666666666667], [1.72858482E12, 14.033333333333333], [1.72858704E12, 13.333333333333334], [1.72857816E12, 2.566666666666667], [1.7285826E12, 9.8], [1.72858038E12, 5.566666666666666], [1.72858908E12, 14.083333333333334], [1.72858686E12, 12.516666666666667], [1.72858242E12, 9.466666666666667], [1.72858464E12, 8.316666666666666], [1.72858668E12, 9.55], [1.72857798E12, 2.8], [1.7285802E12, 5.2], [1.72858446E12, 10.133333333333333], [1.7285889E12, 14.016666666666667], [1.72858224E12, 10.0], [1.72858002E12, 5.133333333333334], [1.72858206E12, 10.7], [1.72858428E12, 9.433333333333334], [1.7285865E12, 12.266666666666667], [1.72858872E12, 15.316666666666666], [1.72857966E12, 5.183333333333334], [1.72858854E12, 14.333333333333334], [1.7285841E12, 9.616666666666667], [1.72858188E12, 10.1], [1.72858632E12, 9.45], [1.72857984E12, 5.566666666666666], [1.72857948E12, 5.466666666666667], [1.72858614E12, 8.816666666666666], [1.72858836E12, 14.566666666666666], [1.7285817E12, 10.1], [1.72858392E12, 9.75], [1.72858596E12, 13.116666666666667], [1.72858818E12, 14.65], [1.7285793E12, 5.183333333333334], [1.72858152E12, 9.916666666666666], [1.72858374E12, 10.8], [1.72858578E12, 13.283333333333333], [1.72857912E12, 4.616666666666666], [1.72858356E12, 9.8], [1.728588E12, 15.516666666666667], [1.72858134E12, 3.35], [1.72858782E12, 14.6], [1.72858338E12, 9.916666666666666], [1.7285856E12, 13.216666666666667], [1.72858764E12, 2.683333333333333], [1.72857894E12, 5.3], [1.72858116E12, 5.233333333333333], [1.72858542E12, 13.6], [1.72858986E12, 1.3666666666666667], [1.7285832E12, 9.666666666666666], [1.72857876E12, 5.316666666666666], [1.72858098E12, 4.833333333333333], [1.72858302E12, 9.35], [1.72858524E12, 13.066666666666666], [1.72858746E12, 11.9], [1.72858968E12, 15.033333333333333], [1.7285895E12, 15.333333333333334], [1.72858062E12, 5.233333333333333], [1.72858506E12, 13.45], [1.72858284E12, 10.15], [1.72858728E12, 13.783333333333333], [1.7285808E12, 4.9], [1.72857858E12, 5.45], [1.7285871E12, 13.433333333333334], [1.72858932E12, 15.383333333333333], [1.72857822E12, 2.6], [1.72858044E12, 5.066666666666666], [1.72858488E12, 14.233333333333333], [1.72858266E12, 9.45], [1.7285784E12, 5.133333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72858986E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

