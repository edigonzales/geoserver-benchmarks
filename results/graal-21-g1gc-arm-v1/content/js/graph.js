/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 33.0, "minX": 0.0, "maxY": 4582.0, "series": [{"data": [[0.0, 33.0], [0.1, 53.0], [0.2, 56.0], [0.3, 58.0], [0.4, 60.0], [0.5, 61.0], [0.6, 62.0], [0.7, 63.0], [0.8, 64.0], [0.9, 65.0], [1.0, 66.0], [1.1, 67.0], [1.2, 68.0], [1.3, 68.0], [1.4, 69.0], [1.5, 70.0], [1.6, 70.0], [1.7, 71.0], [1.8, 71.0], [1.9, 72.0], [2.0, 73.0], [2.1, 73.0], [2.2, 74.0], [2.3, 74.0], [2.4, 75.0], [2.5, 75.0], [2.6, 76.0], [2.7, 76.0], [2.8, 77.0], [2.9, 77.0], [3.0, 78.0], [3.1, 78.0], [3.2, 78.0], [3.3, 79.0], [3.4, 79.0], [3.5, 80.0], [3.6, 80.0], [3.7, 81.0], [3.8, 81.0], [3.9, 81.0], [4.0, 82.0], [4.1, 82.0], [4.2, 83.0], [4.3, 83.0], [4.4, 83.0], [4.5, 84.0], [4.6, 84.0], [4.7, 84.0], [4.8, 85.0], [4.9, 85.0], [5.0, 86.0], [5.1, 86.0], [5.2, 86.0], [5.3, 87.0], [5.4, 87.0], [5.5, 87.0], [5.6, 88.0], [5.7, 88.0], [5.8, 88.0], [5.9, 89.0], [6.0, 89.0], [6.1, 89.0], [6.2, 90.0], [6.3, 90.0], [6.4, 90.0], [6.5, 91.0], [6.6, 91.0], [6.7, 91.0], [6.8, 91.0], [6.9, 92.0], [7.0, 92.0], [7.1, 92.0], [7.2, 93.0], [7.3, 93.0], [7.4, 93.0], [7.5, 94.0], [7.6, 94.0], [7.7, 94.0], [7.8, 95.0], [7.9, 95.0], [8.0, 95.0], [8.1, 96.0], [8.2, 96.0], [8.3, 96.0], [8.4, 97.0], [8.5, 97.0], [8.6, 97.0], [8.7, 98.0], [8.8, 98.0], [8.9, 98.0], [9.0, 98.0], [9.1, 99.0], [9.2, 99.0], [9.3, 99.0], [9.4, 100.0], [9.5, 100.0], [9.6, 100.0], [9.7, 101.0], [9.8, 101.0], [9.9, 101.0], [10.0, 102.0], [10.1, 102.0], [10.2, 102.0], [10.3, 103.0], [10.4, 103.0], [10.5, 103.0], [10.6, 103.0], [10.7, 104.0], [10.8, 104.0], [10.9, 104.0], [11.0, 105.0], [11.1, 105.0], [11.2, 105.0], [11.3, 106.0], [11.4, 106.0], [11.5, 106.0], [11.6, 106.0], [11.7, 107.0], [11.8, 107.0], [11.9, 107.0], [12.0, 108.0], [12.1, 108.0], [12.2, 108.0], [12.3, 109.0], [12.4, 109.0], [12.5, 109.0], [12.6, 110.0], [12.7, 110.0], [12.8, 110.0], [12.9, 110.0], [13.0, 111.0], [13.1, 111.0], [13.2, 111.0], [13.3, 112.0], [13.4, 112.0], [13.5, 112.0], [13.6, 113.0], [13.7, 113.0], [13.8, 113.0], [13.9, 114.0], [14.0, 114.0], [14.1, 114.0], [14.2, 114.0], [14.3, 115.0], [14.4, 115.0], [14.5, 115.0], [14.6, 116.0], [14.7, 116.0], [14.8, 116.0], [14.9, 117.0], [15.0, 117.0], [15.1, 117.0], [15.2, 118.0], [15.3, 118.0], [15.4, 118.0], [15.5, 119.0], [15.6, 119.0], [15.7, 119.0], [15.8, 120.0], [15.9, 120.0], [16.0, 121.0], [16.1, 121.0], [16.2, 121.0], [16.3, 122.0], [16.4, 122.0], [16.5, 122.0], [16.6, 123.0], [16.7, 123.0], [16.8, 123.0], [16.9, 124.0], [17.0, 124.0], [17.1, 124.0], [17.2, 125.0], [17.3, 125.0], [17.4, 125.0], [17.5, 126.0], [17.6, 126.0], [17.7, 127.0], [17.8, 127.0], [17.9, 127.0], [18.0, 128.0], [18.1, 128.0], [18.2, 128.0], [18.3, 129.0], [18.4, 129.0], [18.5, 129.0], [18.6, 130.0], [18.7, 130.0], [18.8, 130.0], [18.9, 131.0], [19.0, 131.0], [19.1, 132.0], [19.2, 132.0], [19.3, 132.0], [19.4, 133.0], [19.5, 133.0], [19.6, 133.0], [19.7, 134.0], [19.8, 134.0], [19.9, 134.0], [20.0, 135.0], [20.1, 135.0], [20.2, 136.0], [20.3, 136.0], [20.4, 137.0], [20.5, 137.0], [20.6, 137.0], [20.7, 138.0], [20.8, 138.0], [20.9, 139.0], [21.0, 139.0], [21.1, 139.0], [21.2, 140.0], [21.3, 140.0], [21.4, 141.0], [21.5, 141.0], [21.6, 142.0], [21.7, 142.0], [21.8, 142.0], [21.9, 143.0], [22.0, 143.0], [22.1, 144.0], [22.2, 144.0], [22.3, 145.0], [22.4, 145.0], [22.5, 146.0], [22.6, 146.0], [22.7, 147.0], [22.8, 147.0], [22.9, 148.0], [23.0, 148.0], [23.1, 149.0], [23.2, 149.0], [23.3, 149.0], [23.4, 150.0], [23.5, 150.0], [23.6, 151.0], [23.7, 151.0], [23.8, 152.0], [23.9, 152.0], [24.0, 153.0], [24.1, 153.0], [24.2, 154.0], [24.3, 154.0], [24.4, 155.0], [24.5, 155.0], [24.6, 156.0], [24.7, 156.0], [24.8, 157.0], [24.9, 157.0], [25.0, 158.0], [25.1, 158.0], [25.2, 159.0], [25.3, 159.0], [25.4, 160.0], [25.5, 161.0], [25.6, 161.0], [25.7, 162.0], [25.8, 162.0], [25.9, 163.0], [26.0, 163.0], [26.1, 164.0], [26.2, 164.0], [26.3, 165.0], [26.4, 165.0], [26.5, 166.0], [26.6, 167.0], [26.7, 167.0], [26.8, 168.0], [26.9, 168.0], [27.0, 169.0], [27.1, 170.0], [27.2, 170.0], [27.3, 171.0], [27.4, 171.0], [27.5, 172.0], [27.6, 173.0], [27.7, 173.0], [27.8, 174.0], [27.9, 174.0], [28.0, 175.0], [28.1, 176.0], [28.2, 177.0], [28.3, 177.0], [28.4, 178.0], [28.5, 179.0], [28.6, 179.0], [28.7, 180.0], [28.8, 181.0], [28.9, 181.0], [29.0, 182.0], [29.1, 183.0], [29.2, 184.0], [29.3, 184.0], [29.4, 185.0], [29.5, 186.0], [29.6, 187.0], [29.7, 187.0], [29.8, 188.0], [29.9, 189.0], [30.0, 190.0], [30.1, 190.0], [30.2, 191.0], [30.3, 192.0], [30.4, 193.0], [30.5, 194.0], [30.6, 195.0], [30.7, 195.0], [30.8, 196.0], [30.9, 197.0], [31.0, 198.0], [31.1, 198.0], [31.2, 199.0], [31.3, 200.0], [31.4, 201.0], [31.5, 202.0], [31.6, 203.0], [31.7, 203.0], [31.8, 204.0], [31.9, 205.0], [32.0, 206.0], [32.1, 207.0], [32.2, 207.0], [32.3, 208.0], [32.4, 209.0], [32.5, 210.0], [32.6, 211.0], [32.7, 212.0], [32.8, 213.0], [32.9, 214.0], [33.0, 215.0], [33.1, 216.0], [33.2, 217.0], [33.3, 218.0], [33.4, 219.0], [33.5, 220.0], [33.6, 221.0], [33.7, 222.0], [33.8, 223.0], [33.9, 224.0], [34.0, 225.0], [34.1, 226.0], [34.2, 227.0], [34.3, 228.0], [34.4, 229.0], [34.5, 230.0], [34.6, 231.0], [34.7, 233.0], [34.8, 234.0], [34.9, 235.0], [35.0, 236.0], [35.1, 237.0], [35.2, 238.0], [35.3, 239.0], [35.4, 240.0], [35.5, 242.0], [35.6, 243.0], [35.7, 244.0], [35.8, 245.0], [35.9, 246.0], [36.0, 248.0], [36.1, 249.0], [36.2, 250.0], [36.3, 251.0], [36.4, 253.0], [36.5, 254.0], [36.6, 255.0], [36.7, 257.0], [36.8, 258.0], [36.9, 260.0], [37.0, 261.0], [37.1, 262.0], [37.2, 264.0], [37.3, 265.0], [37.4, 267.0], [37.5, 268.0], [37.6, 270.0], [37.7, 271.0], [37.8, 273.0], [37.9, 274.0], [38.0, 276.0], [38.1, 277.0], [38.2, 279.0], [38.3, 281.0], [38.4, 282.0], [38.5, 284.0], [38.6, 285.0], [38.7, 287.0], [38.8, 289.0], [38.9, 291.0], [39.0, 292.0], [39.1, 294.0], [39.2, 296.0], [39.3, 297.0], [39.4, 299.0], [39.5, 301.0], [39.6, 303.0], [39.7, 305.0], [39.8, 306.0], [39.9, 308.0], [40.0, 311.0], [40.1, 312.0], [40.2, 314.0], [40.3, 316.0], [40.4, 318.0], [40.5, 320.0], [40.6, 322.0], [40.7, 324.0], [40.8, 326.0], [40.9, 328.0], [41.0, 331.0], [41.1, 333.0], [41.2, 336.0], [41.3, 338.0], [41.4, 340.0], [41.5, 343.0], [41.6, 345.0], [41.7, 347.0], [41.8, 350.0], [41.9, 352.0], [42.0, 354.0], [42.1, 357.0], [42.2, 359.0], [42.3, 362.0], [42.4, 365.0], [42.5, 368.0], [42.6, 370.0], [42.7, 372.0], [42.8, 375.0], [42.9, 377.0], [43.0, 380.0], [43.1, 383.0], [43.2, 386.0], [43.3, 389.0], [43.4, 392.0], [43.5, 395.0], [43.6, 399.0], [43.7, 402.0], [43.8, 406.0], [43.9, 409.0], [44.0, 412.0], [44.1, 415.0], [44.2, 419.0], [44.3, 422.0], [44.4, 426.0], [44.5, 429.0], [44.6, 433.0], [44.7, 436.0], [44.8, 440.0], [44.9, 444.0], [45.0, 447.0], [45.1, 451.0], [45.2, 455.0], [45.3, 459.0], [45.4, 462.0], [45.5, 466.0], [45.6, 471.0], [45.7, 475.0], [45.8, 479.0], [45.9, 483.0], [46.0, 486.0], [46.1, 490.0], [46.2, 493.0], [46.3, 497.0], [46.4, 500.0], [46.5, 503.0], [46.6, 507.0], [46.7, 511.0], [46.8, 514.0], [46.9, 518.0], [47.0, 521.0], [47.1, 525.0], [47.2, 528.0], [47.3, 531.0], [47.4, 535.0], [47.5, 538.0], [47.6, 542.0], [47.7, 546.0], [47.8, 549.0], [47.9, 553.0], [48.0, 557.0], [48.1, 561.0], [48.2, 564.0], [48.3, 567.0], [48.4, 571.0], [48.5, 575.0], [48.6, 578.0], [48.7, 581.0], [48.8, 584.0], [48.9, 587.0], [49.0, 590.0], [49.1, 594.0], [49.2, 597.0], [49.3, 600.0], [49.4, 604.0], [49.5, 607.0], [49.6, 610.0], [49.7, 613.0], [49.8, 616.0], [49.9, 619.0], [50.0, 623.0], [50.1, 626.0], [50.2, 629.0], [50.3, 632.0], [50.4, 635.0], [50.5, 638.0], [50.6, 642.0], [50.7, 645.0], [50.8, 647.0], [50.9, 651.0], [51.0, 654.0], [51.1, 656.0], [51.2, 659.0], [51.3, 662.0], [51.4, 664.0], [51.5, 667.0], [51.6, 669.0], [51.7, 673.0], [51.8, 675.0], [51.9, 678.0], [52.0, 681.0], [52.1, 684.0], [52.2, 686.0], [52.3, 689.0], [52.4, 691.0], [52.5, 694.0], [52.6, 696.0], [52.7, 699.0], [52.8, 701.0], [52.9, 703.0], [53.0, 706.0], [53.1, 708.0], [53.2, 711.0], [53.3, 713.0], [53.4, 715.0], [53.5, 718.0], [53.6, 720.0], [53.7, 722.0], [53.8, 725.0], [53.9, 728.0], [54.0, 730.0], [54.1, 733.0], [54.2, 736.0], [54.3, 738.0], [54.4, 740.0], [54.5, 742.0], [54.6, 745.0], [54.7, 747.0], [54.8, 749.0], [54.9, 752.0], [55.0, 754.0], [55.1, 756.0], [55.2, 758.0], [55.3, 760.0], [55.4, 762.0], [55.5, 764.0], [55.6, 767.0], [55.7, 769.0], [55.8, 771.0], [55.9, 773.0], [56.0, 775.0], [56.1, 777.0], [56.2, 779.0], [56.3, 782.0], [56.4, 784.0], [56.5, 786.0], [56.6, 788.0], [56.7, 790.0], [56.8, 793.0], [56.9, 796.0], [57.0, 798.0], [57.1, 800.0], [57.2, 802.0], [57.3, 804.0], [57.4, 806.0], [57.5, 808.0], [57.6, 811.0], [57.7, 813.0], [57.8, 815.0], [57.9, 817.0], [58.0, 819.0], [58.1, 820.0], [58.2, 822.0], [58.3, 824.0], [58.4, 826.0], [58.5, 828.0], [58.6, 830.0], [58.7, 833.0], [58.8, 835.0], [58.9, 837.0], [59.0, 839.0], [59.1, 840.0], [59.2, 843.0], [59.3, 845.0], [59.4, 847.0], [59.5, 849.0], [59.6, 851.0], [59.7, 853.0], [59.8, 856.0], [59.9, 858.0], [60.0, 859.0], [60.1, 861.0], [60.2, 864.0], [60.3, 866.0], [60.4, 867.0], [60.5, 869.0], [60.6, 871.0], [60.7, 873.0], [60.8, 875.0], [60.9, 877.0], [61.0, 879.0], [61.1, 881.0], [61.2, 883.0], [61.3, 885.0], [61.4, 887.0], [61.5, 889.0], [61.6, 891.0], [61.7, 893.0], [61.8, 895.0], [61.9, 897.0], [62.0, 899.0], [62.1, 901.0], [62.2, 903.0], [62.3, 905.0], [62.4, 907.0], [62.5, 909.0], [62.6, 911.0], [62.7, 913.0], [62.8, 915.0], [62.9, 917.0], [63.0, 919.0], [63.1, 921.0], [63.2, 922.0], [63.3, 925.0], [63.4, 927.0], [63.5, 928.0], [63.6, 930.0], [63.7, 933.0], [63.8, 935.0], [63.9, 937.0], [64.0, 939.0], [64.1, 941.0], [64.2, 943.0], [64.3, 945.0], [64.4, 947.0], [64.5, 949.0], [64.6, 951.0], [64.7, 953.0], [64.8, 955.0], [64.9, 957.0], [65.0, 959.0], [65.1, 961.0], [65.2, 963.0], [65.3, 965.0], [65.4, 967.0], [65.5, 969.0], [65.6, 971.0], [65.7, 973.0], [65.8, 975.0], [65.9, 977.0], [66.0, 979.0], [66.1, 981.0], [66.2, 983.0], [66.3, 985.0], [66.4, 986.0], [66.5, 988.0], [66.6, 991.0], [66.7, 993.0], [66.8, 995.0], [66.9, 997.0], [67.0, 999.0], [67.1, 1001.0], [67.2, 1003.0], [67.3, 1005.0], [67.4, 1007.0], [67.5, 1009.0], [67.6, 1011.0], [67.7, 1013.0], [67.8, 1015.0], [67.9, 1016.0], [68.0, 1018.0], [68.1, 1020.0], [68.2, 1022.0], [68.3, 1024.0], [68.4, 1026.0], [68.5, 1028.0], [68.6, 1030.0], [68.7, 1033.0], [68.8, 1034.0], [68.9, 1036.0], [69.0, 1038.0], [69.1, 1040.0], [69.2, 1042.0], [69.3, 1043.0], [69.4, 1045.0], [69.5, 1048.0], [69.6, 1049.0], [69.7, 1051.0], [69.8, 1053.0], [69.9, 1055.0], [70.0, 1057.0], [70.1, 1059.0], [70.2, 1061.0], [70.3, 1063.0], [70.4, 1065.0], [70.5, 1067.0], [70.6, 1069.0], [70.7, 1071.0], [70.8, 1073.0], [70.9, 1076.0], [71.0, 1078.0], [71.1, 1080.0], [71.2, 1081.0], [71.3, 1083.0], [71.4, 1085.0], [71.5, 1087.0], [71.6, 1090.0], [71.7, 1092.0], [71.8, 1094.0], [71.9, 1096.0], [72.0, 1098.0], [72.1, 1100.0], [72.2, 1102.0], [72.3, 1104.0], [72.4, 1107.0], [72.5, 1109.0], [72.6, 1111.0], [72.7, 1113.0], [72.8, 1116.0], [72.9, 1118.0], [73.0, 1120.0], [73.1, 1122.0], [73.2, 1124.0], [73.3, 1126.0], [73.4, 1128.0], [73.5, 1130.0], [73.6, 1132.0], [73.7, 1134.0], [73.8, 1137.0], [73.9, 1139.0], [74.0, 1141.0], [74.1, 1143.0], [74.2, 1145.0], [74.3, 1147.0], [74.4, 1149.0], [74.5, 1151.0], [74.6, 1153.0], [74.7, 1155.0], [74.8, 1157.0], [74.9, 1160.0], [75.0, 1162.0], [75.1, 1164.0], [75.2, 1166.0], [75.3, 1168.0], [75.4, 1170.0], [75.5, 1173.0], [75.6, 1175.0], [75.7, 1177.0], [75.8, 1179.0], [75.9, 1181.0], [76.0, 1184.0], [76.1, 1186.0], [76.2, 1188.0], [76.3, 1190.0], [76.4, 1192.0], [76.5, 1195.0], [76.6, 1197.0], [76.7, 1199.0], [76.8, 1201.0], [76.9, 1204.0], [77.0, 1206.0], [77.1, 1208.0], [77.2, 1209.0], [77.3, 1211.0], [77.4, 1214.0], [77.5, 1216.0], [77.6, 1218.0], [77.7, 1220.0], [77.8, 1223.0], [77.9, 1225.0], [78.0, 1227.0], [78.1, 1230.0], [78.2, 1232.0], [78.3, 1235.0], [78.4, 1237.0], [78.5, 1240.0], [78.6, 1242.0], [78.7, 1244.0], [78.8, 1247.0], [78.9, 1249.0], [79.0, 1252.0], [79.1, 1254.0], [79.2, 1256.0], [79.3, 1259.0], [79.4, 1262.0], [79.5, 1264.0], [79.6, 1266.0], [79.7, 1269.0], [79.8, 1271.0], [79.9, 1274.0], [80.0, 1277.0], [80.1, 1280.0], [80.2, 1283.0], [80.3, 1285.0], [80.4, 1288.0], [80.5, 1291.0], [80.6, 1293.0], [80.7, 1296.0], [80.8, 1298.0], [80.9, 1301.0], [81.0, 1304.0], [81.1, 1307.0], [81.2, 1309.0], [81.3, 1312.0], [81.4, 1314.0], [81.5, 1317.0], [81.6, 1320.0], [81.7, 1322.0], [81.8, 1325.0], [81.9, 1328.0], [82.0, 1331.0], [82.1, 1334.0], [82.2, 1336.0], [82.3, 1339.0], [82.4, 1342.0], [82.5, 1345.0], [82.6, 1347.0], [82.7, 1351.0], [82.8, 1353.0], [82.9, 1356.0], [83.0, 1359.0], [83.1, 1361.0], [83.2, 1364.0], [83.3, 1367.0], [83.4, 1370.0], [83.5, 1373.0], [83.6, 1376.0], [83.7, 1378.0], [83.8, 1381.0], [83.9, 1385.0], [84.0, 1388.0], [84.1, 1391.0], [84.2, 1393.0], [84.3, 1396.0], [84.4, 1399.0], [84.5, 1402.0], [84.6, 1406.0], [84.7, 1409.0], [84.8, 1413.0], [84.9, 1416.0], [85.0, 1419.0], [85.1, 1422.0], [85.2, 1425.0], [85.3, 1429.0], [85.4, 1432.0], [85.5, 1435.0], [85.6, 1438.0], [85.7, 1441.0], [85.8, 1444.0], [85.9, 1447.0], [86.0, 1450.0], [86.1, 1454.0], [86.2, 1457.0], [86.3, 1461.0], [86.4, 1464.0], [86.5, 1467.0], [86.6, 1471.0], [86.7, 1474.0], [86.8, 1477.0], [86.9, 1480.0], [87.0, 1484.0], [87.1, 1487.0], [87.2, 1491.0], [87.3, 1495.0], [87.4, 1499.0], [87.5, 1503.0], [87.6, 1506.0], [87.7, 1510.0], [87.8, 1514.0], [87.9, 1518.0], [88.0, 1523.0], [88.1, 1527.0], [88.2, 1530.0], [88.3, 1534.0], [88.4, 1537.0], [88.5, 1542.0], [88.6, 1546.0], [88.7, 1550.0], [88.8, 1554.0], [88.9, 1559.0], [89.0, 1562.0], [89.1, 1566.0], [89.2, 1570.0], [89.3, 1575.0], [89.4, 1579.0], [89.5, 1583.0], [89.6, 1587.0], [89.7, 1591.0], [89.8, 1595.0], [89.9, 1600.0], [90.0, 1604.0], [90.1, 1607.0], [90.2, 1612.0], [90.3, 1616.0], [90.4, 1621.0], [90.5, 1627.0], [90.6, 1632.0], [90.7, 1636.0], [90.8, 1640.0], [90.9, 1644.0], [91.0, 1649.0], [91.1, 1654.0], [91.2, 1658.0], [91.3, 1663.0], [91.4, 1669.0], [91.5, 1675.0], [91.6, 1680.0], [91.7, 1686.0], [91.8, 1691.0], [91.9, 1696.0], [92.0, 1700.0], [92.1, 1705.0], [92.2, 1711.0], [92.3, 1717.0], [92.4, 1722.0], [92.5, 1728.0], [92.6, 1733.0], [92.7, 1739.0], [92.8, 1746.0], [92.9, 1751.0], [93.0, 1756.0], [93.1, 1762.0], [93.2, 1769.0], [93.3, 1775.0], [93.4, 1780.0], [93.5, 1787.0], [93.6, 1792.0], [93.7, 1799.0], [93.8, 1805.0], [93.9, 1811.0], [94.0, 1819.0], [94.1, 1825.0], [94.2, 1832.0], [94.3, 1839.0], [94.4, 1846.0], [94.5, 1853.0], [94.6, 1862.0], [94.7, 1870.0], [94.8, 1879.0], [94.9, 1888.0], [95.0, 1896.0], [95.1, 1904.0], [95.2, 1912.0], [95.3, 1920.0], [95.4, 1928.0], [95.5, 1936.0], [95.6, 1945.0], [95.7, 1953.0], [95.8, 1963.0], [95.9, 1973.0], [96.0, 1982.0], [96.1, 1992.0], [96.2, 2000.0], [96.3, 2009.0], [96.4, 2019.0], [96.5, 2030.0], [96.6, 2040.0], [96.7, 2051.0], [96.8, 2063.0], [96.9, 2075.0], [97.0, 2087.0], [97.1, 2101.0], [97.2, 2115.0], [97.3, 2127.0], [97.4, 2143.0], [97.5, 2157.0], [97.6, 2170.0], [97.7, 2187.0], [97.8, 2201.0], [97.9, 2217.0], [98.0, 2235.0], [98.1, 2254.0], [98.2, 2272.0], [98.3, 2292.0], [98.4, 2309.0], [98.5, 2334.0], [98.6, 2360.0], [98.7, 2389.0], [98.8, 2416.0], [98.9, 2451.0], [99.0, 2482.0], [99.1, 2513.0], [99.2, 2552.0], [99.3, 2593.0], [99.4, 2643.0], [99.5, 2700.0], [99.6, 2772.0], [99.7, 2860.0], [99.8, 3008.0], [99.9, 3210.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 25638.0, "series": [{"data": [[0.0, 10968.0], [600.0, 4059.0], [700.0, 5091.0], [800.0, 5795.0], [900.0, 5873.0], [1000.0, 5916.0], [1100.0, 5426.0], [1200.0, 4845.0], [1300.0, 4165.0], [1400.0, 3522.0], [1500.0, 2907.0], [1600.0, 2461.0], [100.0, 25638.0], [1700.0, 2014.0], [1800.0, 1563.0], [1900.0, 1348.0], [2000.0, 1053.0], [2100.0, 818.0], [2200.0, 655.0], [2300.0, 447.0], [2400.0, 379.0], [2500.0, 302.0], [2600.0, 220.0], [2700.0, 161.0], [2800.0, 106.0], [2900.0, 85.0], [3000.0, 63.0], [3100.0, 49.0], [200.0, 9599.0], [3200.0, 42.0], [3300.0, 25.0], [3400.0, 21.0], [3500.0, 12.0], [3600.0, 5.0], [3700.0, 5.0], [3800.0, 4.0], [3900.0, 2.0], [4000.0, 4.0], [4300.0, 1.0], [4100.0, 1.0], [4200.0, 1.0], [4400.0, 1.0], [4500.0, 1.0], [300.0, 4917.0], [400.0, 3248.0], [500.0, 3382.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 14729.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 54411.0, "series": [{"data": [[0.0, 54411.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 48060.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 14729.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.025641025641026, "minX": 1.72875408E12, "maxY": 16.0, "series": [{"data": [[1.72876026E12, 12.0], [1.72876056E12, 12.0], [1.72875996E12, 12.0], [1.72876158E12, 12.0], [1.72876188E12, 10.51414514145142], [1.72875984E12, 12.0], [1.72876146E12, 12.0], [1.72876176E12, 12.0], [1.72876086E12, 12.0], [1.72876116E12, 12.0], [1.72876074E12, 12.0], [1.72876104E12, 12.0], [1.72876014E12, 12.0], [1.72876044E12, 12.0], [1.72876194E12, 1.507042253521127], [1.72876002E12, 12.0], [1.72876032E12, 12.0], [1.72875972E12, 11.880681818181808], [1.72876134E12, 12.0], [1.72876164E12, 12.0], [1.72876122E12, 12.0], [1.72876152E12, 12.0], [1.72876062E12, 12.0], [1.72876092E12, 12.0], [1.7287605E12, 12.0], [1.7287608E12, 12.0], [1.72876182E12, 12.0], [1.7287599E12, 12.0], [1.7287602E12, 12.0], [1.7287617E12, 12.0], [1.72875978E12, 12.0], [1.72876008E12, 12.0], [1.7287611E12, 12.0], [1.7287614E12, 12.0], [1.72876098E12, 12.0], [1.72876128E12, 12.0], [1.72876038E12, 12.0], [1.72876068E12, 12.0]], "isOverall": false, "label": "12", "isController": false}, {"data": [[1.72875444E12, 2.0], [1.72875414E12, 2.0], [1.72875408E12, 2.0], [1.72875426E12, 2.0], [1.7287542E12, 2.0], [1.72875438E12, 2.0], [1.72875432E12, 2.0], [1.7287545E12, 1.025641025641026]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.72875492E12, 4.0], [1.72875654E12, 4.0], [1.72875462E12, 4.0], [1.72875684E12, 4.0], [1.72875552E12, 4.0], [1.72875522E12, 4.0], [1.72875564E12, 4.0], [1.72875534E12, 4.0], [1.72875594E12, 4.0], [1.72875624E12, 4.0], [1.72875606E12, 4.0], [1.72875636E12, 4.0], [1.72875504E12, 4.0], [1.72875666E12, 4.0], [1.72875696E12, 4.0], [1.72875474E12, 4.0], [1.72875516E12, 4.0], [1.72875678E12, 4.0], [1.72875486E12, 4.0], [1.72875576E12, 4.0], [1.72875546E12, 4.0], [1.72875558E12, 4.0], [1.72875588E12, 4.0], [1.72875456E12, 4.0], [1.72875618E12, 4.0], [1.72875648E12, 4.0], [1.72875468E12, 4.0], [1.7287563E12, 4.0], [1.7287566E12, 4.0], [1.72875528E12, 4.0], [1.7287569E12, 4.0], [1.72875498E12, 4.0], [1.7287554E12, 4.0], [1.72875702E12, 2.9004149377593365], [1.7287551E12, 4.0], [1.7287557E12, 4.0], [1.728756E12, 4.0], [1.72875582E12, 4.0], [1.72875612E12, 4.0], [1.7287548E12, 4.0], [1.72875642E12, 4.0], [1.7287545E12, 3.996491228070177], [1.72875672E12, 4.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.7287635E12, 16.0], [1.72876248E12, 16.0], [1.72876218E12, 16.0], [1.72876308E12, 16.0], [1.72876278E12, 16.0], [1.72876368E12, 11.416164053075994], [1.72876338E12, 16.0], [1.72876236E12, 16.0], [1.72876206E12, 16.0], [1.72876296E12, 16.0], [1.72876266E12, 16.0], [1.72876194E12, 15.91666666666666], [1.72876356E12, 16.0], [1.72876326E12, 16.0], [1.72876224E12, 16.0], [1.72876284E12, 16.0], [1.72876254E12, 16.0], [1.72876344E12, 16.0], [1.72876314E12, 16.0], [1.72876212E12, 16.0], [1.72876374E12, 2.5882352941176463], [1.72876272E12, 16.0], [1.72876242E12, 16.0], [1.72876332E12, 16.0], [1.728762E12, 16.0], [1.72876302E12, 16.0], [1.72876362E12, 15.64551223934723], [1.7287626E12, 16.0], [1.7287623E12, 16.0], [1.7287632E12, 16.0], [1.7287629E12, 16.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.72875864E12, 8.0], [1.72875834E12, 8.0], [1.72875714E12, 8.0], [1.72875804E12, 8.0], [1.72875744E12, 8.0], [1.72875966E12, 7.502311248073962], [1.72875726E12, 8.0], [1.72875792E12, 8.0], [1.72875756E12, 8.0], [1.72875954E12, 8.0], [1.72875786E12, 8.0], [1.72875924E12, 8.0], [1.72875894E12, 8.0], [1.72875912E12, 8.0], [1.72875882E12, 8.0], [1.72875852E12, 8.0], [1.72875822E12, 8.0], [1.7287584E12, 8.0], [1.72875708E12, 8.0], [1.7287581E12, 8.0], [1.72875738E12, 8.0], [1.72875972E12, 4.310344827586209], [1.72875768E12, 8.0], [1.72875942E12, 8.0], [1.7287575E12, 8.0], [1.7287596E12, 8.0], [1.7287578E12, 8.0], [1.7287593E12, 8.0], [1.728759E12, 8.0], [1.7287587E12, 8.0], [1.72875888E12, 8.0], [1.72875858E12, 8.0], [1.72875828E12, 8.0], [1.7287572E12, 8.0], [1.72875798E12, 8.0], [1.72875702E12, 7.882352941176471], [1.72875816E12, 8.0], [1.72875732E12, 8.0], [1.72875762E12, 8.0], [1.72875948E12, 8.0], [1.72875918E12, 8.0], [1.72875774E12, 8.0], [1.72875936E12, 8.0], [1.72875906E12, 8.0], [1.72875876E12, 8.0], [1.72875846E12, 8.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72876374E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 521.4, "minX": 1.0, "maxY": 877.6420778374863, "series": [{"data": [[2.0, 633.0881410256408], [8.0, 663.8367256637214], [9.0, 718.4285714285714], [10.0, 675.2834645669294], [11.0, 607.0187499999998], [3.0, 621.8093645484952], [12.0, 724.8624719101143], [13.0, 811.5323193916345], [14.0, 521.4], [15.0, 773.054006968641], [1.0, 615.5510204081633], [4.0, 634.8265626965161], [16.0, 877.6420778374863], [5.0, 599.8453038674036], [6.0, 705.6666666666669], [7.0, 635.7864583333333]], "isOverall": false, "label": "getmap", "isController": false}, {"data": [[10.731894197952125, 734.6337116040781]], "isOverall": false, "label": "getmap-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.72875408E12, "maxY": 5.35870465E7, "series": [{"data": [[1.72876026E12, 4.714265315E7], [1.7287635E12, 5.26928156E7], [1.72875462E12, 1.9777260083333332E7], [1.72875684E12, 1.9368774966666665E7], [1.72875804E12, 3.65695804E7], [1.72876248E12, 4.95645613E7], [1.72875564E12, 1.9266993633333333E7], [1.72876146E12, 4.7698607733333334E7], [1.72875786E12, 3.557265446666667E7], [1.72875924E12, 3.627121856666667E7], [1.72876368E12, 3.7762012483333334E7], [1.72875444E12, 9442663.65], [1.72875666E12, 1.83008949E7], [1.72875822E12, 3.582511768333333E7], [1.72876044E12, 4.8404218416666664E7], [1.72876266E12, 5.1857911916666664E7], [1.7287584E12, 3.654257828333333E7], [1.72875546E12, 1.8755816183333334E7], [1.72875768E12, 3.500509271666667E7], [1.72875942E12, 3.6712827083333336E7], [1.72876164E12, 4.621283431666667E7], [1.72875618E12, 1.9265568133333333E7], [1.72876314E12, 5.126765665E7], [1.7287587E12, 3.627529388333333E7], [1.72876092E12, 4.613949718333333E7], [1.72875888E12, 3.6125963733333334E7], [1.72876212E12, 5.2033747E7], [1.72875498E12, 1.987679705E7], [1.7287572E12, 3.507492713333333E7], [1.7287599E12, 4.710752743333333E7], [1.72875702E12, 1.3981478416666666E7], [1.72876332E12, 5.1773241983333334E7], [1.72876008E12, 4.7830441333333336E7], [1.7287611E12, 4.705700921666667E7], [1.728756E12, 1.9808169583333332E7], [1.72875582E12, 1.75991934E7], [1.72875906E12, 3.4364255483333334E7], [1.72876128E12, 4.5359420266666666E7], [1.7287623E12, 5.1150877583333336E7], [1.7287548E12, 1.8806107833333332E7], [1.72875654E12, 1.882360855E7], [1.72875552E12, 1.9165167583333332E7], [1.72875996E12, 4.641028446666667E7], [1.72876218E12, 5.2363546083333336E7], [1.72875792E12, 3.566770771666667E7], [1.72875534E12, 1.9116481516666666E7], [1.72875756E12, 3.638329906666667E7], [1.72875432E12, 1.0068889583333334E7], [1.72875894E12, 3.532983593333333E7], [1.72876116E12, 4.95359662E7], [1.72876338E12, 5.03667122E7], [1.72875912E12, 3.770408006666667E7], [1.72876236E12, 5.262063495E7], [1.72875414E12, 1.040754375E7], [1.72875636E12, 1.9618275866666667E7], [1.72876014E12, 4.783775E7], [1.72875516E12, 1.9587591233333334E7], [1.72876356E12, 5.1458889333333336E7], [1.7287581E12, 3.434278846666667E7], [1.72876032E12, 4.602575575E7], [1.72875738E12, 3.59767942E7], [1.72876134E12, 4.621730021666667E7], [1.7287596E12, 3.538264946666667E7], [1.72876284E12, 5.1186308416666664E7], [1.72875588E12, 1.862889425E7], [1.72876062E12, 4.710188281666667E7], [1.72875468E12, 1.9452298033333335E7], [1.72875858E12, 3.531256281666667E7], [1.7287608E12, 4.6232270166666664E7], [1.7287569E12, 1.81023081E7], [1.72876182E12, 4.81096628E7], [1.72875978E12, 4.7099395233333334E7], [1.728762E12, 4.984216828333333E7], [1.72876302E12, 5.14291577E7], [1.7287557E12, 1.9244603933333334E7], [1.72875774E12, 3.440912881666667E7], [1.72876098E12, 4.901737365E7], [1.7287632E12, 5.176305196666667E7], [1.72875876E12, 3.692613393333333E7], [1.7287545E12, 1.42885198E7], [1.72875672E12, 1.8668711766666666E7], [1.72875864E12, 3.4143823016666666E7], [1.72875522E12, 1.9490561133333333E7], [1.72875744E12, 3.553502763333333E7], [1.72875966E12, 3.4861387766666666E7], [1.72876188E12, 3.910780606666667E7], [1.72875726E12, 3.71033756E7], [1.72875984E12, 4.7378887083333336E7], [1.72876308E12, 5.307217125E7], [1.72876086E12, 4.747357413333333E7], [1.72875624E12, 1.906856965E7], [1.72875606E12, 2.059471575E7], [1.72876104E12, 4.86252571E7], [1.72875882E12, 3.571343578333333E7], [1.72875504E12, 1.9200662016666666E7], [1.72876206E12, 5.15863048E7], [1.72876002E12, 4.872967221666667E7], [1.72875486E12, 1.999098855E7], [1.72875708E12, 3.6343763416666664E7], [1.72876326E12, 5.048753606666667E7], [1.72876224E12, 5.1337675333333336E7], [1.72875558E12, 2.0136499416666668E7], [1.7287578E12, 3.516252385E7], [1.7287593E12, 3.568901236666667E7], [1.72876152E12, 4.822510578333333E7], [1.72876254E12, 5.191388496666667E7], [1.72875456E12, 1.8560247933333334E7], [1.7287605E12, 4.7485455766666666E7], [1.72876374E12, 3794635.716666667], [1.72875438E12, 9978439.683333334], [1.7287566E12, 2.0193754983333334E7], [1.72875828E12, 3.51045928E7], [1.72876272E12, 5.11168531E7], [1.7287554E12, 1.9731810216666665E7], [1.7287617E12, 4.831673655E7], [1.72875762E12, 3.5257324666666664E7], [1.72875948E12, 3.668625768333333E7], [1.7287542E12, 9761218.533333333], [1.72875642E12, 2.002136975E7], [1.72875846E12, 3.6276407833333336E7], [1.72876068E12, 4.4558452333333336E7], [1.7287629E12, 5.1371554483333334E7], [1.72875492E12, 1.9677229733333334E7], [1.72875834E12, 3.4622113416666664E7], [1.72876056E12, 4.849657271666667E7], [1.72875714E12, 3.571492588333333E7], [1.72876158E12, 4.6488564483333334E7], [1.72875954E12, 3.63585761E7], [1.72876176E12, 4.663596588333333E7], [1.72876278E12, 5.3045263266666666E7], [1.72875594E12, 1.893996185E7], [1.72876074E12, 4.838020205E7], [1.72875852E12, 3.490408543333333E7], [1.72876296E12, 5.35870465E7], [1.72875696E12, 1.8150903233333334E7], [1.72875474E12, 1.8687872266666666E7], [1.72876194E12, 2.45746996E7], [1.72875678E12, 1.99744531E7], [1.72875576E12, 1.9388653316666666E7], [1.72875972E12, 2.7587207733333334E7], [1.7287575E12, 3.61395066E7], [1.72876122E12, 4.574590821666667E7], [1.728759E12, 3.56543077E7], [1.72876344E12, 5.139355371666667E7], [1.72875426E12, 9310694.383333333], [1.72875648E12, 2.01445973E7], [1.7287563E12, 1.93759037E7], [1.72875528E12, 1.955053755E7], [1.72875798E12, 3.686226638333333E7], [1.7287602E12, 4.761377725E7], [1.72876242E12, 5.2570734483333334E7], [1.72875816E12, 3.5863582483333334E7], [1.7287551E12, 1.9677874033333335E7], [1.72875732E12, 3.756675618333333E7], [1.72875408E12, 21081.583333333332], [1.72875918E12, 3.573685935E7], [1.7287614E12, 4.7709783516666666E7], [1.72876362E12, 5.1419205233333334E7], [1.72875936E12, 3.517113761666667E7], [1.7287626E12, 5.238916286666667E7], [1.72875612E12, 1.8675481933333334E7], [1.72876038E12, 4.5871894016666666E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72876026E12, 0.0], [1.7287635E12, 0.0], [1.72875462E12, 0.0], [1.72875684E12, 0.0], [1.72875804E12, 0.0], [1.72876248E12, 0.0], [1.72875564E12, 0.0], [1.72876146E12, 0.0], [1.72875786E12, 0.0], [1.72875924E12, 0.0], [1.72876368E12, 0.0], [1.72875444E12, 0.0], [1.72875666E12, 0.0], [1.72875822E12, 0.0], [1.72876044E12, 0.0], [1.72876266E12, 0.0], [1.7287584E12, 0.0], [1.72875546E12, 0.0], [1.72875768E12, 0.0], [1.72875942E12, 0.0], [1.72876164E12, 0.0], [1.72875618E12, 0.0], [1.72876314E12, 0.0], [1.7287587E12, 0.0], [1.72876092E12, 0.0], [1.72875888E12, 0.0], [1.72876212E12, 0.0], [1.72875498E12, 0.0], [1.7287572E12, 0.0], [1.7287599E12, 0.0], [1.72875702E12, 0.0], [1.72876332E12, 0.0], [1.72876008E12, 0.0], [1.7287611E12, 0.0], [1.728756E12, 0.0], [1.72875582E12, 0.0], [1.72875906E12, 0.0], [1.72876128E12, 0.0], [1.7287623E12, 0.0], [1.7287548E12, 0.0], [1.72875654E12, 0.0], [1.72875552E12, 0.0], [1.72875996E12, 0.0], [1.72876218E12, 0.0], [1.72875792E12, 0.0], [1.72875534E12, 0.0], [1.72875756E12, 0.0], [1.72875432E12, 0.0], [1.72875894E12, 0.0], [1.72876116E12, 0.0], [1.72876338E12, 0.0], [1.72875912E12, 0.0], [1.72876236E12, 0.0], [1.72875414E12, 0.0], [1.72875636E12, 0.0], [1.72876014E12, 0.0], [1.72875516E12, 0.0], [1.72876356E12, 0.0], [1.7287581E12, 0.0], [1.72876032E12, 0.0], [1.72875738E12, 0.0], [1.72876134E12, 0.0], [1.7287596E12, 0.0], [1.72876284E12, 0.0], [1.72875588E12, 0.0], [1.72876062E12, 0.0], [1.72875468E12, 0.0], [1.72875858E12, 0.0], [1.7287608E12, 0.0], [1.7287569E12, 0.0], [1.72876182E12, 0.0], [1.72875978E12, 0.0], [1.728762E12, 0.0], [1.72876302E12, 0.0], [1.7287557E12, 0.0], [1.72875774E12, 0.0], [1.72876098E12, 0.0], [1.7287632E12, 0.0], [1.72875876E12, 0.0], [1.7287545E12, 0.0], [1.72875672E12, 0.0], [1.72875864E12, 0.0], [1.72875522E12, 0.0], [1.72875744E12, 0.0], [1.72875966E12, 0.0], [1.72876188E12, 0.0], [1.72875726E12, 0.0], [1.72875984E12, 0.0], [1.72876308E12, 0.0], [1.72876086E12, 0.0], [1.72875624E12, 0.0], [1.72875606E12, 0.0], [1.72876104E12, 0.0], [1.72875882E12, 0.0], [1.72875504E12, 0.0], [1.72876206E12, 0.0], [1.72876002E12, 0.0], [1.72875486E12, 0.0], [1.72875708E12, 0.0], [1.72876326E12, 0.0], [1.72876224E12, 0.0], [1.72875558E12, 0.0], [1.7287578E12, 0.0], [1.7287593E12, 0.0], [1.72876152E12, 0.0], [1.72876254E12, 0.0], [1.72875456E12, 0.0], [1.7287605E12, 0.0], [1.72876374E12, 0.0], [1.72875438E12, 0.0], [1.7287566E12, 0.0], [1.72875828E12, 0.0], [1.72876272E12, 0.0], [1.7287554E12, 0.0], [1.7287617E12, 0.0], [1.72875762E12, 0.0], [1.72875948E12, 0.0], [1.7287542E12, 0.0], [1.72875642E12, 0.0], [1.72875846E12, 0.0], [1.72876068E12, 0.0], [1.7287629E12, 0.0], [1.72875492E12, 0.0], [1.72875834E12, 0.0], [1.72876056E12, 0.0], [1.72875714E12, 0.0], [1.72876158E12, 0.0], [1.72875954E12, 0.0], [1.72876176E12, 0.0], [1.72876278E12, 0.0], [1.72875594E12, 0.0], [1.72876074E12, 0.0], [1.72875852E12, 0.0], [1.72876296E12, 0.0], [1.72875696E12, 0.0], [1.72875474E12, 0.0], [1.72876194E12, 0.0], [1.72875678E12, 0.0], [1.72875576E12, 0.0], [1.72875972E12, 0.0], [1.7287575E12, 0.0], [1.72876122E12, 0.0], [1.728759E12, 0.0], [1.72876344E12, 0.0], [1.72875426E12, 0.0], [1.72875648E12, 0.0], [1.7287563E12, 0.0], [1.72875528E12, 0.0], [1.72875798E12, 0.0], [1.7287602E12, 0.0], [1.72876242E12, 0.0], [1.72875816E12, 0.0], [1.7287551E12, 0.0], [1.72875732E12, 0.0], [1.72875408E12, 0.0], [1.72875918E12, 0.0], [1.7287614E12, 0.0], [1.72876362E12, 0.0], [1.72875936E12, 0.0], [1.7287626E12, 0.0], [1.72875612E12, 0.0], [1.72876038E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72876374E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 563.2469135802469, "minX": 1.72875408E12, "maxY": 1722.5, "series": [{"data": [[1.72876026E12, 747.8525441329176], [1.7287635E12, 905.9896324222441], [1.72875462E12, 631.4105263157899], [1.72875684E12, 597.4039900249373], [1.72875804E12, 660.3004115226338], [1.72876248E12, 887.4448563484706], [1.72875564E12, 639.2754010695188], [1.72876146E12, 732.0336734693876], [1.72875786E12, 687.2331902718166], [1.72875924E12, 668.1078431372543], [1.72876368E12, 717.7020506634497], [1.72875444E12, 620.2602040816328], [1.72875666E12, 610.8126582278484], [1.72875822E12, 670.9536516853934], [1.72876044E12, 733.7783452502554], [1.72876266E12, 909.5888993414865], [1.7287584E12, 697.1916426512977], [1.72875546E12, 637.0925925925922], [1.72875768E12, 630.4216073781292], [1.72875942E12, 665.6509040333792], [1.72876164E12, 687.8326959847032], [1.72875618E12, 653.7154471544715], [1.72876314E12, 887.7194444444444], [1.7287587E12, 665.6077348066306], [1.72876092E12, 687.7598086124401], [1.72875888E12, 658.1440329218109], [1.72876212E12, 856.5874999999999], [1.72875498E12, 645.4811827956983], [1.7287572E12, 638.6860927152312], [1.7287599E12, 722.506532663316], [1.72875702E12, 655.1124031007752], [1.72876332E12, 886.7006427915512], [1.72876008E12, 752.1368861024035], [1.7287611E12, 714.9221556886228], [1.728756E12, 641.6005361930296], [1.72875582E12, 587.6097560975611], [1.72875906E12, 645.4918918918921], [1.72876128E12, 697.6473429951692], [1.7287623E12, 904.1928504233301], [1.7287548E12, 679.8999999999999], [1.72875654E12, 697.4927113702619], [1.72875552E12, 665.3611111111114], [1.72875996E12, 761.5732484076425], [1.72876218E12, 816.6635672020299], [1.72875792E12, 675.4104372355424], [1.72875534E12, 638.9416445623339], [1.72875756E12, 626.0572171651501], [1.72875432E12, 582.608695652174], [1.72875894E12, 612.2158365261813], [1.72876116E12, 719.4131082423041], [1.72876338E12, 883.9908088235285], [1.72875912E12, 703.3528550512445], [1.72876236E12, 879.6779816513757], [1.72875414E12, 667.717391304348], [1.72875636E12, 593.7703703703695], [1.72876014E12, 782.8318872017358], [1.72875516E12, 686.517142857143], [1.72876356E12, 899.3348968105064], [1.7287581E12, 653.3356070941343], [1.72876032E12, 706.9951314508288], [1.72875738E12, 666.5096952908586], [1.72876134E12, 713.9504459861248], [1.7287596E12, 678.4695898161241], [1.72876284E12, 852.1538461538458], [1.72875588E12, 669.8095238095239], [1.72876062E12, 773.0128755364816], [1.72875468E12, 631.338582677165], [1.72875858E12, 631.7934210526319], [1.7287608E12, 713.4886025768088], [1.7287569E12, 586.8048780487802], [1.72876182E12, 737.4147088866187], [1.72875978E12, 681.2557034220541], [1.728762E12, 839.6335078534031], [1.72876302E12, 897.6732209737821], [1.7287557E12, 621.7116883116889], [1.72875774E12, 631.736147757256], [1.72876098E12, 712.4866732477794], [1.7287632E12, 913.7906309751435], [1.72875876E12, 677.0309859154925], [1.7287545E12, 563.2469135802469], [1.72875672E12, 671.0449438202244], [1.72875864E12, 677.6936170212766], [1.72875522E12, 689.8352601156074], [1.72875744E12, 651.7226775956287], [1.72875966E12, 684.3482280431433], [1.72876188E12, 701.1230012300132], [1.72875726E12, 664.4285714285717], [1.72875984E12, 708.6933593750003], [1.72876308E12, 947.596646942801], [1.72876086E12, 737.9199178644772], [1.72875624E12, 612.3836317135551], [1.72875606E12, 643.6327077747987], [1.72876104E12, 723.9989959839355], [1.72875882E12, 635.1889035667111], [1.72875504E12, 619.4430051813468], [1.72876206E12, 857.5026833631489], [1.72876002E12, 721.2807192807196], [1.72875486E12, 658.1382113821138], [1.72875708E12, 705.9823529411761], [1.72876326E12, 833.9904430929639], [1.72876224E12, 864.7853260869557], [1.72875558E12, 657.512328767123], [1.7287578E12, 669.0431754874646], [1.7287593E12, 678.5774647887324], [1.72876152E12, 710.7433628318588], [1.72876254E12, 891.837962962963], [1.72875456E12, 628.8897637795282], [1.7287605E12, 729.3833671399577], [1.72876374E12, 704.1323529411766], [1.72875438E12, 691.436046511628], [1.7287566E12, 657.6153846153849], [1.72875828E12, 676.9381153305202], [1.72876272E12, 853.5991071428572], [1.7287554E12, 616.8479381443293], [1.7287617E12, 755.9127234490014], [1.72875762E12, 712.4074074074076], [1.72875948E12, 661.980821917808], [1.7287542E12, 565.2200956937801], [1.72875642E12, 621.4883116883121], [1.72875846E12, 675.479606188467], [1.72876068E12, 736.7546391752571], [1.7287629E12, 881.373737373738], [1.72875492E12, 617.7409326424872], [1.72875834E12, 689.8867924528305], [1.72876056E12, 690.3377990430606], [1.72875714E12, 640.3114973262036], [1.72876158E12, 725.0060483870975], [1.72875954E12, 674.1165730337088], [1.72876176E12, 749.7539103232538], [1.72876278E12, 857.2435094001785], [1.72875594E12, 606.7873417721518], [1.72876074E12, 700.7691561590691], [1.72875852E12, 660.9668049792533], [1.72876296E12, 876.5773101555359], [1.72875696E12, 603.5125628140705], [1.72875474E12, 622.394805194805], [1.72876194E12, 824.0222634508349], [1.72875678E12, 647.2135135135145], [1.72875576E12, 595.2772277227722], [1.72875972E12, 680.7722602739727], [1.7287575E12, 663.5997229916894], [1.72876122E12, 742.3973029045636], [1.728759E12, 679.9434229137202], [1.72876344E12, 840.9481090589262], [1.72875426E12, 629.1884816753925], [1.72875648E12, 654.2207084468668], [1.7287563E12, 623.8020833333333], [1.72875528E12, 666.5388888888884], [1.72875798E12, 679.6760961810464], [1.7287602E12, 720.5652610441774], [1.72876242E12, 897.9652908067542], [1.72875816E12, 633.1445466491463], [1.7287551E12, 671.9387186629526], [1.72875732E12, 646.197846567968], [1.72875408E12, 1722.5], [1.72875918E12, 664.6367403314923], [1.7287614E12, 754.9245283018865], [1.72876362E12, 851.2601994560291], [1.72875936E12, 676.9717514124293], [1.7287626E12, 893.4915887850466], [1.72875612E12, 613.8571428571427], [1.72876038E12, 709.0900990099009]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72876374E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 389.4114832535887, "minX": 1.72875408E12, "maxY": 1573.0, "series": [{"data": [[1.72876026E12, 518.6884735202484], [1.7287635E12, 623.6201696512711], [1.72875462E12, 436.49473684210517], [1.72875684E12, 411.9775561097259], [1.72875804E12, 455.83401920438945], [1.72876248E12, 621.8804448563486], [1.72875564E12, 441.90641711229915], [1.72876146E12, 507.8591836734701], [1.72875786E12, 480.8755364806868], [1.72875924E12, 463.0980392156863], [1.72876368E12, 501.98190591073626], [1.72875444E12, 435.79081632653055], [1.72875666E12, 431.0556962025318], [1.72875822E12, 462.9241573033714], [1.72876044E12, 507.0806945863123], [1.72876266E12, 630.8871119473199], [1.7287584E12, 485.8674351585016], [1.72875546E12, 444.68253968254], [1.72875768E12, 443.2279314888012], [1.72875942E12, 458.7760778859523], [1.72876164E12, 477.9732313575525], [1.72875618E12, 454.5663956639565], [1.72876314E12, 614.5611111111111], [1.7287587E12, 458.45856353591154], [1.72876092E12, 484.64210526315753], [1.72875888E12, 455.1618655692721], [1.72876212E12, 596.0535714285721], [1.72875498E12, 445.7096774193544], [1.7287572E12, 449.8079470198678], [1.7287599E12, 504.8170854271354], [1.72875702E12, 452.98062015503865], [1.72876332E12, 613.7998163452711], [1.72876008E12, 521.5778474399165], [1.7287611E12, 499.5678642714573], [1.728756E12, 443.84450402144796], [1.72875582E12, 414.936585365854], [1.72875906E12, 451.8351351351349], [1.72876128E12, 491.70917874396105], [1.7287623E12, 625.2464722483529], [1.7287548E12, 476.2628571428571], [1.72875654E12, 486.4548104956272], [1.72875552E12, 464.5527777777778], [1.72875996E12, 532.7208067940564], [1.72876218E12, 569.1859678782756], [1.72875792E12, 470.33427362482337], [1.72875534E12, 444.85411140583557], [1.72875756E12, 432.20546163849184], [1.72875432E12, 402.8212560386473], [1.72875894E12, 427.29501915708795], [1.72876116E12, 495.56206554121184], [1.72876338E12, 615.1323529411773], [1.72875912E12, 482.9487554904831], [1.72876236E12, 611.6614678899076], [1.72875414E12, 461.83152173913055], [1.72875636E12, 408.8271604938274], [1.72876014E12, 546.0715835140995], [1.72875516E12, 473.6028571428572], [1.72876356E12, 625.9577861163226], [1.7287581E12, 458.4079126875854], [1.72876032E12, 493.8130477117819], [1.72875738E12, 464.4792243767314], [1.72876134E12, 501.6927651139745], [1.7287596E12, 475.4243281471005], [1.72876284E12, 594.831122900088], [1.72875588E12, 468.8935574229693], [1.72876062E12, 535.4742489270387], [1.72875468E12, 437.5354330708658], [1.72875858E12, 442.5947368421055], [1.7287608E12, 498.4073339940536], [1.7287569E12, 412.3585365853661], [1.72876182E12, 514.0183861082738], [1.72875978E12, 470.6711026615973], [1.728762E12, 590.2818499127394], [1.72876302E12, 623.2705992509369], [1.7287557E12, 426.3636363636362], [1.72875774E12, 445.1200527704485], [1.72876098E12, 493.4768015794666], [1.7287632E12, 632.380497131932], [1.72875876E12, 468.36478873239395], [1.7287545E12, 392.3703703703705], [1.72875672E12, 472.5308988764044], [1.72875864E12, 476.42411347517697], [1.72875522E12, 478.82080924855467], [1.72875744E12, 454.69672131147536], [1.72875966E12, 469.58089368258874], [1.72876188E12, 490.7503075030749], [1.72875726E12, 456.0527045769759], [1.72875984E12, 493.12011718750034], [1.72876308E12, 663.2347140039461], [1.72876086E12, 516.7022587268996], [1.72875624E12, 426.6777493606137], [1.72875606E12, 439.9302949061664], [1.72876104E12, 501.5893574297191], [1.72875882E12, 441.3342140026417], [1.72875504E12, 427.7694300518135], [1.72876206E12, 595.2084078711993], [1.72876002E12, 496.66733266733274], [1.72875486E12, 455.2601626016263], [1.72875708E12, 490.8088235294118], [1.72876326E12, 578.5890529973932], [1.72876224E12, 602.9782608695651], [1.72875558E12, 449.96712328767114], [1.7287578E12, 467.2701949860726], [1.7287593E12, 472.6352112676057], [1.72876152E12, 494.78072763028507], [1.72876254E12, 610.7722222222228], [1.72875456E12, 438.6115485564304], [1.7287605E12, 508.33671399594346], [1.72876374E12, 489.0], [1.72875438E12, 482.4709302325581], [1.7287566E12, 450.9725274725273], [1.72875828E12, 472.83684950773556], [1.72876272E12, 594.7544642857143], [1.7287554E12, 425.98195876288673], [1.7287617E12, 523.6971608832803], [1.72875762E12, 496.6088888888885], [1.72875948E12, 459.26986301369845], [1.7287542E12, 389.4114832535887], [1.72875642E12, 428.0129870129868], [1.72875846E12, 467.5625879043598], [1.72876068E12, 518.7226804123713], [1.7287629E12, 614.9136822773179], [1.72875492E12, 426.0569948186527], [1.72875834E12, 484.4005805515239], [1.72876056E12, 476.6583732057419], [1.72875714E12, 450.14304812834246], [1.72876158E12, 506.60987903225794], [1.72875954E12, 467.3384831460673], [1.72876176E12, 522.6027111574557], [1.72876278E12, 594.324082363474], [1.72875594E12, 422.03291139240514], [1.72876074E12, 483.74005819592605], [1.72875852E12, 461.525587828493], [1.72876296E12, 605.0384263494971], [1.72875696E12, 423.25879396984914], [1.72875474E12, 435.52987012987006], [1.72876194E12, 572.0779220779223], [1.72875678E12, 444.73513513513535], [1.72875576E12, 410.4504950495045], [1.72875972E12, 471.8099315068495], [1.7287575E12, 458.4501385041549], [1.72876122E12, 519.118257261411], [1.728759E12, 475.74540311173973], [1.72876344E12, 586.9050131926102], [1.72875426E12, 443.5287958115184], [1.72875648E12, 447.4359673024524], [1.7287563E12, 433.02083333333337], [1.72875528E12, 462.20833333333286], [1.72875798E12, 470.1796322489392], [1.7287602E12, 497.0010040160634], [1.72876242E12, 622.0628517823632], [1.72875816E12, 441.0525624178715], [1.7287551E12, 466.74930362117], [1.72875732E12, 447.4333781965008], [1.72875408E12, 1573.0], [1.72875918E12, 463.7044198895026], [1.7287614E12, 528.1121593291396], [1.72876362E12, 592.443336355395], [1.72875936E12, 472.55367231638405], [1.7287626E12, 617.257009345795], [1.72875612E12, 430.33163265306086], [1.72876038E12, 496.48316831683195]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72876374E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72875408E12, "maxY": 4.9E-324, "series": [{"data": [[1.72876026E12, 0.0], [1.7287635E12, 0.0], [1.72875462E12, 0.0], [1.72875684E12, 0.0], [1.72875804E12, 0.0], [1.72876248E12, 0.0], [1.72875564E12, 0.0], [1.72876146E12, 0.0], [1.72875786E12, 0.0], [1.72875924E12, 0.0], [1.72876368E12, 0.0], [1.72875444E12, 0.0], [1.72875666E12, 0.0], [1.72875822E12, 0.0], [1.72876044E12, 0.0], [1.72876266E12, 0.0], [1.7287584E12, 0.0], [1.72875546E12, 0.0], [1.72875768E12, 0.0], [1.72875942E12, 0.0], [1.72876164E12, 0.0], [1.72875618E12, 0.0], [1.72876314E12, 0.0], [1.7287587E12, 0.0], [1.72876092E12, 0.0], [1.72875888E12, 0.0], [1.72876212E12, 0.0], [1.72875498E12, 0.0], [1.7287572E12, 0.0], [1.7287599E12, 0.0], [1.72875702E12, 0.0], [1.72876332E12, 0.0], [1.72876008E12, 0.0], [1.7287611E12, 0.0], [1.728756E12, 0.0], [1.72875582E12, 0.0], [1.72875906E12, 0.0], [1.72876128E12, 0.0], [1.7287623E12, 0.0], [1.7287548E12, 0.0], [1.72875654E12, 0.0], [1.72875552E12, 0.0], [1.72875996E12, 0.0], [1.72876218E12, 0.0], [1.72875792E12, 0.0], [1.72875534E12, 0.0], [1.72875756E12, 0.0], [1.72875432E12, 0.0], [1.72875894E12, 0.0], [1.72876116E12, 0.0], [1.72876338E12, 0.0], [1.72875912E12, 0.0], [1.72876236E12, 0.0], [1.72875414E12, 0.0], [1.72875636E12, 0.0], [1.72876014E12, 0.0], [1.72875516E12, 0.0], [1.72876356E12, 0.0], [1.7287581E12, 0.0], [1.72876032E12, 0.0], [1.72875738E12, 0.0], [1.72876134E12, 0.0], [1.7287596E12, 0.0], [1.72876284E12, 0.0], [1.72875588E12, 0.0], [1.72876062E12, 0.0], [1.72875468E12, 0.0], [1.72875858E12, 0.0], [1.7287608E12, 0.0], [1.7287569E12, 0.0], [1.72876182E12, 0.0], [1.72875978E12, 0.0], [1.728762E12, 0.0], [1.72876302E12, 0.0], [1.7287557E12, 0.0], [1.72875774E12, 0.0], [1.72876098E12, 0.0], [1.7287632E12, 0.0], [1.72875876E12, 0.0], [1.7287545E12, 0.0], [1.72875672E12, 0.0], [1.72875864E12, 0.0], [1.72875522E12, 0.0], [1.72875744E12, 0.0], [1.72875966E12, 0.0], [1.72876188E12, 0.0], [1.72875726E12, 0.0], [1.72875984E12, 0.0], [1.72876308E12, 0.0], [1.72876086E12, 0.0], [1.72875624E12, 0.0], [1.72875606E12, 0.0], [1.72876104E12, 0.0], [1.72875882E12, 0.0], [1.72875504E12, 0.0], [1.72876206E12, 0.0], [1.72876002E12, 0.0], [1.72875486E12, 0.0], [1.72875708E12, 0.0], [1.72876326E12, 0.0], [1.72876224E12, 0.0], [1.72875558E12, 0.0], [1.7287578E12, 0.0], [1.7287593E12, 0.0], [1.72876152E12, 0.0], [1.72876254E12, 0.0], [1.72875456E12, 0.0], [1.7287605E12, 0.0], [1.72876374E12, 0.0], [1.72875438E12, 0.0], [1.7287566E12, 0.0], [1.72875828E12, 0.0], [1.72876272E12, 0.0], [1.7287554E12, 0.0], [1.7287617E12, 0.0], [1.72875762E12, 0.0], [1.72875948E12, 0.0], [1.7287542E12, 0.0], [1.72875642E12, 0.0], [1.72875846E12, 0.0], [1.72876068E12, 0.0], [1.7287629E12, 0.0], [1.72875492E12, 0.0], [1.72875834E12, 0.0], [1.72876056E12, 0.0], [1.72875714E12, 0.0], [1.72876158E12, 0.0], [1.72875954E12, 0.0], [1.72876176E12, 0.0], [1.72876278E12, 0.0], [1.72875594E12, 0.0], [1.72876074E12, 0.0], [1.72875852E12, 0.0], [1.72876296E12, 0.0], [1.72875696E12, 0.0], [1.72875474E12, 0.0], [1.72876194E12, 0.0], [1.72875678E12, 0.0], [1.72875576E12, 0.0], [1.72875972E12, 0.0], [1.7287575E12, 0.0], [1.72876122E12, 0.0], [1.728759E12, 0.0], [1.72876344E12, 0.0], [1.72875426E12, 0.0], [1.72875648E12, 0.0], [1.7287563E12, 0.0], [1.72875528E12, 0.0], [1.72875798E12, 0.0], [1.7287602E12, 0.0], [1.72876242E12, 0.0], [1.72875816E12, 0.0], [1.7287551E12, 0.0], [1.72875732E12, 0.0], [1.72875408E12, 0.0], [1.72875918E12, 0.0], [1.7287614E12, 0.0], [1.72876362E12, 0.0], [1.72875936E12, 0.0], [1.7287626E12, 0.0], [1.72875612E12, 0.0], [1.72876038E12, 0.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72876374E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 33.0, "minX": 1.72875408E12, "maxY": 4582.0, "series": [{"data": [[1.72876026E12, 3235.0], [1.7287635E12, 4582.0], [1.72875462E12, 2307.0], [1.72875684E12, 2163.0], [1.72875804E12, 2669.0], [1.72876248E12, 4440.0], [1.72875564E12, 2555.0], [1.72876146E12, 2742.0], [1.72875786E12, 2464.0], [1.72875924E12, 2530.0], [1.72876368E12, 3336.0], [1.72875444E12, 2257.0], [1.72875666E12, 2579.0], [1.72875822E12, 2589.0], [1.72876044E12, 3349.0], [1.72876266E12, 4147.0], [1.7287584E12, 2730.0], [1.72875546E12, 2688.0], [1.72875768E12, 2565.0], [1.72875942E12, 2770.0], [1.72876164E12, 2952.0], [1.72875618E12, 2278.0], [1.72876314E12, 4047.0], [1.7287587E12, 2658.0], [1.72876092E12, 2839.0], [1.72875888E12, 2547.0], [1.72876212E12, 3384.0], [1.72875498E12, 2654.0], [1.7287572E12, 2498.0], [1.7287599E12, 2812.0], [1.72875702E12, 2234.0], [1.72876332E12, 3780.0], [1.72876008E12, 3280.0], [1.7287611E12, 2913.0], [1.728756E12, 2729.0], [1.72875582E12, 2325.0], [1.72875906E12, 2444.0], [1.72876128E12, 2964.0], [1.7287623E12, 3473.0], [1.7287548E12, 2166.0], [1.72875654E12, 2282.0], [1.72875552E12, 2669.0], [1.72875996E12, 2801.0], [1.72876218E12, 3123.0], [1.72875792E12, 2609.0], [1.72875534E12, 2147.0], [1.72875756E12, 2612.0], [1.72875432E12, 2110.0], [1.72875894E12, 2533.0], [1.72876116E12, 2891.0], [1.72876338E12, 3486.0], [1.72875912E12, 2273.0], [1.72876236E12, 4303.0], [1.72875414E12, 2453.0], [1.72875636E12, 2159.0], [1.72876014E12, 2832.0], [1.72875516E12, 2655.0], [1.72876356E12, 3567.0], [1.7287581E12, 2617.0], [1.72876032E12, 3305.0], [1.72875738E12, 2645.0], [1.72876134E12, 3148.0], [1.7287596E12, 2473.0], [1.72876284E12, 3697.0], [1.72875588E12, 2060.0], [1.72876062E12, 3375.0], [1.72875468E12, 2099.0], [1.72875858E12, 2650.0], [1.7287608E12, 2993.0], [1.7287569E12, 2373.0], [1.72876182E12, 2678.0], [1.72875978E12, 2741.0], [1.728762E12, 3803.0], [1.72876302E12, 3465.0], [1.7287557E12, 2585.0], [1.72875774E12, 2607.0], [1.72876098E12, 2912.0], [1.7287632E12, 4224.0], [1.72875876E12, 2523.0], [1.7287545E12, 2237.0], [1.72875672E12, 2530.0], [1.72875864E12, 2580.0], [1.72875522E12, 1900.0], [1.72875744E12, 2246.0], [1.72875966E12, 2614.0], [1.72876188E12, 2832.0], [1.72875726E12, 2709.0], [1.72875984E12, 3163.0], [1.72876308E12, 3709.0], [1.72876086E12, 2810.0], [1.72875624E12, 2088.0], [1.72875606E12, 2201.0], [1.72876104E12, 2738.0], [1.72875882E12, 2418.0], [1.72875504E12, 2300.0], [1.72876206E12, 3574.0], [1.72876002E12, 2936.0], [1.72875486E12, 2258.0], [1.72875708E12, 2606.0], [1.72876326E12, 4018.0], [1.72876224E12, 3677.0], [1.72875558E12, 2504.0], [1.7287578E12, 2457.0], [1.7287593E12, 2381.0], [1.72876152E12, 3017.0], [1.72876254E12, 4022.0], [1.72875456E12, 2105.0], [1.7287605E12, 2643.0], [1.72876374E12, 1816.0], [1.72875438E12, 2005.0], [1.7287566E12, 2155.0], [1.72875828E12, 2792.0], [1.72876272E12, 3704.0], [1.7287554E12, 2131.0], [1.7287617E12, 2977.0], [1.72875762E12, 2899.0], [1.72875948E12, 2584.0], [1.7287542E12, 2190.0], [1.72875642E12, 2157.0], [1.72875846E12, 2496.0], [1.72876068E12, 2728.0], [1.7287629E12, 3177.0], [1.72875492E12, 2327.0], [1.72875834E12, 2770.0], [1.72876056E12, 2571.0], [1.72875714E12, 2744.0], [1.72876158E12, 3008.0], [1.72875954E12, 2633.0], [1.72876176E12, 3133.0], [1.72876278E12, 3861.0], [1.72875594E12, 2293.0], [1.72876074E12, 2892.0], [1.72875852E12, 2845.0], [1.72876296E12, 3969.0], [1.72875696E12, 2556.0], [1.72875474E12, 2587.0], [1.72876194E12, 3465.0], [1.72875678E12, 2117.0], [1.72875576E12, 2514.0], [1.72875972E12, 2687.0], [1.7287575E12, 2708.0], [1.72876122E12, 3090.0], [1.728759E12, 2621.0], [1.72876344E12, 3402.0], [1.72875426E12, 2540.0], [1.72875648E12, 2840.0], [1.7287563E12, 2127.0], [1.72875528E12, 2197.0], [1.72875798E12, 2760.0], [1.7287602E12, 3193.0], [1.72876242E12, 3524.0], [1.72875816E12, 2651.0], [1.7287551E12, 2654.0], [1.72875732E12, 2512.0], [1.72875408E12, 1838.0], [1.72875918E12, 2643.0], [1.7287614E12, 2680.0], [1.72876362E12, 3176.0], [1.72875936E12, 2751.0], [1.7287626E12, 3917.0], [1.72875612E12, 1866.0], [1.72876038E12, 2681.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72876026E12, 1595.8000000000002], [1.7287635E12, 1918.4], [1.72875462E12, 1365.7], [1.72875684E12, 1345.6000000000001], [1.72875804E12, 1447.0], [1.72876248E12, 1941.0], [1.72875564E12, 1298.5], [1.72876146E12, 1541.5], [1.72875786E12, 1463.0], [1.72875924E12, 1457.5], [1.72876368E12, 1615.0], [1.72875444E12, 1389.7000000000005], [1.72875666E12, 1324.0000000000002], [1.72875822E12, 1390.0], [1.72876044E12, 1621.0], [1.72876266E12, 2002.2], [1.7287584E12, 1478.5], [1.72875546E12, 1389.2], [1.72875768E12, 1342.0], [1.72875942E12, 1421.0], [1.72876164E12, 1497.6000000000001], [1.72875618E12, 1399.0], [1.72876314E12, 1974.5], [1.7287587E12, 1427.5], [1.72876092E12, 1501.4], [1.72875888E12, 1413.0], [1.72876212E12, 1862.5], [1.72875498E12, 1334.7], [1.7287572E12, 1404.9999999999998], [1.7287599E12, 1562.7999999999997], [1.72875702E12, 1456.6999999999998], [1.72876332E12, 1929.0], [1.72876008E12, 1659.2], [1.7287611E12, 1530.7], [1.728756E12, 1324.0000000000002], [1.72875582E12, 1285.9], [1.72875906E12, 1331.5], [1.72876128E12, 1519.4], [1.7287623E12, 1919.6], [1.7287548E12, 1395.6000000000001], [1.72875654E12, 1408.0], [1.72875552E12, 1448.0000000000005], [1.72875996E12, 1579.1000000000006], [1.72876218E12, 1814.4000000000005], [1.72875792E12, 1395.0], [1.72875534E12, 1409.6], [1.72875756E12, 1406.0], [1.72875432E12, 1323.0], [1.72875894E12, 1369.8000000000002], [1.72876116E12, 1612.2], [1.72876338E12, 1963.4], [1.72875912E12, 1490.4], [1.72876236E12, 1941.0], [1.72875414E12, 1407.5], [1.72875636E12, 1317.4000000000003], [1.72876014E12, 1653.8000000000002], [1.72875516E12, 1418.9], [1.72876356E12, 1937.4000000000005], [1.7287581E12, 1417.0], [1.72876032E12, 1592.0000000000002], [1.72875738E12, 1481.4], [1.72876134E12, 1545.0], [1.7287596E12, 1435.2], [1.72876284E12, 1919.0000000000005], [1.72875588E12, 1435.1999999999998], [1.72876062E12, 1662.1000000000001], [1.72875468E12, 1358.6], [1.72875858E12, 1412.6], [1.7287608E12, 1573.0], [1.7287569E12, 1319.9], [1.72876182E12, 1554.0], [1.72875978E12, 1553.0000000000005], [1.728762E12, 1899.1999999999998], [1.72876302E12, 1990.2], [1.7287557E12, 1344.6000000000004], [1.72875774E12, 1416.1], [1.72876098E12, 1606.4], [1.7287632E12, 1932.0], [1.72875876E12, 1518.9999999999998], [1.7287545E12, 1276.0], [1.72875672E12, 1323.8000000000002], [1.72875864E12, 1471.4], [1.72875522E12, 1392.0], [1.72875744E12, 1359.0], [1.72875966E12, 1457.0], [1.72876188E12, 1505.0], [1.72875726E12, 1439.6000000000001], [1.72875984E12, 1605.0], [1.72876308E12, 1999.0], [1.72876086E12, 1608.0], [1.72875624E12, 1324.6], [1.72875606E12, 1441.6000000000004], [1.72876104E12, 1608.4000000000005], [1.72875882E12, 1334.6000000000001], [1.72875504E12, 1339.9], [1.72876206E12, 1903.0], [1.72876002E12, 1548.6000000000001], [1.72875486E12, 1349.0], [1.72875708E12, 1546.6999999999998], [1.72876326E12, 1881.6], [1.72876224E12, 1920.0], [1.72875558E12, 1328.8000000000006], [1.7287578E12, 1393.6000000000001], [1.7287593E12, 1458.7999999999997], [1.72876152E12, 1568.8000000000002], [1.72876254E12, 1965.2999999999997], [1.72875456E12, 1317.2000000000003], [1.7287605E12, 1579.2000000000003], [1.72876374E12, 1436.1000000000001], [1.72875438E12, 1345.7], [1.7287566E12, 1448.5], [1.72875828E12, 1444.4000000000005], [1.72876272E12, 1952.6999999999998], [1.7287554E12, 1320.9000000000005], [1.7287617E12, 1616.6000000000001], [1.72875762E12, 1473.4], [1.72875948E12, 1443.0], [1.7287542E12, 1340.0], [1.72875642E12, 1310.0000000000002], [1.72875846E12, 1392.2000000000007], [1.72876068E12, 1578.6], [1.7287629E12, 1937.0], [1.72875492E12, 1360.4], [1.72875834E12, 1449.0], [1.72876056E12, 1510.4], [1.72875714E12, 1373.1], [1.72876158E12, 1612.7], [1.72875954E12, 1385.0], [1.72876176E12, 1602.0], [1.72876278E12, 1925.0000000000005], [1.72875594E12, 1344.0], [1.72876074E12, 1551.0], [1.72875852E12, 1437.2], [1.72876296E12, 1894.8000000000002], [1.72875696E12, 1266.4], [1.72875474E12, 1346.2000000000003], [1.72876194E12, 1770.0], [1.72875678E12, 1385.0000000000005], [1.72875576E12, 1364.5], [1.72875972E12, 1487.0], [1.7287575E12, 1442.7], [1.72876122E12, 1596.5], [1.728759E12, 1466.4], [1.72876344E12, 1912.2], [1.72875426E12, 1372.0000000000002], [1.72875648E12, 1437.3999999999999], [1.7287563E12, 1372.5], [1.72875528E12, 1413.3000000000002], [1.72875798E12, 1489.8000000000004], [1.7287602E12, 1570.0], [1.72876242E12, 2013.0], [1.72875816E12, 1406.6000000000001], [1.7287551E12, 1435.0], [1.72875732E12, 1389.0], [1.72875408E12, 1838.0], [1.72875918E12, 1455.5], [1.7287614E12, 1634.5], [1.72876362E12, 1911.4], [1.72875936E12, 1386.1], [1.7287626E12, 1879.9], [1.72875612E12, 1289.5], [1.72876038E12, 1584.1999999999998]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72876026E12, 2514.000000000002], [1.7287635E12, 3030.519999999982], [1.72875462E12, 1937.9299999999996], [1.72875684E12, 1903.6000000000004], [1.72875804E12, 2158.200000000001], [1.72876248E12, 2878.2000000000035], [1.72875564E12, 1851.0], [1.72876146E12, 2390.3599999999974], [1.72875786E12, 2146.0], [1.72875924E12, 2222.550000000001], [1.72876368E12, 2524.100000000003], [1.72875444E12, 1875.7900000000004], [1.72875666E12, 2008.08], [1.72875822E12, 2035.5700000000002], [1.72876044E12, 2462.200000000001], [1.72876266E12, 2752.0], [1.7287584E12, 2072.1], [1.72875546E12, 2193.439999999997], [1.72875768E12, 1949.0], [1.72875942E12, 2240.799999999999], [1.72876164E12, 2190.18], [1.72875618E12, 2201.9], [1.72876314E12, 2871.7800000000034], [1.7287587E12, 2252.25], [1.72876092E12, 2236.119999999999], [1.72875888E12, 2143.0000000000014], [1.72876212E12, 2851.6399999999994], [1.72875498E12, 2039.2499999999986], [1.7287572E12, 1998.1999999999998], [1.7287599E12, 2171.2799999999997], [1.72875702E12, 1908.7300000000014], [1.72876332E12, 3016.0999999999926], [1.72876008E12, 2464.9399999999996], [1.7287611E12, 2267.5800000000004], [1.728756E12, 2121.0599999999995], [1.72875582E12, 1839.849999999999], [1.72875906E12, 2162.650000000001], [1.72876128E12, 2260.720000000005], [1.7287623E12, 2857.4399999999996], [1.7287548E12, 1965.2600000000007], [1.72875654E12, 2008.2800000000004], [1.72875552E12, 2177.41], [1.72875996E12, 2450.71], [1.72876218E12, 2804.16], [1.72875792E12, 2170.199999999999], [1.72875534E12, 1774.5199999999982], [1.72875756E12, 2142.699999999998], [1.72875432E12, 1946.9599999999996], [1.72875894E12, 2045.1599999999999], [1.72876116E12, 2426.159999999998], [1.72876338E12, 2735.929999999994], [1.72875912E12, 2078.3999999999996], [1.72876236E12, 3069.6199999999985], [1.72875414E12, 2274.5000000000014], [1.72875636E12, 1916.5399999999997], [1.72876014E12, 2314.6399999999994], [1.72875516E12, 2086.680000000001], [1.72876356E12, 2762.2699999999986], [1.7287581E12, 2163.24], [1.72876032E12, 2352.360000000001], [1.72875738E12, 2161.1799999999994], [1.72876134E12, 2293.7], [1.7287596E12, 1991.8799999999953], [1.72876284E12, 2794.400000000002], [1.72875588E12, 1948.3600000000001], [1.72876062E12, 2424.4499999999985], [1.72875468E12, 1920.3600000000001], [1.72875858E12, 2084.8799999999987], [1.7287608E12, 2265.6999999999994], [1.7287569E12, 2028.7799999999986], [1.72876182E12, 2220.2000000000025], [1.72875978E12, 2406.94], [1.728762E12, 2987.689999999998], [1.72876302E12, 2869.219999999991], [1.7287557E12, 2290.659999999999], [1.72875774E12, 1989.6099999999992], [1.72876098E12, 2357.4800000000005], [1.7287632E12, 2997.449999999998], [1.72875876E12, 2141.7], [1.7287545E12, 1700.25], [1.72875672E12, 1983.3100000000002], [1.72875864E12, 2113.919999999999], [1.72875522E12, 1863.6599999999994], [1.72875744E12, 1946.509999999998], [1.72875966E12, 2203.0], [1.72876188E12, 2294.86], [1.72875726E12, 2160.2399999999984], [1.72875984E12, 2373.5], [1.72876308E12, 2830.9000000000005], [1.72876086E12, 2354.25], [1.72875624E12, 2046.7999999999997], [1.72875606E12, 2018.82], [1.72876104E12, 2389.8399999999992], [1.72875882E12, 2048.7599999999966], [1.72875504E12, 2009.56], [1.72876206E12, 2738.8599999999997], [1.72876002E12, 2377.6800000000003], [1.72875486E12, 2139.9], [1.72875708E12, 2307.5699999999997], [1.72876326E12, 3036.720000000002], [1.72876224E12, 2761.700000000001], [1.72875558E12, 2155.1999999999994], [1.7287578E12, 2063.4799999999996], [1.7287593E12, 2161.23], [1.72876152E12, 2334.1999999999994], [1.72876254E12, 3127.650000000002], [1.72875456E12, 1842.7000000000007], [1.7287605E12, 2491.0], [1.72876374E12, 1816.0], [1.72875438E12, 1988.2100000000003], [1.7287566E12, 1965.1000000000001], [1.72875828E12, 2215.76], [1.72876272E12, 3033.5099999999975], [1.7287554E12, 1969.1000000000001], [1.7287617E12, 2473.92], [1.72875762E12, 2223.8], [1.72875948E12, 2137.5799999999954], [1.7287542E12, 2098.8], [1.72875642E12, 1859.8199999999997], [1.72875846E12, 2167.9199999999996], [1.72876068E12, 2321.9299999999994], [1.7287629E12, 2787.299999999996], [1.72875492E12, 1973.7899999999995], [1.72875834E12, 2307.100000000001], [1.72876056E12, 2265.3399999999992], [1.72875714E12, 2151.0499999999993], [1.72876158E12, 2363.9399999999973], [1.72875954E12, 2148.92], [1.72876176E12, 2520.5999999999985], [1.72876278E12, 2892.479999999996], [1.72875594E12, 2003.0000000000032], [1.72876074E12, 2287.72], [1.72875852E12, 2160.92], [1.72876296E12, 2968.24], [1.72875696E12, 1933.4399999999987], [1.72875474E12, 1997.84], [1.72876194E12, 2910.4000000000005], [1.72875678E12, 2031.1200000000006], [1.72875576E12, 2149.0999999999985], [1.72875972E12, 2248.699999999998], [1.7287575E12, 2150.0899999999997], [1.72876122E12, 2465.3], [1.728759E12, 2105.999999999999], [1.72876344E12, 2970.599999999986], [1.72875426E12, 2080.919999999992], [1.72875648E12, 2264.719999999999], [1.7287563E12, 2042.5499999999997], [1.72875528E12, 2116.7499999999995], [1.72875798E12, 2166.2], [1.7287602E12, 2301.7199999999993], [1.72876242E12, 2944.9699999999993], [1.72875816E12, 1975.8999999999996], [1.7287551E12, 2041.0], [1.72875732E12, 2051.8399999999992], [1.72875408E12, 1838.0], [1.72875918E12, 2122.25], [1.7287614E12, 2286.750000000001], [1.72876362E12, 2723.6400000000012], [1.72875936E12, 2132.0199999999995], [1.7287626E12, 2932.379999999999], [1.72875612E12, 1786.4699999999998], [1.72876038E12, 2280.9799999999987]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72876026E12, 1794.3999999999996], [1.7287635E12, 2320.2], [1.72875462E12, 1547.6499999999999], [1.72875684E12, 1600.6999999999998], [1.72875804E12, 1658.5], [1.72876248E12, 2224.0], [1.72875564E12, 1646.25], [1.72876146E12, 1831.299999999999], [1.72875786E12, 1716.0], [1.72875924E12, 1697.0], [1.72876368E12, 1830.5], [1.72875444E12, 1615.3999999999996], [1.72875666E12, 1563.9999999999998], [1.72875822E12, 1610.1500000000005], [1.72876044E12, 1842.0], [1.72876266E12, 2246.3999999999996], [1.7287584E12, 1764.25], [1.72875546E12, 1527.8500000000004], [1.72875768E12, 1577.0], [1.72875942E12, 1688.0], [1.72876164E12, 1758.3], [1.72875618E12, 1598.5], [1.72876314E12, 2268.95], [1.7287587E12, 1653.75], [1.72876092E12, 1783.1], [1.72875888E12, 1679.5], [1.72876212E12, 2176.0], [1.72875498E12, 1559.0], [1.7287572E12, 1646.1999999999996], [1.7287599E12, 1797.7999999999997], [1.72875702E12, 1664.3], [1.72876332E12, 2266.0], [1.72876008E12, 1931.4999999999995], [1.7287611E12, 1797.85], [1.728756E12, 1544.9000000000003], [1.72875582E12, 1461.6999999999998], [1.72875906E12, 1554.0], [1.72876128E12, 1781.3999999999999], [1.7287623E12, 2195.0], [1.7287548E12, 1580.1499999999994], [1.72875654E12, 1625.2000000000003], [1.72875552E12, 1666.3499999999997], [1.72875996E12, 1870.4499999999985], [1.72876218E12, 2163.2], [1.72875792E12, 1582.0], [1.72875534E12, 1554.4999999999998], [1.72875756E12, 1693.5], [1.72875432E12, 1527.1999999999998], [1.72875894E12, 1614.5999999999992], [1.72876116E12, 1911.0], [1.72876338E12, 2272.1], [1.72875912E12, 1723.1999999999998], [1.72876236E12, 2287.45], [1.72875414E12, 1602.25], [1.72875636E12, 1491.3999999999999], [1.72876014E12, 1944.85], [1.72875516E12, 1654.9499999999998], [1.72876356E12, 2290.65], [1.7287581E12, 1602.3999999999996], [1.72876032E12, 1840.1999999999994], [1.72875738E12, 1744.100000000001], [1.72876134E12, 1774.0], [1.7287596E12, 1642.2], [1.72876284E12, 2217.199999999999], [1.72875588E12, 1607.1], [1.72876062E12, 1930.0999999999995], [1.72875468E12, 1562.6999999999998], [1.72875858E12, 1573.6999999999996], [1.7287608E12, 1812.5], [1.7287569E12, 1515.4499999999998], [1.72876182E12, 1848.0], [1.72875978E12, 1885.0999999999976], [1.728762E12, 2184.199999999999], [1.72876302E12, 2319.55], [1.7287557E12, 1618.8999999999996], [1.72875774E12, 1609.0], [1.72876098E12, 1813.4999999999993], [1.7287632E12, 2252.8999999999996], [1.72875876E12, 1785.4999999999993], [1.7287545E12, 1477.0], [1.72875672E12, 1491.449999999999], [1.72875864E12, 1745.6999999999998], [1.72875522E12, 1614.8499999999995], [1.72875744E12, 1611.0500000000002], [1.72875966E12, 1660.0], [1.72876188E12, 1857.6999999999996], [1.72875726E12, 1657.8], [1.72875984E12, 1827.5], [1.72876308E12, 2308.25], [1.72876086E12, 1859.5], [1.72875624E12, 1615.199999999999], [1.72875606E12, 1654.9], [1.72876104E12, 1867.0], [1.72875882E12, 1548.0000000000002], [1.72875504E12, 1590.65], [1.72876206E12, 2232.1499999999996], [1.72876002E12, 1759.6], [1.72875486E12, 1612.5], [1.72875708E12, 1765.9499999999998], [1.72876326E12, 2217.7999999999997], [1.72876224E12, 2201.0], [1.72875558E12, 1496.4], [1.7287578E12, 1624.2499999999998], [1.7287593E12, 1681.0], [1.72876152E12, 1807.3999999999996], [1.72876254E12, 2349.0], [1.72875456E12, 1506.199999999999], [1.7287605E12, 1840.9499999999998], [1.72876374E12, 1610.0999999999997], [1.72875438E12, 1520.7999999999997], [1.7287566E12, 1668.0], [1.72875828E12, 1667.6], [1.72876272E12, 2251.0], [1.7287554E12, 1533.1999999999998], [1.7287617E12, 1882.1999999999994], [1.72875762E12, 1688.1999999999998], [1.72875948E12, 1680.4999999999993], [1.7287542E12, 1596.0], [1.72875642E12, 1564.8999999999999], [1.72875846E12, 1651.4], [1.72876068E12, 1827.6999999999996], [1.7287629E12, 2243.5], [1.72875492E12, 1546.4999999999998], [1.72875834E12, 1658.0], [1.72876056E12, 1765.0], [1.72875714E12, 1604.9999999999982], [1.72876158E12, 1847.2499999999986], [1.72875954E12, 1671.35], [1.72876176E12, 1915.0], [1.72876278E12, 2225.3999999999987], [1.72875594E12, 1554.6], [1.72876074E12, 1863.6], [1.72875852E12, 1691.1999999999998], [1.72876296E12, 2215.0999999999995], [1.72875696E12, 1430.8999999999955], [1.72875474E12, 1550.8999999999999], [1.72876194E12, 2164.0], [1.72875678E12, 1653.8], [1.72875576E12, 1542.5], [1.72875972E12, 1761.25], [1.7287575E12, 1688.5000000000002], [1.72876122E12, 1864.25], [1.728759E12, 1762.0000000000005], [1.72876344E12, 2214.3999999999996], [1.72875426E12, 1667.7999999999988], [1.72875648E12, 1608.6], [1.7287563E12, 1571.25], [1.72875528E12, 1585.6999999999998], [1.72875798E12, 1777.0], [1.7287602E12, 1833.75], [1.72876242E12, 2324.85], [1.72875816E12, 1657.7999999999997], [1.7287551E12, 1595.0], [1.72875732E12, 1618.1999999999998], [1.72875408E12, 1838.0], [1.72875918E12, 1733.5], [1.7287614E12, 1901.25], [1.72876362E12, 2237.1999999999994], [1.72875936E12, 1633.9499999999996], [1.7287626E12, 2146.7], [1.72875612E12, 1498.7999999999997], [1.72876038E12, 1769.4499999999998]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72876026E12, 52.0], [1.7287635E12, 53.0], [1.72875462E12, 57.0], [1.72875684E12, 53.0], [1.72875804E12, 38.0], [1.72876248E12, 50.0], [1.72875564E12, 51.0], [1.72876146E12, 53.0], [1.72875786E12, 54.0], [1.72875924E12, 50.0], [1.72876368E12, 51.0], [1.72875444E12, 63.0], [1.72875666E12, 60.0], [1.72875822E12, 52.0], [1.72876044E12, 47.0], [1.72876266E12, 47.0], [1.7287584E12, 52.0], [1.72875546E12, 58.0], [1.72875768E12, 56.0], [1.72875942E12, 43.0], [1.72876164E12, 58.0], [1.72875618E12, 62.0], [1.72876314E12, 50.0], [1.7287587E12, 40.0], [1.72876092E12, 52.0], [1.72875888E12, 43.0], [1.72876212E12, 53.0], [1.72875498E12, 55.0], [1.7287572E12, 57.0], [1.7287599E12, 55.0], [1.72875702E12, 63.0], [1.72876332E12, 53.0], [1.72876008E12, 47.0], [1.7287611E12, 52.0], [1.728756E12, 45.0], [1.72875582E12, 52.0], [1.72875906E12, 59.0], [1.72876128E12, 48.0], [1.7287623E12, 49.0], [1.7287548E12, 55.0], [1.72875654E12, 54.0], [1.72875552E12, 61.0], [1.72875996E12, 58.0], [1.72876218E12, 56.0], [1.72875792E12, 57.0], [1.72875534E12, 66.0], [1.72875756E12, 55.0], [1.72875432E12, 56.0], [1.72875894E12, 41.0], [1.72876116E12, 50.0], [1.72876338E12, 51.0], [1.72875912E12, 58.0], [1.72876236E12, 56.0], [1.72875414E12, 67.0], [1.72875636E12, 59.0], [1.72876014E12, 46.0], [1.72875516E12, 49.0], [1.72876356E12, 52.0], [1.7287581E12, 51.0], [1.72876032E12, 47.0], [1.72875738E12, 53.0], [1.72876134E12, 54.0], [1.7287596E12, 50.0], [1.72876284E12, 47.0], [1.72875588E12, 60.0], [1.72876062E12, 63.0], [1.72875468E12, 59.0], [1.72875858E12, 52.0], [1.7287608E12, 59.0], [1.7287569E12, 58.0], [1.72876182E12, 46.0], [1.72875978E12, 46.0], [1.728762E12, 47.0], [1.72876302E12, 55.0], [1.7287557E12, 50.0], [1.72875774E12, 53.0], [1.72876098E12, 50.0], [1.7287632E12, 45.0], [1.72875876E12, 56.0], [1.7287545E12, 58.0], [1.72875672E12, 64.0], [1.72875864E12, 51.0], [1.72875522E12, 49.0], [1.72875744E12, 57.0], [1.72875966E12, 57.0], [1.72876188E12, 48.0], [1.72875726E12, 51.0], [1.72875984E12, 45.0], [1.72876308E12, 60.0], [1.72876086E12, 55.0], [1.72875624E12, 59.0], [1.72875606E12, 54.0], [1.72876104E12, 48.0], [1.72875882E12, 53.0], [1.72875504E12, 66.0], [1.72876206E12, 50.0], [1.72876002E12, 49.0], [1.72875486E12, 53.0], [1.72875708E12, 42.0], [1.72876326E12, 47.0], [1.72876224E12, 49.0], [1.72875558E12, 64.0], [1.7287578E12, 56.0], [1.7287593E12, 55.0], [1.72876152E12, 51.0], [1.72876254E12, 63.0], [1.72875456E12, 58.0], [1.7287605E12, 51.0], [1.72876374E12, 75.0], [1.72875438E12, 63.0], [1.7287566E12, 53.0], [1.72875828E12, 50.0], [1.72876272E12, 53.0], [1.7287554E12, 58.0], [1.7287617E12, 51.0], [1.72875762E12, 61.0], [1.72875948E12, 56.0], [1.7287542E12, 71.0], [1.72875642E12, 53.0], [1.72875846E12, 58.0], [1.72876068E12, 57.0], [1.7287629E12, 49.0], [1.72875492E12, 56.0], [1.72875834E12, 50.0], [1.72876056E12, 50.0], [1.72875714E12, 53.0], [1.72876158E12, 52.0], [1.72875954E12, 54.0], [1.72876176E12, 48.0], [1.72876278E12, 53.0], [1.72875594E12, 56.0], [1.72876074E12, 47.0], [1.72875852E12, 44.0], [1.72876296E12, 49.0], [1.72875696E12, 65.0], [1.72875474E12, 63.0], [1.72876194E12, 51.0], [1.72875678E12, 53.0], [1.72875576E12, 53.0], [1.72875972E12, 51.0], [1.7287575E12, 49.0], [1.72876122E12, 53.0], [1.728759E12, 56.0], [1.72876344E12, 48.0], [1.72875426E12, 59.0], [1.72875648E12, 58.0], [1.7287563E12, 54.0], [1.72875528E12, 61.0], [1.72875798E12, 52.0], [1.7287602E12, 61.0], [1.72876242E12, 53.0], [1.72875816E12, 47.0], [1.7287551E12, 33.0], [1.72875732E12, 55.0], [1.72875408E12, 1607.0], [1.72875918E12, 57.0], [1.7287614E12, 53.0], [1.72876362E12, 44.0], [1.72875936E12, 54.0], [1.7287626E12, 54.0], [1.72875612E12, 50.0], [1.72876038E12, 56.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72876026E12, 664.0], [1.7287635E12, 748.0], [1.72875462E12, 570.5], [1.72875684E12, 469.0], [1.72875804E12, 573.0], [1.72876248E12, 730.0], [1.72875564E12, 624.0], [1.72876146E12, 644.5], [1.72875786E12, 638.0], [1.72875924E12, 595.5], [1.72876368E12, 578.0], [1.72875444E12, 539.0], [1.72875666E12, 575.0], [1.72875822E12, 616.0], [1.72876044E12, 643.0], [1.72876266E12, 772.0], [1.7287584E12, 670.0], [1.72875546E12, 560.0], [1.72875768E12, 553.0], [1.72875942E12, 572.0], [1.72876164E12, 536.5], [1.72875618E12, 613.0], [1.72876314E12, 722.5], [1.7287587E12, 564.0], [1.72876092E12, 546.0], [1.72875888E12, 566.0], [1.72876212E12, 712.5], [1.72875498E12, 645.0], [1.7287572E12, 544.0], [1.7287599E12, 677.0], [1.72875702E12, 635.5], [1.72876332E12, 731.0], [1.72876008E12, 647.0], [1.7287611E12, 658.5], [1.728756E12, 586.0], [1.72875582E12, 474.0], [1.72875906E12, 590.0], [1.72876128E12, 566.0], [1.7287623E12, 799.0], [1.7287548E12, 622.0], [1.72875654E12, 720.0], [1.72875552E12, 636.0], [1.72875996E12, 710.0], [1.72876218E12, 608.0], [1.72875792E12, 651.0], [1.72875534E12, 592.0], [1.72875756E12, 473.0], [1.72875432E12, 457.0], [1.72875894E12, 459.0], [1.72876116E12, 585.0], [1.72876338E12, 703.0], [1.72875912E12, 668.0], [1.72876236E12, 687.5], [1.72875414E12, 579.5], [1.72875636E12, 465.0], [1.72876014E12, 736.0], [1.72875516E12, 666.5], [1.72876356E12, 795.0], [1.7287581E12, 551.0], [1.72876032E12, 558.0], [1.72875738E12, 561.0], [1.72876134E12, 614.0], [1.7287596E12, 652.0], [1.72876284E12, 696.0], [1.72875588E12, 639.0], [1.72876062E12, 704.5], [1.72875468E12, 622.0], [1.72875858E12, 525.0], [1.7287608E12, 583.0], [1.7287569E12, 473.0], [1.72876182E12, 699.0], [1.72875978E12, 438.5], [1.728762E12, 593.5], [1.72876302E12, 759.0], [1.7287557E12, 562.0], [1.72875774E12, 535.5], [1.72876098E12, 567.0], [1.7287632E12, 824.0], [1.72875876E12, 589.0], [1.7287545E12, 451.5], [1.72875672E12, 684.0], [1.72875864E12, 581.0], [1.72875522E12, 704.0], [1.72875744E12, 658.0], [1.72875966E12, 610.0], [1.72876188E12, 577.0], [1.72875726E12, 588.0], [1.72875984E12, 605.0], [1.72876308E12, 854.5], [1.72876086E12, 681.0], [1.72875624E12, 509.0], [1.72875606E12, 562.0], [1.72876104E12, 575.0], [1.72875882E12, 577.0], [1.72875504E12, 532.5], [1.72876206E12, 640.0], [1.72876002E12, 633.0], [1.72875486E12, 667.0], [1.72875708E12, 651.0], [1.72876326E12, 602.0], [1.72876224E12, 745.5], [1.72875558E12, 623.0], [1.7287578E12, 623.0], [1.7287593E12, 585.5], [1.72876152E12, 574.0], [1.72876254E12, 712.5], [1.72875456E12, 623.0], [1.7287605E12, 617.0], [1.72876374E12, 778.5], [1.72875438E12, 707.5], [1.7287566E12, 612.0], [1.72875828E12, 613.0], [1.72876272E12, 649.5], [1.7287554E12, 565.5], [1.7287617E12, 696.0], [1.72875762E12, 692.0], [1.72875948E12, 592.0], [1.7287542E12, 281.0], [1.72875642E12, 558.0], [1.72875846E12, 652.0], [1.72876068E12, 674.5], [1.7287629E12, 804.0], [1.72875492E12, 518.5], [1.72875834E12, 654.0], [1.72876056E12, 575.0], [1.72875714E12, 550.0], [1.72876158E12, 603.0], [1.72875954E12, 612.5], [1.72876176E12, 664.0], [1.72876278E12, 657.0], [1.72875594E12, 548.0], [1.72876074E12, 527.0], [1.72875852E12, 578.0], [1.72876296E12, 752.0], [1.72875696E12, 522.5], [1.72875474E12, 587.0], [1.72876194E12, 626.0], [1.72875678E12, 579.5], [1.72875576E12, 480.5], [1.72875972E12, 577.5], [1.7287575E12, 577.0], [1.72876122E12, 659.0], [1.728759E12, 615.0], [1.72876344E12, 628.0], [1.72875426E12, 470.0], [1.72875648E12, 609.0], [1.7287563E12, 581.5], [1.72875528E12, 642.0], [1.72875798E12, 587.0], [1.7287602E12, 627.0], [1.72876242E12, 760.0], [1.72875816E12, 510.0], [1.7287551E12, 649.0], [1.72875732E12, 562.0], [1.72875408E12, 1722.5], [1.72875918E12, 589.0], [1.7287614E12, 716.0], [1.72876362E12, 664.0], [1.72875936E12, 627.0], [1.7287626E12, 801.5], [1.72875612E12, 599.0], [1.72876038E12, 597.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72876374E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 238.0, "minX": 1.0, "maxY": 998.5, "series": [{"data": [[2.0, 933.0], [32.0, 320.5], [33.0, 298.0], [34.0, 425.0], [35.0, 275.0], [36.0, 269.5], [3.0, 866.0], [4.0, 828.5], [5.0, 776.0], [6.0, 685.5], [7.0, 637.0], [8.0, 637.5], [9.0, 660.0], [10.0, 688.5], [11.0, 694.5], [12.0, 698.0], [13.0, 696.0], [14.0, 659.5], [15.0, 670.0], [1.0, 998.5], [16.0, 660.5], [17.0, 574.5], [18.0, 557.0], [19.0, 543.0], [20.0, 498.5], [21.0, 485.0], [22.0, 401.0], [23.0, 395.0], [24.0, 353.0], [25.0, 341.5], [26.0, 313.0], [27.0, 303.0], [28.0, 346.0], [29.0, 279.0], [30.0, 269.5], [31.0, 238.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 36.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 154.5, "minX": 1.0, "maxY": 705.0, "series": [{"data": [[2.0, 644.0], [32.0, 212.5], [33.0, 247.0], [34.0, 339.0], [35.0, 204.0], [36.0, 192.0], [3.0, 602.0], [4.0, 593.0], [5.0, 564.0], [6.0, 501.0], [7.0, 467.0], [8.0, 478.0], [9.0, 485.0], [10.0, 512.0], [11.0, 510.5], [12.0, 509.5], [13.0, 515.0], [14.0, 485.0], [15.0, 500.0], [1.0, 705.0], [16.0, 496.5], [17.0, 440.5], [18.0, 422.5], [19.0, 415.0], [20.0, 375.0], [21.0, 366.5], [22.0, 304.5], [23.0, 280.0], [24.0, 263.0], [25.0, 246.0], [26.0, 226.0], [27.0, 222.5], [28.0, 255.5], [29.0, 196.0], [30.0, 190.0], [31.0, 154.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 36.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.72875408E12, "maxY": 19.716666666666665, "series": [{"data": [[1.72876026E12, 16.05], [1.7287635E12, 17.683333333333334], [1.72875462E12, 6.333333333333333], [1.72875684E12, 6.683333333333334], [1.72875804E12, 12.15], [1.72876248E12, 17.983333333333334], [1.72875564E12, 6.233333333333333], [1.72876146E12, 16.333333333333332], [1.72875786E12, 11.65], [1.72875924E12, 11.9], [1.72876368E12, 13.616666666666667], [1.72875444E12, 3.2666666666666666], [1.72875666E12, 6.583333333333333], [1.72875822E12, 11.866666666666667], [1.72876044E12, 16.316666666666666], [1.72876266E12, 17.716666666666665], [1.7287584E12, 11.566666666666666], [1.72875546E12, 6.3], [1.72875768E12, 12.65], [1.72875942E12, 11.983333333333333], [1.72876164E12, 17.433333333333334], [1.72875618E12, 6.15], [1.72876314E12, 18.0], [1.7287587E12, 12.066666666666666], [1.72876092E12, 17.416666666666668], [1.72875888E12, 12.15], [1.72876212E12, 18.666666666666668], [1.72875498E12, 6.2], [1.7287572E12, 12.583333333333334], [1.7287599E12, 16.583333333333332], [1.72875702E12, 4.366666666666666], [1.72876332E12, 18.15], [1.72876008E12, 15.95], [1.7287611E12, 16.7], [1.728756E12, 6.216666666666667], [1.72875582E12, 6.833333333333333], [1.72875906E12, 12.333333333333334], [1.72876128E12, 17.25], [1.7287623E12, 17.716666666666665], [1.7287548E12, 5.833333333333333], [1.72875654E12, 5.716666666666667], [1.72875552E12, 6.0], [1.72875996E12, 15.7], [1.72876218E12, 19.716666666666665], [1.72875792E12, 11.816666666666666], [1.72875534E12, 6.283333333333333], [1.72875756E12, 12.816666666666666], [1.72875432E12, 3.45], [1.72875894E12, 13.05], [1.72876116E12, 16.783333333333335], [1.72876338E12, 18.133333333333333], [1.72875912E12, 11.383333333333333], [1.72876236E12, 18.166666666666668], [1.72875414E12, 3.066666666666667], [1.72875636E12, 6.75], [1.72876014E12, 15.366666666666667], [1.72875516E12, 5.833333333333333], [1.72876356E12, 17.766666666666666], [1.7287581E12, 12.216666666666667], [1.72876032E12, 17.116666666666667], [1.72875738E12, 12.033333333333333], [1.72876134E12, 16.816666666666666], [1.7287596E12, 11.783333333333333], [1.72876284E12, 18.85], [1.72875588E12, 5.95], [1.72876062E12, 15.533333333333333], [1.72875468E12, 6.35], [1.72875858E12, 12.666666666666666], [1.7287608E12, 16.816666666666666], [1.7287569E12, 6.833333333333333], [1.72876182E12, 16.316666666666666], [1.72875978E12, 17.533333333333335], [1.728762E12, 19.1], [1.72876302E12, 17.8], [1.7287557E12, 6.416666666666667], [1.72875774E12, 12.633333333333333], [1.72876098E12, 16.883333333333333], [1.7287632E12, 17.433333333333334], [1.72875876E12, 11.833333333333334], [1.7287545E12, 5.433333333333334], [1.72875672E12, 5.933333333333334], [1.72875864E12, 11.75], [1.72875522E12, 5.766666666666667], [1.72875744E12, 12.2], [1.72875966E12, 10.766666666666667], [1.72876188E12, 13.383333333333333], [1.72875726E12, 12.016666666666667], [1.72875984E12, 17.066666666666666], [1.72876308E12, 16.9], [1.72876086E12, 16.233333333333334], [1.72875624E12, 6.516666666666667], [1.72875606E12, 6.216666666666667], [1.72876104E12, 16.6], [1.72875882E12, 12.616666666666667], [1.72875504E12, 6.433333333333334], [1.72876206E12, 18.633333333333333], [1.72876002E12, 16.683333333333334], [1.72875486E12, 6.15], [1.72875708E12, 11.333333333333334], [1.72876326E12, 19.183333333333334], [1.72876224E12, 18.4], [1.72875558E12, 6.083333333333333], [1.7287578E12, 11.966666666666667], [1.7287593E12, 11.833333333333334], [1.72876152E12, 16.95], [1.72876254E12, 18.0], [1.72875456E12, 6.35], [1.7287605E12, 16.433333333333334], [1.72876374E12, 1.0833333333333333], [1.72875438E12, 2.8666666666666667], [1.7287566E12, 6.066666666666666], [1.72875828E12, 11.85], [1.72876272E12, 18.666666666666668], [1.7287554E12, 6.466666666666667], [1.7287617E12, 15.85], [1.72875762E12, 11.25], [1.72875948E12, 12.166666666666666], [1.7287542E12, 3.4833333333333334], [1.72875642E12, 6.416666666666667], [1.72875846E12, 11.85], [1.72876068E12, 16.166666666666668], [1.7287629E12, 18.15], [1.72875492E12, 6.433333333333334], [1.72875834E12, 11.483333333333333], [1.72876056E12, 17.416666666666668], [1.72875714E12, 12.466666666666667], [1.72876158E12, 16.533333333333335], [1.72875954E12, 11.866666666666667], [1.72876176E12, 15.983333333333333], [1.72876278E12, 18.616666666666667], [1.72875594E12, 6.583333333333333], [1.72876074E12, 17.183333333333334], [1.72875852E12, 12.05], [1.72876296E12, 18.216666666666665], [1.72875696E12, 6.633333333333334], [1.72875474E12, 6.416666666666667], [1.72876194E12, 9.216666666666667], [1.72875678E12, 6.166666666666667], [1.72875576E12, 6.733333333333333], [1.72875972E12, 9.85], [1.7287575E12, 12.033333333333333], [1.72876122E12, 16.066666666666666], [1.728759E12, 11.783333333333333], [1.72876344E12, 18.95], [1.72875426E12, 3.183333333333333], [1.72875648E12, 6.116666666666666], [1.7287563E12, 6.4], [1.72875528E12, 6.0], [1.72875798E12, 11.783333333333333], [1.7287602E12, 16.6], [1.72876242E12, 17.766666666666666], [1.72875816E12, 12.683333333333334], [1.7287551E12, 5.983333333333333], [1.72875732E12, 12.383333333333333], [1.72875408E12, 0.06666666666666667], [1.72875918E12, 12.066666666666666], [1.7287614E12, 15.9], [1.72876362E12, 18.366666666666667], [1.72875936E12, 11.8], [1.7287626E12, 17.833333333333332], [1.72875612E12, 6.533333333333333], [1.72876038E12, 16.833333333333332]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72876374E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.72875408E12, "maxY": 19.716666666666665, "series": [{"data": [[1.72876026E12, 16.05], [1.7287635E12, 17.683333333333334], [1.72875462E12, 6.333333333333333], [1.72875684E12, 6.683333333333334], [1.72875804E12, 12.15], [1.72876248E12, 17.983333333333334], [1.72875564E12, 6.233333333333333], [1.72876146E12, 16.333333333333332], [1.72875786E12, 11.65], [1.72875924E12, 11.9], [1.72876368E12, 13.816666666666666], [1.72875444E12, 3.2666666666666666], [1.72875666E12, 6.583333333333333], [1.72875822E12, 11.866666666666667], [1.72876044E12, 16.316666666666666], [1.72876266E12, 17.716666666666665], [1.7287584E12, 11.566666666666666], [1.72875546E12, 6.3], [1.72875768E12, 12.65], [1.72875942E12, 11.983333333333333], [1.72876164E12, 17.433333333333334], [1.72875618E12, 6.15], [1.72876314E12, 18.0], [1.7287587E12, 12.066666666666666], [1.72876092E12, 17.416666666666668], [1.72875888E12, 12.15], [1.72876212E12, 18.666666666666668], [1.72875498E12, 6.2], [1.7287572E12, 12.583333333333334], [1.7287599E12, 16.583333333333332], [1.72875702E12, 4.3], [1.72876332E12, 18.15], [1.72876008E12, 15.95], [1.7287611E12, 16.7], [1.728756E12, 6.216666666666667], [1.72875582E12, 6.833333333333333], [1.72875906E12, 12.333333333333334], [1.72876128E12, 17.25], [1.7287623E12, 17.716666666666665], [1.7287548E12, 5.833333333333333], [1.72875654E12, 5.716666666666667], [1.72875552E12, 6.0], [1.72875996E12, 15.7], [1.72876218E12, 19.716666666666665], [1.72875792E12, 11.816666666666666], [1.72875534E12, 6.283333333333333], [1.72875756E12, 12.816666666666666], [1.72875432E12, 3.45], [1.72875894E12, 13.05], [1.72876116E12, 16.783333333333335], [1.72876338E12, 18.133333333333333], [1.72875912E12, 11.383333333333333], [1.72876236E12, 18.166666666666668], [1.72875414E12, 3.066666666666667], [1.72875636E12, 6.75], [1.72876014E12, 15.366666666666667], [1.72875516E12, 5.833333333333333], [1.72876356E12, 17.766666666666666], [1.7287581E12, 12.216666666666667], [1.72876032E12, 17.116666666666667], [1.72875738E12, 12.033333333333333], [1.72876134E12, 16.816666666666666], [1.7287596E12, 11.783333333333333], [1.72876284E12, 18.85], [1.72875588E12, 5.95], [1.72876062E12, 15.533333333333333], [1.72875468E12, 6.35], [1.72875858E12, 12.666666666666666], [1.7287608E12, 16.816666666666666], [1.7287569E12, 6.833333333333333], [1.72876182E12, 16.316666666666666], [1.72875978E12, 17.533333333333335], [1.728762E12, 19.1], [1.72876302E12, 17.8], [1.7287557E12, 6.416666666666667], [1.72875774E12, 12.633333333333333], [1.72876098E12, 16.883333333333333], [1.7287632E12, 17.433333333333334], [1.72875876E12, 11.833333333333334], [1.7287545E12, 5.4], [1.72875672E12, 5.933333333333334], [1.72875864E12, 11.75], [1.72875522E12, 5.766666666666667], [1.72875744E12, 12.2], [1.72875966E12, 10.816666666666666], [1.72876188E12, 13.55], [1.72875726E12, 12.016666666666667], [1.72875984E12, 17.066666666666666], [1.72876308E12, 16.9], [1.72876086E12, 16.233333333333334], [1.72875624E12, 6.516666666666667], [1.72875606E12, 6.216666666666667], [1.72876104E12, 16.6], [1.72875882E12, 12.616666666666667], [1.72875504E12, 6.433333333333334], [1.72876206E12, 18.633333333333333], [1.72876002E12, 16.683333333333334], [1.72875486E12, 6.15], [1.72875708E12, 11.333333333333334], [1.72876326E12, 19.183333333333334], [1.72876224E12, 18.4], [1.72875558E12, 6.083333333333333], [1.7287578E12, 11.966666666666667], [1.7287593E12, 11.833333333333334], [1.72876152E12, 16.95], [1.72876254E12, 18.0], [1.72875456E12, 6.35], [1.7287605E12, 16.433333333333334], [1.72876374E12, 1.1333333333333333], [1.72875438E12, 2.8666666666666667], [1.7287566E12, 6.066666666666666], [1.72875828E12, 11.85], [1.72876272E12, 18.666666666666668], [1.7287554E12, 6.466666666666667], [1.7287617E12, 15.85], [1.72875762E12, 11.25], [1.72875948E12, 12.166666666666666], [1.7287542E12, 3.4833333333333334], [1.72875642E12, 6.416666666666667], [1.72875846E12, 11.85], [1.72876068E12, 16.166666666666668], [1.7287629E12, 18.15], [1.72875492E12, 6.433333333333334], [1.72875834E12, 11.483333333333333], [1.72876056E12, 17.416666666666668], [1.72875714E12, 12.466666666666667], [1.72876158E12, 16.533333333333335], [1.72875954E12, 11.866666666666667], [1.72876176E12, 15.983333333333333], [1.72876278E12, 18.616666666666667], [1.72875594E12, 6.583333333333333], [1.72876074E12, 17.183333333333334], [1.72875852E12, 12.05], [1.72876296E12, 18.216666666666665], [1.72875696E12, 6.633333333333334], [1.72875474E12, 6.416666666666667], [1.72876194E12, 8.983333333333333], [1.72875678E12, 6.166666666666667], [1.72875576E12, 6.733333333333333], [1.72875972E12, 9.733333333333333], [1.7287575E12, 12.033333333333333], [1.72876122E12, 16.066666666666666], [1.728759E12, 11.783333333333333], [1.72876344E12, 18.95], [1.72875426E12, 3.183333333333333], [1.72875648E12, 6.116666666666666], [1.7287563E12, 6.4], [1.72875528E12, 6.0], [1.72875798E12, 11.783333333333333], [1.7287602E12, 16.6], [1.72876242E12, 17.766666666666666], [1.72875816E12, 12.683333333333334], [1.7287551E12, 5.983333333333333], [1.72875732E12, 12.383333333333333], [1.72875408E12, 0.03333333333333333], [1.72875918E12, 12.066666666666666], [1.7287614E12, 15.9], [1.72876362E12, 18.383333333333333], [1.72875936E12, 11.8], [1.7287626E12, 17.833333333333332], [1.72875612E12, 6.533333333333333], [1.72876038E12, 16.833333333333332]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72876374E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.72875408E12, "maxY": 19.716666666666665, "series": [{"data": [[1.72876026E12, 16.05], [1.7287635E12, 17.683333333333334], [1.72875462E12, 6.333333333333333], [1.72875684E12, 6.683333333333334], [1.72875804E12, 12.15], [1.72876248E12, 17.983333333333334], [1.72875564E12, 6.233333333333333], [1.72876146E12, 16.333333333333332], [1.72875786E12, 11.65], [1.72875924E12, 11.9], [1.72876368E12, 13.816666666666666], [1.72875444E12, 3.2666666666666666], [1.72875666E12, 6.583333333333333], [1.72875822E12, 11.866666666666667], [1.72876044E12, 16.316666666666666], [1.72876266E12, 17.716666666666665], [1.7287584E12, 11.566666666666666], [1.72875546E12, 6.3], [1.72875768E12, 12.65], [1.72875942E12, 11.983333333333333], [1.72876164E12, 17.433333333333334], [1.72875618E12, 6.15], [1.72876314E12, 18.0], [1.7287587E12, 12.066666666666666], [1.72876092E12, 17.416666666666668], [1.72875888E12, 12.15], [1.72876212E12, 18.666666666666668], [1.72875498E12, 6.2], [1.7287572E12, 12.583333333333334], [1.7287599E12, 16.583333333333332], [1.72875702E12, 4.3], [1.72876332E12, 18.15], [1.72876008E12, 15.95], [1.7287611E12, 16.7], [1.728756E12, 6.216666666666667], [1.72875582E12, 6.833333333333333], [1.72875906E12, 12.333333333333334], [1.72876128E12, 17.25], [1.7287623E12, 17.716666666666665], [1.7287548E12, 5.833333333333333], [1.72875654E12, 5.716666666666667], [1.72875552E12, 6.0], [1.72875996E12, 15.7], [1.72876218E12, 19.716666666666665], [1.72875792E12, 11.816666666666666], [1.72875534E12, 6.283333333333333], [1.72875756E12, 12.816666666666666], [1.72875432E12, 3.45], [1.72875894E12, 13.05], [1.72876116E12, 16.783333333333335], [1.72876338E12, 18.133333333333333], [1.72875912E12, 11.383333333333333], [1.72876236E12, 18.166666666666668], [1.72875414E12, 3.066666666666667], [1.72875636E12, 6.75], [1.72876014E12, 15.366666666666667], [1.72875516E12, 5.833333333333333], [1.72876356E12, 17.766666666666666], [1.7287581E12, 12.216666666666667], [1.72876032E12, 17.116666666666667], [1.72875738E12, 12.033333333333333], [1.72876134E12, 16.816666666666666], [1.7287596E12, 11.783333333333333], [1.72876284E12, 18.85], [1.72875588E12, 5.95], [1.72876062E12, 15.533333333333333], [1.72875468E12, 6.35], [1.72875858E12, 12.666666666666666], [1.7287608E12, 16.816666666666666], [1.7287569E12, 6.833333333333333], [1.72876182E12, 16.316666666666666], [1.72875978E12, 17.533333333333335], [1.728762E12, 19.1], [1.72876302E12, 17.8], [1.7287557E12, 6.416666666666667], [1.72875774E12, 12.633333333333333], [1.72876098E12, 16.883333333333333], [1.7287632E12, 17.433333333333334], [1.72875876E12, 11.833333333333334], [1.7287545E12, 5.4], [1.72875672E12, 5.933333333333334], [1.72875864E12, 11.75], [1.72875522E12, 5.766666666666667], [1.72875744E12, 12.2], [1.72875966E12, 10.816666666666666], [1.72876188E12, 13.55], [1.72875726E12, 12.016666666666667], [1.72875984E12, 17.066666666666666], [1.72876308E12, 16.9], [1.72876086E12, 16.233333333333334], [1.72875624E12, 6.516666666666667], [1.72875606E12, 6.216666666666667], [1.72876104E12, 16.6], [1.72875882E12, 12.616666666666667], [1.72875504E12, 6.433333333333334], [1.72876206E12, 18.633333333333333], [1.72876002E12, 16.683333333333334], [1.72875486E12, 6.15], [1.72875708E12, 11.333333333333334], [1.72876326E12, 19.183333333333334], [1.72876224E12, 18.4], [1.72875558E12, 6.083333333333333], [1.7287578E12, 11.966666666666667], [1.7287593E12, 11.833333333333334], [1.72876152E12, 16.95], [1.72876254E12, 18.0], [1.72875456E12, 6.35], [1.7287605E12, 16.433333333333334], [1.72876374E12, 1.1333333333333333], [1.72875438E12, 2.8666666666666667], [1.7287566E12, 6.066666666666666], [1.72875828E12, 11.85], [1.72876272E12, 18.666666666666668], [1.7287554E12, 6.466666666666667], [1.7287617E12, 15.85], [1.72875762E12, 11.25], [1.72875948E12, 12.166666666666666], [1.7287542E12, 3.4833333333333334], [1.72875642E12, 6.416666666666667], [1.72875846E12, 11.85], [1.72876068E12, 16.166666666666668], [1.7287629E12, 18.15], [1.72875492E12, 6.433333333333334], [1.72875834E12, 11.483333333333333], [1.72876056E12, 17.416666666666668], [1.72875714E12, 12.466666666666667], [1.72876158E12, 16.533333333333335], [1.72875954E12, 11.866666666666667], [1.72876176E12, 15.983333333333333], [1.72876278E12, 18.616666666666667], [1.72875594E12, 6.583333333333333], [1.72876074E12, 17.183333333333334], [1.72875852E12, 12.05], [1.72876296E12, 18.216666666666665], [1.72875696E12, 6.633333333333334], [1.72875474E12, 6.416666666666667], [1.72876194E12, 8.983333333333333], [1.72875678E12, 6.166666666666667], [1.72875576E12, 6.733333333333333], [1.72875972E12, 9.733333333333333], [1.7287575E12, 12.033333333333333], [1.72876122E12, 16.066666666666666], [1.728759E12, 11.783333333333333], [1.72876344E12, 18.95], [1.72875426E12, 3.183333333333333], [1.72875648E12, 6.116666666666666], [1.7287563E12, 6.4], [1.72875528E12, 6.0], [1.72875798E12, 11.783333333333333], [1.7287602E12, 16.6], [1.72876242E12, 17.766666666666666], [1.72875816E12, 12.683333333333334], [1.7287551E12, 5.983333333333333], [1.72875732E12, 12.383333333333333], [1.72875408E12, 0.03333333333333333], [1.72875918E12, 12.066666666666666], [1.7287614E12, 15.9], [1.72876362E12, 18.383333333333333], [1.72875936E12, 11.8], [1.7287626E12, 17.833333333333332], [1.72875612E12, 6.533333333333333], [1.72876038E12, 16.833333333333332]], "isOverall": false, "label": "getmap-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72876374E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.72875408E12, "maxY": 19.716666666666665, "series": [{"data": [[1.72876026E12, 16.05], [1.7287635E12, 17.683333333333334], [1.72875462E12, 6.333333333333333], [1.72875684E12, 6.683333333333334], [1.72875804E12, 12.15], [1.72876248E12, 17.983333333333334], [1.72875564E12, 6.233333333333333], [1.72876146E12, 16.333333333333332], [1.72875786E12, 11.65], [1.72875924E12, 11.9], [1.72876368E12, 13.816666666666666], [1.72875444E12, 3.2666666666666666], [1.72875666E12, 6.583333333333333], [1.72875822E12, 11.866666666666667], [1.72876044E12, 16.316666666666666], [1.72876266E12, 17.716666666666665], [1.7287584E12, 11.566666666666666], [1.72875546E12, 6.3], [1.72875768E12, 12.65], [1.72875942E12, 11.983333333333333], [1.72876164E12, 17.433333333333334], [1.72875618E12, 6.15], [1.72876314E12, 18.0], [1.7287587E12, 12.066666666666666], [1.72876092E12, 17.416666666666668], [1.72875888E12, 12.15], [1.72876212E12, 18.666666666666668], [1.72875498E12, 6.2], [1.7287572E12, 12.583333333333334], [1.7287599E12, 16.583333333333332], [1.72875702E12, 4.3], [1.72876332E12, 18.15], [1.72876008E12, 15.95], [1.7287611E12, 16.7], [1.728756E12, 6.216666666666667], [1.72875582E12, 6.833333333333333], [1.72875906E12, 12.333333333333334], [1.72876128E12, 17.25], [1.7287623E12, 17.716666666666665], [1.7287548E12, 5.833333333333333], [1.72875654E12, 5.716666666666667], [1.72875552E12, 6.0], [1.72875996E12, 15.7], [1.72876218E12, 19.716666666666665], [1.72875792E12, 11.816666666666666], [1.72875534E12, 6.283333333333333], [1.72875756E12, 12.816666666666666], [1.72875432E12, 3.45], [1.72875894E12, 13.05], [1.72876116E12, 16.783333333333335], [1.72876338E12, 18.133333333333333], [1.72875912E12, 11.383333333333333], [1.72876236E12, 18.166666666666668], [1.72875414E12, 3.066666666666667], [1.72875636E12, 6.75], [1.72876014E12, 15.366666666666667], [1.72875516E12, 5.833333333333333], [1.72876356E12, 17.766666666666666], [1.7287581E12, 12.216666666666667], [1.72876032E12, 17.116666666666667], [1.72875738E12, 12.033333333333333], [1.72876134E12, 16.816666666666666], [1.7287596E12, 11.783333333333333], [1.72876284E12, 18.85], [1.72875588E12, 5.95], [1.72876062E12, 15.533333333333333], [1.72875468E12, 6.35], [1.72875858E12, 12.666666666666666], [1.7287608E12, 16.816666666666666], [1.7287569E12, 6.833333333333333], [1.72876182E12, 16.316666666666666], [1.72875978E12, 17.533333333333335], [1.728762E12, 19.1], [1.72876302E12, 17.8], [1.7287557E12, 6.416666666666667], [1.72875774E12, 12.633333333333333], [1.72876098E12, 16.883333333333333], [1.7287632E12, 17.433333333333334], [1.72875876E12, 11.833333333333334], [1.7287545E12, 5.4], [1.72875672E12, 5.933333333333334], [1.72875864E12, 11.75], [1.72875522E12, 5.766666666666667], [1.72875744E12, 12.2], [1.72875966E12, 10.816666666666666], [1.72876188E12, 13.55], [1.72875726E12, 12.016666666666667], [1.72875984E12, 17.066666666666666], [1.72876308E12, 16.9], [1.72876086E12, 16.233333333333334], [1.72875624E12, 6.516666666666667], [1.72875606E12, 6.216666666666667], [1.72876104E12, 16.6], [1.72875882E12, 12.616666666666667], [1.72875504E12, 6.433333333333334], [1.72876206E12, 18.633333333333333], [1.72876002E12, 16.683333333333334], [1.72875486E12, 6.15], [1.72875708E12, 11.333333333333334], [1.72876326E12, 19.183333333333334], [1.72876224E12, 18.4], [1.72875558E12, 6.083333333333333], [1.7287578E12, 11.966666666666667], [1.7287593E12, 11.833333333333334], [1.72876152E12, 16.95], [1.72876254E12, 18.0], [1.72875456E12, 6.35], [1.7287605E12, 16.433333333333334], [1.72876374E12, 1.1333333333333333], [1.72875438E12, 2.8666666666666667], [1.7287566E12, 6.066666666666666], [1.72875828E12, 11.85], [1.72876272E12, 18.666666666666668], [1.7287554E12, 6.466666666666667], [1.7287617E12, 15.85], [1.72875762E12, 11.25], [1.72875948E12, 12.166666666666666], [1.7287542E12, 3.4833333333333334], [1.72875642E12, 6.416666666666667], [1.72875846E12, 11.85], [1.72876068E12, 16.166666666666668], [1.7287629E12, 18.15], [1.72875492E12, 6.433333333333334], [1.72875834E12, 11.483333333333333], [1.72876056E12, 17.416666666666668], [1.72875714E12, 12.466666666666667], [1.72876158E12, 16.533333333333335], [1.72875954E12, 11.866666666666667], [1.72876176E12, 15.983333333333333], [1.72876278E12, 18.616666666666667], [1.72875594E12, 6.583333333333333], [1.72876074E12, 17.183333333333334], [1.72875852E12, 12.05], [1.72876296E12, 18.216666666666665], [1.72875696E12, 6.633333333333334], [1.72875474E12, 6.416666666666667], [1.72876194E12, 8.983333333333333], [1.72875678E12, 6.166666666666667], [1.72875576E12, 6.733333333333333], [1.72875972E12, 9.733333333333333], [1.7287575E12, 12.033333333333333], [1.72876122E12, 16.066666666666666], [1.728759E12, 11.783333333333333], [1.72876344E12, 18.95], [1.72875426E12, 3.183333333333333], [1.72875648E12, 6.116666666666666], [1.7287563E12, 6.4], [1.72875528E12, 6.0], [1.72875798E12, 11.783333333333333], [1.7287602E12, 16.6], [1.72876242E12, 17.766666666666666], [1.72875816E12, 12.683333333333334], [1.7287551E12, 5.983333333333333], [1.72875732E12, 12.383333333333333], [1.72875408E12, 0.03333333333333333], [1.72875918E12, 12.066666666666666], [1.7287614E12, 15.9], [1.72876362E12, 18.383333333333333], [1.72875936E12, 11.8], [1.7287626E12, 17.833333333333332], [1.72875612E12, 6.533333333333333], [1.72876038E12, 16.833333333333332]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72876374E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

