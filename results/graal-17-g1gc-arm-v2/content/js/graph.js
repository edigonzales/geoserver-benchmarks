/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 43.0, "minX": 0.0, "maxY": 4313.0, "series": [{"data": [[0.0, 43.0], [0.1, 57.0], [0.2, 60.0], [0.3, 62.0], [0.4, 64.0], [0.5, 65.0], [0.6, 66.0], [0.7, 67.0], [0.8, 68.0], [0.9, 69.0], [1.0, 70.0], [1.1, 71.0], [1.2, 72.0], [1.3, 72.0], [1.4, 73.0], [1.5, 74.0], [1.6, 75.0], [1.7, 75.0], [1.8, 76.0], [1.9, 77.0], [2.0, 77.0], [2.1, 78.0], [2.2, 78.0], [2.3, 79.0], [2.4, 79.0], [2.5, 80.0], [2.6, 81.0], [2.7, 81.0], [2.8, 82.0], [2.9, 82.0], [3.0, 82.0], [3.1, 83.0], [3.2, 83.0], [3.3, 84.0], [3.4, 84.0], [3.5, 85.0], [3.6, 85.0], [3.7, 86.0], [3.8, 86.0], [3.9, 86.0], [4.0, 87.0], [4.1, 87.0], [4.2, 88.0], [4.3, 88.0], [4.4, 88.0], [4.5, 89.0], [4.6, 89.0], [4.7, 90.0], [4.8, 90.0], [4.9, 90.0], [5.0, 91.0], [5.1, 91.0], [5.2, 92.0], [5.3, 92.0], [5.4, 92.0], [5.5, 93.0], [5.6, 93.0], [5.7, 93.0], [5.8, 94.0], [5.9, 94.0], [6.0, 94.0], [6.1, 95.0], [6.2, 95.0], [6.3, 95.0], [6.4, 96.0], [6.5, 96.0], [6.6, 96.0], [6.7, 97.0], [6.8, 97.0], [6.9, 98.0], [7.0, 98.0], [7.1, 98.0], [7.2, 98.0], [7.3, 99.0], [7.4, 99.0], [7.5, 100.0], [7.6, 100.0], [7.7, 100.0], [7.8, 101.0], [7.9, 101.0], [8.0, 101.0], [8.1, 102.0], [8.2, 102.0], [8.3, 102.0], [8.4, 102.0], [8.5, 103.0], [8.6, 103.0], [8.7, 103.0], [8.8, 104.0], [8.9, 104.0], [9.0, 104.0], [9.1, 105.0], [9.2, 105.0], [9.3, 105.0], [9.4, 106.0], [9.5, 106.0], [9.6, 106.0], [9.7, 107.0], [9.8, 107.0], [9.9, 107.0], [10.0, 108.0], [10.1, 108.0], [10.2, 108.0], [10.3, 109.0], [10.4, 109.0], [10.5, 109.0], [10.6, 110.0], [10.7, 110.0], [10.8, 110.0], [10.9, 110.0], [11.0, 111.0], [11.1, 111.0], [11.2, 111.0], [11.3, 112.0], [11.4, 112.0], [11.5, 112.0], [11.6, 113.0], [11.7, 113.0], [11.8, 113.0], [11.9, 114.0], [12.0, 114.0], [12.1, 114.0], [12.2, 115.0], [12.3, 115.0], [12.4, 115.0], [12.5, 116.0], [12.6, 116.0], [12.7, 116.0], [12.8, 117.0], [12.9, 117.0], [13.0, 117.0], [13.1, 118.0], [13.2, 118.0], [13.3, 118.0], [13.4, 119.0], [13.5, 119.0], [13.6, 119.0], [13.7, 120.0], [13.8, 120.0], [13.9, 120.0], [14.0, 121.0], [14.1, 121.0], [14.2, 121.0], [14.3, 122.0], [14.4, 122.0], [14.5, 122.0], [14.6, 123.0], [14.7, 123.0], [14.8, 123.0], [14.9, 124.0], [15.0, 124.0], [15.1, 124.0], [15.2, 124.0], [15.3, 125.0], [15.4, 125.0], [15.5, 125.0], [15.6, 126.0], [15.7, 126.0], [15.8, 127.0], [15.9, 127.0], [16.0, 127.0], [16.1, 128.0], [16.2, 128.0], [16.3, 128.0], [16.4, 129.0], [16.5, 129.0], [16.6, 129.0], [16.7, 130.0], [16.8, 130.0], [16.9, 130.0], [17.0, 131.0], [17.1, 131.0], [17.2, 131.0], [17.3, 132.0], [17.4, 132.0], [17.5, 132.0], [17.6, 133.0], [17.7, 133.0], [17.8, 133.0], [17.9, 134.0], [18.0, 134.0], [18.1, 134.0], [18.2, 135.0], [18.3, 135.0], [18.4, 136.0], [18.5, 136.0], [18.6, 136.0], [18.7, 137.0], [18.8, 137.0], [18.9, 138.0], [19.0, 138.0], [19.1, 138.0], [19.2, 139.0], [19.3, 139.0], [19.4, 139.0], [19.5, 140.0], [19.6, 140.0], [19.7, 141.0], [19.8, 141.0], [19.9, 141.0], [20.0, 142.0], [20.1, 142.0], [20.2, 142.0], [20.3, 143.0], [20.4, 143.0], [20.5, 144.0], [20.6, 144.0], [20.7, 144.0], [20.8, 145.0], [20.9, 145.0], [21.0, 146.0], [21.1, 146.0], [21.2, 146.0], [21.3, 147.0], [21.4, 147.0], [21.5, 147.0], [21.6, 148.0], [21.7, 148.0], [21.8, 149.0], [21.9, 149.0], [22.0, 149.0], [22.1, 150.0], [22.2, 150.0], [22.3, 151.0], [22.4, 151.0], [22.5, 151.0], [22.6, 152.0], [22.7, 152.0], [22.8, 153.0], [22.9, 153.0], [23.0, 153.0], [23.1, 154.0], [23.2, 154.0], [23.3, 155.0], [23.4, 155.0], [23.5, 156.0], [23.6, 156.0], [23.7, 157.0], [23.8, 157.0], [23.9, 157.0], [24.0, 158.0], [24.1, 158.0], [24.2, 159.0], [24.3, 159.0], [24.4, 160.0], [24.5, 160.0], [24.6, 161.0], [24.7, 161.0], [24.8, 162.0], [24.9, 162.0], [25.0, 163.0], [25.1, 163.0], [25.2, 164.0], [25.3, 164.0], [25.4, 165.0], [25.5, 165.0], [25.6, 166.0], [25.7, 166.0], [25.8, 167.0], [25.9, 167.0], [26.0, 168.0], [26.1, 168.0], [26.2, 169.0], [26.3, 169.0], [26.4, 170.0], [26.5, 171.0], [26.6, 171.0], [26.7, 172.0], [26.8, 172.0], [26.9, 173.0], [27.0, 173.0], [27.1, 174.0], [27.2, 174.0], [27.3, 175.0], [27.4, 175.0], [27.5, 176.0], [27.6, 177.0], [27.7, 177.0], [27.8, 178.0], [27.9, 178.0], [28.0, 179.0], [28.1, 180.0], [28.2, 180.0], [28.3, 181.0], [28.4, 181.0], [28.5, 182.0], [28.6, 183.0], [28.7, 183.0], [28.8, 184.0], [28.9, 185.0], [29.0, 185.0], [29.1, 186.0], [29.2, 186.0], [29.3, 187.0], [29.4, 188.0], [29.5, 188.0], [29.6, 189.0], [29.7, 189.0], [29.8, 190.0], [29.9, 191.0], [30.0, 192.0], [30.1, 193.0], [30.2, 193.0], [30.3, 194.0], [30.4, 195.0], [30.5, 195.0], [30.6, 196.0], [30.7, 197.0], [30.8, 198.0], [30.9, 198.0], [31.0, 199.0], [31.1, 200.0], [31.2, 200.0], [31.3, 201.0], [31.4, 202.0], [31.5, 203.0], [31.6, 203.0], [31.7, 204.0], [31.8, 205.0], [31.9, 206.0], [32.0, 206.0], [32.1, 207.0], [32.2, 208.0], [32.3, 209.0], [32.4, 210.0], [32.5, 211.0], [32.6, 212.0], [32.7, 213.0], [32.8, 213.0], [32.9, 214.0], [33.0, 215.0], [33.1, 216.0], [33.2, 217.0], [33.3, 218.0], [33.4, 219.0], [33.5, 220.0], [33.6, 221.0], [33.7, 222.0], [33.8, 223.0], [33.9, 224.0], [34.0, 225.0], [34.1, 226.0], [34.2, 227.0], [34.3, 228.0], [34.4, 229.0], [34.5, 230.0], [34.6, 231.0], [34.7, 232.0], [34.8, 233.0], [34.9, 235.0], [35.0, 236.0], [35.1, 237.0], [35.2, 238.0], [35.3, 239.0], [35.4, 240.0], [35.5, 242.0], [35.6, 243.0], [35.7, 244.0], [35.8, 246.0], [35.9, 247.0], [36.0, 248.0], [36.1, 250.0], [36.2, 251.0], [36.3, 252.0], [36.4, 254.0], [36.5, 255.0], [36.6, 257.0], [36.7, 258.0], [36.8, 259.0], [36.9, 261.0], [37.0, 262.0], [37.1, 264.0], [37.2, 265.0], [37.3, 267.0], [37.4, 269.0], [37.5, 270.0], [37.6, 272.0], [37.7, 273.0], [37.8, 274.0], [37.9, 276.0], [38.0, 278.0], [38.1, 280.0], [38.2, 281.0], [38.3, 283.0], [38.4, 285.0], [38.5, 287.0], [38.6, 289.0], [38.7, 291.0], [38.8, 293.0], [38.9, 294.0], [39.0, 296.0], [39.1, 298.0], [39.2, 300.0], [39.3, 302.0], [39.4, 305.0], [39.5, 307.0], [39.6, 309.0], [39.7, 311.0], [39.8, 313.0], [39.9, 316.0], [40.0, 318.0], [40.1, 320.0], [40.2, 323.0], [40.3, 326.0], [40.4, 328.0], [40.5, 331.0], [40.6, 334.0], [40.7, 336.0], [40.8, 339.0], [40.9, 341.0], [41.0, 344.0], [41.1, 347.0], [41.2, 350.0], [41.3, 353.0], [41.4, 356.0], [41.5, 359.0], [41.6, 362.0], [41.7, 366.0], [41.8, 368.0], [41.9, 372.0], [42.0, 375.0], [42.1, 379.0], [42.2, 382.0], [42.3, 385.0], [42.4, 388.0], [42.5, 392.0], [42.6, 396.0], [42.7, 400.0], [42.8, 403.0], [42.9, 406.0], [43.0, 410.0], [43.1, 414.0], [43.2, 418.0], [43.3, 422.0], [43.4, 426.0], [43.5, 430.0], [43.6, 434.0], [43.7, 438.0], [43.8, 442.0], [43.9, 445.0], [44.0, 449.0], [44.1, 453.0], [44.2, 456.0], [44.3, 460.0], [44.4, 464.0], [44.5, 468.0], [44.6, 473.0], [44.7, 476.0], [44.8, 480.0], [44.9, 484.0], [45.0, 488.0], [45.1, 492.0], [45.2, 495.0], [45.3, 499.0], [45.4, 503.0], [45.5, 507.0], [45.6, 511.0], [45.7, 515.0], [45.8, 518.0], [45.9, 522.0], [46.0, 526.0], [46.1, 530.0], [46.2, 533.0], [46.3, 537.0], [46.4, 540.0], [46.5, 544.0], [46.6, 547.0], [46.7, 550.0], [46.8, 554.0], [46.9, 557.0], [47.0, 561.0], [47.1, 564.0], [47.2, 568.0], [47.3, 571.0], [47.4, 575.0], [47.5, 578.0], [47.6, 581.0], [47.7, 585.0], [47.8, 589.0], [47.9, 592.0], [48.0, 595.0], [48.1, 599.0], [48.2, 602.0], [48.3, 605.0], [48.4, 608.0], [48.5, 611.0], [48.6, 615.0], [48.7, 618.0], [48.8, 621.0], [48.9, 624.0], [49.0, 627.0], [49.1, 630.0], [49.2, 632.0], [49.3, 635.0], [49.4, 638.0], [49.5, 641.0], [49.6, 644.0], [49.7, 647.0], [49.8, 650.0], [49.9, 653.0], [50.0, 655.0], [50.1, 658.0], [50.2, 661.0], [50.3, 663.0], [50.4, 666.0], [50.5, 669.0], [50.6, 672.0], [50.7, 674.0], [50.8, 677.0], [50.9, 679.0], [51.0, 682.0], [51.1, 684.0], [51.2, 687.0], [51.3, 689.0], [51.4, 692.0], [51.5, 694.0], [51.6, 696.0], [51.7, 699.0], [51.8, 701.0], [51.9, 703.0], [52.0, 705.0], [52.1, 708.0], [52.2, 710.0], [52.3, 713.0], [52.4, 715.0], [52.5, 718.0], [52.6, 720.0], [52.7, 723.0], [52.8, 725.0], [52.9, 728.0], [53.0, 730.0], [53.1, 732.0], [53.2, 734.0], [53.3, 737.0], [53.4, 739.0], [53.5, 741.0], [53.6, 744.0], [53.7, 745.0], [53.8, 748.0], [53.9, 750.0], [54.0, 752.0], [54.1, 755.0], [54.2, 757.0], [54.3, 759.0], [54.4, 761.0], [54.5, 763.0], [54.6, 766.0], [54.7, 768.0], [54.8, 770.0], [54.9, 772.0], [55.0, 774.0], [55.1, 776.0], [55.2, 779.0], [55.3, 781.0], [55.4, 783.0], [55.5, 785.0], [55.6, 787.0], [55.7, 789.0], [55.8, 791.0], [55.9, 793.0], [56.0, 795.0], [56.1, 797.0], [56.2, 799.0], [56.3, 801.0], [56.4, 803.0], [56.5, 805.0], [56.6, 807.0], [56.7, 809.0], [56.8, 811.0], [56.9, 813.0], [57.0, 816.0], [57.1, 818.0], [57.2, 820.0], [57.3, 822.0], [57.4, 824.0], [57.5, 827.0], [57.6, 829.0], [57.7, 831.0], [57.8, 833.0], [57.9, 835.0], [58.0, 837.0], [58.1, 838.0], [58.2, 840.0], [58.3, 842.0], [58.4, 844.0], [58.5, 846.0], [58.6, 848.0], [58.7, 850.0], [58.8, 852.0], [58.9, 854.0], [59.0, 856.0], [59.1, 858.0], [59.2, 860.0], [59.3, 862.0], [59.4, 864.0], [59.5, 866.0], [59.6, 868.0], [59.7, 870.0], [59.8, 872.0], [59.9, 874.0], [60.0, 876.0], [60.1, 878.0], [60.2, 879.0], [60.3, 882.0], [60.4, 884.0], [60.5, 886.0], [60.6, 888.0], [60.7, 890.0], [60.8, 892.0], [60.9, 894.0], [61.0, 895.0], [61.1, 897.0], [61.2, 899.0], [61.3, 901.0], [61.4, 903.0], [61.5, 905.0], [61.6, 907.0], [61.7, 909.0], [61.8, 911.0], [61.9, 913.0], [62.0, 914.0], [62.1, 917.0], [62.2, 919.0], [62.3, 920.0], [62.4, 922.0], [62.5, 924.0], [62.6, 926.0], [62.7, 928.0], [62.8, 930.0], [62.9, 932.0], [63.0, 934.0], [63.1, 936.0], [63.2, 938.0], [63.3, 940.0], [63.4, 942.0], [63.5, 944.0], [63.6, 946.0], [63.7, 947.0], [63.8, 949.0], [63.9, 951.0], [64.0, 953.0], [64.1, 955.0], [64.2, 957.0], [64.3, 959.0], [64.4, 961.0], [64.5, 963.0], [64.6, 965.0], [64.7, 967.0], [64.8, 969.0], [64.9, 971.0], [65.0, 973.0], [65.1, 975.0], [65.2, 977.0], [65.3, 979.0], [65.4, 981.0], [65.5, 982.0], [65.6, 984.0], [65.7, 986.0], [65.8, 988.0], [65.9, 990.0], [66.0, 993.0], [66.1, 995.0], [66.2, 997.0], [66.3, 998.0], [66.4, 1000.0], [66.5, 1002.0], [66.6, 1004.0], [66.7, 1006.0], [66.8, 1007.0], [66.9, 1009.0], [67.0, 1011.0], [67.1, 1013.0], [67.2, 1015.0], [67.3, 1017.0], [67.4, 1019.0], [67.5, 1021.0], [67.6, 1022.0], [67.7, 1024.0], [67.8, 1026.0], [67.9, 1028.0], [68.0, 1030.0], [68.1, 1032.0], [68.2, 1033.0], [68.3, 1035.0], [68.4, 1037.0], [68.5, 1039.0], [68.6, 1041.0], [68.7, 1044.0], [68.8, 1046.0], [68.9, 1047.0], [69.0, 1049.0], [69.1, 1051.0], [69.2, 1053.0], [69.3, 1055.0], [69.4, 1057.0], [69.5, 1059.0], [69.6, 1061.0], [69.7, 1064.0], [69.8, 1066.0], [69.9, 1068.0], [70.0, 1070.0], [70.1, 1072.0], [70.2, 1074.0], [70.3, 1076.0], [70.4, 1078.0], [70.5, 1080.0], [70.6, 1082.0], [70.7, 1084.0], [70.8, 1086.0], [70.9, 1088.0], [71.0, 1090.0], [71.1, 1092.0], [71.2, 1094.0], [71.3, 1096.0], [71.4, 1098.0], [71.5, 1101.0], [71.6, 1103.0], [71.7, 1105.0], [71.8, 1106.0], [71.9, 1108.0], [72.0, 1111.0], [72.1, 1113.0], [72.2, 1115.0], [72.3, 1117.0], [72.4, 1119.0], [72.5, 1121.0], [72.6, 1123.0], [72.7, 1125.0], [72.8, 1127.0], [72.9, 1129.0], [73.0, 1131.0], [73.1, 1133.0], [73.2, 1135.0], [73.3, 1137.0], [73.4, 1139.0], [73.5, 1141.0], [73.6, 1143.0], [73.7, 1145.0], [73.8, 1147.0], [73.9, 1149.0], [74.0, 1151.0], [74.1, 1153.0], [74.2, 1155.0], [74.3, 1158.0], [74.4, 1159.0], [74.5, 1162.0], [74.6, 1164.0], [74.7, 1166.0], [74.8, 1169.0], [74.9, 1171.0], [75.0, 1173.0], [75.1, 1175.0], [75.2, 1178.0], [75.3, 1180.0], [75.4, 1182.0], [75.5, 1184.0], [75.6, 1186.0], [75.7, 1188.0], [75.8, 1191.0], [75.9, 1193.0], [76.0, 1196.0], [76.1, 1198.0], [76.2, 1201.0], [76.3, 1203.0], [76.4, 1205.0], [76.5, 1207.0], [76.6, 1209.0], [76.7, 1212.0], [76.8, 1214.0], [76.9, 1216.0], [77.0, 1218.0], [77.1, 1220.0], [77.2, 1222.0], [77.3, 1225.0], [77.4, 1227.0], [77.5, 1229.0], [77.6, 1232.0], [77.7, 1234.0], [77.8, 1236.0], [77.9, 1238.0], [78.0, 1241.0], [78.1, 1243.0], [78.2, 1246.0], [78.3, 1248.0], [78.4, 1250.0], [78.5, 1252.0], [78.6, 1254.0], [78.7, 1256.0], [78.8, 1259.0], [78.9, 1261.0], [79.0, 1263.0], [79.1, 1266.0], [79.2, 1268.0], [79.3, 1271.0], [79.4, 1273.0], [79.5, 1275.0], [79.6, 1278.0], [79.7, 1281.0], [79.8, 1284.0], [79.9, 1286.0], [80.0, 1289.0], [80.1, 1291.0], [80.2, 1293.0], [80.3, 1296.0], [80.4, 1298.0], [80.5, 1301.0], [80.6, 1304.0], [80.7, 1306.0], [80.8, 1309.0], [80.9, 1311.0], [81.0, 1314.0], [81.1, 1316.0], [81.2, 1319.0], [81.3, 1321.0], [81.4, 1324.0], [81.5, 1327.0], [81.6, 1330.0], [81.7, 1333.0], [81.8, 1335.0], [81.9, 1338.0], [82.0, 1340.0], [82.1, 1343.0], [82.2, 1346.0], [82.3, 1349.0], [82.4, 1352.0], [82.5, 1354.0], [82.6, 1358.0], [82.7, 1361.0], [82.8, 1364.0], [82.9, 1367.0], [83.0, 1370.0], [83.1, 1373.0], [83.2, 1375.0], [83.3, 1378.0], [83.4, 1381.0], [83.5, 1384.0], [83.6, 1387.0], [83.7, 1390.0], [83.8, 1393.0], [83.9, 1395.0], [84.0, 1398.0], [84.1, 1401.0], [84.2, 1404.0], [84.3, 1407.0], [84.4, 1409.0], [84.5, 1413.0], [84.6, 1416.0], [84.7, 1418.0], [84.8, 1421.0], [84.9, 1424.0], [85.0, 1428.0], [85.1, 1431.0], [85.2, 1434.0], [85.3, 1437.0], [85.4, 1440.0], [85.5, 1443.0], [85.6, 1446.0], [85.7, 1450.0], [85.8, 1453.0], [85.9, 1455.0], [86.0, 1459.0], [86.1, 1463.0], [86.2, 1466.0], [86.3, 1469.0], [86.4, 1472.0], [86.5, 1476.0], [86.6, 1479.0], [86.7, 1482.0], [86.8, 1485.0], [86.9, 1489.0], [87.0, 1492.0], [87.1, 1495.0], [87.2, 1499.0], [87.3, 1502.0], [87.4, 1505.0], [87.5, 1510.0], [87.6, 1513.0], [87.7, 1517.0], [87.8, 1520.0], [87.9, 1524.0], [88.0, 1527.0], [88.1, 1532.0], [88.2, 1535.0], [88.3, 1540.0], [88.4, 1544.0], [88.5, 1549.0], [88.6, 1552.0], [88.7, 1556.0], [88.8, 1560.0], [88.9, 1564.0], [89.0, 1568.0], [89.1, 1571.0], [89.2, 1575.0], [89.3, 1579.0], [89.4, 1583.0], [89.5, 1588.0], [89.6, 1592.0], [89.7, 1596.0], [89.8, 1600.0], [89.9, 1605.0], [90.0, 1609.0], [90.1, 1613.0], [90.2, 1618.0], [90.3, 1623.0], [90.4, 1627.0], [90.5, 1631.0], [90.6, 1636.0], [90.7, 1640.0], [90.8, 1646.0], [90.9, 1651.0], [91.0, 1656.0], [91.1, 1660.0], [91.2, 1665.0], [91.3, 1670.0], [91.4, 1675.0], [91.5, 1679.0], [91.6, 1684.0], [91.7, 1690.0], [91.8, 1696.0], [91.9, 1700.0], [92.0, 1706.0], [92.1, 1711.0], [92.2, 1716.0], [92.3, 1721.0], [92.4, 1726.0], [92.5, 1731.0], [92.6, 1736.0], [92.7, 1744.0], [92.8, 1750.0], [92.9, 1756.0], [93.0, 1760.0], [93.1, 1767.0], [93.2, 1773.0], [93.3, 1779.0], [93.4, 1785.0], [93.5, 1792.0], [93.6, 1798.0], [93.7, 1805.0], [93.8, 1811.0], [93.9, 1817.0], [94.0, 1823.0], [94.1, 1829.0], [94.2, 1836.0], [94.3, 1842.0], [94.4, 1850.0], [94.5, 1859.0], [94.6, 1866.0], [94.7, 1875.0], [94.8, 1883.0], [94.9, 1889.0], [95.0, 1896.0], [95.1, 1903.0], [95.2, 1910.0], [95.3, 1918.0], [95.4, 1926.0], [95.5, 1934.0], [95.6, 1943.0], [95.7, 1952.0], [95.8, 1960.0], [95.9, 1969.0], [96.0, 1978.0], [96.1, 1989.0], [96.2, 1997.0], [96.3, 2009.0], [96.4, 2021.0], [96.5, 2032.0], [96.6, 2042.0], [96.7, 2053.0], [96.8, 2065.0], [96.9, 2077.0], [97.0, 2088.0], [97.1, 2102.0], [97.2, 2116.0], [97.3, 2130.0], [97.4, 2143.0], [97.5, 2155.0], [97.6, 2169.0], [97.7, 2185.0], [97.8, 2200.0], [97.9, 2216.0], [98.0, 2235.0], [98.1, 2254.0], [98.2, 2272.0], [98.3, 2293.0], [98.4, 2311.0], [98.5, 2333.0], [98.6, 2357.0], [98.7, 2382.0], [98.8, 2406.0], [98.9, 2435.0], [99.0, 2468.0], [99.1, 2499.0], [99.2, 2538.0], [99.3, 2578.0], [99.4, 2634.0], [99.5, 2692.0], [99.6, 2767.0], [99.7, 2845.0], [99.8, 2973.0], [99.9, 3173.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 27633.0, "series": [{"data": [[0.0, 8771.0], [600.0, 4210.0], [700.0, 5252.0], [800.0, 5867.0], [900.0, 6046.0], [1000.0, 5949.0], [1100.0, 5513.0], [1200.0, 5029.0], [1300.0, 4231.0], [1400.0, 3709.0], [1500.0, 3018.0], [100.0, 27633.0], [1600.0, 2455.0], [1700.0, 2024.0], [1800.0, 1681.0], [1900.0, 1367.0], [2000.0, 1015.0], [2100.0, 837.0], [2200.0, 633.0], [2300.0, 504.0], [2400.0, 392.0], [2500.0, 283.0], [2600.0, 199.0], [2700.0, 154.0], [2800.0, 120.0], [2900.0, 79.0], [3000.0, 67.0], [3100.0, 42.0], [200.0, 9496.0], [3200.0, 39.0], [3300.0, 22.0], [3400.0, 14.0], [3500.0, 13.0], [3600.0, 8.0], [3700.0, 5.0], [3800.0, 4.0], [3900.0, 2.0], [4000.0, 1.0], [4300.0, 1.0], [300.0, 4139.0], [400.0, 3068.0], [500.0, 3308.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 14940.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 53140.0, "series": [{"data": [[0.0, 53140.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 49120.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 14940.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.7285445E12, "maxY": 16.0, "series": [{"data": [[1.7285517E12, 12.0], [1.728552E12, 12.0], [1.7285511E12, 12.0], [1.7285514E12, 12.0], [1.7285505E12, 12.0], [1.7285508E12, 12.0], [1.7285502E12, 11.970472440944889], [1.72855182E12, 12.0], [1.72855212E12, 12.0], [1.72855242E12, 1.4339622641509433], [1.72855122E12, 12.0], [1.72855152E12, 12.0], [1.72855062E12, 12.0], [1.72855092E12, 12.0], [1.72855194E12, 12.0], [1.72855224E12, 12.0], [1.72855032E12, 12.0], [1.72855134E12, 12.0], [1.72855164E12, 12.0], [1.72855074E12, 12.0], [1.72855104E12, 12.0], [1.72855206E12, 12.0], [1.72855014E12, 1.0], [1.72855236E12, 8.672131147540988], [1.72855044E12, 12.0], [1.72855146E12, 12.0], [1.72855176E12, 12.0], [1.72855086E12, 12.0], [1.72855116E12, 12.0], [1.72855218E12, 12.0], [1.72855026E12, 12.0], [1.72855056E12, 12.0], [1.72855158E12, 12.0], [1.72855188E12, 12.0], [1.72855098E12, 12.0], [1.72855128E12, 12.0], [1.7285523E12, 11.152173913043477], [1.72855038E12, 12.0], [1.72855068E12, 12.0]], "isOverall": false, "label": "12", "isController": false}, {"data": [[1.72854462E12, 2.0], [1.72854456E12, 2.0], [1.72854474E12, 2.0], [1.72854468E12, 2.0], [1.72854486E12, 1.9090909090909092], [1.7285448E12, 2.0], [1.7285445E12, 2.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.72854606E12, 4.0], [1.72854636E12, 4.0], [1.72854504E12, 4.0], [1.72854666E12, 4.0], [1.72854696E12, 4.0], [1.72854564E12, 4.0], [1.72854726E12, 4.0], [1.72854534E12, 4.0], [1.72854594E12, 4.0], [1.72854624E12, 4.0], [1.72854588E12, 4.0], [1.72854558E12, 4.0], [1.72854618E12, 4.0], [1.72854648E12, 4.0], [1.72854516E12, 4.0], [1.72854678E12, 4.0], [1.72854486E12, 3.9876543209876543], [1.72854708E12, 4.0], [1.72854576E12, 4.0], [1.72854738E12, 3.2117263843648187], [1.72854546E12, 4.0], [1.7285454E12, 4.0], [1.72854702E12, 4.0], [1.7285451E12, 4.0], [1.72854732E12, 4.0], [1.728546E12, 4.0], [1.7285457E12, 4.0], [1.7285463E12, 4.0], [1.7285466E12, 4.0], [1.72854528E12, 4.0], [1.7285469E12, 4.0], [1.7285472E12, 4.0], [1.72854498E12, 4.0], [1.72854492E12, 4.0], [1.72854654E12, 4.0], [1.72854684E12, 4.0], [1.72854552E12, 4.0], [1.72854714E12, 4.0], [1.72854522E12, 4.0], [1.72854744E12, 1.9803921568627456], [1.72854582E12, 4.0], [1.72854612E12, 4.0], [1.72854642E12, 4.0], [1.72854672E12, 4.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.72855332E12, 16.0], [1.72855302E12, 16.0], [1.72855392E12, 16.0], [1.72855362E12, 16.0], [1.72855404E12, 16.0], [1.72855374E12, 16.0], [1.72855272E12, 16.0], [1.72855242E12, 15.936170212765946], [1.72855284E12, 16.0], [1.72855254E12, 16.0], [1.72855344E12, 16.0], [1.72855314E12, 16.0], [1.72855356E12, 16.0], [1.72855326E12, 16.0], [1.72855416E12, 15.363392857142859], [1.72855386E12, 16.0], [1.72855398E12, 16.0], [1.72855296E12, 16.0], [1.72855266E12, 16.0], [1.72855308E12, 16.0], [1.72855278E12, 16.0], [1.72855368E12, 16.0], [1.72855338E12, 16.0], [1.7285538E12, 16.0], [1.7285535E12, 16.0], [1.72855248E12, 16.0], [1.7285541E12, 16.0], [1.7285526E12, 16.0], [1.72855422E12, 7.160206718346252], [1.7285532E12, 16.0], [1.7285529E12, 16.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.72854798E12, 8.0], [1.72855008E12, 7.625570776255702], [1.72854978E12, 8.0], [1.72854948E12, 8.0], [1.72854918E12, 8.0], [1.72854888E12, 8.0], [1.72854756E12, 8.0], [1.72854858E12, 8.0], [1.72854786E12, 8.0], [1.72854828E12, 8.0], [1.72854816E12, 8.0], [1.7285499E12, 8.0], [1.7285475E12, 8.0], [1.7285496E12, 8.0], [1.7285478E12, 8.0], [1.7285493E12, 8.0], [1.7285481E12, 8.0], [1.728549E12, 8.0], [1.7285487E12, 8.0], [1.7285484E12, 8.0], [1.72855002E12, 8.0], [1.72854972E12, 8.0], [1.72854768E12, 8.0], [1.72854942E12, 8.0], [1.72854912E12, 8.0], [1.72854882E12, 8.0], [1.72854762E12, 8.0], [1.72854852E12, 8.0], [1.72854792E12, 8.0], [1.72855014E12, 3.1872659176029967], [1.72854822E12, 8.0], [1.72854984E12, 8.0], [1.72854954E12, 8.0], [1.72854924E12, 8.0], [1.72854894E12, 8.0], [1.72854864E12, 8.0], [1.72854834E12, 8.0], [1.72854996E12, 8.0], [1.72854744E12, 7.995670995671001], [1.72854966E12, 8.0], [1.72854774E12, 8.0], [1.72854936E12, 8.0], [1.72854804E12, 8.0], [1.72854906E12, 8.0], [1.72854876E12, 8.0], [1.72854846E12, 8.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72855422E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 620.742857142857, "minX": 1.0, "maxY": 896.4340583656341, "series": [{"data": [[2.0, 627.8303999999996], [8.0, 674.2859988616976], [9.0, 690.3119266055048], [10.0, 731.1879049676023], [11.0, 703.2840158520474], [3.0, 633.7280334728031], [12.0, 733.2665549036049], [13.0, 768.8415841584163], [14.0, 888.7848101265819], [15.0, 818.3622448979595], [1.0, 620.742857142857], [4.0, 631.186134612958], [16.0, 896.4340583656341], [5.0, 656.9999999999999], [6.0, 638.577586206897], [7.0, 681.130681818182]], "isOverall": false, "label": "getmap", "isController": false}, {"data": [[10.722866894197855, 745.1896075085316]], "isOverall": false, "label": "getmap-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.7285445E12, "maxY": 5.697685481666667E7, "series": [{"data": [[1.72854798E12, 3.5168312733333334E7], [1.7285514E12, 4.91905886E7], [1.72855362E12, 5.6572612416666664E7], [1.72854474E12, 1.03505829E7], [1.72854696E12, 2.0309185283333335E7], [1.72854918E12, 3.751803836666667E7], [1.7285502E12, 4.925620513333333E7], [1.72854594E12, 2.03483384E7], [1.72854816E12, 3.388704728333333E7], [1.72855242E12, 3.1537932083333332E7], [1.72855122E12, 4.824682743333333E7], [1.72854558E12, 2.0422911866666667E7], [1.7285478E12, 3.422892211666667E7], [1.72855344E12, 5.4695464916666664E7], [1.72854456E12, 9956507.633333333], [1.728549E12, 3.6030785016666666E7], [1.72854678E12, 2.0443175066666666E7], [1.72855002E12, 3.59855957E7], [1.72855224E12, 4.884545621666667E7], [1.72855326E12, 5.697685481666667E7], [1.72854576E12, 2.005300915E7], [1.72855074E12, 5.069959588333333E7], [1.7285451E12, 1.98136197E7], [1.72854732E12, 1.7609375233333334E7], [1.72855398E12, 5.4902828516666666E7], [1.72854852E12, 3.666026046666667E7], [1.72855296E12, 5.353563343333333E7], [1.7285463E12, 1.8961444883333333E7], [1.72854954E12, 3.8060094266666666E7], [1.72855176E12, 4.865761238333333E7], [1.72855278E12, 5.449516013333333E7], [1.72854528E12, 2.0215327283333335E7], [1.7285538E12, 5.159314515E7], [1.72854492E12, 1.900910685E7], [1.72854834E12, 3.484656786666667E7], [1.72855056E12, 5.120922255E7], [1.72854714E12, 1.943523315E7], [1.72855158E12, 4.876458695E7], [1.72854936E12, 3.550104878333333E7], [1.7285526E12, 5.53664416E7], [1.72854612E12, 2.0250137016666666E7], [1.72855038E12, 4.979667985E7], [1.7285517E12, 4.7311622083333336E7], [1.72854606E12, 1.91025129E7], [1.72854504E12, 1.988523355E7], [1.72854948E12, 3.588394205E7], [1.72855392E12, 5.215108086666667E7], [1.72854726E12, 1.8501475833333332E7], [1.7285505E12, 5.0653466E7], [1.72855374E12, 5.257747865E7], [1.72854828E12, 3.4701085833333336E7], [1.72855272E12, 5.4651210083333336E7], [1.72854624E12, 1.8529140333333332E7], [1.72854588E12, 1.8652556316666666E7], [1.7285493E12, 3.637837885E7], [1.72855152E12, 4.910724555E7], [1.72855254E12, 5.450110785E7], [1.7285481E12, 3.3318628466666665E7], [1.72855356E12, 5.5060462166666664E7], [1.72854486E12, 1.0400268066666666E7], [1.72854708E12, 1.84536538E7], [1.72855032E12, 4.960983988333333E7], [1.72855134E12, 4.894910143333333E7], [1.7285454E12, 1.976406835E7], [1.72854882E12, 3.664010705E7], [1.72855104E12, 5.1829866916666664E7], [1.72854762E12, 3.509665335E7], [1.72855206E12, 4.931288156666667E7], [1.72854984E12, 3.683028145E7], [1.72855308E12, 5.598240868333333E7], [1.7285466E12, 1.8440440383333333E7], [1.72855086E12, 5.1339192233333334E7], [1.72854864E12, 3.722434753333333E7], [1.72854522E12, 1.9464832533333335E7], [1.72854744E12, 2.6022767366666667E7], [1.72854966E12, 3.7742830166666664E7], [1.72855188E12, 4.9025614E7], [1.7285541E12, 5.2598458833333336E7], [1.72854642E12, 2.0830332766666666E7], [1.72854846E12, 3.612231981666667E7], [1.72855068E12, 5.098309528333333E7], [1.7285529E12, 5.528257511666667E7], [1.72854978E12, 3.621602806666667E7], [1.728552E12, 4.9458168766666666E7], [1.72854636E12, 1.952324635E7], [1.72855302E12, 5.59245325E7], [1.72855404E12, 5.414281581666667E7], [1.72854534E12, 2.0015115433333334E7], [1.72854756E12, 3.42383902E7], [1.72854858E12, 3.616085921666667E7], [1.7285508E12, 4.82985947E7], [1.72855182E12, 4.900109536666667E7], [1.7285496E12, 3.78233604E7], [1.72855284E12, 5.54211853E7], [1.72854618E12, 1.8191651533333335E7], [1.72855062E12, 5.0920601516666666E7], [1.72854516E12, 1.8463806416666668E7], [1.7285484E12, 3.6539368666666664E7], [1.72854738E12, 1.574857685E7], [1.72854942E12, 3.709397356666667E7], [1.72855164E12, 4.937051113333333E7], [1.72855386E12, 5.482283763333333E7], [1.72854912E12, 3.664954845E7], [1.7285457E12, 1.935720145E7], [1.72854792E12, 3.5489155083333336E7], [1.72855014E12, 1.3278976916666666E7], [1.72855236E12, 3.50629164E7], [1.72854468E12, 9600412.116666667], [1.7285469E12, 1.92917484E7], [1.72854894E12, 3.6849277666666664E7], [1.72855116E12, 4.978138443333333E7], [1.72855338E12, 5.560348853333333E7], [1.72855218E12, 4.877600245E7], [1.72854654E12, 1.984772425E7], [1.72854552E12, 1.9060129416666668E7], [1.72854996E12, 3.699433361666667E7], [1.72854774E12, 3.463240838333333E7], [1.72855098E12, 4.991140753333333E7], [1.72855422E12, 1.9911287366666667E7], [1.72854876E12, 3.658341918333333E7], [1.7285532E12, 5.3369255166666664E7], [1.7285445E12, 4162650.466666667], [1.72854672E12, 1.9691381016666666E7], [1.72855008E12, 3.593944096666667E7], [1.72855332E12, 5.355438936666667E7], [1.72854666E12, 1.969790725E7], [1.7285511E12, 4.9117896083333336E7], [1.72854564E12, 1.9723671233333334E7], [1.72854888E12, 3.705942781666667E7], [1.72854786E12, 3.491534978333333E7], [1.7285499E12, 3.7349388266666666E7], [1.72855212E12, 4.953849593333333E7], [1.7285475E12, 3.641397153333333E7], [1.72854648E12, 1.83622142E7], [1.7285487E12, 3.653602906666667E7], [1.72855092E12, 4.961139175E7], [1.72855314E12, 5.536522725E7], [1.72855194E12, 4.9806732266666666E7], [1.72854972E12, 3.680833946666667E7], [1.72855416E12, 5.279520953333333E7], [1.72854546E12, 1.9339248133333333E7], [1.72854768E12, 3.7085975516666666E7], [1.72854702E12, 1.8968932983333334E7], [1.728546E12, 1.90158219E7], [1.72854822E12, 3.487066143333333E7], [1.72855044E12, 5.1492853266666666E7], [1.72855266E12, 5.45028491E7], [1.72855146E12, 5.2027149E7], [1.72854924E12, 3.6359803766666666E7], [1.72855368E12, 5.501136485E7], [1.7285472E12, 2.0087000966666665E7], [1.72854498E12, 1.8817349966666665E7], [1.72855026E12, 5.065253956666667E7], [1.7285535E12, 5.46114054E7], [1.72854462E12, 9929568.933333334], [1.72854684E12, 1.9924579083333332E7], [1.72855248E12, 5.2785055166666664E7], [1.72854582E12, 2.0231242483333334E7], [1.72854804E12, 3.3216062866666667E7], [1.72854906E12, 3.558998921666667E7], [1.72855128E12, 5.066822713333333E7], [1.7285523E12, 4.793534388333333E7], [1.7285448E12, 9298828.15]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72854798E12, 0.0], [1.7285514E12, 0.0], [1.72855362E12, 0.0], [1.72854474E12, 0.0], [1.72854696E12, 0.0], [1.72854918E12, 0.0], [1.7285502E12, 0.0], [1.72854594E12, 0.0], [1.72854816E12, 0.0], [1.72855242E12, 0.0], [1.72855122E12, 0.0], [1.72854558E12, 0.0], [1.7285478E12, 0.0], [1.72855344E12, 0.0], [1.72854456E12, 0.0], [1.728549E12, 0.0], [1.72854678E12, 0.0], [1.72855002E12, 0.0], [1.72855224E12, 0.0], [1.72855326E12, 0.0], [1.72854576E12, 0.0], [1.72855074E12, 0.0], [1.7285451E12, 0.0], [1.72854732E12, 0.0], [1.72855398E12, 0.0], [1.72854852E12, 0.0], [1.72855296E12, 0.0], [1.7285463E12, 0.0], [1.72854954E12, 0.0], [1.72855176E12, 0.0], [1.72855278E12, 0.0], [1.72854528E12, 0.0], [1.7285538E12, 0.0], [1.72854492E12, 0.0], [1.72854834E12, 0.0], [1.72855056E12, 0.0], [1.72854714E12, 0.0], [1.72855158E12, 0.0], [1.72854936E12, 0.0], [1.7285526E12, 0.0], [1.72854612E12, 0.0], [1.72855038E12, 0.0], [1.7285517E12, 0.0], [1.72854606E12, 0.0], [1.72854504E12, 0.0], [1.72854948E12, 0.0], [1.72855392E12, 0.0], [1.72854726E12, 0.0], [1.7285505E12, 0.0], [1.72855374E12, 0.0], [1.72854828E12, 0.0], [1.72855272E12, 0.0], [1.72854624E12, 0.0], [1.72854588E12, 0.0], [1.7285493E12, 0.0], [1.72855152E12, 0.0], [1.72855254E12, 0.0], [1.7285481E12, 0.0], [1.72855356E12, 0.0], [1.72854486E12, 0.0], [1.72854708E12, 0.0], [1.72855032E12, 0.0], [1.72855134E12, 0.0], [1.7285454E12, 0.0], [1.72854882E12, 0.0], [1.72855104E12, 0.0], [1.72854762E12, 0.0], [1.72855206E12, 0.0], [1.72854984E12, 0.0], [1.72855308E12, 0.0], [1.7285466E12, 0.0], [1.72855086E12, 0.0], [1.72854864E12, 0.0], [1.72854522E12, 0.0], [1.72854744E12, 0.0], [1.72854966E12, 0.0], [1.72855188E12, 0.0], [1.7285541E12, 0.0], [1.72854642E12, 0.0], [1.72854846E12, 0.0], [1.72855068E12, 0.0], [1.7285529E12, 0.0], [1.72854978E12, 0.0], [1.728552E12, 0.0], [1.72854636E12, 0.0], [1.72855302E12, 0.0], [1.72855404E12, 0.0], [1.72854534E12, 0.0], [1.72854756E12, 0.0], [1.72854858E12, 0.0], [1.7285508E12, 0.0], [1.72855182E12, 0.0], [1.7285496E12, 0.0], [1.72855284E12, 0.0], [1.72854618E12, 0.0], [1.72855062E12, 0.0], [1.72854516E12, 0.0], [1.7285484E12, 0.0], [1.72854738E12, 0.0], [1.72854942E12, 0.0], [1.72855164E12, 0.0], [1.72855386E12, 0.0], [1.72854912E12, 0.0], [1.7285457E12, 0.0], [1.72854792E12, 0.0], [1.72855014E12, 0.0], [1.72855236E12, 0.0], [1.72854468E12, 0.0], [1.7285469E12, 0.0], [1.72854894E12, 0.0], [1.72855116E12, 0.0], [1.72855338E12, 0.0], [1.72855218E12, 0.0], [1.72854654E12, 0.0], [1.72854552E12, 0.0], [1.72854996E12, 0.0], [1.72854774E12, 0.0], [1.72855098E12, 0.0], [1.72855422E12, 0.0], [1.72854876E12, 0.0], [1.7285532E12, 0.0], [1.7285445E12, 0.0], [1.72854672E12, 0.0], [1.72855008E12, 0.0], [1.72855332E12, 0.0], [1.72854666E12, 0.0], [1.7285511E12, 0.0], [1.72854564E12, 0.0], [1.72854888E12, 0.0], [1.72854786E12, 0.0], [1.7285499E12, 0.0], [1.72855212E12, 0.0], [1.7285475E12, 0.0], [1.72854648E12, 0.0], [1.7285487E12, 0.0], [1.72855092E12, 0.0], [1.72855314E12, 0.0], [1.72855194E12, 0.0], [1.72854972E12, 0.0], [1.72855416E12, 0.0], [1.72854546E12, 0.0], [1.72854768E12, 0.0], [1.72854702E12, 0.0], [1.728546E12, 0.0], [1.72854822E12, 0.0], [1.72855044E12, 0.0], [1.72855266E12, 0.0], [1.72855146E12, 0.0], [1.72854924E12, 0.0], [1.72855368E12, 0.0], [1.7285472E12, 0.0], [1.72854498E12, 0.0], [1.72855026E12, 0.0], [1.7285535E12, 0.0], [1.72854462E12, 0.0], [1.72854684E12, 0.0], [1.72855248E12, 0.0], [1.72854582E12, 0.0], [1.72854804E12, 0.0], [1.72854906E12, 0.0], [1.72855128E12, 0.0], [1.7285523E12, 0.0], [1.7285448E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72855422E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 571.2482100238668, "minX": 1.7285445E12, "maxY": 971.5874620829112, "series": [{"data": [[1.72854798E12, 662.7783933518003], [1.7285514E12, 728.7871033776875], [1.72855362E12, 880.8069533394336], [1.72854474E12, 584.1844660194178], [1.72854696E12, 683.9346590909084], [1.72854918E12, 670.8993006993002], [1.7285502E12, 695.4153543307089], [1.72854594E12, 670.2583333333334], [1.72854816E12, 665.2030386740331], [1.72855242E12, 815.1265060240961], [1.72855122E12, 689.8648130393088], [1.72854558E12, 694.3092485549131], [1.7285478E12, 697.1545189504368], [1.72855344E12, 937.1604696673189], [1.72854456E12, 595.6019900497508], [1.728549E12, 621.9651612903218], [1.72854678E12, 598.2219451371577], [1.72855002E12, 686.372325249643], [1.72855224E12, 758.5878023133539], [1.72855326E12, 867.3599640933573], [1.72854576E12, 612.8775510204079], [1.72855074E12, 728.0433031218531], [1.7285451E12, 637.2902374670186], [1.72854732E12, 607.9390862944166], [1.72855398E12, 901.5565949485501], [1.72854852E12, 672.9846796657375], [1.72855296E12, 894.460317460317], [1.7285463E12, 631.0158311345642], [1.72854954E12, 683.1361031518621], [1.72855176E12, 710.3534057255681], [1.72855278E12, 911.4914448669197], [1.72854528E12, 640.7533512064344], [1.7285538E12, 915.7102001906575], [1.72854492E12, 607.6962025316452], [1.72854834E12, 701.8799414348463], [1.72855056E12, 788.538546255507], [1.72854714E12, 685.5603448275857], [1.72855158E12, 754.5842105263158], [1.72854936E12, 620.0412371134013], [1.7285526E12, 878.2572727272732], [1.72854612E12, 620.5372750642669], [1.72855038E12, 736.7969230769228], [1.7285517E12, 752.8267223382053], [1.72854606E12, 614.8886010362692], [1.72854504E12, 634.7851458885942], [1.72854948E12, 655.8594815825372], [1.72855392E12, 899.0820754716972], [1.72854726E12, 571.2482100238668], [1.7285505E12, 738.7316326530607], [1.72855374E12, 867.1193078324228], [1.72854828E12, 730.6180981595086], [1.72855272E12, 880.0661764705889], [1.72854624E12, 618.0723514211883], [1.72854588E12, 626.1052631578941], [1.7285493E12, 644.9123989218324], [1.72855152E12, 729.3518705763408], [1.72855254E12, 895.8607714016933], [1.7285481E12, 690.7085137085139], [1.72855356E12, 971.5874620829112], [1.72854486E12, 573.204255319149], [1.72854708E12, 638.3111702127659], [1.72855032E12, 713.8750000000003], [1.72855134E12, 707.3653281096962], [1.7285454E12, 612.3918575063607], [1.72854882E12, 689.6985507246383], [1.72855104E12, 749.4738493723848], [1.72854762E12, 699.594436310396], [1.72855206E12, 699.1786407766991], [1.72854984E12, 652.246238030096], [1.72855308E12, 896.2203548085898], [1.7285466E12, 592.2555282555282], [1.72855086E12, 738.5087179487195], [1.72854864E12, 654.9671682626542], [1.72854522E12, 700.9476744186054], [1.72854744E12, 671.5204678362576], [1.72854966E12, 670.5977653631288], [1.72855188E12, 763.5811240721102], [1.7285541E12, 924.3230174081237], [1.72854642E12, 671.128491620112], [1.72854846E12, 655.0095890410955], [1.72855068E12, 754.7724425887263], [1.7285529E12, 915.313632030506], [1.72854978E12, 668.5777777777774], [1.728552E12, 755.879201680672], [1.72854636E12, 627.2864583333335], [1.72855302E12, 868.4945750452075], [1.72855404E12, 971.3797979797976], [1.72854534E12, 619.7260981912143], [1.72854756E12, 647.3310901749666], [1.72854858E12, 624.8352941176477], [1.7285508E12, 694.262088974855], [1.72855182E12, 746.5977130977126], [1.7285496E12, 665.0441379310344], [1.72855284E12, 922.5086538461537], [1.72854618E12, 584.9612590799034], [1.72855062E12, 718.5285857572723], [1.72854516E12, 641.4946236559144], [1.7285484E12, 693.5804597701158], [1.72854738E12, 613.4625407166128], [1.72854942E12, 671.7486033519556], [1.72855164E12, 709.2763028515242], [1.72855386E12, 925.4927953890495], [1.72854912E12, 684.106685633002], [1.7285457E12, 633.8443271767807], [1.72854792E12, 700.0347826086955], [1.72855014E12, 615.3992537313425], [1.72855236E12, 710.9687034277197], [1.72854468E12, 610.1428571428573], [1.7285469E12, 664.1694444444444], [1.72854894E12, 674.9590395480222], [1.72855116E12, 748.3864583333326], [1.72855338E12, 884.3570110701111], [1.72855218E12, 768.2059765208116], [1.72854654E12, 631.7566137566132], [1.72854552E12, 628.4285714285716], [1.72854996E12, 682.517780938834], [1.72854774E12, 697.7013177159586], [1.72855098E12, 709.5940886699506], [1.72855422E12, 674.4392764857882], [1.72854876E12, 678.2742616033751], [1.7285532E12, 865.7088262056425], [1.7285445E12, 765.7164179104478], [1.72854672E12, 593.3737623762379], [1.72855008E12, 691.0547945205477], [1.72855332E12, 851.2877442273528], [1.72854666E12, 650.3081081081076], [1.7285511E12, 750.0975103734437], [1.72854564E12, 691.0862068965515], [1.72854888E12, 674.3291316526611], [1.72854786E12, 711.1277533039654], [1.7285499E12, 663.9006896551728], [1.72855212E12, 718.1535393818548], [1.7285475E12, 713.6214605067062], [1.72854648E12, 603.8992443324936], [1.7285487E12, 668.3958333333336], [1.72855092E12, 723.1313941825467], [1.72855314E12, 920.9732569245465], [1.72855194E12, 749.055265901983], [1.72854972E12, 670.4943977591028], [1.72855416E12, 826.2410714285721], [1.72854546E12, 658.2438356164382], [1.72854768E12, 661.1251719394779], [1.72854702E12, 607.0327455919394], [1.728546E12, 638.293333333333], [1.72854822E12, 713.8664688427297], [1.72855044E12, 745.2559585492229], [1.72855266E12, 838.4125326370764], [1.72855146E12, 721.2375745526837], [1.72854924E12, 646.6121621621617], [1.72855368E12, 924.2287081339709], [1.7285472E12, 612.8396946564878], [1.72854498E12, 616.8994845360824], [1.72855026E12, 712.2268244575936], [1.7285535E12, 911.9010466222645], [1.72854462E12, 596.5870646766174], [1.72854684E12, 669.0083798882683], [1.72855248E12, 885.8595194085038], [1.72854582E12, 634.2710526315796], [1.72854804E12, 718.9264264264272], [1.72854906E12, 665.5375000000006], [1.72855128E12, 776.0], [1.7285523E12, 728.3554347826089], [1.7285448E12, 684.2514285714283]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72855422E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 397.39379474940347, "minX": 1.7285445E12, "maxY": 661.4630940343783, "series": [{"data": [[1.72854798E12, 451.6177285318559], [1.7285514E12, 497.4370522006143], [1.72855362E12, 594.6221408966147], [1.72854474E12, 398.2669902912622], [1.72854696E12, 468.1732954545453], [1.72854918E12, 460.812587412587], [1.7285502E12, 473.4350393700787], [1.72854594E12, 460.9305555555552], [1.72854816E12, 462.69751381215457], [1.72855242E12, 557.4969879518076], [1.72855122E12, 473.2694151486102], [1.72854558E12, 476.4248554913294], [1.7285478E12, 481.05539358600566], [1.72855344E12, 636.2573385518588], [1.72854456E12, 407.5174129353233], [1.728549E12, 432.8838709677422], [1.72854678E12, 405.70573566084806], [1.72855002E12, 475.4893009985729], [1.72855224E12, 521.7245005257624], [1.72855326E12, 584.7001795332145], [1.72854576E12, 421.4464285714284], [1.72855074E12, 493.8136958710981], [1.7285451E12, 438.4459102902372], [1.72854732E12, 427.7741116751272], [1.72855398E12, 607.7923292797013], [1.72854852E12, 463.6782729805015], [1.72855296E12, 613.5947712418321], [1.7285463E12, 436.9445910290236], [1.72854954E12, 465.9340974212031], [1.72855176E12, 487.39684106614027], [1.72855278E12, 616.0570342205324], [1.72854528E12, 437.77479892761374], [1.7285538E12, 626.1696854146802], [1.72854492E12, 420.10126582278457], [1.72854834E12, 484.35285505124455], [1.72855056E12, 538.3590308370041], [1.72854714E12, 474.7701149425287], [1.72855158E12, 513.5610526315791], [1.72854936E12, 431.1971649484538], [1.7285526E12, 592.9327272727279], [1.72854612E12, 423.84575835475613], [1.72855038E12, 504.1425641025644], [1.7285517E12, 517.3423799582463], [1.72854606E12, 421.3367875647668], [1.72854504E12, 437.4137931034481], [1.72854948E12, 453.2714870395634], [1.72855392E12, 618.1320754716972], [1.72854726E12, 397.39379474940347], [1.7285505E12, 502.3908163265304], [1.72855374E12, 588.2440801457192], [1.72854828E12, 503.4585889570556], [1.72855272E12, 598.11580882353], [1.72854624E12, 433.06718346253234], [1.72854588E12, 435.1552631578947], [1.7285493E12, 444.6644204851752], [1.72855152E12, 501.36501516683546], [1.72855254E12, 603.9219190968951], [1.7285481E12, 477.97546897546897], [1.72855356E12, 661.4630940343783], [1.72854486E12, 397.95744680851044], [1.72854708E12, 447.64627659574455], [1.72855032E12, 489.0882936507933], [1.72855134E12, 488.29970617042113], [1.7285454E12, 421.2391857506359], [1.72854882E12, 476.5652173913041], [1.72855104E12, 506.24372384937226], [1.72854762E12, 484.9619326500732], [1.72855206E12, 479.2145631067964], [1.72854984E12, 449.222982216142], [1.72855308E12, 607.6181139122313], [1.7285466E12, 416.42997542997557], [1.72855086E12, 501.9107692307689], [1.72854864E12, 450.52667578659356], [1.72854522E12, 489.0174418604651], [1.72854744E12, 465.0077972709556], [1.72854966E12, 459.89525139664784], [1.72855188E12, 522.7507953340406], [1.7285541E12, 636.6992263056104], [1.72854642E12, 456.15083798882654], [1.72854846E12, 452.33287671232875], [1.72855068E12, 511.9947807933191], [1.7285529E12, 619.2917063870352], [1.72854978E12, 464.7499999999999], [1.728552E12, 515.4054621848737], [1.72854636E12, 434.796875], [1.72855302E12, 589.005424954792], [1.72855404E12, 654.2010101010113], [1.72854534E12, 425.0542635658915], [1.72854756E12, 450.6769851951547], [1.72854858E12, 430.45228758169935], [1.7285508E12, 478.9883945841399], [1.72855182E12, 511.18399168399185], [1.7285496E12, 456.1944827586206], [1.72855284E12, 622.0798076923064], [1.72854618E12, 410.6246973365613], [1.72855062E12, 487.95085255767344], [1.72854516E12, 447.82258064516105], [1.7285484E12, 475.4382183908046], [1.72854738E12, 419.0130293159609], [1.72854942E12, 465.84916201117295], [1.72855164E12, 482.52212389380526], [1.72855386E12, 629.021133525456], [1.72854912E12, 470.46230440967287], [1.7285457E12, 439.2401055408973], [1.72854792E12, 478.35362318840566], [1.72855014E12, 425.7164179104473], [1.72855236E12, 489.4530551415795], [1.72854468E12, 422.61734693877554], [1.7285469E12, 458.91944444444476], [1.72854894E12, 466.775423728814], [1.72855116E12, 511.2854166666653], [1.72855338E12, 601.5304428044277], [1.72855218E12, 524.2924226254006], [1.72854654E12, 434.78571428571433], [1.72854552E12, 434.3571428571429], [1.72854996E12, 470.1066856330016], [1.72854774E12, 479.1376281112742], [1.72855098E12, 484.9379310344832], [1.72855422E12, 463.3540051679584], [1.72854876E12, 472.4894514767928], [1.7285532E12, 591.3703366697004], [1.7285445E12, 538.4477611940299], [1.72854672E12, 406.7252475247524], [1.72855008E12, 470.98325722983316], [1.72855332E12, 580.8898756660751], [1.72854666E12, 448.89189189189227], [1.7285511E12, 513.9543568464737], [1.72854564E12, 479.9425287356323], [1.72854888E12, 462.9957983193276], [1.72854786E12, 489.7400881057268], [1.7285499E12, 457.45793103448284], [1.72855212E12, 487.7617148554336], [1.7285475E12, 493.45901639344265], [1.72854648E12, 422.234256926952], [1.7285487E12, 462.27777777777766], [1.72855092E12, 495.8335005015049], [1.72855314E12, 620.5883476599801], [1.72855194E12, 511.49843587069915], [1.72854972E12, 462.49019607843115], [1.72855416E12, 563.526785714287], [1.72854546E12, 455.0328767123288], [1.72854768E12, 446.56533700137544], [1.72854702E12, 423.7002518891685], [1.728546E12, 441.96000000000026], [1.72854822E12, 492.00741839762605], [1.72855044E12, 508.16165803108834], [1.72855266E12, 572.7641427328111], [1.72855146E12, 489.2644135188865], [1.72854924E12, 446.0729729729729], [1.72855368E12, 628.418181818182], [1.7285472E12, 419.66666666666646], [1.72854498E12, 428.1056701030928], [1.72855026E12, 484.96351084812665], [1.7285535E12, 616.8020932445294], [1.72854462E12, 410.2338308457711], [1.72854684E12, 460.1424581005589], [1.72855248E12, 608.4778188539746], [1.72854582E12, 434.55789473684183], [1.72854804E12, 495.8063063063061], [1.72854906E12, 461.76944444444416], [1.72855128E12, 530.5349838536061], [1.7285523E12, 497.0478260869564], [1.7285448E12, 484.19428571428574]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72855422E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7285445E12, "maxY": 4.9E-324, "series": [{"data": [[1.72854798E12, 0.0], [1.7285514E12, 0.0], [1.72855362E12, 0.0], [1.72854474E12, 0.0], [1.72854696E12, 0.0], [1.72854918E12, 0.0], [1.7285502E12, 0.0], [1.72854594E12, 0.0], [1.72854816E12, 0.0], [1.72855242E12, 0.0], [1.72855122E12, 0.0], [1.72854558E12, 0.0], [1.7285478E12, 0.0], [1.72855344E12, 0.0], [1.72854456E12, 0.0], [1.728549E12, 0.0], [1.72854678E12, 0.0], [1.72855002E12, 0.0], [1.72855224E12, 0.0], [1.72855326E12, 0.0], [1.72854576E12, 0.0], [1.72855074E12, 0.0], [1.7285451E12, 0.0], [1.72854732E12, 0.0], [1.72855398E12, 0.0], [1.72854852E12, 0.0], [1.72855296E12, 0.0], [1.7285463E12, 0.0], [1.72854954E12, 0.0], [1.72855176E12, 0.0], [1.72855278E12, 0.0], [1.72854528E12, 0.0], [1.7285538E12, 0.0], [1.72854492E12, 0.0], [1.72854834E12, 0.0], [1.72855056E12, 0.0], [1.72854714E12, 0.0], [1.72855158E12, 0.0], [1.72854936E12, 0.0], [1.7285526E12, 0.0], [1.72854612E12, 0.0], [1.72855038E12, 0.0], [1.7285517E12, 0.0], [1.72854606E12, 0.0], [1.72854504E12, 0.0], [1.72854948E12, 0.0], [1.72855392E12, 0.0], [1.72854726E12, 0.0], [1.7285505E12, 0.0], [1.72855374E12, 0.0], [1.72854828E12, 0.0], [1.72855272E12, 0.0], [1.72854624E12, 0.0], [1.72854588E12, 0.0], [1.7285493E12, 0.0], [1.72855152E12, 0.0], [1.72855254E12, 0.0], [1.7285481E12, 0.0], [1.72855356E12, 0.0], [1.72854486E12, 0.0], [1.72854708E12, 0.0], [1.72855032E12, 0.0], [1.72855134E12, 0.0], [1.7285454E12, 0.0], [1.72854882E12, 0.0], [1.72855104E12, 0.0], [1.72854762E12, 0.0], [1.72855206E12, 0.0], [1.72854984E12, 0.0], [1.72855308E12, 0.0], [1.7285466E12, 0.0], [1.72855086E12, 0.0], [1.72854864E12, 0.0], [1.72854522E12, 0.0], [1.72854744E12, 0.0], [1.72854966E12, 0.0], [1.72855188E12, 0.0], [1.7285541E12, 0.0], [1.72854642E12, 0.0], [1.72854846E12, 0.0], [1.72855068E12, 0.0], [1.7285529E12, 0.0], [1.72854978E12, 0.0], [1.728552E12, 0.0], [1.72854636E12, 0.0], [1.72855302E12, 0.0], [1.72855404E12, 0.0], [1.72854534E12, 0.0], [1.72854756E12, 0.0], [1.72854858E12, 0.0], [1.7285508E12, 0.0], [1.72855182E12, 0.0], [1.7285496E12, 0.0], [1.72855284E12, 0.0], [1.72854618E12, 0.0], [1.72855062E12, 0.0], [1.72854516E12, 0.0], [1.7285484E12, 0.0], [1.72854738E12, 0.0], [1.72854942E12, 0.0], [1.72855164E12, 0.0], [1.72855386E12, 0.0], [1.72854912E12, 0.0], [1.7285457E12, 0.0], [1.72854792E12, 0.0], [1.72855014E12, 0.0], [1.72855236E12, 0.0], [1.72854468E12, 0.0], [1.7285469E12, 0.0], [1.72854894E12, 0.0], [1.72855116E12, 0.0], [1.72855338E12, 0.0], [1.72855218E12, 0.0], [1.72854654E12, 0.0], [1.72854552E12, 0.0], [1.72854996E12, 0.0], [1.72854774E12, 0.0], [1.72855098E12, 0.0], [1.72855422E12, 0.0], [1.72854876E12, 0.0], [1.7285532E12, 0.0], [1.7285445E12, 0.0], [1.72854672E12, 0.0], [1.72855008E12, 0.0], [1.72855332E12, 0.0], [1.72854666E12, 0.0], [1.7285511E12, 0.0], [1.72854564E12, 0.0], [1.72854888E12, 0.0], [1.72854786E12, 0.0], [1.7285499E12, 0.0], [1.72855212E12, 0.0], [1.7285475E12, 0.0], [1.72854648E12, 0.0], [1.7285487E12, 0.0], [1.72855092E12, 0.0], [1.72855314E12, 0.0], [1.72855194E12, 0.0], [1.72854972E12, 0.0], [1.72855416E12, 0.0], [1.72854546E12, 0.0], [1.72854768E12, 0.0], [1.72854702E12, 0.0], [1.728546E12, 0.0], [1.72854822E12, 0.0], [1.72855044E12, 0.0], [1.72855266E12, 0.0], [1.72855146E12, 0.0], [1.72854924E12, 0.0], [1.72855368E12, 0.0], [1.7285472E12, 0.0], [1.72854498E12, 0.0], [1.72855026E12, 0.0], [1.7285535E12, 0.0], [1.72854462E12, 0.0], [1.72854684E12, 0.0], [1.72855248E12, 0.0], [1.72854582E12, 0.0], [1.72854804E12, 0.0], [1.72854906E12, 0.0], [1.72855128E12, 0.0], [1.7285523E12, 0.0], [1.7285448E12, 0.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72855422E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 43.0, "minX": 1.7285445E12, "maxY": 4313.0, "series": [{"data": [[1.72854798E12, 2528.0], [1.7285514E12, 2813.0], [1.72855362E12, 3774.0], [1.72854474E12, 2162.0], [1.72854696E12, 2099.0], [1.72854918E12, 2381.0], [1.7285502E12, 2655.0], [1.72854594E12, 2274.0], [1.72854816E12, 2892.0], [1.72855242E12, 3474.0], [1.72855122E12, 2791.0], [1.72854558E12, 2485.0], [1.7285478E12, 2660.0], [1.72855344E12, 3537.0], [1.72854456E12, 2039.0], [1.728549E12, 2601.0], [1.72854678E12, 1764.0], [1.72855002E12, 2313.0], [1.72855224E12, 3109.0], [1.72855326E12, 3654.0], [1.72854576E12, 2065.0], [1.72855074E12, 2926.0], [1.7285451E12, 2288.0], [1.72854732E12, 2625.0], [1.72855398E12, 4036.0], [1.72854852E12, 2637.0], [1.72855296E12, 3644.0], [1.7285463E12, 2021.0], [1.72854954E12, 2177.0], [1.72855176E12, 3222.0], [1.72855278E12, 3343.0], [1.72854528E12, 2336.0], [1.7285538E12, 3613.0], [1.72854492E12, 2221.0], [1.72854834E12, 2578.0], [1.72855056E12, 2774.0], [1.72854714E12, 2525.0], [1.72855158E12, 2758.0], [1.72854936E12, 2601.0], [1.7285526E12, 3664.0], [1.72854612E12, 2436.0], [1.72855038E12, 2594.0], [1.7285517E12, 3246.0], [1.72854606E12, 2361.0], [1.72854504E12, 2261.0], [1.72854948E12, 2400.0], [1.72855392E12, 3503.0], [1.72854726E12, 1909.0], [1.7285505E12, 3024.0], [1.72855374E12, 3780.0], [1.72854828E12, 2535.0], [1.72855272E12, 3542.0], [1.72854624E12, 2313.0], [1.72854588E12, 2627.0], [1.7285493E12, 2516.0], [1.72855152E12, 2941.0], [1.72855254E12, 3546.0], [1.7285481E12, 2830.0], [1.72855356E12, 3588.0], [1.72854486E12, 2154.0], [1.72854708E12, 2541.0], [1.72855032E12, 2693.0], [1.72855134E12, 3287.0], [1.7285454E12, 2018.0], [1.72854882E12, 2706.0], [1.72855104E12, 3172.0], [1.72854762E12, 2509.0], [1.72855206E12, 2736.0], [1.72854984E12, 2401.0], [1.72855308E12, 3665.0], [1.7285466E12, 2181.0], [1.72855086E12, 2991.0], [1.72854864E12, 2473.0], [1.72854522E12, 2199.0], [1.72854744E12, 2193.0], [1.72854966E12, 2530.0], [1.72855188E12, 2639.0], [1.7285541E12, 3792.0], [1.72854642E12, 2531.0], [1.72854846E12, 2541.0], [1.72855068E12, 3281.0], [1.7285529E12, 3214.0], [1.72854978E12, 2652.0], [1.728552E12, 3059.0], [1.72854636E12, 2581.0], [1.72855302E12, 3801.0], [1.72855404E12, 3846.0], [1.72854534E12, 2493.0], [1.72854756E12, 2671.0], [1.72854858E12, 2458.0], [1.7285508E12, 2781.0], [1.72855182E12, 2719.0], [1.7285496E12, 2821.0], [1.72855284E12, 3908.0], [1.72854618E12, 2473.0], [1.72855062E12, 2576.0], [1.72854516E12, 2696.0], [1.7285484E12, 2678.0], [1.72854738E12, 2242.0], [1.72854942E12, 2582.0], [1.72855164E12, 2887.0], [1.72855386E12, 3748.0], [1.72854912E12, 2561.0], [1.7285457E12, 2215.0], [1.72854792E12, 2674.0], [1.72855014E12, 2297.0], [1.72855236E12, 2772.0], [1.72854468E12, 2490.0], [1.7285469E12, 2340.0], [1.72854894E12, 2477.0], [1.72855116E12, 2935.0], [1.72855338E12, 3255.0], [1.72855218E12, 2968.0], [1.72854654E12, 2244.0], [1.72854552E12, 2120.0], [1.72854996E12, 2682.0], [1.72854774E12, 2686.0], [1.72855098E12, 2525.0], [1.72855422E12, 2402.0], [1.72854876E12, 2575.0], [1.7285532E12, 3634.0], [1.7285445E12, 2437.0], [1.72854672E12, 2108.0], [1.72855008E12, 3015.0], [1.72855332E12, 3297.0], [1.72854666E12, 2159.0], [1.7285511E12, 2795.0], [1.72854564E12, 2213.0], [1.72854888E12, 2328.0], [1.72854786E12, 2620.0], [1.7285499E12, 2885.0], [1.72855212E12, 2664.0], [1.7285475E12, 2701.0], [1.72854648E12, 2295.0], [1.7285487E12, 2530.0], [1.72855092E12, 2692.0], [1.72855314E12, 4313.0], [1.72855194E12, 2856.0], [1.72854972E12, 2260.0], [1.72855416E12, 3511.0], [1.72854546E12, 2648.0], [1.72854768E12, 2655.0], [1.72854702E12, 2318.0], [1.728546E12, 2443.0], [1.72854822E12, 2498.0], [1.72855044E12, 2917.0], [1.72855266E12, 3277.0], [1.72855146E12, 2802.0], [1.72854924E12, 2374.0], [1.72855368E12, 3930.0], [1.7285472E12, 2190.0], [1.72854498E12, 1985.0], [1.72855026E12, 3032.0], [1.7285535E12, 3855.0], [1.72854462E12, 2004.0], [1.72854684E12, 2664.0], [1.72855248E12, 3294.0], [1.72854582E12, 2740.0], [1.72854804E12, 3027.0], [1.72854906E12, 2616.0], [1.72855128E12, 2753.0], [1.7285523E12, 2621.0], [1.7285448E12, 2125.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72854798E12, 1478.4], [1.7285514E12, 1581.0], [1.72855362E12, 1944.8000000000002], [1.72854474E12, 1360.2], [1.72854696E12, 1502.5999999999995], [1.72854918E12, 1440.0], [1.7285502E12, 1552.8000000000004], [1.72854594E12, 1365.1000000000004], [1.72854816E12, 1449.5], [1.72855242E12, 1758.0], [1.72855122E12, 1515.2], [1.72854558E12, 1460.1000000000001], [1.7285478E12, 1514.3000000000006], [1.72855344E12, 1903.7], [1.72854456E12, 1265.2000000000003], [1.728549E12, 1379.0], [1.72854678E12, 1250.0], [1.72855002E12, 1434.8000000000002], [1.72855224E12, 1615.8000000000002], [1.72855326E12, 1921.0], [1.72854576E12, 1373.1], [1.72855074E12, 1561.2], [1.7285451E12, 1384.0], [1.72854732E12, 1311.0], [1.72855398E12, 1945.0], [1.72854852E12, 1446.7000000000003], [1.72855296E12, 1889.0000000000007], [1.7285463E12, 1377.0], [1.72854954E12, 1442.7000000000003], [1.72855176E12, 1546.6000000000004], [1.72855278E12, 1920.0000000000005], [1.72854528E12, 1340.2], [1.7285538E12, 1964.0], [1.72854492E12, 1334.8000000000006], [1.72854834E12, 1451.4], [1.72855056E12, 1648.1000000000004], [1.72854714E12, 1388.2], [1.72855158E12, 1623.1], [1.72854936E12, 1368.3000000000002], [1.7285526E12, 1928.5], [1.72854612E12, 1373.0], [1.72855038E12, 1584.8], [1.7285517E12, 1607.4], [1.72854606E12, 1338.0], [1.72854504E12, 1325.9999999999998], [1.72854948E12, 1414.6], [1.72855392E12, 1949.5], [1.72854726E12, 1290.0], [1.7285505E12, 1624.6999999999998], [1.72855374E12, 1892.0], [1.72854828E12, 1532.7], [1.72855272E12, 1893.2], [1.72854624E12, 1353.2], [1.72854588E12, 1325.8000000000006], [1.7285493E12, 1381.9000000000003], [1.72855152E12, 1615.0], [1.72855254E12, 1932.0], [1.7285481E12, 1446.6], [1.72855356E12, 1991.0], [1.72854486E12, 1355.4], [1.72854708E12, 1284.0], [1.72855032E12, 1541.2], [1.72855134E12, 1513.8000000000002], [1.7285454E12, 1311.0000000000005], [1.72854882E12, 1443.8], [1.72855104E12, 1606.6000000000001], [1.72854762E12, 1471.8000000000002], [1.72855206E12, 1535.1999999999998], [1.72854984E12, 1366.0], [1.72855308E12, 1843.2000000000003], [1.7285466E12, 1246.6], [1.72855086E12, 1604.8], [1.72854864E12, 1395.0], [1.72854522E12, 1343.5], [1.72854744E12, 1465.0000000000018], [1.72854966E12, 1414.6000000000001], [1.72855188E12, 1588.2000000000003], [1.7285541E12, 1904.5], [1.72854642E12, 1420.2000000000003], [1.72854846E12, 1432.3999999999999], [1.72855068E12, 1608.1], [1.7285529E12, 1994.0], [1.72854978E12, 1393.3999999999999], [1.728552E12, 1654.7], [1.72854636E12, 1366.5], [1.72855302E12, 1879.0000000000007], [1.72855404E12, 2101.8], [1.72854534E12, 1374.3999999999999], [1.72854756E12, 1412.2], [1.72854858E12, 1376.1999999999998], [1.7285508E12, 1551.5], [1.72855182E12, 1584.1000000000001], [1.7285496E12, 1451.0], [1.72855284E12, 2021.6], [1.72854618E12, 1284.2000000000003], [1.72855062E12, 1588.2000000000005], [1.72854516E12, 1390.1999999999998], [1.7285484E12, 1463.9], [1.72854738E12, 1347.3999999999999], [1.72854942E12, 1429.2000000000003], [1.72855164E12, 1580.2000000000005], [1.72855386E12, 1979.6000000000001], [1.72854912E12, 1440.6], [1.7285457E12, 1413.0], [1.72854792E12, 1579.6], [1.72855014E12, 1298.1], [1.72855236E12, 1516.4], [1.72854468E12, 1323.8000000000002], [1.7285469E12, 1416.9000000000008], [1.72854894E12, 1438.1], [1.72855116E12, 1538.6], [1.72855338E12, 1900.0], [1.72855218E12, 1590.8000000000002], [1.72854654E12, 1378.0000000000002], [1.72854552E12, 1369.2], [1.72854996E12, 1395.6], [1.72854774E12, 1481.6], [1.72855098E12, 1572.1999999999998], [1.72855422E12, 1488.6], [1.72854876E12, 1421.800000000001], [1.7285532E12, 1897.0], [1.7285445E12, 1817.2], [1.72854672E12, 1349.5], [1.72855008E12, 1501.2], [1.72855332E12, 1864.8000000000004], [1.72854666E12, 1426.8000000000006], [1.7285511E12, 1601.5], [1.72854564E12, 1405.1], [1.72854888E12, 1414.5], [1.72854786E12, 1483.8000000000002], [1.7285499E12, 1467.1999999999998], [1.72855212E12, 1542.8000000000002], [1.7285475E12, 1484.0000000000005], [1.72854648E12, 1360.6], [1.7285487E12, 1378.9], [1.72855092E12, 1566.8000000000002], [1.72855314E12, 2011.2000000000003], [1.72855194E12, 1588.0], [1.72854972E12, 1454.0], [1.72855416E12, 1788.3999999999999], [1.72854546E12, 1383.2], [1.72854768E12, 1499.0000000000002], [1.72854702E12, 1348.6], [1.728546E12, 1282.4], [1.72854822E12, 1479.5], [1.72855044E12, 1544.0], [1.72855266E12, 1849.0], [1.72855146E12, 1559.6000000000001], [1.72854924E12, 1356.2999999999997], [1.72855368E12, 1905.4], [1.7285472E12, 1325.0], [1.72854498E12, 1316.500000000001], [1.72855026E12, 1561.0], [1.7285535E12, 2008.4], [1.72854462E12, 1304.2], [1.72854684E12, 1421.2000000000007], [1.72855248E12, 1933.4], [1.72854582E12, 1347.9000000000003], [1.72854804E12, 1515.9], [1.72854906E12, 1470.6], [1.72855128E12, 1673.0], [1.7285523E12, 1508.9], [1.7285448E12, 1291.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72854798E12, 2152.109999999999], [1.7285514E12, 2274.580000000001], [1.72855362E12, 2695.7799999999993], [1.72854474E12, 2000.7000000000007], [1.72854696E12, 1929.2399999999973], [1.72854918E12, 2140.000000000001], [1.7285502E12, 2334.1300000000006], [1.72854594E12, 1953.4499999999994], [1.72854816E12, 2092.75], [1.72855242E12, 2907.050000000005], [1.72855122E12, 2265.079999999999], [1.72854558E12, 1953.7299999999989], [1.7285478E12, 2213.8599999999997], [1.72855344E12, 2931.93], [1.72854456E12, 1796.7399999999989], [1.728549E12, 2041.8400000000001], [1.72854678E12, 1621.8400000000001], [1.72855002E12, 2021.4800000000014], [1.72855224E12, 2386.3200000000006], [1.72855326E12, 2872.1499999999983], [1.72854576E12, 1707.219999999999], [1.72855074E12, 2542.7799999999993], [1.7285451E12, 1907.3999999999999], [1.72854732E12, 2043.8000000000015], [1.72855398E12, 2983.799999999998], [1.72854852E12, 2180.0499999999997], [1.72855296E12, 2814.3599999999988], [1.7285463E12, 1976.5999999999997], [1.72854954E12, 1912.4799999999996], [1.72855176E12, 2327.7400000000002], [1.72855278E12, 2800.2000000000016], [1.72854528E12, 2014.199999999999], [1.7285538E12, 3080.5], [1.72854492E12, 1780.5600000000013], [1.72854834E12, 2113.3199999999983], [1.72855056E12, 2266.479999999999], [1.72854714E12, 2028.4399999999996], [1.72855158E12, 2419.6800000000003], [1.72854936E12, 2046.8400000000001], [1.7285526E12, 2870.7200000000003], [1.72854612E12, 2333.100000000001], [1.72855038E12, 2246.32], [1.7285517E12, 2322.41], [1.72854606E12, 1970.819999999999], [1.72854504E12, 1877.0199999999988], [1.72854948E12, 2139.8399999999992], [1.72855392E12, 2886.280000000005], [1.72854726E12, 1808.2], [1.7285505E12, 2394.7899999999977], [1.72855374E12, 2903.749999999999], [1.72854828E12, 2228.100000000001], [1.72855272E12, 2638.9699999999975], [1.72854624E12, 1899.8800000000006], [1.72854588E12, 2346.81], [1.7285493E12, 1998.110000000001], [1.72855152E12, 2366.3], [1.72855254E12, 2935.6799999999985], [1.7285481E12, 2220.7599999999948], [1.72855356E12, 2876.900000000001], [1.72854486E12, 1911.8399999999972], [1.72854708E12, 1979.15], [1.72855032E12, 2161.659999999999], [1.72855134E12, 2367.46], [1.7285454E12, 1926.08], [1.72854882E12, 2001.520000000001], [1.72855104E12, 2269.8599999999997], [1.72854762E12, 2082.24], [1.72855206E12, 2289.9699999999993], [1.72854984E12, 2196.1999999999994], [1.72855308E12, 2814.959999999999], [1.7285466E12, 2025.5200000000004], [1.72855086E12, 2366.7200000000003], [1.72854864E12, 1996.36], [1.72854522E12, 2055.1500000000005], [1.72854744E12, 1987.5400000000013], [1.72854966E12, 2161.020000000004], [1.72855188E12, 2339.1599999999967], [1.7285541E12, 2877.3500000000035], [1.72854642E12, 2095.7900000000004], [1.72854846E12, 2159.5899999999992], [1.72855068E12, 2531.1399999999985], [1.7285529E12, 2885.5], [1.72854978E12, 2078.709999999998], [1.728552E12, 2326.1100000000006], [1.72854636E12, 2160.2499999999977], [1.72855302E12, 2880.79], [1.72855404E12, 2884.9000000000005], [1.72854534E12, 2073.08], [1.72854756E12, 2102.9999999999986], [1.72854858E12, 1990.68], [1.7285508E12, 2185.300000000002], [1.72855182E12, 2287.33], [1.7285496E12, 2270.380000000001], [1.72855284E12, 3031.4399999999987], [1.72854618E12, 1779.7600000000002], [1.72855062E12, 2167.3999999999996], [1.72854516E12, 1913.5299999999975], [1.7285484E12, 2275.629999999999], [1.72854738E12, 1946.9600000000014], [1.72854942E12, 2039.8100000000004], [1.72855164E12, 2372.1999999999994], [1.72855386E12, 2834.499999999998], [1.72854912E12, 2316.680000000004], [1.7285457E12, 1954.5999999999995], [1.72854792E12, 2341.1800000000003], [1.72855014E12, 2055.81], [1.72855236E12, 2276.5599999999995], [1.72854468E12, 1867.2600000000007], [1.7285469E12, 2246.0699999999997], [1.72854894E12, 2090.489999999999], [1.72855116E12, 2364.7499999999995], [1.72855338E12, 2688.900000000004], [1.72855218E12, 2619.1800000000003], [1.72854654E12, 2069.0899999999992], [1.72854552E12, 2014.6099999999992], [1.72854996E12, 2065.6000000000004], [1.72854774E12, 2159.0399999999963], [1.72855098E12, 2333.6000000000004], [1.72855422E12, 2168.0800000000004], [1.72854876E12, 2245.92], [1.7285532E12, 2690.0], [1.7285445E12, 2437.0], [1.72854672E12, 1972.449999999999], [1.72855008E12, 2077.419999999998], [1.72855332E12, 2745.9300000000007], [1.72854666E12, 2042.7000000000007], [1.7285511E12, 2354.1500000000005], [1.72854564E12, 2057.879999999999], [1.72854888E12, 2099.8], [1.72854786E12, 2080.639999999995], [1.7285499E12, 2130.62], [1.72855212E12, 2313.5600000000004], [1.7285475E12, 2416.0399999999995], [1.72854648E12, 1847.2599999999998], [1.7285487E12, 2180.0399999999972], [1.72855092E12, 2219.4399999999996], [1.72855314E12, 2806.8799999999997], [1.72855194E12, 2422.0], [1.72854972E12, 2163.5], [1.72855416E12, 2714.329999999999], [1.72854546E12, 1938.1599999999994], [1.72854768E12, 2293.44], [1.72854702E12, 1951.3199999999997], [1.728546E12, 1992.8000000000013], [1.72854822E12, 2180.25], [1.72855044E12, 2308.02], [1.72855266E12, 2735.0], [1.72855146E12, 2435.58], [1.72854924E12, 2146.4900000000002], [1.72855368E12, 3208.2599999999957], [1.7285472E12, 1998.2], [1.72854498E12, 1913.5200000000004], [1.72855026E12, 2237.7], [1.7285535E12, 3032.48], [1.72854462E12, 1990.6999999999998], [1.72854684E12, 2059.2700000000013], [1.72855248E12, 2794.520000000004], [1.72854582E12, 1948.6799999999998], [1.72854804E12, 2237.8600000000015], [1.72854906E12, 2150.959999999999], [1.72855128E12, 2483.1000000000085], [1.7285523E12, 2251.4399999999987], [1.7285448E12, 2091.5600000000004]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72854798E12, 1725.7], [1.7285514E12, 1844.1], [1.72855362E12, 2148.8999999999996], [1.72854474E12, 1561.1999999999998], [1.72854696E12, 1630.3999999999999], [1.72854918E12, 1752.3999999999992], [1.7285502E12, 1888.15], [1.72854594E12, 1607.9999999999998], [1.72854816E12, 1641.0], [1.72855242E12, 2099.25], [1.72855122E12, 1788.1999999999998], [1.72854558E12, 1660.9999999999995], [1.7285478E12, 1822.7999999999997], [1.72855344E12, 2233.9499999999994], [1.72854456E12, 1441.3999999999999], [1.728549E12, 1579.7999999999997], [1.72854678E12, 1450.7999999999997], [1.72855002E12, 1665.6999999999994], [1.72855224E12, 1892.8], [1.72855326E12, 2253.25], [1.72854576E12, 1512.05], [1.72855074E12, 1898.3], [1.7285451E12, 1544.0], [1.72854732E12, 1495.0], [1.72855398E12, 2287.5], [1.72854852E12, 1768.1], [1.72855296E12, 2183.3999999999996], [1.7285463E12, 1533.0], [1.72854954E12, 1654.05], [1.72855176E12, 1750.1999999999998], [1.72855278E12, 2197.4499999999994], [1.72854528E12, 1496.7000000000003], [1.7285538E12, 2274.5], [1.72854492E12, 1494.4], [1.72854834E12, 1641.5999999999983], [1.72855056E12, 1889.2999999999997], [1.72854714E12, 1625.55], [1.72855158E12, 1909.4499999999998], [1.72854936E12, 1632.15], [1.7285526E12, 2211.250000000001], [1.72854612E12, 1588.0], [1.72855038E12, 1826.3999999999999], [1.7285517E12, 1857.3499999999997], [1.72854606E12, 1543.7999999999997], [1.72854504E12, 1553.1], [1.72854948E12, 1616.299999999999], [1.72855392E12, 2286.7999999999997], [1.72854726E12, 1527.0], [1.7285505E12, 1876.0], [1.72855374E12, 2226.199999999999], [1.72854828E12, 1801.0], [1.72855272E12, 2236.1], [1.72854624E12, 1491.1999999999998], [1.72854588E12, 1493.2999999999997], [1.7285493E12, 1678.6000000000004], [1.72855152E12, 1908.5], [1.72855254E12, 2306.3999999999996], [1.7285481E12, 1721.8999999999994], [1.72855356E12, 2318.5], [1.72854486E12, 1479.6], [1.72854708E12, 1494.8999999999999], [1.72855032E12, 1794.1], [1.72855134E12, 1824.8], [1.7285454E12, 1552.3999999999996], [1.72854882E12, 1726.4499999999998], [1.72855104E12, 1856.1999999999998], [1.72854762E12, 1738.1999999999998], [1.72855206E12, 1790.2499999999995], [1.72854984E12, 1615.4], [1.72855308E12, 2207.6], [1.7285466E12, 1511.9999999999995], [1.72855086E12, 1887.7999999999997], [1.72854864E12, 1663.6], [1.72854522E12, 1621.0], [1.72854744E12, 1710.6], [1.72854966E12, 1646.1999999999998], [1.72855188E12, 1883.8], [1.7285541E12, 2270.0], [1.72854642E12, 1655.6000000000001], [1.72854846E12, 1699.5999999999995], [1.72855068E12, 1822.2499999999998], [1.7285529E12, 2280.5], [1.72854978E12, 1580.9499999999998], [1.728552E12, 1940.499999999999], [1.72854636E12, 1542.5], [1.72855302E12, 2242.749999999998], [1.72855404E12, 2413.199999999999], [1.72854534E12, 1660.799999999999], [1.72854756E12, 1707.0], [1.72854858E12, 1607.9999999999986], [1.7285508E12, 1697.5], [1.72855182E12, 1845.85], [1.7285496E12, 1710.4999999999995], [1.72855284E12, 2352.7], [1.72854618E12, 1488.6999999999991], [1.72855062E12, 1787.999999999999], [1.72854516E12, 1591.35], [1.7285484E12, 1778.3999999999996], [1.72854738E12, 1588.8], [1.72854942E12, 1668.0], [1.72855164E12, 1836.4999999999995], [1.72855386E12, 2280.0], [1.72854912E12, 1678.8], [1.7285457E12, 1599.0], [1.72854792E12, 1818.749999999999], [1.72855014E12, 1554.0999999999992], [1.72855236E12, 1800.6], [1.72854468E12, 1581.4999999999998], [1.7285469E12, 1535.55], [1.72854894E12, 1683.8499999999988], [1.72855116E12, 1828.4999999999993], [1.72855338E12, 2210.0], [1.72855218E12, 1908.6999999999985], [1.72854654E12, 1502.5500000000004], [1.72854552E12, 1584.05], [1.72854996E12, 1613.9999999999998], [1.72854774E12, 1703.7999999999997], [1.72855098E12, 1844.7999999999988], [1.72855422E12, 1685.3999999999999], [1.72854876E12, 1639.8], [1.7285532E12, 2249.0], [1.7285445E12, 2191.6], [1.72854672E12, 1514.75], [1.72855008E12, 1652.8000000000002], [1.72855332E12, 2150.6499999999996], [1.72854666E12, 1693.9499999999996], [1.7285511E12, 1887.5], [1.72854564E12, 1616.4], [1.72854888E12, 1671.75], [1.72854786E12, 1687.6], [1.7285499E12, 1684.3999999999992], [1.72855212E12, 1829.5999999999995], [1.7285475E12, 1728.999999999999], [1.72854648E12, 1532.8999999999983], [1.7285487E12, 1624.5999999999995], [1.72855092E12, 1828.1999999999998], [1.72855314E12, 2244.999999999998], [1.72855194E12, 1853.0], [1.72854972E12, 1737.75], [1.72855416E12, 2161.6000000000004], [1.72854546E12, 1556.4999999999998], [1.72854768E12, 1753.8000000000002], [1.72854702E12, 1574.4999999999989], [1.728546E12, 1590.1999999999998], [1.72854822E12, 1755.0], [1.72855044E12, 1790.8999999999996], [1.72855266E12, 2211.5], [1.72855146E12, 1843.0499999999997], [1.72854924E12, 1561.8999999999999], [1.72855368E12, 2231.6999999999994], [1.7285472E12, 1585.3999999999996], [1.72854498E12, 1497.7999999999993], [1.72855026E12, 1825.5], [1.7285535E12, 2284.6], [1.72854462E12, 1569.5], [1.72854684E12, 1655.2], [1.72855248E12, 2258.549999999998], [1.72854582E12, 1613.2499999999995], [1.72854804E12, 1721.4999999999998], [1.72854906E12, 1656.8999999999985], [1.72855128E12, 1939.0], [1.7285523E12, 1804.4999999999993], [1.7285448E12, 1535.3999999999994]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72854798E12, 54.0], [1.7285514E12, 59.0], [1.72855362E12, 62.0], [1.72854474E12, 58.0], [1.72854696E12, 55.0], [1.72854918E12, 57.0], [1.7285502E12, 51.0], [1.72854594E12, 60.0], [1.72854816E12, 52.0], [1.72855242E12, 55.0], [1.72855122E12, 60.0], [1.72854558E12, 57.0], [1.7285478E12, 54.0], [1.72855344E12, 52.0], [1.72854456E12, 73.0], [1.728549E12, 52.0], [1.72854678E12, 55.0], [1.72855002E12, 50.0], [1.72855224E12, 48.0], [1.72855326E12, 50.0], [1.72854576E12, 58.0], [1.72855074E12, 58.0], [1.7285451E12, 64.0], [1.72854732E12, 59.0], [1.72855398E12, 52.0], [1.72854852E12, 55.0], [1.72855296E12, 52.0], [1.7285463E12, 52.0], [1.72854954E12, 55.0], [1.72855176E12, 57.0], [1.72855278E12, 67.0], [1.72854528E12, 57.0], [1.7285538E12, 63.0], [1.72854492E12, 60.0], [1.72854834E12, 61.0], [1.72855056E12, 49.0], [1.72854714E12, 54.0], [1.72855158E12, 58.0], [1.72854936E12, 47.0], [1.7285526E12, 64.0], [1.72854612E12, 56.0], [1.72855038E12, 57.0], [1.7285517E12, 55.0], [1.72854606E12, 53.0], [1.72854504E12, 62.0], [1.72854948E12, 54.0], [1.72855392E12, 57.0], [1.72854726E12, 59.0], [1.7285505E12, 62.0], [1.72855374E12, 56.0], [1.72854828E12, 56.0], [1.72855272E12, 67.0], [1.72854624E12, 57.0], [1.72854588E12, 62.0], [1.7285493E12, 58.0], [1.72855152E12, 55.0], [1.72855254E12, 57.0], [1.7285481E12, 58.0], [1.72855356E12, 57.0], [1.72854486E12, 62.0], [1.72854708E12, 64.0], [1.72855032E12, 50.0], [1.72855134E12, 48.0], [1.7285454E12, 60.0], [1.72854882E12, 58.0], [1.72855104E12, 60.0], [1.72854762E12, 63.0], [1.72855206E12, 55.0], [1.72854984E12, 59.0], [1.72855308E12, 47.0], [1.7285466E12, 57.0], [1.72855086E12, 57.0], [1.72854864E12, 47.0], [1.72854522E12, 63.0], [1.72854744E12, 59.0], [1.72854966E12, 48.0], [1.72855188E12, 58.0], [1.7285541E12, 55.0], [1.72854642E12, 53.0], [1.72854846E12, 59.0], [1.72855068E12, 51.0], [1.7285529E12, 48.0], [1.72854978E12, 61.0], [1.728552E12, 58.0], [1.72854636E12, 43.0], [1.72855302E12, 54.0], [1.72855404E12, 59.0], [1.72854534E12, 58.0], [1.72854756E12, 57.0], [1.72854858E12, 55.0], [1.7285508E12, 56.0], [1.72855182E12, 55.0], [1.7285496E12, 54.0], [1.72855284E12, 64.0], [1.72854618E12, 53.0], [1.72855062E12, 61.0], [1.72854516E12, 61.0], [1.7285484E12, 50.0], [1.72854738E12, 59.0], [1.72854942E12, 60.0], [1.72855164E12, 53.0], [1.72855386E12, 57.0], [1.72854912E12, 55.0], [1.7285457E12, 64.0], [1.72854792E12, 61.0], [1.72855014E12, 63.0], [1.72855236E12, 54.0], [1.72854468E12, 61.0], [1.7285469E12, 61.0], [1.72854894E12, 56.0], [1.72855116E12, 48.0], [1.72855338E12, 61.0], [1.72855218E12, 46.0], [1.72854654E12, 66.0], [1.72854552E12, 56.0], [1.72854996E12, 56.0], [1.72854774E12, 51.0], [1.72855098E12, 55.0], [1.72855422E12, 62.0], [1.72854876E12, 51.0], [1.7285532E12, 58.0], [1.7285445E12, 71.0], [1.72854672E12, 57.0], [1.72855008E12, 59.0], [1.72855332E12, 62.0], [1.72854666E12, 54.0], [1.7285511E12, 58.0], [1.72854564E12, 61.0], [1.72854888E12, 56.0], [1.72854786E12, 61.0], [1.7285499E12, 48.0], [1.72855212E12, 60.0], [1.7285475E12, 56.0], [1.72854648E12, 52.0], [1.7285487E12, 59.0], [1.72855092E12, 56.0], [1.72855314E12, 55.0], [1.72855194E12, 53.0], [1.72854972E12, 51.0], [1.72855416E12, 58.0], [1.72854546E12, 60.0], [1.72854768E12, 56.0], [1.72854702E12, 58.0], [1.728546E12, 53.0], [1.72854822E12, 66.0], [1.72855044E12, 48.0], [1.72855266E12, 56.0], [1.72855146E12, 52.0], [1.72854924E12, 54.0], [1.72855368E12, 63.0], [1.7285472E12, 51.0], [1.72854498E12, 59.0], [1.72855026E12, 47.0], [1.7285535E12, 52.0], [1.72854462E12, 63.0], [1.72854684E12, 60.0], [1.72855248E12, 50.0], [1.72854582E12, 60.0], [1.72854804E12, 53.0], [1.72854906E12, 54.0], [1.72855128E12, 61.0], [1.7285523E12, 57.0], [1.7285448E12, 61.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72854798E12, 509.0], [1.7285514E12, 629.0], [1.72855362E12, 767.0], [1.72854474E12, 426.0], [1.72854696E12, 658.0], [1.72854918E12, 587.0], [1.7285502E12, 564.5], [1.72854594E12, 674.0], [1.72854816E12, 585.5], [1.72855242E12, 596.0], [1.72855122E12, 558.0], [1.72854558E12, 665.0], [1.7285478E12, 634.0], [1.72855344E12, 895.0], [1.72854456E12, 490.0], [1.728549E12, 489.0], [1.72854678E12, 524.0], [1.72855002E12, 654.0], [1.72855224E12, 722.0], [1.72855326E12, 702.0], [1.72854576E12, 545.5], [1.72855074E12, 666.0], [1.7285451E12, 622.0], [1.72854732E12, 537.5], [1.72855398E12, 761.0], [1.72854852E12, 608.5], [1.72855296E12, 804.0], [1.7285463E12, 580.0], [1.72854954E12, 658.0], [1.72855176E12, 623.0], [1.72855278E12, 865.0], [1.72854528E12, 639.0], [1.7285538E12, 809.0], [1.72854492E12, 554.0], [1.72854834E12, 663.0], [1.72855056E12, 762.0], [1.72854714E12, 678.0], [1.72855158E12, 713.0], [1.72854936E12, 488.0], [1.7285526E12, 780.5], [1.72854612E12, 543.0], [1.72855038E12, 690.0], [1.7285517E12, 668.5], [1.72854606E12, 569.0], [1.72854504E12, 625.0], [1.72854948E12, 611.0], [1.72855392E12, 800.0], [1.72854726E12, 460.0], [1.7285505E12, 678.5], [1.72855374E12, 724.0], [1.72854828E12, 696.5], [1.72855272E12, 776.5], [1.72854624E12, 551.0], [1.72854588E12, 523.0], [1.7285493E12, 522.5], [1.72855152E12, 636.0], [1.72855254E12, 766.0], [1.7285481E12, 654.0], [1.72855356E12, 949.0], [1.72854486E12, 438.0], [1.72854708E12, 621.5], [1.72855032E12, 650.0], [1.72855134E12, 617.0], [1.7285454E12, 564.0], [1.72854882E12, 662.5], [1.72855104E12, 706.5], [1.72854762E12, 669.0], [1.72855206E12, 592.5], [1.72854984E12, 576.0], [1.72855308E12, 837.0], [1.7285466E12, 500.0], [1.72855086E12, 673.0], [1.72854864E12, 582.0], [1.72854522E12, 701.0], [1.72854744E12, 598.0], [1.72854966E12, 607.0], [1.72855188E12, 745.0], [1.7285541E12, 869.5], [1.72854642E12, 638.5], [1.72854846E12, 544.0], [1.72855068E12, 682.0], [1.7285529E12, 827.0], [1.72854978E12, 593.5], [1.728552E12, 656.0], [1.72854636E12, 574.5], [1.72855302E12, 726.0], [1.72855404E12, 884.0], [1.72854534E12, 494.0], [1.72854756E12, 524.0], [1.72854858E12, 504.0], [1.7285508E12, 605.5], [1.72855182E12, 699.0], [1.7285496E12, 609.0], [1.72855284E12, 803.0], [1.72854618E12, 477.0], [1.72855062E12, 663.0], [1.72854516E12, 575.5], [1.7285484E12, 618.0], [1.72854738E12, 551.0], [1.72854942E12, 633.0], [1.72855164E12, 545.0], [1.72855386E12, 861.0], [1.72854912E12, 608.0], [1.7285457E12, 583.0], [1.72854792E12, 601.5], [1.72855014E12, 527.5], [1.72855236E12, 639.0], [1.72854468E12, 481.0], [1.7285469E12, 652.0], [1.72854894E12, 612.5], [1.72855116E12, 692.5], [1.72855338E12, 811.5], [1.72855218E12, 721.0], [1.72854654E12, 584.0], [1.72854552E12, 586.5], [1.72854996E12, 647.0], [1.72854774E12, 619.0], [1.72855098E12, 590.0], [1.72855422E12, 643.0], [1.72854876E12, 640.0], [1.7285532E12, 745.0], [1.7285445E12, 704.0], [1.72854672E12, 455.0], [1.72855008E12, 591.0], [1.72855332E12, 724.5], [1.72854666E12, 613.5], [1.7285511E12, 688.5], [1.72854564E12, 708.5], [1.72854888E12, 682.5], [1.72854786E12, 728.0], [1.7285499E12, 598.0], [1.72855212E12, 617.0], [1.7285475E12, 680.0], [1.72854648E12, 476.0], [1.7285487E12, 619.0], [1.72855092E12, 642.0], [1.72855314E12, 821.0], [1.72855194E12, 652.0], [1.72854972E12, 570.0], [1.72855416E12, 651.0], [1.72854546E12, 633.0], [1.72854768E12, 502.0], [1.72854702E12, 544.0], [1.728546E12, 604.0], [1.72854822E12, 680.5], [1.72855044E12, 707.0], [1.72855266E12, 668.0], [1.72855146E12, 595.0], [1.72854924E12, 602.5], [1.72855368E12, 858.0], [1.7285472E12, 513.0], [1.72854498E12, 564.0], [1.72855026E12, 623.0], [1.7285535E12, 802.0], [1.72854462E12, 494.0], [1.72854684E12, 683.5], [1.72855248E12, 763.5], [1.72854582E12, 614.5], [1.72854804E12, 656.5], [1.72854906E12, 569.0], [1.72855128E12, 739.0], [1.7285523E12, 724.0], [1.7285448E12, 739.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72855422E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 205.0, "minX": 1.0, "maxY": 984.0, "series": [{"data": [[2.0, 907.0], [32.0, 255.5], [37.0, 249.0], [3.0, 876.0], [4.0, 831.0], [5.0, 774.5], [6.0, 711.0], [7.0, 650.5], [8.0, 638.0], [9.0, 696.0], [10.0, 690.0], [11.0, 711.5], [12.0, 745.0], [13.0, 716.0], [14.0, 683.5], [15.0, 695.5], [1.0, 984.0], [16.0, 660.5], [17.0, 625.5], [18.0, 624.5], [19.0, 567.0], [20.0, 557.0], [21.0, 498.0], [22.0, 489.5], [23.0, 358.0], [24.0, 368.0], [25.0, 336.5], [26.0, 284.5], [27.0, 287.5], [28.0, 292.5], [29.0, 306.0], [30.0, 291.5], [31.0, 205.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 37.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 154.5, "minX": 1.0, "maxY": 683.0, "series": [{"data": [[2.0, 626.0], [32.0, 175.5], [37.0, 173.0], [3.0, 609.0], [4.0, 586.0], [5.0, 553.0], [6.0, 518.0], [7.0, 481.0], [8.0, 473.5], [9.0, 508.5], [10.0, 511.0], [11.0, 522.0], [12.0, 542.0], [13.0, 532.0], [14.0, 508.0], [15.0, 523.0], [1.0, 683.0], [16.0, 487.5], [17.0, 464.0], [18.0, 466.5], [19.0, 432.0], [20.0, 429.0], [21.0, 368.5], [22.0, 356.0], [23.0, 250.0], [24.0, 253.5], [25.0, 213.5], [26.0, 196.0], [27.0, 180.0], [28.0, 204.0], [29.0, 197.0], [30.0, 172.0], [31.0, 154.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 37.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.15, "minX": 1.7285445E12, "maxY": 19.15, "series": [{"data": [[1.72854798E12, 12.033333333333333], [1.7285514E12, 16.283333333333335], [1.72855362E12, 18.216666666666665], [1.72854474E12, 3.433333333333333], [1.72854696E12, 5.866666666666666], [1.72854918E12, 11.916666666666666], [1.7285502E12, 17.1], [1.72854594E12, 6.0], [1.72854816E12, 12.066666666666666], [1.72855242E12, 11.283333333333333], [1.72855122E12, 17.383333333333333], [1.72854558E12, 5.766666666666667], [1.7285478E12, 11.433333333333334], [1.72855344E12, 17.033333333333335], [1.72854456E12, 3.35], [1.728549E12, 12.916666666666666], [1.72854678E12, 6.683333333333334], [1.72855002E12, 11.683333333333334], [1.72855224E12, 15.85], [1.72855326E12, 18.566666666666666], [1.72854576E12, 6.533333333333333], [1.72855074E12, 16.55], [1.7285451E12, 6.316666666666666], [1.72854732E12, 6.566666666666666], [1.72855398E12, 17.816666666666666], [1.72854852E12, 11.966666666666667], [1.72855296E12, 17.85], [1.7285463E12, 6.316666666666666], [1.72854954E12, 11.633333333333333], [1.72855176E12, 16.883333333333333], [1.72855278E12, 17.533333333333335], [1.72854528E12, 6.216666666666667], [1.7285538E12, 17.483333333333334], [1.72854492E12, 6.583333333333333], [1.72854834E12, 11.383333333333333], [1.72855056E12, 15.133333333333333], [1.72854714E12, 5.8], [1.72855158E12, 15.833333333333334], [1.72854936E12, 12.933333333333334], [1.7285526E12, 18.333333333333332], [1.72854612E12, 6.483333333333333], [1.72855038E12, 16.25], [1.7285517E12, 15.966666666666667], [1.72854606E12, 6.433333333333334], [1.72854504E12, 6.283333333333333], [1.72854948E12, 12.216666666666667], [1.72855392E12, 17.666666666666668], [1.72854726E12, 6.983333333333333], [1.7285505E12, 16.333333333333332], [1.72855374E12, 18.3], [1.72854828E12, 10.866666666666667], [1.72855272E12, 18.133333333333333], [1.72854624E12, 6.45], [1.72854588E12, 6.333333333333333], [1.7285493E12, 12.366666666666667], [1.72855152E12, 16.483333333333334], [1.72855254E12, 17.716666666666665], [1.7285481E12, 11.55], [1.72855356E12, 16.483333333333334], [1.72854486E12, 3.95], [1.72854708E12, 6.266666666666667], [1.72855032E12, 16.8], [1.72855134E12, 17.016666666666666], [1.7285454E12, 6.55], [1.72854882E12, 11.5], [1.72855104E12, 15.933333333333334], [1.72854762E12, 11.383333333333333], [1.72855206E12, 17.166666666666668], [1.72854984E12, 12.183333333333334], [1.72855308E12, 17.85], [1.7285466E12, 6.783333333333333], [1.72855086E12, 16.25], [1.72854864E12, 12.183333333333334], [1.72854522E12, 5.733333333333333], [1.72854744E12, 8.633333333333333], [1.72854966E12, 11.933333333333334], [1.72855188E12, 15.716666666666667], [1.7285541E12, 17.233333333333334], [1.72854642E12, 5.966666666666667], [1.72854846E12, 12.166666666666666], [1.72855068E12, 15.966666666666667], [1.7285529E12, 17.483333333333334], [1.72854978E12, 12.0], [1.728552E12, 15.866666666666667], [1.72854636E12, 6.4], [1.72855302E12, 18.433333333333334], [1.72855404E12, 16.5], [1.72854534E12, 6.45], [1.72854756E12, 12.383333333333333], [1.72854858E12, 12.75], [1.7285508E12, 17.233333333333334], [1.72855182E12, 16.033333333333335], [1.7285496E12, 12.083333333333334], [1.72855284E12, 17.333333333333332], [1.72854618E12, 6.883333333333334], [1.72855062E12, 16.616666666666667], [1.72854516E12, 6.2], [1.7285484E12, 11.6], [1.72854738E12, 5.1], [1.72854942E12, 11.933333333333334], [1.72855164E12, 16.95], [1.72855386E12, 17.35], [1.72854912E12, 11.716666666666667], [1.7285457E12, 6.316666666666666], [1.72854792E12, 11.5], [1.72855014E12, 4.4], [1.72855236E12, 11.066666666666666], [1.72854468E12, 3.2666666666666666], [1.7285469E12, 6.0], [1.72854894E12, 11.8], [1.72855116E12, 16.0], [1.72855338E12, 18.066666666666666], [1.72855218E12, 15.616666666666667], [1.72854654E12, 6.3], [1.72854552E12, 6.3], [1.72854996E12, 11.716666666666667], [1.72854774E12, 11.383333333333333], [1.72855098E12, 16.916666666666668], [1.72855422E12, 6.25], [1.72854876E12, 11.85], [1.7285532E12, 18.316666666666666], [1.7285445E12, 1.15], [1.72854672E12, 6.733333333333333], [1.72855008E12, 10.916666666666666], [1.72855332E12, 18.766666666666666], [1.72854666E12, 6.166666666666667], [1.7285511E12, 16.066666666666666], [1.72854564E12, 5.8], [1.72854888E12, 11.9], [1.72854786E12, 11.35], [1.7285499E12, 12.083333333333334], [1.72855212E12, 16.716666666666665], [1.7285475E12, 11.183333333333334], [1.72854648E12, 6.616666666666666], [1.7285487E12, 12.0], [1.72855092E12, 16.616666666666667], [1.72855314E12, 17.45], [1.72855194E12, 15.983333333333333], [1.72854972E12, 11.9], [1.72855416E12, 18.6], [1.72854546E12, 6.083333333333333], [1.72854768E12, 12.116666666666667], [1.72854702E12, 6.616666666666666], [1.728546E12, 6.25], [1.72854822E12, 11.233333333333333], [1.72855044E12, 16.083333333333332], [1.72855266E12, 19.15], [1.72855146E12, 16.766666666666666], [1.72854924E12, 12.333333333333334], [1.72855368E12, 17.416666666666668], [1.7285472E12, 6.55], [1.72854498E12, 6.466666666666667], [1.72855026E12, 16.9], [1.7285535E12, 17.516666666666666], [1.72854462E12, 3.35], [1.72854684E12, 5.966666666666667], [1.72855248E12, 18.033333333333335], [1.72854582E12, 6.333333333333333], [1.72854804E12, 11.1], [1.72854906E12, 12.0], [1.72855128E12, 15.483333333333333], [1.7285523E12, 15.3], [1.7285448E12, 2.9166666666666665]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72855422E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.1166666666666667, "minX": 1.7285445E12, "maxY": 19.15, "series": [{"data": [[1.72854798E12, 12.033333333333333], [1.7285514E12, 16.283333333333335], [1.72855362E12, 18.216666666666665], [1.72854474E12, 3.433333333333333], [1.72854696E12, 5.866666666666666], [1.72854918E12, 11.916666666666666], [1.7285502E12, 16.933333333333334], [1.72854594E12, 6.0], [1.72854816E12, 12.066666666666666], [1.72855242E12, 11.066666666666666], [1.72855122E12, 17.383333333333333], [1.72854558E12, 5.766666666666667], [1.7285478E12, 11.433333333333334], [1.72855344E12, 17.033333333333335], [1.72854456E12, 3.35], [1.728549E12, 12.916666666666666], [1.72854678E12, 6.683333333333334], [1.72855002E12, 11.683333333333334], [1.72855224E12, 15.85], [1.72855326E12, 18.566666666666666], [1.72854576E12, 6.533333333333333], [1.72855074E12, 16.55], [1.7285451E12, 6.316666666666666], [1.72854732E12, 6.566666666666666], [1.72855398E12, 17.816666666666666], [1.72854852E12, 11.966666666666667], [1.72855296E12, 17.85], [1.7285463E12, 6.316666666666666], [1.72854954E12, 11.633333333333333], [1.72855176E12, 16.883333333333333], [1.72855278E12, 17.533333333333335], [1.72854528E12, 6.216666666666667], [1.7285538E12, 17.483333333333334], [1.72854492E12, 6.583333333333333], [1.72854834E12, 11.383333333333333], [1.72855056E12, 15.133333333333333], [1.72854714E12, 5.8], [1.72855158E12, 15.833333333333334], [1.72854936E12, 12.933333333333334], [1.7285526E12, 18.333333333333332], [1.72854612E12, 6.483333333333333], [1.72855038E12, 16.25], [1.7285517E12, 15.966666666666667], [1.72854606E12, 6.433333333333334], [1.72854504E12, 6.283333333333333], [1.72854948E12, 12.216666666666667], [1.72855392E12, 17.666666666666668], [1.72854726E12, 6.983333333333333], [1.7285505E12, 16.333333333333332], [1.72855374E12, 18.3], [1.72854828E12, 10.866666666666667], [1.72855272E12, 18.133333333333333], [1.72854624E12, 6.45], [1.72854588E12, 6.333333333333333], [1.7285493E12, 12.366666666666667], [1.72855152E12, 16.483333333333334], [1.72855254E12, 17.716666666666665], [1.7285481E12, 11.55], [1.72855356E12, 16.483333333333334], [1.72854486E12, 3.9166666666666665], [1.72854708E12, 6.266666666666667], [1.72855032E12, 16.8], [1.72855134E12, 17.016666666666666], [1.7285454E12, 6.55], [1.72854882E12, 11.5], [1.72855104E12, 15.933333333333334], [1.72854762E12, 11.383333333333333], [1.72855206E12, 17.166666666666668], [1.72854984E12, 12.183333333333334], [1.72855308E12, 17.85], [1.7285466E12, 6.783333333333333], [1.72855086E12, 16.25], [1.72854864E12, 12.183333333333334], [1.72854522E12, 5.733333333333333], [1.72854744E12, 8.55], [1.72854966E12, 11.933333333333334], [1.72855188E12, 15.716666666666667], [1.7285541E12, 17.233333333333334], [1.72854642E12, 5.966666666666667], [1.72854846E12, 12.166666666666666], [1.72855068E12, 15.966666666666667], [1.7285529E12, 17.483333333333334], [1.72854978E12, 12.0], [1.728552E12, 15.866666666666667], [1.72854636E12, 6.4], [1.72855302E12, 18.433333333333334], [1.72855404E12, 16.5], [1.72854534E12, 6.45], [1.72854756E12, 12.383333333333333], [1.72854858E12, 12.75], [1.7285508E12, 17.233333333333334], [1.72855182E12, 16.033333333333335], [1.7285496E12, 12.083333333333334], [1.72855284E12, 17.333333333333332], [1.72854618E12, 6.883333333333334], [1.72855062E12, 16.616666666666667], [1.72854516E12, 6.2], [1.7285484E12, 11.6], [1.72854738E12, 5.116666666666666], [1.72854942E12, 11.933333333333334], [1.72855164E12, 16.95], [1.72855386E12, 17.35], [1.72854912E12, 11.716666666666667], [1.7285457E12, 6.316666666666666], [1.72854792E12, 11.5], [1.72855014E12, 4.466666666666667], [1.72855236E12, 11.183333333333334], [1.72854468E12, 3.2666666666666666], [1.7285469E12, 6.0], [1.72854894E12, 11.8], [1.72855116E12, 16.0], [1.72855338E12, 18.066666666666666], [1.72855218E12, 15.616666666666667], [1.72854654E12, 6.3], [1.72854552E12, 6.3], [1.72854996E12, 11.716666666666667], [1.72854774E12, 11.383333333333333], [1.72855098E12, 16.916666666666668], [1.72855422E12, 6.45], [1.72854876E12, 11.85], [1.7285532E12, 18.316666666666666], [1.7285445E12, 1.1166666666666667], [1.72854672E12, 6.733333333333333], [1.72855008E12, 10.95], [1.72855332E12, 18.766666666666666], [1.72854666E12, 6.166666666666667], [1.7285511E12, 16.066666666666666], [1.72854564E12, 5.8], [1.72854888E12, 11.9], [1.72854786E12, 11.35], [1.7285499E12, 12.083333333333334], [1.72855212E12, 16.716666666666665], [1.7285475E12, 11.183333333333334], [1.72854648E12, 6.616666666666666], [1.7285487E12, 12.0], [1.72855092E12, 16.616666666666667], [1.72855314E12, 17.45], [1.72855194E12, 15.983333333333333], [1.72854972E12, 11.9], [1.72855416E12, 18.666666666666668], [1.72854546E12, 6.083333333333333], [1.72854768E12, 12.116666666666667], [1.72854702E12, 6.616666666666666], [1.728546E12, 6.25], [1.72854822E12, 11.233333333333333], [1.72855044E12, 16.083333333333332], [1.72855266E12, 19.15], [1.72855146E12, 16.766666666666666], [1.72854924E12, 12.333333333333334], [1.72855368E12, 17.416666666666668], [1.7285472E12, 6.55], [1.72854498E12, 6.466666666666667], [1.72855026E12, 16.9], [1.7285535E12, 17.516666666666666], [1.72854462E12, 3.35], [1.72854684E12, 5.966666666666667], [1.72855248E12, 18.033333333333335], [1.72854582E12, 6.333333333333333], [1.72854804E12, 11.1], [1.72854906E12, 12.0], [1.72855128E12, 15.483333333333333], [1.7285523E12, 15.333333333333334], [1.7285448E12, 2.9166666666666665]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72855422E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.1166666666666667, "minX": 1.7285445E12, "maxY": 19.15, "series": [{"data": [[1.72854798E12, 12.033333333333333], [1.7285514E12, 16.283333333333335], [1.72855362E12, 18.216666666666665], [1.72854474E12, 3.433333333333333], [1.72854696E12, 5.866666666666666], [1.72854918E12, 11.916666666666666], [1.7285502E12, 16.933333333333334], [1.72854594E12, 6.0], [1.72854816E12, 12.066666666666666], [1.72855242E12, 11.066666666666666], [1.72855122E12, 17.383333333333333], [1.72854558E12, 5.766666666666667], [1.7285478E12, 11.433333333333334], [1.72855344E12, 17.033333333333335], [1.72854456E12, 3.35], [1.728549E12, 12.916666666666666], [1.72854678E12, 6.683333333333334], [1.72855002E12, 11.683333333333334], [1.72855224E12, 15.85], [1.72855326E12, 18.566666666666666], [1.72854576E12, 6.533333333333333], [1.72855074E12, 16.55], [1.7285451E12, 6.316666666666666], [1.72854732E12, 6.566666666666666], [1.72855398E12, 17.816666666666666], [1.72854852E12, 11.966666666666667], [1.72855296E12, 17.85], [1.7285463E12, 6.316666666666666], [1.72854954E12, 11.633333333333333], [1.72855176E12, 16.883333333333333], [1.72855278E12, 17.533333333333335], [1.72854528E12, 6.216666666666667], [1.7285538E12, 17.483333333333334], [1.72854492E12, 6.583333333333333], [1.72854834E12, 11.383333333333333], [1.72855056E12, 15.133333333333333], [1.72854714E12, 5.8], [1.72855158E12, 15.833333333333334], [1.72854936E12, 12.933333333333334], [1.7285526E12, 18.333333333333332], [1.72854612E12, 6.483333333333333], [1.72855038E12, 16.25], [1.7285517E12, 15.966666666666667], [1.72854606E12, 6.433333333333334], [1.72854504E12, 6.283333333333333], [1.72854948E12, 12.216666666666667], [1.72855392E12, 17.666666666666668], [1.72854726E12, 6.983333333333333], [1.7285505E12, 16.333333333333332], [1.72855374E12, 18.3], [1.72854828E12, 10.866666666666667], [1.72855272E12, 18.133333333333333], [1.72854624E12, 6.45], [1.72854588E12, 6.333333333333333], [1.7285493E12, 12.366666666666667], [1.72855152E12, 16.483333333333334], [1.72855254E12, 17.716666666666665], [1.7285481E12, 11.55], [1.72855356E12, 16.483333333333334], [1.72854486E12, 3.9166666666666665], [1.72854708E12, 6.266666666666667], [1.72855032E12, 16.8], [1.72855134E12, 17.016666666666666], [1.7285454E12, 6.55], [1.72854882E12, 11.5], [1.72855104E12, 15.933333333333334], [1.72854762E12, 11.383333333333333], [1.72855206E12, 17.166666666666668], [1.72854984E12, 12.183333333333334], [1.72855308E12, 17.85], [1.7285466E12, 6.783333333333333], [1.72855086E12, 16.25], [1.72854864E12, 12.183333333333334], [1.72854522E12, 5.733333333333333], [1.72854744E12, 8.55], [1.72854966E12, 11.933333333333334], [1.72855188E12, 15.716666666666667], [1.7285541E12, 17.233333333333334], [1.72854642E12, 5.966666666666667], [1.72854846E12, 12.166666666666666], [1.72855068E12, 15.966666666666667], [1.7285529E12, 17.483333333333334], [1.72854978E12, 12.0], [1.728552E12, 15.866666666666667], [1.72854636E12, 6.4], [1.72855302E12, 18.433333333333334], [1.72855404E12, 16.5], [1.72854534E12, 6.45], [1.72854756E12, 12.383333333333333], [1.72854858E12, 12.75], [1.7285508E12, 17.233333333333334], [1.72855182E12, 16.033333333333335], [1.7285496E12, 12.083333333333334], [1.72855284E12, 17.333333333333332], [1.72854618E12, 6.883333333333334], [1.72855062E12, 16.616666666666667], [1.72854516E12, 6.2], [1.7285484E12, 11.6], [1.72854738E12, 5.116666666666666], [1.72854942E12, 11.933333333333334], [1.72855164E12, 16.95], [1.72855386E12, 17.35], [1.72854912E12, 11.716666666666667], [1.7285457E12, 6.316666666666666], [1.72854792E12, 11.5], [1.72855014E12, 4.466666666666667], [1.72855236E12, 11.183333333333334], [1.72854468E12, 3.2666666666666666], [1.7285469E12, 6.0], [1.72854894E12, 11.8], [1.72855116E12, 16.0], [1.72855338E12, 18.066666666666666], [1.72855218E12, 15.616666666666667], [1.72854654E12, 6.3], [1.72854552E12, 6.3], [1.72854996E12, 11.716666666666667], [1.72854774E12, 11.383333333333333], [1.72855098E12, 16.916666666666668], [1.72855422E12, 6.45], [1.72854876E12, 11.85], [1.7285532E12, 18.316666666666666], [1.7285445E12, 1.1166666666666667], [1.72854672E12, 6.733333333333333], [1.72855008E12, 10.95], [1.72855332E12, 18.766666666666666], [1.72854666E12, 6.166666666666667], [1.7285511E12, 16.066666666666666], [1.72854564E12, 5.8], [1.72854888E12, 11.9], [1.72854786E12, 11.35], [1.7285499E12, 12.083333333333334], [1.72855212E12, 16.716666666666665], [1.7285475E12, 11.183333333333334], [1.72854648E12, 6.616666666666666], [1.7285487E12, 12.0], [1.72855092E12, 16.616666666666667], [1.72855314E12, 17.45], [1.72855194E12, 15.983333333333333], [1.72854972E12, 11.9], [1.72855416E12, 18.666666666666668], [1.72854546E12, 6.083333333333333], [1.72854768E12, 12.116666666666667], [1.72854702E12, 6.616666666666666], [1.728546E12, 6.25], [1.72854822E12, 11.233333333333333], [1.72855044E12, 16.083333333333332], [1.72855266E12, 19.15], [1.72855146E12, 16.766666666666666], [1.72854924E12, 12.333333333333334], [1.72855368E12, 17.416666666666668], [1.7285472E12, 6.55], [1.72854498E12, 6.466666666666667], [1.72855026E12, 16.9], [1.7285535E12, 17.516666666666666], [1.72854462E12, 3.35], [1.72854684E12, 5.966666666666667], [1.72855248E12, 18.033333333333335], [1.72854582E12, 6.333333333333333], [1.72854804E12, 11.1], [1.72854906E12, 12.0], [1.72855128E12, 15.483333333333333], [1.7285523E12, 15.333333333333334], [1.7285448E12, 2.9166666666666665]], "isOverall": false, "label": "getmap-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72855422E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.1166666666666667, "minX": 1.7285445E12, "maxY": 19.15, "series": [{"data": [[1.72854798E12, 12.033333333333333], [1.7285514E12, 16.283333333333335], [1.72855362E12, 18.216666666666665], [1.72854474E12, 3.433333333333333], [1.72854696E12, 5.866666666666666], [1.72854918E12, 11.916666666666666], [1.7285502E12, 16.933333333333334], [1.72854594E12, 6.0], [1.72854816E12, 12.066666666666666], [1.72855242E12, 11.066666666666666], [1.72855122E12, 17.383333333333333], [1.72854558E12, 5.766666666666667], [1.7285478E12, 11.433333333333334], [1.72855344E12, 17.033333333333335], [1.72854456E12, 3.35], [1.728549E12, 12.916666666666666], [1.72854678E12, 6.683333333333334], [1.72855002E12, 11.683333333333334], [1.72855224E12, 15.85], [1.72855326E12, 18.566666666666666], [1.72854576E12, 6.533333333333333], [1.72855074E12, 16.55], [1.7285451E12, 6.316666666666666], [1.72854732E12, 6.566666666666666], [1.72855398E12, 17.816666666666666], [1.72854852E12, 11.966666666666667], [1.72855296E12, 17.85], [1.7285463E12, 6.316666666666666], [1.72854954E12, 11.633333333333333], [1.72855176E12, 16.883333333333333], [1.72855278E12, 17.533333333333335], [1.72854528E12, 6.216666666666667], [1.7285538E12, 17.483333333333334], [1.72854492E12, 6.583333333333333], [1.72854834E12, 11.383333333333333], [1.72855056E12, 15.133333333333333], [1.72854714E12, 5.8], [1.72855158E12, 15.833333333333334], [1.72854936E12, 12.933333333333334], [1.7285526E12, 18.333333333333332], [1.72854612E12, 6.483333333333333], [1.72855038E12, 16.25], [1.7285517E12, 15.966666666666667], [1.72854606E12, 6.433333333333334], [1.72854504E12, 6.283333333333333], [1.72854948E12, 12.216666666666667], [1.72855392E12, 17.666666666666668], [1.72854726E12, 6.983333333333333], [1.7285505E12, 16.333333333333332], [1.72855374E12, 18.3], [1.72854828E12, 10.866666666666667], [1.72855272E12, 18.133333333333333], [1.72854624E12, 6.45], [1.72854588E12, 6.333333333333333], [1.7285493E12, 12.366666666666667], [1.72855152E12, 16.483333333333334], [1.72855254E12, 17.716666666666665], [1.7285481E12, 11.55], [1.72855356E12, 16.483333333333334], [1.72854486E12, 3.9166666666666665], [1.72854708E12, 6.266666666666667], [1.72855032E12, 16.8], [1.72855134E12, 17.016666666666666], [1.7285454E12, 6.55], [1.72854882E12, 11.5], [1.72855104E12, 15.933333333333334], [1.72854762E12, 11.383333333333333], [1.72855206E12, 17.166666666666668], [1.72854984E12, 12.183333333333334], [1.72855308E12, 17.85], [1.7285466E12, 6.783333333333333], [1.72855086E12, 16.25], [1.72854864E12, 12.183333333333334], [1.72854522E12, 5.733333333333333], [1.72854744E12, 8.55], [1.72854966E12, 11.933333333333334], [1.72855188E12, 15.716666666666667], [1.7285541E12, 17.233333333333334], [1.72854642E12, 5.966666666666667], [1.72854846E12, 12.166666666666666], [1.72855068E12, 15.966666666666667], [1.7285529E12, 17.483333333333334], [1.72854978E12, 12.0], [1.728552E12, 15.866666666666667], [1.72854636E12, 6.4], [1.72855302E12, 18.433333333333334], [1.72855404E12, 16.5], [1.72854534E12, 6.45], [1.72854756E12, 12.383333333333333], [1.72854858E12, 12.75], [1.7285508E12, 17.233333333333334], [1.72855182E12, 16.033333333333335], [1.7285496E12, 12.083333333333334], [1.72855284E12, 17.333333333333332], [1.72854618E12, 6.883333333333334], [1.72855062E12, 16.616666666666667], [1.72854516E12, 6.2], [1.7285484E12, 11.6], [1.72854738E12, 5.116666666666666], [1.72854942E12, 11.933333333333334], [1.72855164E12, 16.95], [1.72855386E12, 17.35], [1.72854912E12, 11.716666666666667], [1.7285457E12, 6.316666666666666], [1.72854792E12, 11.5], [1.72855014E12, 4.466666666666667], [1.72855236E12, 11.183333333333334], [1.72854468E12, 3.2666666666666666], [1.7285469E12, 6.0], [1.72854894E12, 11.8], [1.72855116E12, 16.0], [1.72855338E12, 18.066666666666666], [1.72855218E12, 15.616666666666667], [1.72854654E12, 6.3], [1.72854552E12, 6.3], [1.72854996E12, 11.716666666666667], [1.72854774E12, 11.383333333333333], [1.72855098E12, 16.916666666666668], [1.72855422E12, 6.45], [1.72854876E12, 11.85], [1.7285532E12, 18.316666666666666], [1.7285445E12, 1.1166666666666667], [1.72854672E12, 6.733333333333333], [1.72855008E12, 10.95], [1.72855332E12, 18.766666666666666], [1.72854666E12, 6.166666666666667], [1.7285511E12, 16.066666666666666], [1.72854564E12, 5.8], [1.72854888E12, 11.9], [1.72854786E12, 11.35], [1.7285499E12, 12.083333333333334], [1.72855212E12, 16.716666666666665], [1.7285475E12, 11.183333333333334], [1.72854648E12, 6.616666666666666], [1.7285487E12, 12.0], [1.72855092E12, 16.616666666666667], [1.72855314E12, 17.45], [1.72855194E12, 15.983333333333333], [1.72854972E12, 11.9], [1.72855416E12, 18.666666666666668], [1.72854546E12, 6.083333333333333], [1.72854768E12, 12.116666666666667], [1.72854702E12, 6.616666666666666], [1.728546E12, 6.25], [1.72854822E12, 11.233333333333333], [1.72855044E12, 16.083333333333332], [1.72855266E12, 19.15], [1.72855146E12, 16.766666666666666], [1.72854924E12, 12.333333333333334], [1.72855368E12, 17.416666666666668], [1.7285472E12, 6.55], [1.72854498E12, 6.466666666666667], [1.72855026E12, 16.9], [1.7285535E12, 17.516666666666666], [1.72854462E12, 3.35], [1.72854684E12, 5.966666666666667], [1.72855248E12, 18.033333333333335], [1.72854582E12, 6.333333333333333], [1.72854804E12, 11.1], [1.72854906E12, 12.0], [1.72855128E12, 15.483333333333333], [1.7285523E12, 15.333333333333334], [1.7285448E12, 2.9166666666666665]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72855422E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

