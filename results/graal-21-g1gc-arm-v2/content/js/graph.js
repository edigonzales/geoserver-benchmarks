/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 24.0, "minX": 0.0, "maxY": 4085.0, "series": [{"data": [[0.0, 24.0], [0.1, 51.0], [0.2, 54.0], [0.3, 57.0], [0.4, 58.0], [0.5, 60.0], [0.6, 61.0], [0.7, 62.0], [0.8, 63.0], [0.9, 64.0], [1.0, 65.0], [1.1, 66.0], [1.2, 66.0], [1.3, 67.0], [1.4, 68.0], [1.5, 68.0], [1.6, 69.0], [1.7, 69.0], [1.8, 70.0], [1.9, 71.0], [2.0, 71.0], [2.1, 72.0], [2.2, 72.0], [2.3, 73.0], [2.4, 73.0], [2.5, 74.0], [2.6, 74.0], [2.7, 75.0], [2.8, 75.0], [2.9, 76.0], [3.0, 76.0], [3.1, 77.0], [3.2, 77.0], [3.3, 77.0], [3.4, 78.0], [3.5, 78.0], [3.6, 79.0], [3.7, 79.0], [3.8, 79.0], [3.9, 80.0], [4.0, 80.0], [4.1, 81.0], [4.2, 81.0], [4.3, 81.0], [4.4, 82.0], [4.5, 82.0], [4.6, 82.0], [4.7, 83.0], [4.8, 83.0], [4.9, 83.0], [5.0, 84.0], [5.1, 84.0], [5.2, 84.0], [5.3, 85.0], [5.4, 85.0], [5.5, 85.0], [5.6, 86.0], [5.7, 86.0], [5.8, 87.0], [5.9, 87.0], [6.0, 87.0], [6.1, 88.0], [6.2, 88.0], [6.3, 88.0], [6.4, 89.0], [6.5, 89.0], [6.6, 89.0], [6.7, 90.0], [6.8, 90.0], [6.9, 90.0], [7.0, 90.0], [7.1, 91.0], [7.2, 91.0], [7.3, 91.0], [7.4, 92.0], [7.5, 92.0], [7.6, 92.0], [7.7, 93.0], [7.8, 93.0], [7.9, 93.0], [8.0, 94.0], [8.1, 94.0], [8.2, 94.0], [8.3, 94.0], [8.4, 95.0], [8.5, 95.0], [8.6, 95.0], [8.7, 96.0], [8.8, 96.0], [8.9, 96.0], [9.0, 97.0], [9.1, 97.0], [9.2, 97.0], [9.3, 98.0], [9.4, 98.0], [9.5, 98.0], [9.6, 99.0], [9.7, 99.0], [9.8, 99.0], [9.9, 99.0], [10.0, 100.0], [10.1, 100.0], [10.2, 100.0], [10.3, 101.0], [10.4, 101.0], [10.5, 101.0], [10.6, 102.0], [10.7, 102.0], [10.8, 102.0], [10.9, 102.0], [11.0, 103.0], [11.1, 103.0], [11.2, 103.0], [11.3, 104.0], [11.4, 104.0], [11.5, 104.0], [11.6, 104.0], [11.7, 105.0], [11.8, 105.0], [11.9, 105.0], [12.0, 106.0], [12.1, 106.0], [12.2, 106.0], [12.3, 107.0], [12.4, 107.0], [12.5, 107.0], [12.6, 108.0], [12.7, 108.0], [12.8, 108.0], [12.9, 108.0], [13.0, 109.0], [13.1, 109.0], [13.2, 109.0], [13.3, 110.0], [13.4, 110.0], [13.5, 110.0], [13.6, 111.0], [13.7, 111.0], [13.8, 111.0], [13.9, 112.0], [14.0, 112.0], [14.1, 112.0], [14.2, 113.0], [14.3, 113.0], [14.4, 113.0], [14.5, 114.0], [14.6, 114.0], [14.7, 114.0], [14.8, 115.0], [14.9, 115.0], [15.0, 115.0], [15.1, 116.0], [15.2, 116.0], [15.3, 116.0], [15.4, 117.0], [15.5, 117.0], [15.6, 117.0], [15.7, 117.0], [15.8, 118.0], [15.9, 118.0], [16.0, 118.0], [16.1, 119.0], [16.2, 119.0], [16.3, 120.0], [16.4, 120.0], [16.5, 120.0], [16.6, 120.0], [16.7, 121.0], [16.8, 121.0], [16.9, 121.0], [17.0, 122.0], [17.1, 122.0], [17.2, 123.0], [17.3, 123.0], [17.4, 123.0], [17.5, 124.0], [17.6, 124.0], [17.7, 124.0], [17.8, 125.0], [17.9, 125.0], [18.0, 125.0], [18.1, 125.0], [18.2, 126.0], [18.3, 126.0], [18.4, 127.0], [18.5, 127.0], [18.6, 127.0], [18.7, 128.0], [18.8, 128.0], [18.9, 128.0], [19.0, 129.0], [19.1, 129.0], [19.2, 129.0], [19.3, 130.0], [19.4, 130.0], [19.5, 131.0], [19.6, 131.0], [19.7, 131.0], [19.8, 132.0], [19.9, 132.0], [20.0, 132.0], [20.1, 133.0], [20.2, 133.0], [20.3, 134.0], [20.4, 134.0], [20.5, 134.0], [20.6, 135.0], [20.7, 135.0], [20.8, 136.0], [20.9, 136.0], [21.0, 136.0], [21.1, 137.0], [21.2, 137.0], [21.3, 138.0], [21.4, 138.0], [21.5, 138.0], [21.6, 139.0], [21.7, 139.0], [21.8, 139.0], [21.9, 140.0], [22.0, 140.0], [22.1, 141.0], [22.2, 141.0], [22.3, 142.0], [22.4, 142.0], [22.5, 142.0], [22.6, 143.0], [22.7, 143.0], [22.8, 144.0], [22.9, 144.0], [23.0, 144.0], [23.1, 145.0], [23.2, 145.0], [23.3, 146.0], [23.4, 146.0], [23.5, 147.0], [23.6, 147.0], [23.7, 148.0], [23.8, 148.0], [23.9, 149.0], [24.0, 149.0], [24.1, 150.0], [24.2, 150.0], [24.3, 151.0], [24.4, 151.0], [24.5, 151.0], [24.6, 152.0], [24.7, 152.0], [24.8, 153.0], [24.9, 153.0], [25.0, 154.0], [25.1, 154.0], [25.2, 155.0], [25.3, 155.0], [25.4, 156.0], [25.5, 156.0], [25.6, 157.0], [25.7, 157.0], [25.8, 158.0], [25.9, 159.0], [26.0, 159.0], [26.1, 160.0], [26.2, 160.0], [26.3, 161.0], [26.4, 161.0], [26.5, 162.0], [26.6, 162.0], [26.7, 163.0], [26.8, 164.0], [26.9, 164.0], [27.0, 165.0], [27.1, 165.0], [27.2, 166.0], [27.3, 166.0], [27.4, 167.0], [27.5, 168.0], [27.6, 168.0], [27.7, 169.0], [27.8, 169.0], [27.9, 170.0], [28.0, 171.0], [28.1, 171.0], [28.2, 172.0], [28.3, 173.0], [28.4, 173.0], [28.5, 174.0], [28.6, 175.0], [28.7, 175.0], [28.8, 176.0], [28.9, 177.0], [29.0, 177.0], [29.1, 178.0], [29.2, 179.0], [29.3, 179.0], [29.4, 180.0], [29.5, 181.0], [29.6, 181.0], [29.7, 182.0], [29.8, 183.0], [29.9, 184.0], [30.0, 184.0], [30.1, 185.0], [30.2, 186.0], [30.3, 187.0], [30.4, 187.0], [30.5, 188.0], [30.6, 189.0], [30.7, 190.0], [30.8, 191.0], [30.9, 191.0], [31.0, 192.0], [31.1, 193.0], [31.2, 194.0], [31.3, 195.0], [31.4, 196.0], [31.5, 196.0], [31.6, 197.0], [31.7, 198.0], [31.8, 199.0], [31.9, 200.0], [32.0, 200.0], [32.1, 201.0], [32.2, 202.0], [32.3, 203.0], [32.4, 204.0], [32.5, 205.0], [32.6, 206.0], [32.7, 207.0], [32.8, 208.0], [32.9, 209.0], [33.0, 210.0], [33.1, 211.0], [33.2, 211.0], [33.3, 212.0], [33.4, 213.0], [33.5, 214.0], [33.6, 215.0], [33.7, 216.0], [33.8, 217.0], [33.9, 218.0], [34.0, 219.0], [34.1, 220.0], [34.2, 221.0], [34.3, 222.0], [34.4, 224.0], [34.5, 225.0], [34.6, 226.0], [34.7, 227.0], [34.8, 228.0], [34.9, 229.0], [35.0, 230.0], [35.1, 231.0], [35.2, 233.0], [35.3, 234.0], [35.4, 235.0], [35.5, 236.0], [35.6, 237.0], [35.7, 238.0], [35.8, 239.0], [35.9, 241.0], [36.0, 242.0], [36.1, 243.0], [36.2, 244.0], [36.3, 245.0], [36.4, 246.0], [36.5, 248.0], [36.6, 249.0], [36.7, 250.0], [36.8, 252.0], [36.9, 253.0], [37.0, 254.0], [37.1, 255.0], [37.2, 257.0], [37.3, 258.0], [37.4, 259.0], [37.5, 261.0], [37.6, 262.0], [37.7, 264.0], [37.8, 265.0], [37.9, 267.0], [38.0, 268.0], [38.1, 270.0], [38.2, 271.0], [38.3, 273.0], [38.4, 274.0], [38.5, 276.0], [38.6, 277.0], [38.7, 279.0], [38.8, 281.0], [38.9, 283.0], [39.0, 285.0], [39.1, 286.0], [39.2, 288.0], [39.3, 290.0], [39.4, 292.0], [39.5, 293.0], [39.6, 295.0], [39.7, 297.0], [39.8, 299.0], [39.9, 300.0], [40.0, 302.0], [40.1, 304.0], [40.2, 306.0], [40.3, 308.0], [40.4, 310.0], [40.5, 312.0], [40.6, 315.0], [40.7, 316.0], [40.8, 318.0], [40.9, 321.0], [41.0, 323.0], [41.1, 325.0], [41.2, 328.0], [41.3, 329.0], [41.4, 331.0], [41.5, 334.0], [41.6, 336.0], [41.7, 339.0], [41.8, 341.0], [41.9, 343.0], [42.0, 346.0], [42.1, 348.0], [42.2, 351.0], [42.3, 354.0], [42.4, 357.0], [42.5, 359.0], [42.6, 362.0], [42.7, 365.0], [42.8, 368.0], [42.9, 371.0], [43.0, 373.0], [43.1, 377.0], [43.2, 380.0], [43.3, 382.0], [43.4, 385.0], [43.5, 389.0], [43.6, 392.0], [43.7, 394.0], [43.8, 397.0], [43.9, 400.0], [44.0, 404.0], [44.1, 406.0], [44.2, 410.0], [44.3, 414.0], [44.4, 418.0], [44.5, 421.0], [44.6, 425.0], [44.7, 429.0], [44.8, 432.0], [44.9, 436.0], [45.0, 440.0], [45.1, 444.0], [45.2, 447.0], [45.3, 451.0], [45.4, 454.0], [45.5, 458.0], [45.6, 462.0], [45.7, 466.0], [45.8, 470.0], [45.9, 474.0], [46.0, 478.0], [46.1, 482.0], [46.2, 485.0], [46.3, 489.0], [46.4, 493.0], [46.5, 497.0], [46.6, 501.0], [46.7, 505.0], [46.8, 508.0], [46.9, 512.0], [47.0, 515.0], [47.1, 518.0], [47.2, 522.0], [47.3, 526.0], [47.4, 529.0], [47.5, 532.0], [47.6, 536.0], [47.7, 539.0], [47.8, 542.0], [47.9, 546.0], [48.0, 549.0], [48.1, 552.0], [48.2, 556.0], [48.3, 559.0], [48.4, 562.0], [48.5, 565.0], [48.6, 569.0], [48.7, 572.0], [48.8, 576.0], [48.9, 579.0], [49.0, 582.0], [49.1, 585.0], [49.2, 589.0], [49.3, 592.0], [49.4, 595.0], [49.5, 598.0], [49.6, 602.0], [49.7, 604.0], [49.8, 608.0], [49.9, 611.0], [50.0, 614.0], [50.1, 616.0], [50.2, 620.0], [50.3, 623.0], [50.4, 626.0], [50.5, 628.0], [50.6, 632.0], [50.7, 634.0], [50.8, 637.0], [50.9, 640.0], [51.0, 643.0], [51.1, 646.0], [51.2, 649.0], [51.3, 652.0], [51.4, 655.0], [51.5, 657.0], [51.6, 659.0], [51.7, 662.0], [51.8, 664.0], [51.9, 667.0], [52.0, 670.0], [52.1, 672.0], [52.2, 675.0], [52.3, 678.0], [52.4, 680.0], [52.5, 683.0], [52.6, 686.0], [52.7, 688.0], [52.8, 690.0], [52.9, 693.0], [53.0, 695.0], [53.1, 698.0], [53.2, 700.0], [53.3, 702.0], [53.4, 705.0], [53.5, 707.0], [53.6, 709.0], [53.7, 712.0], [53.8, 714.0], [53.9, 716.0], [54.0, 718.0], [54.1, 720.0], [54.2, 723.0], [54.3, 726.0], [54.4, 728.0], [54.5, 730.0], [54.6, 732.0], [54.7, 735.0], [54.8, 737.0], [54.9, 739.0], [55.0, 741.0], [55.1, 743.0], [55.2, 745.0], [55.3, 747.0], [55.4, 749.0], [55.5, 751.0], [55.6, 754.0], [55.7, 756.0], [55.8, 758.0], [55.9, 760.0], [56.0, 762.0], [56.1, 764.0], [56.2, 767.0], [56.3, 769.0], [56.4, 771.0], [56.5, 773.0], [56.6, 775.0], [56.7, 777.0], [56.8, 780.0], [56.9, 782.0], [57.0, 784.0], [57.1, 787.0], [57.2, 788.0], [57.3, 790.0], [57.4, 792.0], [57.5, 795.0], [57.6, 797.0], [57.7, 799.0], [57.8, 801.0], [57.9, 803.0], [58.0, 805.0], [58.1, 807.0], [58.2, 809.0], [58.3, 811.0], [58.4, 813.0], [58.5, 815.0], [58.6, 817.0], [58.7, 819.0], [58.8, 822.0], [58.9, 824.0], [59.0, 826.0], [59.1, 828.0], [59.2, 830.0], [59.3, 832.0], [59.4, 834.0], [59.5, 836.0], [59.6, 838.0], [59.7, 840.0], [59.8, 842.0], [59.9, 844.0], [60.0, 846.0], [60.1, 848.0], [60.2, 850.0], [60.3, 852.0], [60.4, 854.0], [60.5, 856.0], [60.6, 858.0], [60.7, 860.0], [60.8, 862.0], [60.9, 864.0], [61.0, 866.0], [61.1, 868.0], [61.2, 870.0], [61.3, 872.0], [61.4, 874.0], [61.5, 876.0], [61.6, 879.0], [61.7, 880.0], [61.8, 883.0], [61.9, 884.0], [62.0, 886.0], [62.1, 888.0], [62.2, 890.0], [62.3, 892.0], [62.4, 894.0], [62.5, 897.0], [62.6, 899.0], [62.7, 901.0], [62.8, 903.0], [62.9, 905.0], [63.0, 907.0], [63.1, 909.0], [63.2, 911.0], [63.3, 913.0], [63.4, 915.0], [63.5, 917.0], [63.6, 919.0], [63.7, 921.0], [63.8, 923.0], [63.9, 924.0], [64.0, 926.0], [64.1, 928.0], [64.2, 931.0], [64.3, 932.0], [64.4, 934.0], [64.5, 936.0], [64.6, 938.0], [64.7, 940.0], [64.8, 942.0], [64.9, 944.0], [65.0, 946.0], [65.1, 947.0], [65.2, 949.0], [65.3, 951.0], [65.4, 953.0], [65.5, 955.0], [65.6, 957.0], [65.7, 959.0], [65.8, 961.0], [65.9, 963.0], [66.0, 965.0], [66.1, 967.0], [66.2, 969.0], [66.3, 971.0], [66.4, 973.0], [66.5, 975.0], [66.6, 976.0], [66.7, 978.0], [66.8, 980.0], [66.9, 982.0], [67.0, 984.0], [67.1, 986.0], [67.2, 989.0], [67.3, 991.0], [67.4, 993.0], [67.5, 994.0], [67.6, 997.0], [67.7, 998.0], [67.8, 1000.0], [67.9, 1002.0], [68.0, 1004.0], [68.1, 1006.0], [68.2, 1008.0], [68.3, 1010.0], [68.4, 1012.0], [68.5, 1014.0], [68.6, 1017.0], [68.7, 1019.0], [68.8, 1021.0], [68.9, 1023.0], [69.0, 1024.0], [69.1, 1026.0], [69.2, 1028.0], [69.3, 1030.0], [69.4, 1032.0], [69.5, 1034.0], [69.6, 1036.0], [69.7, 1038.0], [69.8, 1040.0], [69.9, 1042.0], [70.0, 1044.0], [70.1, 1046.0], [70.2, 1048.0], [70.3, 1049.0], [70.4, 1051.0], [70.5, 1053.0], [70.6, 1055.0], [70.7, 1058.0], [70.8, 1059.0], [70.9, 1061.0], [71.0, 1063.0], [71.1, 1065.0], [71.2, 1067.0], [71.3, 1069.0], [71.4, 1071.0], [71.5, 1073.0], [71.6, 1075.0], [71.7, 1077.0], [71.8, 1079.0], [71.9, 1081.0], [72.0, 1083.0], [72.1, 1085.0], [72.2, 1087.0], [72.3, 1089.0], [72.4, 1091.0], [72.5, 1093.0], [72.6, 1095.0], [72.7, 1097.0], [72.8, 1099.0], [72.9, 1101.0], [73.0, 1103.0], [73.1, 1106.0], [73.2, 1108.0], [73.3, 1110.0], [73.4, 1112.0], [73.5, 1114.0], [73.6, 1116.0], [73.7, 1119.0], [73.8, 1121.0], [73.9, 1123.0], [74.0, 1125.0], [74.1, 1127.0], [74.2, 1130.0], [74.3, 1132.0], [74.4, 1134.0], [74.5, 1136.0], [74.6, 1139.0], [74.7, 1141.0], [74.8, 1142.0], [74.9, 1145.0], [75.0, 1146.0], [75.1, 1149.0], [75.2, 1151.0], [75.3, 1153.0], [75.4, 1155.0], [75.5, 1157.0], [75.6, 1160.0], [75.7, 1162.0], [75.8, 1164.0], [75.9, 1166.0], [76.0, 1168.0], [76.1, 1170.0], [76.2, 1173.0], [76.3, 1175.0], [76.4, 1177.0], [76.5, 1179.0], [76.6, 1181.0], [76.7, 1183.0], [76.8, 1185.0], [76.9, 1187.0], [77.0, 1189.0], [77.1, 1192.0], [77.2, 1194.0], [77.3, 1197.0], [77.4, 1199.0], [77.5, 1202.0], [77.6, 1204.0], [77.7, 1207.0], [77.8, 1209.0], [77.9, 1211.0], [78.0, 1213.0], [78.1, 1216.0], [78.2, 1218.0], [78.3, 1221.0], [78.4, 1223.0], [78.5, 1225.0], [78.6, 1228.0], [78.7, 1230.0], [78.8, 1233.0], [78.9, 1235.0], [79.0, 1237.0], [79.1, 1240.0], [79.2, 1242.0], [79.3, 1245.0], [79.4, 1248.0], [79.5, 1250.0], [79.6, 1253.0], [79.7, 1255.0], [79.8, 1257.0], [79.9, 1260.0], [80.0, 1263.0], [80.1, 1265.0], [80.2, 1267.0], [80.3, 1270.0], [80.4, 1273.0], [80.5, 1276.0], [80.6, 1278.0], [80.7, 1280.0], [80.8, 1283.0], [80.9, 1285.0], [81.0, 1288.0], [81.1, 1290.0], [81.2, 1293.0], [81.3, 1296.0], [81.4, 1298.0], [81.5, 1301.0], [81.6, 1304.0], [81.7, 1306.0], [81.8, 1309.0], [81.9, 1312.0], [82.0, 1314.0], [82.1, 1317.0], [82.2, 1320.0], [82.3, 1322.0], [82.4, 1325.0], [82.5, 1328.0], [82.6, 1331.0], [82.7, 1333.0], [82.8, 1337.0], [82.9, 1339.0], [83.0, 1342.0], [83.1, 1345.0], [83.2, 1349.0], [83.3, 1351.0], [83.4, 1354.0], [83.5, 1357.0], [83.6, 1360.0], [83.7, 1362.0], [83.8, 1365.0], [83.9, 1368.0], [84.0, 1371.0], [84.1, 1374.0], [84.2, 1376.0], [84.3, 1379.0], [84.4, 1382.0], [84.5, 1386.0], [84.6, 1388.0], [84.7, 1391.0], [84.8, 1394.0], [84.9, 1398.0], [85.0, 1400.0], [85.1, 1403.0], [85.2, 1407.0], [85.3, 1410.0], [85.4, 1413.0], [85.5, 1416.0], [85.6, 1419.0], [85.7, 1422.0], [85.8, 1425.0], [85.9, 1428.0], [86.0, 1431.0], [86.1, 1435.0], [86.2, 1438.0], [86.3, 1441.0], [86.4, 1445.0], [86.5, 1448.0], [86.6, 1452.0], [86.7, 1456.0], [86.8, 1458.0], [86.9, 1462.0], [87.0, 1465.0], [87.1, 1469.0], [87.2, 1472.0], [87.3, 1475.0], [87.4, 1478.0], [87.5, 1482.0], [87.6, 1485.0], [87.7, 1490.0], [87.8, 1493.0], [87.9, 1497.0], [88.0, 1499.0], [88.1, 1503.0], [88.2, 1506.0], [88.3, 1510.0], [88.4, 1514.0], [88.5, 1518.0], [88.6, 1521.0], [88.7, 1525.0], [88.8, 1529.0], [88.9, 1533.0], [89.0, 1537.0], [89.1, 1541.0], [89.2, 1546.0], [89.3, 1550.0], [89.4, 1554.0], [89.5, 1558.0], [89.6, 1562.0], [89.7, 1567.0], [89.8, 1571.0], [89.9, 1576.0], [90.0, 1580.0], [90.1, 1584.0], [90.2, 1589.0], [90.3, 1593.0], [90.4, 1598.0], [90.5, 1603.0], [90.6, 1607.0], [90.7, 1612.0], [90.8, 1617.0], [90.9, 1622.0], [91.0, 1627.0], [91.1, 1632.0], [91.2, 1637.0], [91.3, 1642.0], [91.4, 1647.0], [91.5, 1652.0], [91.6, 1658.0], [91.7, 1664.0], [91.8, 1669.0], [91.9, 1674.0], [92.0, 1679.0], [92.1, 1684.0], [92.2, 1689.0], [92.3, 1695.0], [92.4, 1700.0], [92.5, 1706.0], [92.6, 1711.0], [92.7, 1716.0], [92.8, 1721.0], [92.9, 1727.0], [93.0, 1732.0], [93.1, 1738.0], [93.2, 1745.0], [93.3, 1750.0], [93.4, 1756.0], [93.5, 1762.0], [93.6, 1767.0], [93.7, 1775.0], [93.8, 1781.0], [93.9, 1786.0], [94.0, 1793.0], [94.1, 1800.0], [94.2, 1807.0], [94.3, 1813.0], [94.4, 1819.0], [94.5, 1827.0], [94.6, 1834.0], [94.7, 1843.0], [94.8, 1851.0], [94.9, 1858.0], [95.0, 1866.0], [95.1, 1874.0], [95.2, 1883.0], [95.3, 1891.0], [95.4, 1899.0], [95.5, 1906.0], [95.6, 1917.0], [95.7, 1925.0], [95.8, 1934.0], [95.9, 1943.0], [96.0, 1950.0], [96.1, 1960.0], [96.2, 1970.0], [96.3, 1980.0], [96.4, 1992.0], [96.5, 2002.0], [96.6, 2013.0], [96.7, 2023.0], [96.8, 2035.0], [96.9, 2047.0], [97.0, 2059.0], [97.1, 2071.0], [97.2, 2085.0], [97.3, 2101.0], [97.4, 2114.0], [97.5, 2129.0], [97.6, 2144.0], [97.7, 2159.0], [97.8, 2174.0], [97.9, 2192.0], [98.0, 2209.0], [98.1, 2226.0], [98.2, 2248.0], [98.3, 2269.0], [98.4, 2291.0], [98.5, 2311.0], [98.6, 2335.0], [98.7, 2359.0], [98.8, 2388.0], [98.9, 2414.0], [99.0, 2450.0], [99.1, 2481.0], [99.2, 2521.0], [99.3, 2571.0], [99.4, 2614.0], [99.5, 2671.0], [99.6, 2749.0], [99.7, 2838.0], [99.8, 2984.0], [99.9, 3185.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "maxY": 25760.0, "series": [{"data": [[0.0, 11614.0], [600.0, 4267.0], [700.0, 5329.0], [800.0, 5773.0], [900.0, 5987.0], [1000.0, 5968.0], [1100.0, 5358.0], [1200.0, 4732.0], [1300.0, 4110.0], [1400.0, 3565.0], [1500.0, 2840.0], [100.0, 25760.0], [1600.0, 2302.0], [1700.0, 1983.0], [1800.0, 1554.0], [1900.0, 1250.0], [2000.0, 960.0], [2100.0, 756.0], [2200.0, 592.0], [2300.0, 474.0], [2400.0, 337.0], [2500.0, 266.0], [2600.0, 208.0], [2800.0, 113.0], [2700.0, 124.0], [2900.0, 79.0], [3000.0, 57.0], [3100.0, 51.0], [200.0, 9336.0], [3200.0, 35.0], [3300.0, 26.0], [3400.0, 12.0], [3500.0, 13.0], [3600.0, 7.0], [3700.0, 4.0], [3800.0, 7.0], [3900.0, 3.0], [4000.0, 4.0], [300.0, 4706.0], [400.0, 3164.0], [500.0, 3474.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 14029.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 54609.0, "series": [{"data": [[0.0, 54609.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 48562.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 14029.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.2631578947368425, "minX": 1.728795E12, "maxY": 16.0, "series": [{"data": [[1.72880112E12, 12.0], [1.72880274E12, 1.2631578947368425], [1.72880082E12, 12.0], [1.72880052E12, 11.863492063492059], [1.72880214E12, 12.0], [1.72880244E12, 12.0], [1.72880184E12, 12.0], [1.72880154E12, 12.0], [1.72880124E12, 12.0], [1.72880094E12, 12.0], [1.7288016E12, 12.0], [1.7288013E12, 12.0], [1.728801E12, 12.0], [1.72880262E12, 11.292502639915524], [1.7288007E12, 12.0], [1.72880202E12, 12.0], [1.72880232E12, 12.0], [1.72880172E12, 12.0], [1.72880142E12, 12.0], [1.72880178E12, 12.0], [1.72880208E12, 12.0], [1.72880148E12, 12.0], [1.72880118E12, 12.0], [1.72880088E12, 12.0], [1.7288025E12, 12.0], [1.72880058E12, 12.0], [1.7288019E12, 12.0], [1.7288022E12, 12.0], [1.72880064E12, 12.0], [1.72880226E12, 12.0], [1.72880256E12, 12.0], [1.72880166E12, 12.0], [1.72880196E12, 12.0], [1.72880136E12, 12.0], [1.72880106E12, 12.0], [1.72880076E12, 12.0], [1.72880238E12, 12.0], [1.72880268E12, 6.367886178861795]], "isOverall": false, "label": "12", "isController": false}, {"data": [[1.7287953E12, 2.0], [1.72879512E12, 2.0], [1.72879518E12, 2.0], [1.728795E12, 2.0], [1.72879506E12, 2.0], [1.72879536E12, 1.9230769230769231], [1.72879524E12, 2.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.7287974E12, 4.0], [1.7287971E12, 4.0], [1.72879608E12, 4.0], [1.72879548E12, 4.0], [1.7287977E12, 4.0], [1.72879578E12, 4.0], [1.72879668E12, 4.0], [1.72879536E12, 3.995670995670998], [1.72879638E12, 4.0], [1.72879728E12, 4.0], [1.72879698E12, 4.0], [1.72879596E12, 4.0], [1.72879758E12, 4.0], [1.72879566E12, 4.0], [1.72879788E12, 1.699115044247788], [1.72879656E12, 4.0], [1.72879626E12, 4.0], [1.72879554E12, 4.0], [1.72879716E12, 4.0], [1.72879686E12, 4.0], [1.72879584E12, 4.0], [1.72879746E12, 4.0], [1.72879776E12, 4.0], [1.72879644E12, 4.0], [1.72879614E12, 4.0], [1.72879704E12, 4.0], [1.72879674E12, 4.0], [1.72879764E12, 4.0], [1.72879572E12, 4.0], [1.72879734E12, 4.0], [1.72879542E12, 4.0], [1.72879632E12, 4.0], [1.72879602E12, 4.0], [1.72879692E12, 4.0], [1.7287956E12, 4.0], [1.72879662E12, 4.0], [1.72879752E12, 4.0], [1.72879722E12, 4.0], [1.7287962E12, 4.0], [1.72879782E12, 3.401785714285713], [1.7287959E12, 4.0], [1.7287968E12, 4.0], [1.7287965E12, 4.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.72880274E12, 15.950837988826803], [1.72880436E12, 16.0], [1.72880304E12, 16.0], [1.72880406E12, 16.0], [1.72880346E12, 16.0], [1.72880376E12, 16.0], [1.72880286E12, 16.0], [1.72880316E12, 16.0], [1.72880322E12, 16.0], [1.72880352E12, 16.0], [1.72880292E12, 16.0], [1.72880394E12, 16.0], [1.72880334E12, 16.0], [1.72880424E12, 16.0], [1.72880364E12, 16.0], [1.7288037E12, 16.0], [1.728804E12, 16.0], [1.7288031E12, 16.0], [1.7288034E12, 16.0], [1.72880412E12, 16.0], [1.7288028E12, 16.0], [1.72880382E12, 16.0], [1.72880442E12, 13.55103884372178], [1.72880358E12, 16.0], [1.72880448E12, 5.8816326530612235], [1.72880388E12, 16.0], [1.72880418E12, 16.0], [1.72880298E12, 16.0], [1.72880328E12, 16.0], [1.7288043E12, 16.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.72879902E12, 8.0], [1.72879932E12, 8.0], [1.72879962E12, 8.0], [1.72880052E12, 3.430107526881722], [1.728798E12, 8.0], [1.72880022E12, 8.0], [1.7287983E12, 8.0], [1.72879992E12, 8.0], [1.7287986E12, 8.0], [1.7287989E12, 8.0], [1.7287992E12, 8.0], [1.7287995E12, 8.0], [1.7287998E12, 8.0], [1.72879788E12, 7.984615384615386], [1.72879818E12, 8.0], [1.72879848E12, 8.0], [1.72879878E12, 8.0], [1.7288004E12, 8.0], [1.72879908E12, 8.0], [1.7288001E12, 8.0], [1.72879938E12, 8.0], [1.72879968E12, 8.0], [1.72879806E12, 8.0], [1.72880016E12, 8.0], [1.72879836E12, 8.0], [1.72879986E12, 8.0], [1.72879866E12, 8.0], [1.72879896E12, 8.0], [1.72879926E12, 8.0], [1.72879956E12, 8.0], [1.72879794E12, 8.0], [1.72880028E12, 8.0], [1.72879824E12, 8.0], [1.72879998E12, 8.0], [1.72879854E12, 8.0], [1.72879884E12, 8.0], [1.72880034E12, 8.0], [1.72879914E12, 8.0], [1.72880004E12, 8.0], [1.72879944E12, 8.0], [1.72879974E12, 8.0], [1.72879812E12, 8.0], [1.72879842E12, 8.0], [1.72879872E12, 8.0], [1.72880046E12, 7.396969696969699]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72880448E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 532.7241379310344, "minX": 1.0, "maxY": 869.5966185139611, "series": [{"data": [[2.0, 608.6280701754371], [8.0, 650.0937715828442], [9.0, 637.9711538461537], [10.0, 532.7241379310344], [11.0, 692.1475409836074], [3.0, 634.728506787331], [12.0, 715.5048538112485], [13.0, 711.938888888889], [14.0, 692.8554216867469], [15.0, 769.9666666666665], [1.0, 749.0735294117646], [4.0, 624.3464512040546], [16.0, 869.5966185139611], [5.0, 622.7653846153844], [6.0, 647.5561797752806], [7.0, 624.8333333333334]], "isOverall": false, "label": "getmap", "isController": false}, {"data": [[10.714667235494954, 723.9792662116041]], "isOverall": false, "label": "getmap-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.728795E12, "maxY": 5.404739871666667E7, "series": [{"data": [[1.72879902E12, 3.57955612E7], [1.72879578E12, 2.004083785E7], [1.728798E12, 3.5087618416666664E7], [1.72880022E12, 3.70596991E7], [1.72880244E12, 4.917194506666667E7], [1.72880346E12, 5.061460138333333E7], [1.72880124E12, 4.892700303333333E7], [1.72879698E12, 1.8856587466666665E7], [1.7287992E12, 3.5820032516666666E7], [1.7288016E12, 4.721549438333333E7], [1.72879596E12, 2.003771165E7], [1.72879818E12, 3.774918606666667E7], [1.72880262E12, 4.543071603333333E7], [1.72879716E12, 1.9848988583333332E7], [1.7288004E12, 3.603366193333333E7], [1.72879938E12, 3.6066187333333336E7], [1.72880142E12, 4.7401795666666664E7], [1.72880364E12, 5.1716336916666664E7], [1.72879512E12, 9499154.816666666], [1.72880178E12, 4.98915806E7], [1.728804E12, 5.19489447E7], [1.72879614E12, 1.9237006533333335E7], [1.72879836E12, 3.703132813333333E7], [1.72879734E12, 2.0363177016666666E7], [1.72879956E12, 3.7852892266666666E7], [1.72880058E12, 4.826877253333333E7], [1.7288028E12, 5.023120921666667E7], [1.72880382E12, 5.2866163983333334E7], [1.72879632E12, 1.8240099466666665E7], [1.7287953E12, 9402835.35], [1.72879854E12, 3.5312480483333334E7], [1.72879752E12, 1.8902436183333334E7], [1.72880196E12, 5.008584238333333E7], [1.72880418E12, 5.1754760833333336E7], [1.72879974E12, 3.5302715483333334E7], [1.72880298E12, 5.146315668333333E7], [1.72880076E12, 4.7952353416666664E7], [1.7287965E12, 1.9350314833333332E7], [1.72879872E12, 3.54471154E7], [1.72880274E12, 4.003553306666667E7], [1.7287971E12, 1.9503000866666667E7], [1.72879932E12, 3.678349886666667E7], [1.72879608E12, 2.0518161466666665E7], [1.72880052E12, 2.31712889E7], [1.72879506E12, 1.0373475683333334E7], [1.7287983E12, 3.59445776E7], [1.72880154E12, 4.773529263333333E7], [1.72880376E12, 5.164133353333333E7], [1.72879728E12, 1.98237205E7], [1.7287995E12, 3.50440285E7], [1.72879626E12, 2.0802845566666666E7], [1.72879848E12, 3.45829617E7], [1.7288007E12, 4.8199757416666664E7], [1.72880292E12, 5.316164943333333E7], [1.72880394E12, 5.247247346666667E7], [1.72880172E12, 4.7288612016666666E7], [1.72879524E12, 9997928.05], [1.72879746E12, 1.899177105E7], [1.72879968E12, 3.6011709266666666E7], [1.72879644E12, 2.066507585E7], [1.72879986E12, 3.572354343333333E7], [1.72880208E12, 4.7038944016666666E7], [1.7288031E12, 5.291158938333333E7], [1.72879866E12, 3.6258445083333336E7], [1.72879764E12, 2.01648795E7], [1.72880088E12, 4.812595828333333E7], [1.72880412E12, 5.350252306666667E7], [1.72879542E12, 1.8870470983333334E7], [1.7288019E12, 4.687865388333333E7], [1.72880226E12, 4.771671231666667E7], [1.7287956E12, 1.9165141433333334E7], [1.72879884E12, 3.718220631666667E7], [1.72879662E12, 1.8151469266666666E7], [1.72880004E12, 3.712482185E7], [1.72880448E12, 1.3826042266666668E7], [1.72879782E12, 1.6179797366666667E7], [1.72880106E12, 4.79664431E7], [1.72880328E12, 5.0637114916666664E7], [1.7288043E12, 5.19116148E7], [1.7287968E12, 1.9643271066666666E7], [1.7287974E12, 1.98869215E7], [1.72880304E12, 5.169268721666667E7], [1.72880082E12, 4.7984195483333334E7], [1.72880406E12, 5.0159563083333336E7], [1.72879518E12, 1.015184265E7], [1.72879962E12, 3.67859283E7], [1.72880184E12, 4.853997895E7], [1.72879536E12, 1.4864334083333334E7], [1.72879638E12, 1.9930000016666666E7], [1.7287986E12, 3.564970306666667E7], [1.72880286E12, 5.241123993333333E7], [1.72880322E12, 5.247112828333333E7], [1.72879758E12, 1.9152481133333333E7], [1.7287998E12, 3.6646900166666664E7], [1.728801E12, 4.831055368333333E7], [1.72879656E12, 2.04524073E7], [1.72879554E12, 1.97732521E7], [1.72879878E12, 3.658057111666667E7], [1.72880202E12, 4.537147655E7], [1.72880424E12, 5.2088215266666666E7], [1.72879776E12, 1.75759417E7], [1.72880016E12, 3.578435193333333E7], [1.72879674E12, 1.8524687016666666E7], [1.72879896E12, 3.672951143333333E7], [1.72880118E12, 4.62653146E7], [1.7288034E12, 5.201105638333333E7], [1.72879572E12, 2.0315222216666665E7], [1.72879794E12, 3.6733695233333334E7], [1.72879998E12, 3.64666513E7], [1.7288022E12, 4.806184313333333E7], [1.72880442E12, 4.769725881666667E7], [1.72879692E12, 2.01100567E7], [1.72880034E12, 3.73400947E7], [1.72880256E12, 4.90416023E7], [1.72879914E12, 3.565240353333333E7], [1.72880358E12, 5.063376885E7], [1.72880136E12, 4.98689346E7], [1.7287959E12, 1.9582309966666665E7], [1.72879812E12, 3.780260338333333E7], [1.72880238E12, 4.808652961666667E7], [1.72880112E12, 4.78190081E7], [1.72880436E12, 5.160423603333333E7], [1.72880214E12, 4.837683721666667E7], [1.72879548E12, 1.9703857266666666E7], [1.7287977E12, 1.9348198166666668E7], [1.72879668E12, 1.9286083033333335E7], [1.72879992E12, 3.7853534233333334E7], [1.7287989E12, 3.65484917E7], [1.72880094E12, 4.8651561E7], [1.72880316E12, 5.333759263333333E7], [1.7288013E12, 4.807427028333333E7], [1.72880352E12, 5.346930265E7], [1.72879566E12, 1.9348210066666666E7], [1.72879788E12, 1.1918631016666668E7], [1.72879686E12, 2.025322305E7], [1.72879908E12, 3.798724313333333E7], [1.7288001E12, 3.68337033E7], [1.72880232E12, 4.845994678333333E7], [1.72880334E12, 5.33541625E7], [1.72879584E12, 2.02057706E7], [1.7288037E12, 5.1746153766666666E7], [1.72879806E12, 3.62777617E7], [1.72879704E12, 1.9448231E7], [1.72880148E12, 4.565146936666667E7], [1.72879926E12, 3.60760386E7], [1.7288025E12, 4.7574395166666664E7], [1.72880028E12, 3.710512515E7], [1.72879602E12, 2.012927465E7], [1.72879824E12, 3.59596742E7], [1.72880064E12, 4.869095725E7], [1.728795E12, 6740249.633333334], [1.72879722E12, 1.993240435E7], [1.72879944E12, 3.663781715E7], [1.72880166E12, 4.734700736666667E7], [1.72880388E12, 5.404739871666667E7], [1.7287962E12, 1.9549150566666666E7], [1.72879842E12, 3.6917178516666666E7], [1.72880046E12, 3.447796446666667E7], [1.72880268E12, 2.4596584866666667E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72879902E12, 0.0], [1.72879578E12, 0.0], [1.728798E12, 0.0], [1.72880022E12, 0.0], [1.72880244E12, 0.0], [1.72880346E12, 0.0], [1.72880124E12, 0.0], [1.72879698E12, 0.0], [1.7287992E12, 0.0], [1.7288016E12, 0.0], [1.72879596E12, 0.0], [1.72879818E12, 0.0], [1.72880262E12, 0.0], [1.72879716E12, 0.0], [1.7288004E12, 0.0], [1.72879938E12, 0.0], [1.72880142E12, 0.0], [1.72880364E12, 0.0], [1.72879512E12, 0.0], [1.72880178E12, 0.0], [1.728804E12, 0.0], [1.72879614E12, 0.0], [1.72879836E12, 0.0], [1.72879734E12, 0.0], [1.72879956E12, 0.0], [1.72880058E12, 0.0], [1.7288028E12, 0.0], [1.72880382E12, 0.0], [1.72879632E12, 0.0], [1.7287953E12, 0.0], [1.72879854E12, 0.0], [1.72879752E12, 0.0], [1.72880196E12, 0.0], [1.72880418E12, 0.0], [1.72879974E12, 0.0], [1.72880298E12, 0.0], [1.72880076E12, 0.0], [1.7287965E12, 0.0], [1.72879872E12, 0.0], [1.72880274E12, 0.0], [1.7287971E12, 0.0], [1.72879932E12, 0.0], [1.72879608E12, 0.0], [1.72880052E12, 0.0], [1.72879506E12, 0.0], [1.7287983E12, 0.0], [1.72880154E12, 0.0], [1.72880376E12, 0.0], [1.72879728E12, 0.0], [1.7287995E12, 0.0], [1.72879626E12, 0.0], [1.72879848E12, 0.0], [1.7288007E12, 0.0], [1.72880292E12, 0.0], [1.72880394E12, 0.0], [1.72880172E12, 0.0], [1.72879524E12, 0.0], [1.72879746E12, 0.0], [1.72879968E12, 0.0], [1.72879644E12, 0.0], [1.72879986E12, 0.0], [1.72880208E12, 0.0], [1.7288031E12, 0.0], [1.72879866E12, 0.0], [1.72879764E12, 0.0], [1.72880088E12, 0.0], [1.72880412E12, 0.0], [1.72879542E12, 0.0], [1.7288019E12, 0.0], [1.72880226E12, 0.0], [1.7287956E12, 0.0], [1.72879884E12, 0.0], [1.72879662E12, 0.0], [1.72880004E12, 0.0], [1.72880448E12, 0.0], [1.72879782E12, 0.0], [1.72880106E12, 0.0], [1.72880328E12, 0.0], [1.7288043E12, 0.0], [1.7287968E12, 0.0], [1.7287974E12, 0.0], [1.72880304E12, 0.0], [1.72880082E12, 0.0], [1.72880406E12, 0.0], [1.72879518E12, 0.0], [1.72879962E12, 0.0], [1.72880184E12, 0.0], [1.72879536E12, 0.0], [1.72879638E12, 0.0], [1.7287986E12, 0.0], [1.72880286E12, 0.0], [1.72880322E12, 0.0], [1.72879758E12, 0.0], [1.7287998E12, 0.0], [1.728801E12, 0.0], [1.72879656E12, 0.0], [1.72879554E12, 0.0], [1.72879878E12, 0.0], [1.72880202E12, 0.0], [1.72880424E12, 0.0], [1.72879776E12, 0.0], [1.72880016E12, 0.0], [1.72879674E12, 0.0], [1.72879896E12, 0.0], [1.72880118E12, 0.0], [1.7288034E12, 0.0], [1.72879572E12, 0.0], [1.72879794E12, 0.0], [1.72879998E12, 0.0], [1.7288022E12, 0.0], [1.72880442E12, 0.0], [1.72879692E12, 0.0], [1.72880034E12, 0.0], [1.72880256E12, 0.0], [1.72879914E12, 0.0], [1.72880358E12, 0.0], [1.72880136E12, 0.0], [1.7287959E12, 0.0], [1.72879812E12, 0.0], [1.72880238E12, 0.0], [1.72880112E12, 0.0], [1.72880436E12, 0.0], [1.72880214E12, 0.0], [1.72879548E12, 0.0], [1.7287977E12, 0.0], [1.72879668E12, 0.0], [1.72879992E12, 0.0], [1.7287989E12, 0.0], [1.72880094E12, 0.0], [1.72880316E12, 0.0], [1.7288013E12, 0.0], [1.72880352E12, 0.0], [1.72879566E12, 0.0], [1.72879788E12, 0.0], [1.72879686E12, 0.0], [1.72879908E12, 0.0], [1.7288001E12, 0.0], [1.72880232E12, 0.0], [1.72880334E12, 0.0], [1.72879584E12, 0.0], [1.7288037E12, 0.0], [1.72879806E12, 0.0], [1.72879704E12, 0.0], [1.72880148E12, 0.0], [1.72879926E12, 0.0], [1.7288025E12, 0.0], [1.72880028E12, 0.0], [1.72879602E12, 0.0], [1.72879824E12, 0.0], [1.72880064E12, 0.0], [1.728795E12, 0.0], [1.72879722E12, 0.0], [1.72879944E12, 0.0], [1.72880166E12, 0.0], [1.72880388E12, 0.0], [1.7287962E12, 0.0], [1.72879842E12, 0.0], [1.72880046E12, 0.0], [1.72880268E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72880448E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 566.0341614906833, "minX": 1.728795E12, "maxY": 937.5321637426894, "series": [{"data": [[1.72879902E12, 623.3176470588238], [1.72879578E12, 605.9469696969697], [1.728798E12, 631.4901185770758], [1.72880022E12, 649.6395663956641], [1.72880244E12, 707.8969276511395], [1.72880346E12, 903.838221381267], [1.72880124E12, 701.611111111111], [1.72879698E12, 604.5696202531643], [1.7287992E12, 684.6690340909087], [1.7288016E12, 718.9810189810191], [1.72879596E12, 649.9597855227887], [1.72879818E12, 625.9084967320264], [1.72880262E12, 715.1045406546989], [1.72879716E12, 626.6062176165801], [1.7288004E12, 667.1386962552017], [1.72879938E12, 621.8798449612394], [1.72880142E12, 759.6132771338247], [1.72880364E12, 865.9016245487365], [1.72879512E12, 599.8600000000002], [1.72880178E12, 692.775628626692], [1.728804E12, 832.9478260869568], [1.72879614E12, 657.6346153846149], [1.72879836E12, 649.682432432432], [1.72879734E12, 675.6843575418998], [1.72879956E12, 658.9560439560433], [1.72880058E12, 675.1436619718311], [1.7288028E12, 864.1761517615182], [1.72880382E12, 937.5321637426894], [1.72879632E12, 609.7984693877552], [1.7287953E12, 631.7958115183246], [1.72879854E12, 631.5913272010503], [1.72879752E12, 658.3780821917813], [1.72880196E12, 682.7000946073802], [1.72880418E12, 844.1076787290388], [1.72879974E12, 611.9177377892028], [1.72880298E12, 827.0347222222226], [1.72880076E12, 745.7283057851242], [1.7287965E12, 629.6701846965706], [1.72879872E12, 656.9809004092774], [1.72880274E12, 819.133479212254], [1.7287971E12, 607.3520408163264], [1.72879932E12, 660.35448275862], [1.72879608E12, 679.8551136363635], [1.72880052E12, 670.2375249501001], [1.72879506E12, 569.5971563981036], [1.7287983E12, 642.4683714670258], [1.72880154E12, 694.0269749518304], [1.72880376E12, 844.8514588859417], [1.72879728E12, 628.4895287958118], [1.7287995E12, 648.9040540540545], [1.72879626E12, 627.971502590673], [1.72879848E12, 644.679144385026], [1.7288007E12, 714.6238805970142], [1.72880292E12, 820.1164965986392], [1.72880394E12, 905.4646559849202], [1.72880172E12, 704.7390457643621], [1.72879524E12, 620.0518134715023], [1.72879746E12, 597.654228855721], [1.72879968E12, 613.991048593351], [1.72879644E12, 643.4650537634408], [1.72879986E12, 641.9570469798658], [1.72880208E12, 685.051674641148], [1.7288031E12, 895.8507462686562], [1.72879866E12, 698.7222222222224], [1.72879764E12, 627.8307291666665], [1.72880088E12, 754.5899581589962], [1.72880412E12, 873.7872727272731], [1.72879542E12, 617.2699228791773], [1.7288019E12, 723.3983903420524], [1.72880226E12, 734.9557613168723], [1.7287956E12, 578.4357142857149], [1.72879884E12, 641.9331550802136], [1.72879662E12, 577.4602409638553], [1.72880004E12, 657.2376373626377], [1.72880448E12, 698.6163265306121], [1.72879782E12, 586.1755952380951], [1.72880106E12, 756.5673684210534], [1.72880328E12, 849.5150709219862], [1.7288043E12, 914.7062737642589], [1.7287968E12, 618.7098445595851], [1.7287974E12, 666.6815642458101], [1.72880304E12, 868.8459459459451], [1.72880082E12, 702.4589041095888], [1.72880406E12, 858.9686379928314], [1.72879518E12, 604.9847715736041], [1.72879962E12, 641.0466045272968], [1.72880184E12, 704.2276264591433], [1.72879536E12, 566.0341614906833], [1.72879638E12, 654.9891304347827], [1.7287986E12, 621.1718346253234], [1.72880286E12, 881.0110395584168], [1.72880322E12, 879.2910583941599], [1.72879758E12, 650.1222826086955], [1.7287998E12, 669.768055555555], [1.728801E12, 699.9844660194182], [1.72879656E12, 600.358208955224], [1.72879554E12, 662.2888888888895], [1.72879878E12, 658.3081155433293], [1.72880202E12, 739.8766700924972], [1.72880424E12, 865.6999101527409], [1.72879776E12, 604.0381679389316], [1.72880016E12, 665.0666666666665], [1.72879674E12, 658.6311475409831], [1.72879896E12, 610.4020356234091], [1.72880118E12, 710.3475247524754], [1.7288034E12, 884.511520737328], [1.72879572E12, 656.7418478260869], [1.72879794E12, 694.21408045977], [1.72879998E12, 652.0258855585835], [1.7288022E12, 737.1653061224483], [1.72880442E12, 732.1355013550133], [1.72879692E12, 608.0558375634524], [1.72880034E12, 670.781337047353], [1.72880256E12, 730.4433198380567], [1.72879914E12, 655.91095890411], [1.72880358E12, 850.5159010600711], [1.72880136E12, 700.8257059396302], [1.7287959E12, 608.7066326530614], [1.72879812E12, 644.5583892617447], [1.72880238E12, 679.2118644067791], [1.72880112E12, 694.8509615384625], [1.72880436E12, 879.765567765568], [1.72880214E12, 708.5821042281223], [1.72879548E12, 613.064102564103], [1.7287977E12, 574.3253588516744], [1.72879668E12, 593.7320099255581], [1.72879992E12, 679.281690140845], [1.7287989E12, 664.9751381215464], [1.72880094E12, 738.1123711340206], [1.72880316E12, 886.3404452690166], [1.7288013E12, 714.3984142715548], [1.72880352E12, 823.8418803418795], [1.72879566E12, 672.3361581920905], [1.72879788E12, 626.9053497942392], [1.72879686E12, 642.6880000000001], [1.72879908E12, 682.852899575672], [1.7288001E12, 658.193460490464], [1.72880232E12, 721.6995024875613], [1.72880334E12, 890.8168362627196], [1.72879584E12, 629.2084432717681], [1.7288037E12, 911.3203422053225], [1.72879806E12, 642.4490616621985], [1.72879704E12, 626.0751295336789], [1.72880148E12, 723.5993975903622], [1.72879926E12, 662.8113730929266], [1.7288025E12, 745.0124095139603], [1.72880028E12, 648.3116531165305], [1.72879602E12, 665.5472222222218], [1.72879824E12, 671.8659217877093], [1.72880064E12, 692.138623326959], [1.728795E12, 630.5641025641027], [1.72879722E12, 577.8203883495149], [1.72879944E12, 653.3538251366123], [1.72880166E12, 744.1654526534869], [1.72880388E12, 883.6452205882357], [1.7287962E12, 617.4300518134712], [1.72879842E12, 608.6704834605597], [1.72880046E12, 660.5606060606057], [1.72880268E12, 650.5569105691058]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72880448E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 386.89099526066326, "minX": 1.728795E12, "maxY": 654.0984405458099, "series": [{"data": [[1.72879902E12, 433.66274509803947], [1.72879578E12, 417.94191919191945], [1.728798E12, 446.26613965744383], [1.72880022E12, 449.92682926829343], [1.72880244E12, 484.76313181367675], [1.72880346E12, 624.8760643330179], [1.72880124E12, 488.13157894736855], [1.72879698E12, 424.7063291139242], [1.7287992E12, 479.0340909090913], [1.7288016E12, 500.7652347652347], [1.72879596E12, 451.2815013404825], [1.72879818E12, 433.6104575163403], [1.72880262E12, 496.9028511087647], [1.72879716E12, 434.8186528497407], [1.7288004E12, 466.9348127600549], [1.72879938E12, 434.90826873385026], [1.72880142E12, 529.2170706006319], [1.72880364E12, 598.3086642599282], [1.72879512E12, 418.06500000000005], [1.72880178E12, 474.8781431334623], [1.728804E12, 578.7808695652178], [1.72879614E12, 458.6318681318681], [1.72879836E12, 450.9081081081086], [1.72879734E12, 464.6983240223465], [1.72879956E12, 452.71978021978026], [1.72880058E12, 469.0244131455398], [1.7288028E12, 608.73803071364], [1.72880382E12, 654.0984405458099], [1.72879632E12, 428.06377551020387], [1.7287953E12, 444.4973821989528], [1.72879854E12, 443.521681997372], [1.72879752E12, 462.1205479452055], [1.72880196E12, 471.6310312204351], [1.72880418E12, 587.3689320388356], [1.72879974E12, 427.6143958868898], [1.72880298E12, 577.2144097222227], [1.72880076E12, 521.659090909091], [1.7287965E12, 436.7730870712399], [1.72879872E12, 460.29467939972716], [1.72880274E12, 571.8227571115974], [1.7287971E12, 419.53061224489807], [1.72879932E12, 460.0579310344829], [1.72879608E12, 467.62215909090924], [1.72880052E12, 469.7764471057885], [1.72879506E12, 386.89099526066326], [1.7287983E12, 447.92193808882894], [1.72880154E12, 480.9518304431604], [1.72880376E12, 585.5879752431472], [1.72879728E12, 434.20680628272237], [1.7287995E12, 453.3243243243243], [1.72879626E12, 429.26943005181346], [1.72879848E12, 453.24598930481267], [1.7288007E12, 499.4597014925372], [1.72880292E12, 569.0807823129247], [1.72880394E12, 626.8011310084826], [1.72880172E12, 495.83252190847134], [1.72879524E12, 429.6891191709844], [1.72879746E12, 417.74129353233866], [1.72879968E12, 428.19820971867006], [1.72879644E12, 440.2338709677423], [1.72879986E12, 448.4724832214764], [1.72880208E12, 482.16267942583767], [1.7288031E12, 617.4104477611938], [1.72879866E12, 489.35964912280684], [1.72879764E12, 431.3776041666667], [1.72880088E12, 524.8535564853554], [1.72880412E12, 603.8818181818187], [1.72879542E12, 429.02313624678675], [1.7288019E12, 505.7796780684105], [1.72880226E12, 511.04835390946533], [1.7287956E12, 404.1214285714284], [1.72879884E12, 447.77406417112365], [1.72879662E12, 407.27469879518077], [1.72880004E12, 455.3173076923078], [1.72880448E12, 481.2408163265305], [1.72879782E12, 405.42261904761904], [1.72880106E12, 522.5368421052636], [1.72880328E12, 593.8838652482268], [1.7288043E12, 630.945817490495], [1.7287968E12, 426.4222797927461], [1.7287974E12, 459.4944134078209], [1.72880304E12, 605.4423423423427], [1.72880082E12, 486.48727984344424], [1.72880406E12, 600.9829749103952], [1.72879518E12, 416.5583756345178], [1.72879962E12, 445.8482023968043], [1.72880184E12, 489.9114785992219], [1.72879536E12, 392.32298136645954], [1.72879638E12, 453.88043478260875], [1.7287986E12, 435.53488372092994], [1.72880286E12, 607.968721251151], [1.72880322E12, 615.4224452554733], [1.72879758E12, 454.4048913043482], [1.7287998E12, 468.34861111111087], [1.728801E12, 484.2165048543689], [1.72879656E12, 409.5024875621894], [1.72879554E12, 457.78333333333336], [1.72879878E12, 457.8225584594221], [1.72880202E12, 516.7060637204528], [1.72880424E12, 602.0422282120395], [1.72879776E12, 426.3027989821882], [1.72880016E12, 463.7375000000003], [1.72879674E12, 462.80327868852424], [1.72879896E12, 422.8702290076339], [1.72880118E12, 500.5168316831682], [1.7288034E12, 615.2866359447021], [1.72879572E12, 453.78532608695656], [1.72879794E12, 486.2298850574715], [1.72879998E12, 453.2820163487739], [1.7288022E12, 515.001020408164], [1.72880442E12, 510.93495934959327], [1.72879692E12, 418.86548223350263], [1.72880034E12, 464.9052924791082], [1.72880256E12, 505.2297570850202], [1.72879914E12, 458.493150684932], [1.72880358E12, 593.968197879858], [1.72880136E12, 483.5939629990264], [1.7287959E12, 420.5229591836736], [1.72879812E12, 443.2939597315437], [1.72880238E12, 472.91713747645935], [1.72880112E12, 481.20096153846185], [1.72880436E12, 613.5824175824168], [1.72880214E12, 493.568338249754], [1.72879548E12, 424.3179487179485], [1.7287977E12, 397.6794258373207], [1.72879668E12, 412.39454094292813], [1.72879992E12, 467.9845070422532], [1.7287989E12, 464.403314917127], [1.72880094E12, 515.3680412371131], [1.72880316E12, 611.0278293135435], [1.7288013E12, 496.3706640237861], [1.72880352E12, 572.7965811965806], [1.72879566E12, 469.90395480226], [1.72879788E12, 436.82304526748953], [1.72879686E12, 442.85066666666677], [1.72879908E12, 471.09476661951874], [1.7288001E12, 460.2602179836511], [1.72880232E12, 504.0059701492533], [1.72880334E12, 616.282146160961], [1.72879584E12, 432.28232189973625], [1.7288037E12, 636.4610266159681], [1.72879806E12, 448.19168900804283], [1.72879704E12, 435.6606217616581], [1.72880148E12, 508.130522088354], [1.72879926E12, 462.17059639389703], [1.7288025E12, 519.7238883143742], [1.72880028E12, 449.3875338753393], [1.72879602E12, 457.6333333333335], [1.72879824E12, 470.67039106145245], [1.72880064E12, 481.4885277246654], [1.728795E12, 428.1452991452992], [1.72879722E12, 396.5922330097087], [1.72879944E12, 456.7581967213112], [1.72880166E12, 519.2258064516114], [1.72880388E12, 612.4540441176463], [1.7287962E12, 428.6502590673576], [1.72879842E12, 422.60432569974574], [1.72880046E12, 454.4863636363635], [1.72880268E12, 453.04878048780506]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72880448E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.728795E12, "maxY": 4.9E-324, "series": [{"data": [[1.72879902E12, 0.0], [1.72879578E12, 0.0], [1.728798E12, 0.0], [1.72880022E12, 0.0], [1.72880244E12, 0.0], [1.72880346E12, 0.0], [1.72880124E12, 0.0], [1.72879698E12, 0.0], [1.7287992E12, 0.0], [1.7288016E12, 0.0], [1.72879596E12, 0.0], [1.72879818E12, 0.0], [1.72880262E12, 0.0], [1.72879716E12, 0.0], [1.7288004E12, 0.0], [1.72879938E12, 0.0], [1.72880142E12, 0.0], [1.72880364E12, 0.0], [1.72879512E12, 0.0], [1.72880178E12, 0.0], [1.728804E12, 0.0], [1.72879614E12, 0.0], [1.72879836E12, 0.0], [1.72879734E12, 0.0], [1.72879956E12, 0.0], [1.72880058E12, 0.0], [1.7288028E12, 0.0], [1.72880382E12, 0.0], [1.72879632E12, 0.0], [1.7287953E12, 0.0], [1.72879854E12, 0.0], [1.72879752E12, 0.0], [1.72880196E12, 0.0], [1.72880418E12, 0.0], [1.72879974E12, 0.0], [1.72880298E12, 0.0], [1.72880076E12, 0.0], [1.7287965E12, 0.0], [1.72879872E12, 0.0], [1.72880274E12, 0.0], [1.7287971E12, 0.0], [1.72879932E12, 0.0], [1.72879608E12, 0.0], [1.72880052E12, 0.0], [1.72879506E12, 0.0], [1.7287983E12, 0.0], [1.72880154E12, 0.0], [1.72880376E12, 0.0], [1.72879728E12, 0.0], [1.7287995E12, 0.0], [1.72879626E12, 0.0], [1.72879848E12, 0.0], [1.7288007E12, 0.0], [1.72880292E12, 0.0], [1.72880394E12, 0.0], [1.72880172E12, 0.0], [1.72879524E12, 0.0], [1.72879746E12, 0.0], [1.72879968E12, 0.0], [1.72879644E12, 0.0], [1.72879986E12, 0.0], [1.72880208E12, 0.0], [1.7288031E12, 0.0], [1.72879866E12, 0.0], [1.72879764E12, 0.0], [1.72880088E12, 0.0], [1.72880412E12, 0.0], [1.72879542E12, 0.0], [1.7288019E12, 0.0], [1.72880226E12, 0.0], [1.7287956E12, 0.0], [1.72879884E12, 0.0], [1.72879662E12, 0.0], [1.72880004E12, 0.0], [1.72880448E12, 0.0], [1.72879782E12, 0.0], [1.72880106E12, 0.0], [1.72880328E12, 0.0], [1.7288043E12, 0.0], [1.7287968E12, 0.0], [1.7287974E12, 0.0], [1.72880304E12, 0.0], [1.72880082E12, 0.0], [1.72880406E12, 0.0], [1.72879518E12, 0.0], [1.72879962E12, 0.0], [1.72880184E12, 0.0], [1.72879536E12, 0.0], [1.72879638E12, 0.0], [1.7287986E12, 0.0], [1.72880286E12, 0.0], [1.72880322E12, 0.0], [1.72879758E12, 0.0], [1.7287998E12, 0.0], [1.728801E12, 0.0], [1.72879656E12, 0.0], [1.72879554E12, 0.0], [1.72879878E12, 0.0], [1.72880202E12, 0.0], [1.72880424E12, 0.0], [1.72879776E12, 0.0], [1.72880016E12, 0.0], [1.72879674E12, 0.0], [1.72879896E12, 0.0], [1.72880118E12, 0.0], [1.7288034E12, 0.0], [1.72879572E12, 0.0], [1.72879794E12, 0.0], [1.72879998E12, 0.0], [1.7288022E12, 0.0], [1.72880442E12, 0.0], [1.72879692E12, 0.0], [1.72880034E12, 0.0], [1.72880256E12, 0.0], [1.72879914E12, 0.0], [1.72880358E12, 0.0], [1.72880136E12, 0.0], [1.7287959E12, 0.0], [1.72879812E12, 0.0], [1.72880238E12, 0.0], [1.72880112E12, 0.0], [1.72880436E12, 0.0], [1.72880214E12, 0.0], [1.72879548E12, 0.0], [1.7287977E12, 0.0], [1.72879668E12, 0.0], [1.72879992E12, 0.0], [1.7287989E12, 0.0], [1.72880094E12, 0.0], [1.72880316E12, 0.0], [1.7288013E12, 0.0], [1.72880352E12, 0.0], [1.72879566E12, 0.0], [1.72879788E12, 0.0], [1.72879686E12, 0.0], [1.72879908E12, 0.0], [1.7288001E12, 0.0], [1.72880232E12, 0.0], [1.72880334E12, 0.0], [1.72879584E12, 0.0], [1.7288037E12, 0.0], [1.72879806E12, 0.0], [1.72879704E12, 0.0], [1.72880148E12, 0.0], [1.72879926E12, 0.0], [1.7288025E12, 0.0], [1.72880028E12, 0.0], [1.72879602E12, 0.0], [1.72879824E12, 0.0], [1.72880064E12, 0.0], [1.728795E12, 0.0], [1.72879722E12, 0.0], [1.72879944E12, 0.0], [1.72880166E12, 0.0], [1.72880388E12, 0.0], [1.7287962E12, 0.0], [1.72879842E12, 0.0], [1.72880046E12, 0.0], [1.72880268E12, 0.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72880448E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 24.0, "minX": 1.728795E12, "maxY": 4085.0, "series": [{"data": [[1.72879902E12, 2315.0], [1.72879578E12, 2359.0], [1.728798E12, 2816.0], [1.72880022E12, 2763.0], [1.72880244E12, 3037.0], [1.72880346E12, 4051.0], [1.72880124E12, 3099.0], [1.72879698E12, 2170.0], [1.7287992E12, 2660.0], [1.7288016E12, 3171.0], [1.72879596E12, 2627.0], [1.72879818E12, 2505.0], [1.72880262E12, 2888.0], [1.72879716E12, 2179.0], [1.7288004E12, 2993.0], [1.72879938E12, 2753.0], [1.72880142E12, 3336.0], [1.72880364E12, 3203.0], [1.72879512E12, 2032.0], [1.72880178E12, 2930.0], [1.728804E12, 3508.0], [1.72879614E12, 2183.0], [1.72879836E12, 2547.0], [1.72879734E12, 2400.0], [1.72879956E12, 2403.0], [1.72880058E12, 2606.0], [1.7288028E12, 3970.0], [1.72880382E12, 4085.0], [1.72879632E12, 2424.0], [1.7287953E12, 1841.0], [1.72879854E12, 2839.0], [1.72879752E12, 2594.0], [1.72880196E12, 2885.0], [1.72880418E12, 3705.0], [1.72879974E12, 2454.0], [1.72880298E12, 3295.0], [1.72880076E12, 2809.0], [1.7287965E12, 2639.0], [1.72879872E12, 2471.0], [1.72880274E12, 3566.0], [1.7287971E12, 2084.0], [1.72879932E12, 2325.0], [1.72879608E12, 1876.0], [1.72880052E12, 2875.0], [1.72879506E12, 2039.0], [1.7287983E12, 2582.0], [1.72880154E12, 2632.0], [1.72880376E12, 3975.0], [1.72879728E12, 2257.0], [1.7287995E12, 2592.0], [1.72879626E12, 2619.0], [1.72879848E12, 2714.0], [1.7288007E12, 2516.0], [1.72880292E12, 3333.0], [1.72880394E12, 4083.0], [1.72880172E12, 2607.0], [1.72879524E12, 2123.0], [1.72879746E12, 2278.0], [1.72879968E12, 2457.0], [1.72879644E12, 2319.0], [1.72879986E12, 2354.0], [1.72880208E12, 3061.0], [1.7288031E12, 3637.0], [1.72879866E12, 2499.0], [1.72879764E12, 2053.0], [1.72880088E12, 3071.0], [1.72880412E12, 3606.0], [1.72879542E12, 2040.0], [1.7288019E12, 2809.0], [1.72880226E12, 2727.0], [1.7287956E12, 2429.0], [1.72879884E12, 2603.0], [1.72879662E12, 2080.0], [1.72880004E12, 2519.0], [1.72880448E12, 2248.0], [1.72879782E12, 2199.0], [1.72880106E12, 3220.0], [1.72880328E12, 3648.0], [1.7288043E12, 3494.0], [1.7287968E12, 2543.0], [1.7287974E12, 2216.0], [1.72880304E12, 3684.0], [1.72880082E12, 3243.0], [1.72880406E12, 3858.0], [1.72879518E12, 2588.0], [1.72879962E12, 2291.0], [1.72880184E12, 3056.0], [1.72879536E12, 2210.0], [1.72879638E12, 2636.0], [1.7287986E12, 2622.0], [1.72880286E12, 3582.0], [1.72880322E12, 3354.0], [1.72879758E12, 2420.0], [1.7287998E12, 2610.0], [1.728801E12, 3472.0], [1.72879656E12, 2528.0], [1.72879554E12, 1947.0], [1.72879878E12, 2745.0], [1.72880202E12, 2713.0], [1.72880424E12, 3834.0], [1.72879776E12, 2419.0], [1.72880016E12, 2803.0], [1.72879674E12, 2136.0], [1.72879896E12, 2565.0], [1.72880118E12, 2779.0], [1.7288034E12, 3813.0], [1.72879572E12, 2159.0], [1.72879794E12, 2409.0], [1.72879998E12, 2741.0], [1.7288022E12, 2809.0], [1.72880442E12, 3791.0], [1.72879692E12, 2287.0], [1.72880034E12, 2481.0], [1.72880256E12, 3002.0], [1.72879914E12, 2530.0], [1.72880358E12, 4033.0], [1.72880136E12, 2651.0], [1.7287959E12, 2356.0], [1.72879812E12, 2442.0], [1.72880238E12, 3004.0], [1.72880112E12, 2953.0], [1.72880436E12, 3889.0], [1.72880214E12, 3016.0], [1.72879548E12, 2287.0], [1.7287977E12, 2174.0], [1.72879668E12, 2422.0], [1.72879992E12, 2470.0], [1.7287989E12, 2513.0], [1.72880094E12, 2652.0], [1.72880316E12, 3975.0], [1.7288013E12, 2778.0], [1.72880352E12, 3366.0], [1.72879566E12, 2052.0], [1.72879788E12, 2003.0], [1.72879686E12, 2596.0], [1.72879908E12, 2437.0], [1.7288001E12, 2325.0], [1.72880232E12, 3043.0], [1.72880334E12, 3680.0], [1.72879584E12, 2498.0], [1.7288037E12, 3839.0], [1.72879806E12, 2504.0], [1.72879704E12, 2223.0], [1.72880148E12, 3008.0], [1.72879926E12, 2274.0], [1.7288025E12, 2787.0], [1.72880028E12, 2628.0], [1.72879602E12, 2512.0], [1.72879824E12, 2595.0], [1.72880064E12, 2566.0], [1.728795E12, 2118.0], [1.72879722E12, 1970.0], [1.72879944E12, 2493.0], [1.72880166E12, 3126.0], [1.72880388E12, 3247.0], [1.7287962E12, 2136.0], [1.72879842E12, 2424.0], [1.72880046E12, 2618.0], [1.72880268E12, 2533.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72879902E12, 1360.8], [1.72879578E12, 1337.3], [1.728798E12, 1392.0], [1.72880022E12, 1381.4], [1.72880244E12, 1568.0], [1.72880346E12, 2057.4], [1.72880124E12, 1543.2000000000003], [1.72879698E12, 1271.4], [1.7287992E12, 1455.5], [1.7288016E12, 1559.8000000000002], [1.72879596E12, 1411.2000000000003], [1.72879818E12, 1343.1999999999998], [1.72880262E12, 1516.2], [1.72879716E12, 1379.2], [1.7288004E12, 1421.4000000000012], [1.72879938E12, 1354.5], [1.72880142E12, 1670.0], [1.72880364E12, 1913.0], [1.72879512E12, 1314.0000000000002], [1.72880178E12, 1532.0], [1.728804E12, 1791.3000000000006], [1.72879614E12, 1427.0], [1.72879836E12, 1441.5], [1.72879734E12, 1417.9], [1.72879956E12, 1452.0000000000002], [1.72880058E12, 1543.8], [1.7288028E12, 1923.0], [1.72880382E12, 1988.5000000000005], [1.72879632E12, 1338.0], [1.7287953E12, 1329.2000000000003], [1.72879854E12, 1367.8000000000018], [1.72879752E12, 1321.4], [1.72880196E12, 1540.0], [1.72880418E12, 1868.0], [1.72879974E12, 1352.1000000000004], [1.72880298E12, 1903.8000000000002], [1.72880076E12, 1571.1], [1.7287965E12, 1295.0], [1.72879872E12, 1367.0], [1.72880274E12, 1793.0], [1.7287971E12, 1350.4999999999998], [1.72879932E12, 1409.6], [1.72879608E12, 1319.7], [1.72880052E12, 1457.4], [1.72879506E12, 1290.6], [1.7287983E12, 1334.6], [1.72880154E12, 1567.3000000000002], [1.72880376E12, 1870.0], [1.72879728E12, 1304.8999999999999], [1.7287995E12, 1381.6999999999998], [1.72879626E12, 1365.8000000000002], [1.72879848E12, 1357.1], [1.7288007E12, 1558.7999999999995], [1.72880292E12, 1783.1999999999998], [1.72880394E12, 1937.8000000000002], [1.72880172E12, 1526.0], [1.72879524E12, 1326.6], [1.72879746E12, 1297.0], [1.72879968E12, 1309.0], [1.72879644E12, 1331.6999999999998], [1.72879986E12, 1367.0], [1.72880208E12, 1503.4], [1.7288031E12, 1929.4], [1.72879866E12, 1427.0], [1.72879764E12, 1369.5], [1.72880088E12, 1664.0], [1.72880412E12, 1926.5], [1.72879542E12, 1311.0], [1.7288019E12, 1562.0], [1.72880226E12, 1597.2000000000003], [1.7287956E12, 1277.6000000000001], [1.72879884E12, 1421.4], [1.72879662E12, 1253.6000000000004], [1.72880004E12, 1437.1], [1.72880448E12, 1512.8], [1.72879782E12, 1237.9], [1.72880106E12, 1576.9], [1.72880328E12, 1857.2], [1.7288043E12, 2022.4000000000005], [1.7287968E12, 1377.0], [1.7287974E12, 1432.3000000000002], [1.72880304E12, 1909.0], [1.72880082E12, 1538.7], [1.72880406E12, 1894.0], [1.72879518E12, 1395.8000000000002], [1.72879962E12, 1348.4], [1.72880184E12, 1554.1], [1.72879536E12, 1268.2999999999997], [1.72879638E12, 1350.7000000000003], [1.7287986E12, 1356.0], [1.72880286E12, 1953.8000000000002], [1.72880322E12, 1915.6000000000001], [1.72879758E12, 1306.9], [1.7287998E12, 1431.1999999999998], [1.728801E12, 1514.9], [1.72879656E12, 1369.0], [1.72879554E12, 1405.8000000000002], [1.72879878E12, 1417.0], [1.72880202E12, 1627.6000000000004], [1.72880424E12, 1926.6000000000004], [1.72879776E12, 1337.2], [1.72880016E12, 1424.0], [1.72879674E12, 1414.3], [1.72879896E12, 1355.6000000000001], [1.72880118E12, 1569.3999999999999], [1.7288034E12, 1857.1999999999998], [1.72879572E12, 1325.0], [1.72879794E12, 1529.8000000000004], [1.72879998E12, 1419.0], [1.7288022E12, 1555.2999999999997], [1.72880442E12, 1651.2], [1.72879692E12, 1405.0], [1.72880034E12, 1402.3000000000002], [1.72880256E12, 1580.1], [1.72879914E12, 1374.8], [1.72880358E12, 1892.2000000000003], [1.72880136E12, 1530.6000000000001], [1.7287959E12, 1325.7], [1.72879812E12, 1430.6], [1.72880238E12, 1498.7], [1.72880112E12, 1569.8], [1.72880436E12, 1872.4], [1.72880214E12, 1501.6000000000004], [1.72879548E12, 1341.2000000000003], [1.7287977E12, 1261.2], [1.72879668E12, 1316.2000000000003], [1.72879992E12, 1461.9], [1.7287989E12, 1408.5], [1.72880094E12, 1567.0], [1.72880316E12, 1957.4], [1.7288013E12, 1572.0], [1.72880352E12, 1838.1000000000008], [1.72879566E12, 1373.5], [1.72879788E12, 1326.2], [1.72879686E12, 1335.0000000000002], [1.72879908E12, 1418.2], [1.7288001E12, 1414.5], [1.72880232E12, 1638.7999999999997], [1.72880334E12, 1944.0000000000007], [1.72879584E12, 1328.0], [1.7288037E12, 1893.0], [1.72879806E12, 1390.0], [1.72879704E12, 1368.2000000000003], [1.72880148E12, 1520.3000000000002], [1.72879926E12, 1392.6000000000001], [1.7288025E12, 1589.2], [1.72880028E12, 1441.7000000000003], [1.72879602E12, 1401.200000000001], [1.72879824E12, 1505.8000000000004], [1.72880064E12, 1529.6000000000001], [1.728795E12, 1425.6000000000001], [1.72879722E12, 1238.4999999999998], [1.72879944E12, 1429.2000000000003], [1.72880166E12, 1604.8000000000004], [1.72880388E12, 1926.0000000000002], [1.7287962E12, 1361.8000000000002], [1.72879842E12, 1362.6000000000001], [1.72880046E12, 1442.6], [1.72880268E12, 1357.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72879902E12, 1895.1000000000004], [1.72879578E12, 1918.309999999998], [1.728798E12, 2130.3999999999996], [1.72880022E12, 2199.9100000000003], [1.72880244E12, 2257.0999999999995], [1.72880346E12, 2855.4200000000037], [1.72880124E12, 2225.2000000000007], [1.72879698E12, 1838.2400000000036], [1.7287992E12, 2073.95], [1.7288016E12, 2293.92], [1.72879596E12, 1972.479999999999], [1.72879818E12, 2005.8600000000042], [1.72880262E12, 2362.1999999999966], [1.72879716E12, 2033.4299999999998], [1.7288004E12, 2023.8399999999992], [1.72879938E12, 2065.75], [1.72880142E12, 2325.5], [1.72880364E12, 2807.370000000001], [1.72879512E12, 1951.2300000000016], [1.72880178E12, 2271.3], [1.728804E12, 2794.76], [1.72879614E12, 2057.250000000001], [1.72879836E12, 2207.7200000000003], [1.72879734E12, 2119.720000000002], [1.72879956E12, 2188.430000000001], [1.72880058E12, 2378.379999999999], [1.7288028E12, 2921.2000000000007], [1.72880382E12, 2989.6800000000003], [1.72879632E12, 1874.1999999999982], [1.7287953E12, 1804.1999999999994], [1.72879854E12, 2082.3199999999997], [1.72879752E12, 1927.7599999999984], [1.72880196E12, 2340.720000000001], [1.72880418E12, 2976.0400000000036], [1.72879974E12, 2033.9900000000007], [1.72880298E12, 2777.630000000001], [1.72880076E12, 2319.24], [1.7287965E12, 1892.6], [1.72879872E12, 1991.919999999998], [1.72880274E12, 2857.5500000000034], [1.7287971E12, 1968.1099999999994], [1.72879932E12, 2124.7400000000007], [1.72879608E12, 1797.8799999999999], [1.72880052E12, 2164.4200000000005], [1.72879506E12, 1945.0399999999995], [1.7287983E12, 1931.9199999999983], [1.72880154E12, 2324.22], [1.72880376E12, 2894.4800000000023], [1.72879728E12, 1893.3200000000031], [1.7287995E12, 2064.220000000002], [1.72879626E12, 2012.34], [1.72879848E12, 2004.3599999999997], [1.7288007E12, 2255.159999999999], [1.72880292E12, 2831.580000000001], [1.72880394E12, 3079.919999999996], [1.72880172E12, 2234.240000000001], [1.72879524E12, 2036.5200000000002], [1.72879746E12, 1957.5299999999986], [1.72879968E12, 2070.3699999999976], [1.72879644E12, 2122.349999999998], [1.72879986E12, 2150.539999999998], [1.72880208E12, 2175.0999999999995], [1.7288031E12, 2912.779999999998], [1.72879866E12, 2057.7999999999997], [1.72879764E12, 2004.2499999999995], [1.72880088E12, 2433.889999999999], [1.72880412E12, 2837.83], [1.72879542E12, 1776.4000000000037], [1.7288019E12, 2393.7999999999975], [1.72880226E12, 2469.7799999999997], [1.7287956E12, 1924.4800000000002], [1.72879884E12, 2054.2599999999998], [1.72879662E12, 1663.3199999999995], [1.72880004E12, 2223.2200000000066], [1.72880448E12, 2059.559999999998], [1.72879782E12, 1971.4199999999998], [1.72880106E12, 2505.25], [1.72880328E12, 2855.9400000000005], [1.7288043E12, 2948.8100000000004], [1.7287968E12, 2161.5099999999998], [1.7287974E12, 1999.4100000000026], [1.72880304E12, 2831.680000000001], [1.72880082E12, 2322.049999999999], [1.72880406E12, 2765.519999999997], [1.72879518E12, 2072.5200000000054], [1.72879962E12, 2022.6800000000003], [1.72880184E12, 2305.8100000000004], [1.72879536E12, 1842.4699999999998], [1.72879638E12, 2166.96], [1.7287986E12, 1914.5], [1.72880286E12, 3015.359999999997], [1.72880322E12, 2904.5399999999995], [1.72879758E12, 1912.89], [1.7287998E12, 2139.8999999999996], [1.728801E12, 2266.3299999999967], [1.72879656E12, 2311.799999999999], [1.72879554E12, 1886.73], [1.72879878E12, 2178.8], [1.72880202E12, 2392.3399999999992], [1.72880424E12, 2804.3399999999983], [1.72879776E12, 2027.3000000000004], [1.72880016E12, 2075.709999999998], [1.72879674E12, 1885.9299999999996], [1.72879896E12, 1981.9099999999994], [1.72880118E12, 2309.23], [1.7288034E12, 2831.7400000000043], [1.72879572E12, 2059.11], [1.72879794E12, 2269.0299999999997], [1.72879998E12, 2291.999999999998], [1.7288022E12, 2290.3299999999995], [1.72880442E12, 2605.4400000000005], [1.72879692E12, 1934.200000000001], [1.72880034E12, 2018.62], [1.72880256E12, 2254.76], [1.72879914E12, 2198.2499999999986], [1.72880358E12, 2807.7400000000016], [1.72880136E12, 2163.6400000000003], [1.7287959E12, 1939.8499999999997], [1.72879812E12, 2210.16], [1.72880238E12, 2322.379999999992], [1.72880112E12, 2490.649999999997], [1.72880436E12, 2869.119999999999], [1.72880214E12, 2239.5599999999995], [1.72879548E12, 1872.7499999999982], [1.7287977E12, 1811.8600000000001], [1.72879668E12, 2001.1999999999996], [1.72879992E12, 1970.4499999999998], [1.7287989E12, 2065.75], [1.72880094E12, 2171.1499999999987], [1.72880316E12, 3001.1900000000014], [1.7288013E12, 2398.7], [1.72880352E12, 2842.9299999999994], [1.72879566E12, 1946.2999999999984], [1.72879788E12, 1824.7600000000002], [1.72879686E12, 1922.4800000000012], [1.72879908E12, 2238.7999999999984], [1.7288001E12, 2111.749999999999], [1.72880232E12, 2302.3799999999983], [1.72880334E12, 2900.160000000004], [1.72879584E12, 2091.0], [1.7288037E12, 2852.1100000000006], [1.72879806E12, 1968.53], [1.72879704E12, 2080.13], [1.72880148E12, 2397.24], [1.72879926E12, 2077.319999999999], [1.7288025E12, 2566.199999999998], [1.72880028E12, 2025.7800000000013], [1.72879602E12, 2096.9699999999984], [1.72879824E12, 2104.3], [1.72880064E12, 2256.7699999999995], [1.728795E12, 2105.7599999999993], [1.72879722E12, 1729.44], [1.72879944E12, 2049.1199999999985], [1.72880166E12, 2514.64], [1.72880388E12, 2750.5399999999986], [1.7287962E12, 1756.6599999999992], [1.72879842E12, 2004.8399999999997], [1.72880046E12, 2103.9199999999996], [1.72880268E12, 2017.98]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72879902E12, 1546.3999999999999], [1.72879578E12, 1499.0], [1.728798E12, 1639.0], [1.72880022E12, 1641.05], [1.72880244E12, 1808.5], [1.72880346E12, 2283.899999999999], [1.72880124E12, 1809.65], [1.72879698E12, 1476.1999999999994], [1.7287992E12, 1728.5], [1.7288016E12, 1821.8], [1.72879596E12, 1559.4], [1.72879818E12, 1568.6999999999994], [1.72880262E12, 1827.3999999999987], [1.72879716E12, 1576.8999999999999], [1.7288004E12, 1622.9999999999995], [1.72879938E12, 1545.0], [1.72880142E12, 1925.0], [1.72880364E12, 2217.55], [1.72879512E12, 1582.6499999999996], [1.72880178E12, 1798.25], [1.728804E12, 2127.100000000001], [1.72879614E12, 1611.75], [1.72879836E12, 1704.6999999999982], [1.72879734E12, 1610.8500000000004], [1.72879956E12, 1732.2999999999997], [1.72880058E12, 1845.4999999999995], [1.7288028E12, 2183.399999999999], [1.72880382E12, 2285.25], [1.72879632E12, 1483.2999999999993], [1.7287953E12, 1528.0], [1.72879854E12, 1559.0], [1.72879752E12, 1559.0], [1.72880196E12, 1843.6999999999985], [1.72880418E12, 2168.0999999999995], [1.72879974E12, 1605.1499999999999], [1.72880298E12, 2212.35], [1.72880076E12, 1831.3999999999996], [1.7287965E12, 1569.0], [1.72879872E12, 1602.1999999999998], [1.72880274E12, 2125.25], [1.7287971E12, 1677.3999999999999], [1.72879932E12, 1681.0], [1.72879608E12, 1593.05], [1.72880052E12, 1639.6], [1.72879506E12, 1501.7999999999993], [1.7287983E12, 1546.9999999999993], [1.72880154E12, 1856.1499999999999], [1.72880376E12, 2174.5999999999995], [1.72879728E12, 1621.1499999999994], [1.7287995E12, 1620.3999999999992], [1.72879626E12, 1575.7999999999993], [1.72879848E12, 1575.7499999999998], [1.7288007E12, 1813.1], [1.72880292E12, 2037.2999999999997], [1.72880394E12, 2203.3999999999996], [1.72880172E12, 1783.6], [1.72879524E12, 1577.0999999999995], [1.72879746E12, 1580.099999999999], [1.72879968E12, 1585.85], [1.72879644E12, 1516.05], [1.72879986E12, 1618.0], [1.72880208E12, 1700.3999999999999], [1.7288031E12, 2303.849999999999], [1.72879866E12, 1676.25], [1.72879764E12, 1605.75], [1.72880088E12, 1895.0], [1.72880412E12, 2245.6000000000013], [1.72879542E12, 1491.5], [1.7288019E12, 1794.25], [1.72880226E12, 1866.5999999999985], [1.7287956E12, 1469.8], [1.72879884E12, 1681.4999999999995], [1.72879662E12, 1470.0], [1.72880004E12, 1628.7499999999998], [1.72880448E12, 1687.4999999999993], [1.72879782E12, 1457.5499999999993], [1.72880106E12, 1840.9499999999994], [1.72880328E12, 2123.1], [1.7288043E12, 2373.7], [1.7287968E12, 1567.85], [1.7287974E12, 1636.05], [1.72880304E12, 2220.9], [1.72880082E12, 1757.3999999999996], [1.72880406E12, 2159.2999999999997], [1.72879518E12, 1542.3999999999999], [1.72879962E12, 1572.6], [1.72880184E12, 1815.55], [1.72879536E12, 1457.9999999999993], [1.72879638E12, 1641.1], [1.7287986E12, 1539.5], [1.72880286E12, 2378.3999999999996], [1.72880322E12, 2237.199999999999], [1.72879758E12, 1565.2], [1.7287998E12, 1683.0499999999975], [1.728801E12, 1758.8999999999999], [1.72879656E12, 1632.7499999999989], [1.72879554E12, 1579.6999999999998], [1.72879878E12, 1680.0], [1.72880202E12, 1833.8999999999999], [1.72880424E12, 2235.6], [1.72879776E12, 1514.6999999999987], [1.72880016E12, 1574.349999999999], [1.72879674E12, 1512.8999999999999], [1.72879896E12, 1567.749999999999], [1.72880118E12, 1792.8999999999999], [1.7288034E12, 2188.4], [1.72879572E12, 1655.3000000000002], [1.72879794E12, 1728.75], [1.72879998E12, 1622.0], [1.7288022E12, 1829.0], [1.72880442E12, 1931.7999999999997], [1.72879692E12, 1596.25], [1.72880034E12, 1700.199999999999], [1.72880256E12, 1879.4999999999995], [1.72879914E12, 1601.7999999999997], [1.72880358E12, 2192.3999999999996], [1.72880136E12, 1774.3999999999996], [1.7287959E12, 1560.7999999999997], [1.72879812E12, 1711.6999999999998], [1.72880238E12, 1770.6499999999992], [1.72880112E12, 1807.7999999999997], [1.72880436E12, 2232.7], [1.72880214E12, 1764.1], [1.72879548E12, 1489.25], [1.7287977E12, 1568.1999999999998], [1.72879668E12, 1433.3999999999994], [1.72879992E12, 1663.1499999999996], [1.7287989E12, 1702.0], [1.72880094E12, 1812.0499999999993], [1.72880316E12, 2286.1499999999996], [1.7288013E12, 1853.5], [1.72880352E12, 2282.9500000000007], [1.72879566E12, 1558.25], [1.72879788E12, 1615.5999999999992], [1.72879686E12, 1515.1999999999998], [1.72879908E12, 1763.8000000000002], [1.7288001E12, 1682.75], [1.72880232E12, 1912.3999999999999], [1.72880334E12, 2293.7], [1.72879584E12, 1550.0], [1.7288037E12, 2263.2499999999986], [1.72879806E12, 1621.3999999999996], [1.72879704E12, 1537.4999999999998], [1.72880148E12, 1784.15], [1.72879926E12, 1605.6999999999998], [1.7288025E12, 1834.6], [1.72880028E12, 1651.1999999999998], [1.72879602E12, 1601.85], [1.72879824E12, 1750.1999999999998], [1.72880064E12, 1799.3], [1.728795E12, 1779.1], [1.72879722E12, 1414.1999999999996], [1.72879944E12, 1610.0], [1.72880166E12, 1891.6], [1.72880388E12, 2212.1], [1.7287962E12, 1500.5499999999997], [1.72879842E12, 1568.85], [1.72880046E12, 1594.85], [1.72880268E12, 1606.8999999999996]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72879902E12, 36.0], [1.72879578E12, 54.0], [1.728798E12, 34.0], [1.72880022E12, 57.0], [1.72880244E12, 49.0], [1.72880346E12, 52.0], [1.72880124E12, 48.0], [1.72879698E12, 51.0], [1.7287992E12, 55.0], [1.7288016E12, 58.0], [1.72879596E12, 54.0], [1.72879818E12, 44.0], [1.72880262E12, 53.0], [1.72879716E12, 53.0], [1.7288004E12, 43.0], [1.72879938E12, 44.0], [1.72880142E12, 57.0], [1.72880364E12, 52.0], [1.72879512E12, 54.0], [1.72880178E12, 49.0], [1.728804E12, 49.0], [1.72879614E12, 57.0], [1.72879836E12, 52.0], [1.72879734E12, 60.0], [1.72879956E12, 45.0], [1.72880058E12, 48.0], [1.7288028E12, 51.0], [1.72880382E12, 55.0], [1.72879632E12, 56.0], [1.7287953E12, 65.0], [1.72879854E12, 57.0], [1.72879752E12, 57.0], [1.72880196E12, 45.0], [1.72880418E12, 52.0], [1.72879974E12, 47.0], [1.72880298E12, 47.0], [1.72880076E12, 49.0], [1.7287965E12, 52.0], [1.72879872E12, 33.0], [1.72880274E12, 46.0], [1.7287971E12, 49.0], [1.72879932E12, 51.0], [1.72879608E12, 58.0], [1.72880052E12, 55.0], [1.72879506E12, 58.0], [1.7287983E12, 38.0], [1.72880154E12, 53.0], [1.72880376E12, 48.0], [1.72879728E12, 56.0], [1.7287995E12, 39.0], [1.72879626E12, 51.0], [1.72879848E12, 51.0], [1.7288007E12, 44.0], [1.72880292E12, 57.0], [1.72880394E12, 57.0], [1.72880172E12, 54.0], [1.72879524E12, 58.0], [1.72879746E12, 59.0], [1.72879968E12, 57.0], [1.72879644E12, 60.0], [1.72879986E12, 42.0], [1.72880208E12, 56.0], [1.7288031E12, 54.0], [1.72879866E12, 50.0], [1.72879764E12, 50.0], [1.72880088E12, 49.0], [1.72880412E12, 57.0], [1.72879542E12, 58.0], [1.7288019E12, 54.0], [1.72880226E12, 47.0], [1.7287956E12, 56.0], [1.72879884E12, 37.0], [1.72879662E12, 61.0], [1.72880004E12, 41.0], [1.72880448E12, 49.0], [1.72879782E12, 57.0], [1.72880106E12, 52.0], [1.72880328E12, 54.0], [1.7288043E12, 53.0], [1.7287968E12, 49.0], [1.7287974E12, 51.0], [1.72880304E12, 44.0], [1.72880082E12, 50.0], [1.72880406E12, 55.0], [1.72879518E12, 52.0], [1.72879962E12, 38.0], [1.72880184E12, 46.0], [1.72879536E12, 59.0], [1.72879638E12, 55.0], [1.7287986E12, 53.0], [1.72880286E12, 55.0], [1.72880322E12, 53.0], [1.72879758E12, 47.0], [1.7287998E12, 50.0], [1.728801E12, 52.0], [1.72879656E12, 46.0], [1.72879554E12, 63.0], [1.72879878E12, 55.0], [1.72880202E12, 51.0], [1.72880424E12, 52.0], [1.72879776E12, 59.0], [1.72880016E12, 44.0], [1.72879674E12, 59.0], [1.72879896E12, 44.0], [1.72880118E12, 34.0], [1.7288034E12, 54.0], [1.72879572E12, 56.0], [1.72879794E12, 52.0], [1.72879998E12, 40.0], [1.7288022E12, 56.0], [1.72880442E12, 47.0], [1.72879692E12, 52.0], [1.72880034E12, 48.0], [1.72880256E12, 47.0], [1.72879914E12, 55.0], [1.72880358E12, 52.0], [1.72880136E12, 46.0], [1.7287959E12, 58.0], [1.72879812E12, 40.0], [1.72880238E12, 54.0], [1.72880112E12, 58.0], [1.72880436E12, 49.0], [1.72880214E12, 50.0], [1.72879548E12, 54.0], [1.7287977E12, 53.0], [1.72879668E12, 59.0], [1.72879992E12, 51.0], [1.7287989E12, 43.0], [1.72880094E12, 52.0], [1.72880316E12, 57.0], [1.7288013E12, 49.0], [1.72880352E12, 51.0], [1.72879566E12, 64.0], [1.72879788E12, 65.0], [1.72879686E12, 51.0], [1.72879908E12, 54.0], [1.7288001E12, 58.0], [1.72880232E12, 24.0], [1.72880334E12, 54.0], [1.72879584E12, 51.0], [1.7288037E12, 50.0], [1.72879806E12, 38.0], [1.72879704E12, 63.0], [1.72880148E12, 43.0], [1.72879926E12, 38.0], [1.7288025E12, 51.0], [1.72880028E12, 49.0], [1.72879602E12, 53.0], [1.72879824E12, 45.0], [1.72880064E12, 51.0], [1.728795E12, 63.0], [1.72879722E12, 52.0], [1.72879944E12, 48.0], [1.72880166E12, 48.0], [1.72880388E12, 55.0], [1.7287962E12, 56.0], [1.72879842E12, 44.0], [1.72880046E12, 42.0], [1.72880268E12, 52.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72879902E12, 558.0], [1.72879578E12, 498.5], [1.728798E12, 543.0], [1.72880022E12, 560.5], [1.72880244E12, 582.0], [1.72880346E12, 707.0], [1.72880124E12, 588.0], [1.72879698E12, 592.0], [1.7287992E12, 647.5], [1.7288016E12, 613.0], [1.72879596E12, 624.0], [1.72879818E12, 531.0], [1.72880262E12, 629.0], [1.72879716E12, 573.0], [1.7288004E12, 628.0], [1.72879938E12, 492.5], [1.72880142E12, 655.0], [1.72880364E12, 758.0], [1.72879512E12, 546.0], [1.72880178E12, 516.5], [1.728804E12, 683.5], [1.72879614E12, 641.5], [1.72879836E12, 561.5], [1.72879734E12, 673.0], [1.72879956E12, 552.0], [1.72880058E12, 476.0], [1.7288028E12, 679.0], [1.72880382E12, 871.5], [1.72879632E12, 513.5], [1.7287953E12, 643.0], [1.72879854E12, 559.0], [1.72879752E12, 651.0], [1.72880196E12, 493.0], [1.72880418E12, 676.0], [1.72879974E12, 480.5], [1.72880298E12, 632.5], [1.72880076E12, 692.0], [1.7287965E12, 620.0], [1.72879872E12, 656.0], [1.72880274E12, 579.0], [1.7287971E12, 505.5], [1.72879932E12, 593.0], [1.72879608E12, 718.0], [1.72880052E12, 571.0], [1.72879506E12, 325.0], [1.7287983E12, 614.0], [1.72880154E12, 500.0], [1.72880376E12, 655.0], [1.72879728E12, 561.5], [1.7287995E12, 561.0], [1.72879626E12, 593.5], [1.72879848E12, 564.5], [1.7288007E12, 653.0], [1.72880292E12, 619.5], [1.72880394E12, 750.0], [1.72880172E12, 622.0], [1.72879524E12, 573.0], [1.72879746E12, 526.5], [1.72879968E12, 470.5], [1.72879644E12, 615.0], [1.72879986E12, 576.0], [1.72880208E12, 581.0], [1.7288031E12, 780.0], [1.72879866E12, 680.0], [1.72879764E12, 534.0], [1.72880088E12, 660.0], [1.72880412E12, 715.5], [1.72879542E12, 610.0], [1.7288019E12, 654.0], [1.72880226E12, 610.0], [1.7287956E12, 440.5], [1.72879884E12, 554.0], [1.72879662E12, 468.0], [1.72880004E12, 601.5], [1.72880448E12, 684.0], [1.72879782E12, 541.0], [1.72880106E12, 697.5], [1.72880328E12, 654.5], [1.7288043E12, 760.5], [1.7287968E12, 568.5], [1.7287974E12, 626.0], [1.72880304E12, 717.0], [1.72880082E12, 576.0], [1.72880406E12, 752.0], [1.72879518E12, 524.0], [1.72879962E12, 603.0], [1.72880184E12, 558.0], [1.72879536E12, 482.0], [1.72879638E12, 647.0], [1.7287986E12, 530.5], [1.72880286E12, 699.0], [1.72880322E12, 735.5], [1.72879758E12, 656.5], [1.7287998E12, 627.5], [1.728801E12, 584.5], [1.72879656E12, 484.5], [1.72879554E12, 657.0], [1.72879878E12, 570.0], [1.72880202E12, 627.0], [1.72880424E12, 687.0], [1.72879776E12, 518.0], [1.72880016E12, 606.5], [1.72879674E12, 623.5], [1.72879896E12, 467.0], [1.72880118E12, 634.5], [1.7288034E12, 786.0], [1.72879572E12, 670.0], [1.72879794E12, 642.5], [1.72879998E12, 560.0], [1.7288022E12, 691.0], [1.72880442E12, 530.0], [1.72879692E12, 471.5], [1.72880034E12, 633.5], [1.72880256E12, 651.5], [1.72879914E12, 590.5], [1.72880358E12, 692.0], [1.72880136E12, 548.0], [1.7287959E12, 529.5], [1.72879812E12, 527.0], [1.72880238E12, 511.0], [1.72880112E12, 541.0], [1.72880436E12, 783.0], [1.72880214E12, 623.0], [1.72879548E12, 549.5], [1.7287977E12, 476.0], [1.72879668E12, 496.0], [1.72879992E12, 625.0], [1.7287989E12, 602.5], [1.72880094E12, 708.5], [1.72880316E12, 738.5], [1.7288013E12, 590.0], [1.72880352E12, 621.5], [1.72879566E12, 625.5], [1.72879788E12, 537.0], [1.72879686E12, 629.0], [1.72879908E12, 627.0], [1.7288001E12, 554.0], [1.72880232E12, 582.0], [1.72880334E12, 764.0], [1.72879584E12, 603.0], [1.7288037E12, 840.5], [1.72879806E12, 561.5], [1.72879704E12, 551.0], [1.72880148E12, 672.0], [1.72879926E12, 662.0], [1.7288025E12, 688.0], [1.72880028E12, 577.5], [1.72879602E12, 635.0], [1.72879824E12, 611.0], [1.72880064E12, 574.5], [1.728795E12, 547.0], [1.72879722E12, 519.0], [1.72879944E12, 573.0], [1.72880166E12, 666.0], [1.72880388E12, 778.5], [1.7287962E12, 571.0], [1.72879842E12, 461.0], [1.72880046E12, 573.5], [1.72880268E12, 605.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72880448E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 210.0, "minX": 1.0, "maxY": 1040.0, "series": [{"data": [[2.0, 918.0], [33.0, 270.0], [35.0, 216.0], [39.0, 210.0], [38.0, 339.0], [3.0, 872.0], [4.0, 803.0], [5.0, 763.5], [6.0, 678.0], [7.0, 641.0], [8.0, 598.0], [9.0, 647.0], [10.0, 697.0], [11.0, 684.0], [12.0, 688.0], [13.0, 672.0], [14.0, 671.0], [15.0, 670.5], [1.0, 1040.0], [16.0, 647.0], [17.0, 597.0], [18.0, 536.0], [19.0, 544.0], [20.0, 491.0], [21.0, 435.0], [22.0, 432.0], [23.0, 390.0], [24.0, 343.0], [25.0, 350.0], [26.0, 323.5], [27.0, 301.0], [28.0, 357.5], [29.0, 309.5], [30.0, 275.5], [31.0, 274.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 39.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 136.0, "minX": 1.0, "maxY": 719.0, "series": [{"data": [[2.0, 639.5], [33.0, 179.0], [35.0, 136.0], [39.0, 139.0], [38.0, 203.5], [3.0, 623.0], [4.0, 575.0], [5.0, 545.0], [6.0, 503.0], [7.0, 474.0], [8.0, 445.5], [9.0, 488.0], [10.0, 514.0], [11.0, 502.0], [12.0, 512.0], [13.0, 498.0], [14.0, 495.0], [15.0, 499.0], [1.0, 719.0], [16.0, 484.0], [17.0, 451.0], [18.0, 413.5], [19.0, 413.0], [20.0, 368.0], [21.0, 322.0], [22.0, 322.0], [23.0, 289.0], [24.0, 242.5], [25.0, 250.5], [26.0, 232.0], [27.0, 212.0], [28.0, 252.5], [29.0, 220.0], [30.0, 179.5], [31.0, 176.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 39.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.9833333333333334, "minX": 1.728795E12, "maxY": 19.6, "series": [{"data": [[1.72879902E12, 12.75], [1.72879578E12, 6.6], [1.728798E12, 12.65], [1.72880022E12, 12.3], [1.72880244E12, 16.816666666666666], [1.72880346E12, 17.616666666666667], [1.72880124E12, 17.1], [1.72879698E12, 6.583333333333333], [1.7287992E12, 11.733333333333333], [1.7288016E12, 16.683333333333334], [1.72879596E12, 6.216666666666667], [1.72879818E12, 12.75], [1.72880262E12, 15.766666666666667], [1.72879716E12, 6.433333333333334], [1.7288004E12, 12.016666666666667], [1.72879938E12, 12.9], [1.72880142E12, 15.816666666666666], [1.72880364E12, 18.466666666666665], [1.72879512E12, 3.3333333333333335], [1.72880178E12, 17.233333333333334], [1.728804E12, 19.166666666666668], [1.72879614E12, 6.066666666666666], [1.72879836E12, 12.333333333333334], [1.72879734E12, 5.966666666666667], [1.72879956E12, 12.133333333333333], [1.72880058E12, 17.75], [1.7288028E12, 18.45], [1.72880382E12, 17.1], [1.72879632E12, 6.533333333333333], [1.7287953E12, 3.183333333333333], [1.72879854E12, 12.666666666666666], [1.72879752E12, 6.083333333333333], [1.72880196E12, 17.616666666666667], [1.72880418E12, 18.883333333333333], [1.72879974E12, 12.966666666666667], [1.72880298E12, 19.2], [1.72880076E12, 16.133333333333333], [1.7287965E12, 6.316666666666666], [1.72879872E12, 12.216666666666667], [1.72880274E12, 15.466666666666667], [1.7287971E12, 6.533333333333333], [1.72879932E12, 12.083333333333334], [1.72879608E12, 5.866666666666666], [1.72880052E12, 8.466666666666667], [1.72879506E12, 3.5166666666666666], [1.7287983E12, 12.383333333333333], [1.72880154E12, 17.3], [1.72880376E12, 18.85], [1.72879728E12, 6.366666666666666], [1.7287995E12, 12.333333333333334], [1.72879626E12, 6.433333333333334], [1.72879848E12, 12.466666666666667], [1.7288007E12, 16.75], [1.72880292E12, 19.6], [1.72880394E12, 17.683333333333334], [1.72880172E12, 17.116666666666667], [1.72879524E12, 3.216666666666667], [1.72879746E12, 6.7], [1.72879968E12, 13.033333333333333], [1.72879644E12, 6.2], [1.72879986E12, 12.416666666666666], [1.72880208E12, 17.416666666666668], [1.7288031E12, 17.866666666666667], [1.72879866E12, 11.4], [1.72879764E12, 6.4], [1.72880088E12, 15.933333333333334], [1.72880412E12, 18.333333333333332], [1.72879542E12, 6.483333333333333], [1.7288019E12, 16.566666666666666], [1.72880226E12, 16.2], [1.7287956E12, 7.0], [1.72879884E12, 12.466666666666667], [1.72879662E12, 6.916666666666667], [1.72880004E12, 12.133333333333333], [1.72880448E12, 3.933333333333333], [1.72879782E12, 5.566666666666666], [1.72880106E12, 15.833333333333334], [1.72880328E12, 18.8], [1.7288043E12, 17.533333333333335], [1.7287968E12, 6.433333333333334], [1.7287974E12, 5.966666666666667], [1.72880304E12, 18.5], [1.72880082E12, 17.033333333333335], [1.72880406E12, 18.6], [1.72879518E12, 3.283333333333333], [1.72879962E12, 12.516666666666667], [1.72880184E12, 17.133333333333333], [1.72879536E12, 5.4], [1.72879638E12, 6.133333333333334], [1.7287986E12, 12.916666666666666], [1.72880286E12, 18.116666666666667], [1.72880322E12, 18.266666666666666], [1.72879758E12, 6.133333333333334], [1.7287998E12, 12.0], [1.728801E12, 17.166666666666668], [1.72879656E12, 6.7], [1.72879554E12, 6.0], [1.72879878E12, 12.116666666666667], [1.72880202E12, 16.216666666666665], [1.72880424E12, 18.55], [1.72879776E12, 6.55], [1.72880016E12, 12.0], [1.72879674E12, 6.1], [1.72879896E12, 13.1], [1.72880118E12, 16.833333333333332], [1.7288034E12, 18.1], [1.72879572E12, 6.133333333333334], [1.72879794E12, 11.6], [1.72879998E12, 12.233333333333333], [1.7288022E12, 16.333333333333332], [1.72880442E12, 18.333333333333332], [1.72879692E12, 6.566666666666666], [1.72880034E12, 11.966666666666667], [1.72880256E12, 16.466666666666665], [1.72879914E12, 12.166666666666666], [1.72880358E12, 18.866666666666667], [1.72880136E12, 17.116666666666667], [1.7287959E12, 6.533333333333333], [1.72879812E12, 12.416666666666666], [1.72880238E12, 17.7], [1.72880112E12, 17.333333333333332], [1.72880436E12, 18.2], [1.72880214E12, 16.95], [1.72879548E12, 6.5], [1.7287977E12, 6.966666666666667], [1.72879668E12, 6.716666666666667], [1.72879992E12, 11.833333333333334], [1.7287989E12, 12.066666666666666], [1.72880094E12, 16.166666666666668], [1.72880316E12, 17.966666666666665], [1.7288013E12, 16.816666666666666], [1.72880352E12, 19.5], [1.72879566E12, 5.9], [1.72879788E12, 4.15], [1.72879686E12, 6.25], [1.72879908E12, 11.783333333333333], [1.7288001E12, 12.233333333333333], [1.72880232E12, 16.75], [1.72880334E12, 18.0], [1.72879584E12, 6.316666666666666], [1.7288037E12, 17.533333333333335], [1.72879806E12, 12.433333333333334], [1.72879704E12, 6.433333333333334], [1.72880148E12, 16.6], [1.72879926E12, 12.016666666666667], [1.7288025E12, 16.116666666666667], [1.72880028E12, 12.3], [1.72879602E12, 6.0], [1.72879824E12, 11.933333333333334], [1.72880064E12, 17.433333333333334], [1.728795E12, 1.9833333333333334], [1.72879722E12, 6.866666666666666], [1.72879944E12, 12.2], [1.72880166E12, 16.016666666666666], [1.72880388E12, 18.133333333333333], [1.7287962E12, 6.433333333333334], [1.72879842E12, 13.1], [1.72880046E12, 10.95], [1.72880268E12, 8.05]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72880448E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.95, "minX": 1.728795E12, "maxY": 19.6, "series": [{"data": [[1.72879902E12, 12.75], [1.72879578E12, 6.6], [1.728798E12, 12.65], [1.72880022E12, 12.3], [1.72880244E12, 16.816666666666666], [1.72880346E12, 17.616666666666667], [1.72880124E12, 17.1], [1.72879698E12, 6.583333333333333], [1.7287992E12, 11.733333333333333], [1.7288016E12, 16.683333333333334], [1.72879596E12, 6.216666666666667], [1.72879818E12, 12.75], [1.72880262E12, 15.783333333333333], [1.72879716E12, 6.433333333333334], [1.7288004E12, 12.016666666666667], [1.72879938E12, 12.9], [1.72880142E12, 15.816666666666666], [1.72880364E12, 18.466666666666665], [1.72879512E12, 3.3333333333333335], [1.72880178E12, 17.233333333333334], [1.728804E12, 19.166666666666668], [1.72879614E12, 6.066666666666666], [1.72879836E12, 12.333333333333334], [1.72879734E12, 5.966666666666667], [1.72879956E12, 12.133333333333333], [1.72880058E12, 17.75], [1.7288028E12, 18.45], [1.72880382E12, 17.1], [1.72879632E12, 6.533333333333333], [1.7287953E12, 3.183333333333333], [1.72879854E12, 12.683333333333334], [1.72879752E12, 6.083333333333333], [1.72880196E12, 17.616666666666667], [1.72880418E12, 18.883333333333333], [1.72879974E12, 12.966666666666667], [1.72880298E12, 19.2], [1.72880076E12, 16.133333333333333], [1.7287965E12, 6.316666666666666], [1.72879872E12, 12.216666666666667], [1.72880274E12, 15.233333333333333], [1.7287971E12, 6.533333333333333], [1.72879932E12, 12.083333333333334], [1.72879608E12, 5.866666666666666], [1.72880052E12, 8.35], [1.72879506E12, 3.5166666666666666], [1.7287983E12, 12.383333333333333], [1.72880154E12, 17.3], [1.72880376E12, 18.85], [1.72879728E12, 6.366666666666666], [1.7287995E12, 12.333333333333334], [1.72879626E12, 6.433333333333334], [1.72879848E12, 12.466666666666667], [1.7288007E12, 16.75], [1.72880292E12, 19.6], [1.72880394E12, 17.683333333333334], [1.72880172E12, 17.116666666666667], [1.72879524E12, 3.216666666666667], [1.72879746E12, 6.7], [1.72879968E12, 13.033333333333333], [1.72879644E12, 6.2], [1.72879986E12, 12.416666666666666], [1.72880208E12, 17.416666666666668], [1.7288031E12, 17.866666666666667], [1.72879866E12, 11.4], [1.72879764E12, 6.4], [1.72880088E12, 15.933333333333334], [1.72880412E12, 18.333333333333332], [1.72879542E12, 6.483333333333333], [1.7288019E12, 16.566666666666666], [1.72880226E12, 16.2], [1.7287956E12, 7.0], [1.72879884E12, 12.466666666666667], [1.72879662E12, 6.916666666666667], [1.72880004E12, 12.133333333333333], [1.72880448E12, 4.083333333333333], [1.72879782E12, 5.6], [1.72880106E12, 15.833333333333334], [1.72880328E12, 18.8], [1.7288043E12, 17.533333333333335], [1.7287968E12, 6.433333333333334], [1.7287974E12, 5.966666666666667], [1.72880304E12, 18.5], [1.72880082E12, 17.033333333333335], [1.72880406E12, 18.6], [1.72879518E12, 3.283333333333333], [1.72879962E12, 12.516666666666667], [1.72880184E12, 17.133333333333333], [1.72879536E12, 5.366666666666666], [1.72879638E12, 6.133333333333334], [1.7287986E12, 12.9], [1.72880286E12, 18.116666666666667], [1.72880322E12, 18.266666666666666], [1.72879758E12, 6.133333333333334], [1.7287998E12, 12.0], [1.728801E12, 17.166666666666668], [1.72879656E12, 6.7], [1.72879554E12, 6.0], [1.72879878E12, 12.116666666666667], [1.72880202E12, 16.216666666666665], [1.72880424E12, 18.55], [1.72879776E12, 6.55], [1.72880016E12, 12.0], [1.72879674E12, 6.1], [1.72879896E12, 13.1], [1.72880118E12, 16.833333333333332], [1.7288034E12, 18.083333333333332], [1.72879572E12, 6.133333333333334], [1.72879794E12, 11.6], [1.72879998E12, 12.233333333333333], [1.7288022E12, 16.333333333333332], [1.72880442E12, 18.45], [1.72879692E12, 6.566666666666666], [1.72880034E12, 11.966666666666667], [1.72880256E12, 16.466666666666665], [1.72879914E12, 12.166666666666666], [1.72880358E12, 18.866666666666667], [1.72880136E12, 17.116666666666667], [1.7287959E12, 6.533333333333333], [1.72879812E12, 12.416666666666666], [1.72880238E12, 17.7], [1.72880112E12, 17.333333333333332], [1.72880436E12, 18.2], [1.72880214E12, 16.95], [1.72879548E12, 6.5], [1.7287977E12, 6.966666666666667], [1.72879668E12, 6.716666666666667], [1.72879992E12, 11.833333333333334], [1.7287989E12, 12.066666666666666], [1.72880094E12, 16.166666666666668], [1.72880316E12, 17.966666666666665], [1.7288013E12, 16.816666666666666], [1.72880352E12, 19.5], [1.72879566E12, 5.9], [1.72879788E12, 4.05], [1.72879686E12, 6.25], [1.72879908E12, 11.783333333333333], [1.7288001E12, 12.233333333333333], [1.72880232E12, 16.75], [1.72880334E12, 18.016666666666666], [1.72879584E12, 6.316666666666666], [1.7288037E12, 17.533333333333335], [1.72879806E12, 12.433333333333334], [1.72879704E12, 6.433333333333334], [1.72880148E12, 16.6], [1.72879926E12, 12.016666666666667], [1.7288025E12, 16.116666666666667], [1.72880028E12, 12.3], [1.72879602E12, 6.0], [1.72879824E12, 11.933333333333334], [1.72880064E12, 17.433333333333334], [1.728795E12, 1.95], [1.72879722E12, 6.866666666666666], [1.72879944E12, 12.2], [1.72880166E12, 16.016666666666666], [1.72880388E12, 18.133333333333333], [1.7287962E12, 6.433333333333334], [1.72879842E12, 13.1], [1.72880046E12, 11.0], [1.72880268E12, 8.2]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72880448E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.95, "minX": 1.728795E12, "maxY": 19.6, "series": [{"data": [[1.72879902E12, 12.75], [1.72879578E12, 6.6], [1.728798E12, 12.65], [1.72880022E12, 12.3], [1.72880244E12, 16.816666666666666], [1.72880346E12, 17.616666666666667], [1.72880124E12, 17.1], [1.72879698E12, 6.583333333333333], [1.7287992E12, 11.733333333333333], [1.7288016E12, 16.683333333333334], [1.72879596E12, 6.216666666666667], [1.72879818E12, 12.75], [1.72880262E12, 15.783333333333333], [1.72879716E12, 6.433333333333334], [1.7288004E12, 12.016666666666667], [1.72879938E12, 12.9], [1.72880142E12, 15.816666666666666], [1.72880364E12, 18.466666666666665], [1.72879512E12, 3.3333333333333335], [1.72880178E12, 17.233333333333334], [1.728804E12, 19.166666666666668], [1.72879614E12, 6.066666666666666], [1.72879836E12, 12.333333333333334], [1.72879734E12, 5.966666666666667], [1.72879956E12, 12.133333333333333], [1.72880058E12, 17.75], [1.7288028E12, 18.45], [1.72880382E12, 17.1], [1.72879632E12, 6.533333333333333], [1.7287953E12, 3.183333333333333], [1.72879854E12, 12.683333333333334], [1.72879752E12, 6.083333333333333], [1.72880196E12, 17.616666666666667], [1.72880418E12, 18.883333333333333], [1.72879974E12, 12.966666666666667], [1.72880298E12, 19.2], [1.72880076E12, 16.133333333333333], [1.7287965E12, 6.316666666666666], [1.72879872E12, 12.216666666666667], [1.72880274E12, 15.233333333333333], [1.7287971E12, 6.533333333333333], [1.72879932E12, 12.083333333333334], [1.72879608E12, 5.866666666666666], [1.72880052E12, 8.35], [1.72879506E12, 3.5166666666666666], [1.7287983E12, 12.383333333333333], [1.72880154E12, 17.3], [1.72880376E12, 18.85], [1.72879728E12, 6.366666666666666], [1.7287995E12, 12.333333333333334], [1.72879626E12, 6.433333333333334], [1.72879848E12, 12.466666666666667], [1.7288007E12, 16.75], [1.72880292E12, 19.6], [1.72880394E12, 17.683333333333334], [1.72880172E12, 17.116666666666667], [1.72879524E12, 3.216666666666667], [1.72879746E12, 6.7], [1.72879968E12, 13.033333333333333], [1.72879644E12, 6.2], [1.72879986E12, 12.416666666666666], [1.72880208E12, 17.416666666666668], [1.7288031E12, 17.866666666666667], [1.72879866E12, 11.4], [1.72879764E12, 6.4], [1.72880088E12, 15.933333333333334], [1.72880412E12, 18.333333333333332], [1.72879542E12, 6.483333333333333], [1.7288019E12, 16.566666666666666], [1.72880226E12, 16.2], [1.7287956E12, 7.0], [1.72879884E12, 12.466666666666667], [1.72879662E12, 6.916666666666667], [1.72880004E12, 12.133333333333333], [1.72880448E12, 4.083333333333333], [1.72879782E12, 5.6], [1.72880106E12, 15.833333333333334], [1.72880328E12, 18.8], [1.7288043E12, 17.533333333333335], [1.7287968E12, 6.433333333333334], [1.7287974E12, 5.966666666666667], [1.72880304E12, 18.5], [1.72880082E12, 17.033333333333335], [1.72880406E12, 18.6], [1.72879518E12, 3.283333333333333], [1.72879962E12, 12.516666666666667], [1.72880184E12, 17.133333333333333], [1.72879536E12, 5.366666666666666], [1.72879638E12, 6.133333333333334], [1.7287986E12, 12.9], [1.72880286E12, 18.116666666666667], [1.72880322E12, 18.266666666666666], [1.72879758E12, 6.133333333333334], [1.7287998E12, 12.0], [1.728801E12, 17.166666666666668], [1.72879656E12, 6.7], [1.72879554E12, 6.0], [1.72879878E12, 12.116666666666667], [1.72880202E12, 16.216666666666665], [1.72880424E12, 18.55], [1.72879776E12, 6.55], [1.72880016E12, 12.0], [1.72879674E12, 6.1], [1.72879896E12, 13.1], [1.72880118E12, 16.833333333333332], [1.7288034E12, 18.083333333333332], [1.72879572E12, 6.133333333333334], [1.72879794E12, 11.6], [1.72879998E12, 12.233333333333333], [1.7288022E12, 16.333333333333332], [1.72880442E12, 18.45], [1.72879692E12, 6.566666666666666], [1.72880034E12, 11.966666666666667], [1.72880256E12, 16.466666666666665], [1.72879914E12, 12.166666666666666], [1.72880358E12, 18.866666666666667], [1.72880136E12, 17.116666666666667], [1.7287959E12, 6.533333333333333], [1.72879812E12, 12.416666666666666], [1.72880238E12, 17.7], [1.72880112E12, 17.333333333333332], [1.72880436E12, 18.2], [1.72880214E12, 16.95], [1.72879548E12, 6.5], [1.7287977E12, 6.966666666666667], [1.72879668E12, 6.716666666666667], [1.72879992E12, 11.833333333333334], [1.7287989E12, 12.066666666666666], [1.72880094E12, 16.166666666666668], [1.72880316E12, 17.966666666666665], [1.7288013E12, 16.816666666666666], [1.72880352E12, 19.5], [1.72879566E12, 5.9], [1.72879788E12, 4.05], [1.72879686E12, 6.25], [1.72879908E12, 11.783333333333333], [1.7288001E12, 12.233333333333333], [1.72880232E12, 16.75], [1.72880334E12, 18.016666666666666], [1.72879584E12, 6.316666666666666], [1.7288037E12, 17.533333333333335], [1.72879806E12, 12.433333333333334], [1.72879704E12, 6.433333333333334], [1.72880148E12, 16.6], [1.72879926E12, 12.016666666666667], [1.7288025E12, 16.116666666666667], [1.72880028E12, 12.3], [1.72879602E12, 6.0], [1.72879824E12, 11.933333333333334], [1.72880064E12, 17.433333333333334], [1.728795E12, 1.95], [1.72879722E12, 6.866666666666666], [1.72879944E12, 12.2], [1.72880166E12, 16.016666666666666], [1.72880388E12, 18.133333333333333], [1.7287962E12, 6.433333333333334], [1.72879842E12, 13.1], [1.72880046E12, 11.0], [1.72880268E12, 8.2]], "isOverall": false, "label": "getmap-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72880448E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.95, "minX": 1.728795E12, "maxY": 19.6, "series": [{"data": [[1.72879902E12, 12.75], [1.72879578E12, 6.6], [1.728798E12, 12.65], [1.72880022E12, 12.3], [1.72880244E12, 16.816666666666666], [1.72880346E12, 17.616666666666667], [1.72880124E12, 17.1], [1.72879698E12, 6.583333333333333], [1.7287992E12, 11.733333333333333], [1.7288016E12, 16.683333333333334], [1.72879596E12, 6.216666666666667], [1.72879818E12, 12.75], [1.72880262E12, 15.783333333333333], [1.72879716E12, 6.433333333333334], [1.7288004E12, 12.016666666666667], [1.72879938E12, 12.9], [1.72880142E12, 15.816666666666666], [1.72880364E12, 18.466666666666665], [1.72879512E12, 3.3333333333333335], [1.72880178E12, 17.233333333333334], [1.728804E12, 19.166666666666668], [1.72879614E12, 6.066666666666666], [1.72879836E12, 12.333333333333334], [1.72879734E12, 5.966666666666667], [1.72879956E12, 12.133333333333333], [1.72880058E12, 17.75], [1.7288028E12, 18.45], [1.72880382E12, 17.1], [1.72879632E12, 6.533333333333333], [1.7287953E12, 3.183333333333333], [1.72879854E12, 12.683333333333334], [1.72879752E12, 6.083333333333333], [1.72880196E12, 17.616666666666667], [1.72880418E12, 18.883333333333333], [1.72879974E12, 12.966666666666667], [1.72880298E12, 19.2], [1.72880076E12, 16.133333333333333], [1.7287965E12, 6.316666666666666], [1.72879872E12, 12.216666666666667], [1.72880274E12, 15.233333333333333], [1.7287971E12, 6.533333333333333], [1.72879932E12, 12.083333333333334], [1.72879608E12, 5.866666666666666], [1.72880052E12, 8.35], [1.72879506E12, 3.5166666666666666], [1.7287983E12, 12.383333333333333], [1.72880154E12, 17.3], [1.72880376E12, 18.85], [1.72879728E12, 6.366666666666666], [1.7287995E12, 12.333333333333334], [1.72879626E12, 6.433333333333334], [1.72879848E12, 12.466666666666667], [1.7288007E12, 16.75], [1.72880292E12, 19.6], [1.72880394E12, 17.683333333333334], [1.72880172E12, 17.116666666666667], [1.72879524E12, 3.216666666666667], [1.72879746E12, 6.7], [1.72879968E12, 13.033333333333333], [1.72879644E12, 6.2], [1.72879986E12, 12.416666666666666], [1.72880208E12, 17.416666666666668], [1.7288031E12, 17.866666666666667], [1.72879866E12, 11.4], [1.72879764E12, 6.4], [1.72880088E12, 15.933333333333334], [1.72880412E12, 18.333333333333332], [1.72879542E12, 6.483333333333333], [1.7288019E12, 16.566666666666666], [1.72880226E12, 16.2], [1.7287956E12, 7.0], [1.72879884E12, 12.466666666666667], [1.72879662E12, 6.916666666666667], [1.72880004E12, 12.133333333333333], [1.72880448E12, 4.083333333333333], [1.72879782E12, 5.6], [1.72880106E12, 15.833333333333334], [1.72880328E12, 18.8], [1.7288043E12, 17.533333333333335], [1.7287968E12, 6.433333333333334], [1.7287974E12, 5.966666666666667], [1.72880304E12, 18.5], [1.72880082E12, 17.033333333333335], [1.72880406E12, 18.6], [1.72879518E12, 3.283333333333333], [1.72879962E12, 12.516666666666667], [1.72880184E12, 17.133333333333333], [1.72879536E12, 5.366666666666666], [1.72879638E12, 6.133333333333334], [1.7287986E12, 12.9], [1.72880286E12, 18.116666666666667], [1.72880322E12, 18.266666666666666], [1.72879758E12, 6.133333333333334], [1.7287998E12, 12.0], [1.728801E12, 17.166666666666668], [1.72879656E12, 6.7], [1.72879554E12, 6.0], [1.72879878E12, 12.116666666666667], [1.72880202E12, 16.216666666666665], [1.72880424E12, 18.55], [1.72879776E12, 6.55], [1.72880016E12, 12.0], [1.72879674E12, 6.1], [1.72879896E12, 13.1], [1.72880118E12, 16.833333333333332], [1.7288034E12, 18.083333333333332], [1.72879572E12, 6.133333333333334], [1.72879794E12, 11.6], [1.72879998E12, 12.233333333333333], [1.7288022E12, 16.333333333333332], [1.72880442E12, 18.45], [1.72879692E12, 6.566666666666666], [1.72880034E12, 11.966666666666667], [1.72880256E12, 16.466666666666665], [1.72879914E12, 12.166666666666666], [1.72880358E12, 18.866666666666667], [1.72880136E12, 17.116666666666667], [1.7287959E12, 6.533333333333333], [1.72879812E12, 12.416666666666666], [1.72880238E12, 17.7], [1.72880112E12, 17.333333333333332], [1.72880436E12, 18.2], [1.72880214E12, 16.95], [1.72879548E12, 6.5], [1.7287977E12, 6.966666666666667], [1.72879668E12, 6.716666666666667], [1.72879992E12, 11.833333333333334], [1.7287989E12, 12.066666666666666], [1.72880094E12, 16.166666666666668], [1.72880316E12, 17.966666666666665], [1.7288013E12, 16.816666666666666], [1.72880352E12, 19.5], [1.72879566E12, 5.9], [1.72879788E12, 4.05], [1.72879686E12, 6.25], [1.72879908E12, 11.783333333333333], [1.7288001E12, 12.233333333333333], [1.72880232E12, 16.75], [1.72880334E12, 18.016666666666666], [1.72879584E12, 6.316666666666666], [1.7288037E12, 17.533333333333335], [1.72879806E12, 12.433333333333334], [1.72879704E12, 6.433333333333334], [1.72880148E12, 16.6], [1.72879926E12, 12.016666666666667], [1.7288025E12, 16.116666666666667], [1.72880028E12, 12.3], [1.72879602E12, 6.0], [1.72879824E12, 11.933333333333334], [1.72880064E12, 17.433333333333334], [1.728795E12, 1.95], [1.72879722E12, 6.866666666666666], [1.72879944E12, 12.2], [1.72880166E12, 16.016666666666666], [1.72880388E12, 18.133333333333333], [1.7287962E12, 6.433333333333334], [1.72879842E12, 13.1], [1.72880046E12, 11.0], [1.72880268E12, 8.2]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72880448E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

