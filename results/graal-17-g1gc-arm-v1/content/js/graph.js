/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 46.0, "minX": 0.0, "maxY": 4290.0, "series": [{"data": [[0.0, 46.0], [0.1, 58.0], [0.2, 61.0], [0.3, 63.0], [0.4, 65.0], [0.5, 66.0], [0.6, 68.0], [0.7, 69.0], [0.8, 70.0], [0.9, 71.0], [1.0, 72.0], [1.1, 72.0], [1.2, 73.0], [1.3, 74.0], [1.4, 75.0], [1.5, 75.0], [1.6, 76.0], [1.7, 77.0], [1.8, 77.0], [1.9, 78.0], [2.0, 78.0], [2.1, 79.0], [2.2, 79.0], [2.3, 80.0], [2.4, 81.0], [2.5, 81.0], [2.6, 82.0], [2.7, 82.0], [2.8, 83.0], [2.9, 83.0], [3.0, 84.0], [3.1, 84.0], [3.2, 85.0], [3.3, 85.0], [3.4, 85.0], [3.5, 86.0], [3.6, 86.0], [3.7, 87.0], [3.8, 87.0], [3.9, 88.0], [4.0, 88.0], [4.1, 88.0], [4.2, 89.0], [4.3, 89.0], [4.4, 90.0], [4.5, 90.0], [4.6, 90.0], [4.7, 91.0], [4.8, 91.0], [4.9, 92.0], [5.0, 92.0], [5.1, 92.0], [5.2, 93.0], [5.3, 93.0], [5.4, 93.0], [5.5, 94.0], [5.6, 94.0], [5.7, 94.0], [5.8, 95.0], [5.9, 95.0], [6.0, 96.0], [6.1, 96.0], [6.2, 96.0], [6.3, 97.0], [6.4, 97.0], [6.5, 97.0], [6.6, 98.0], [6.7, 98.0], [6.8, 98.0], [6.9, 99.0], [7.0, 99.0], [7.1, 99.0], [7.2, 99.0], [7.3, 100.0], [7.4, 100.0], [7.5, 100.0], [7.6, 101.0], [7.7, 101.0], [7.8, 101.0], [7.9, 102.0], [8.0, 102.0], [8.1, 102.0], [8.2, 102.0], [8.3, 103.0], [8.4, 103.0], [8.5, 103.0], [8.6, 104.0], [8.7, 104.0], [8.8, 104.0], [8.9, 105.0], [9.0, 105.0], [9.1, 105.0], [9.2, 106.0], [9.3, 106.0], [9.4, 106.0], [9.5, 106.0], [9.6, 107.0], [9.7, 107.0], [9.8, 107.0], [9.9, 108.0], [10.0, 108.0], [10.1, 108.0], [10.2, 109.0], [10.3, 109.0], [10.4, 109.0], [10.5, 109.0], [10.6, 110.0], [10.7, 110.0], [10.8, 110.0], [10.9, 111.0], [11.0, 111.0], [11.1, 111.0], [11.2, 112.0], [11.3, 112.0], [11.4, 112.0], [11.5, 113.0], [11.6, 113.0], [11.7, 113.0], [11.8, 114.0], [11.9, 114.0], [12.0, 114.0], [12.1, 115.0], [12.2, 115.0], [12.3, 115.0], [12.4, 115.0], [12.5, 116.0], [12.6, 116.0], [12.7, 116.0], [12.8, 117.0], [12.9, 117.0], [13.0, 117.0], [13.1, 118.0], [13.2, 118.0], [13.3, 118.0], [13.4, 118.0], [13.5, 119.0], [13.6, 119.0], [13.7, 119.0], [13.8, 120.0], [13.9, 120.0], [14.0, 120.0], [14.1, 121.0], [14.2, 121.0], [14.3, 121.0], [14.4, 122.0], [14.5, 122.0], [14.6, 122.0], [14.7, 123.0], [14.8, 123.0], [14.9, 123.0], [15.0, 124.0], [15.1, 124.0], [15.2, 124.0], [15.3, 125.0], [15.4, 125.0], [15.5, 125.0], [15.6, 126.0], [15.7, 126.0], [15.8, 126.0], [15.9, 127.0], [16.0, 127.0], [16.1, 127.0], [16.2, 128.0], [16.3, 128.0], [16.4, 128.0], [16.5, 128.0], [16.6, 129.0], [16.7, 129.0], [16.8, 129.0], [16.9, 130.0], [17.0, 130.0], [17.1, 130.0], [17.2, 131.0], [17.3, 131.0], [17.4, 131.0], [17.5, 132.0], [17.6, 132.0], [17.7, 132.0], [17.8, 133.0], [17.9, 133.0], [18.0, 133.0], [18.1, 134.0], [18.2, 134.0], [18.3, 134.0], [18.4, 135.0], [18.5, 135.0], [18.6, 135.0], [18.7, 136.0], [18.8, 136.0], [18.9, 136.0], [19.0, 137.0], [19.1, 137.0], [19.2, 137.0], [19.3, 138.0], [19.4, 138.0], [19.5, 138.0], [19.6, 139.0], [19.7, 139.0], [19.8, 140.0], [19.9, 140.0], [20.0, 140.0], [20.1, 141.0], [20.2, 141.0], [20.3, 141.0], [20.4, 142.0], [20.5, 142.0], [20.6, 142.0], [20.7, 143.0], [20.8, 143.0], [20.9, 143.0], [21.0, 144.0], [21.1, 144.0], [21.2, 145.0], [21.3, 145.0], [21.4, 145.0], [21.5, 146.0], [21.6, 146.0], [21.7, 146.0], [21.8, 147.0], [21.9, 147.0], [22.0, 148.0], [22.1, 148.0], [22.2, 148.0], [22.3, 149.0], [22.4, 149.0], [22.5, 150.0], [22.6, 150.0], [22.7, 150.0], [22.8, 151.0], [22.9, 151.0], [23.0, 152.0], [23.1, 152.0], [23.2, 152.0], [23.3, 153.0], [23.4, 153.0], [23.5, 153.0], [23.6, 154.0], [23.7, 154.0], [23.8, 155.0], [23.9, 155.0], [24.0, 156.0], [24.1, 156.0], [24.2, 156.0], [24.3, 157.0], [24.4, 157.0], [24.5, 158.0], [24.6, 158.0], [24.7, 159.0], [24.8, 159.0], [24.9, 159.0], [25.0, 160.0], [25.1, 160.0], [25.2, 161.0], [25.3, 161.0], [25.4, 162.0], [25.5, 162.0], [25.6, 163.0], [25.7, 163.0], [25.8, 164.0], [25.9, 164.0], [26.0, 164.0], [26.1, 165.0], [26.2, 165.0], [26.3, 166.0], [26.4, 167.0], [26.5, 167.0], [26.6, 167.0], [26.7, 168.0], [26.8, 169.0], [26.9, 169.0], [27.0, 170.0], [27.1, 170.0], [27.2, 171.0], [27.3, 171.0], [27.4, 172.0], [27.5, 172.0], [27.6, 173.0], [27.7, 173.0], [27.8, 174.0], [27.9, 174.0], [28.0, 175.0], [28.1, 175.0], [28.2, 176.0], [28.3, 177.0], [28.4, 177.0], [28.5, 178.0], [28.6, 178.0], [28.7, 179.0], [28.8, 180.0], [28.9, 180.0], [29.0, 181.0], [29.1, 181.0], [29.2, 182.0], [29.3, 182.0], [29.4, 183.0], [29.5, 184.0], [29.6, 184.0], [29.7, 185.0], [29.8, 185.0], [29.9, 186.0], [30.0, 187.0], [30.1, 188.0], [30.2, 188.0], [30.3, 189.0], [30.4, 190.0], [30.5, 190.0], [30.6, 191.0], [30.7, 192.0], [30.8, 192.0], [30.9, 193.0], [31.0, 194.0], [31.1, 195.0], [31.2, 195.0], [31.3, 196.0], [31.4, 197.0], [31.5, 197.0], [31.6, 198.0], [31.7, 199.0], [31.8, 200.0], [31.9, 200.0], [32.0, 201.0], [32.1, 202.0], [32.2, 203.0], [32.3, 204.0], [32.4, 204.0], [32.5, 205.0], [32.6, 206.0], [32.7, 207.0], [32.8, 208.0], [32.9, 209.0], [33.0, 209.0], [33.1, 210.0], [33.2, 211.0], [33.3, 212.0], [33.4, 213.0], [33.5, 214.0], [33.6, 214.0], [33.7, 216.0], [33.8, 217.0], [33.9, 218.0], [34.0, 218.0], [34.1, 219.0], [34.2, 220.0], [34.3, 221.0], [34.4, 222.0], [34.5, 223.0], [34.6, 224.0], [34.7, 225.0], [34.8, 226.0], [34.9, 227.0], [35.0, 228.0], [35.1, 229.0], [35.2, 230.0], [35.3, 231.0], [35.4, 232.0], [35.5, 234.0], [35.6, 235.0], [35.7, 236.0], [35.8, 237.0], [35.9, 238.0], [36.0, 239.0], [36.1, 241.0], [36.2, 242.0], [36.3, 243.0], [36.4, 244.0], [36.5, 246.0], [36.6, 247.0], [36.7, 249.0], [36.8, 250.0], [36.9, 251.0], [37.0, 253.0], [37.1, 255.0], [37.2, 256.0], [37.3, 257.0], [37.4, 259.0], [37.5, 260.0], [37.6, 262.0], [37.7, 263.0], [37.8, 265.0], [37.9, 267.0], [38.0, 269.0], [38.1, 270.0], [38.2, 272.0], [38.3, 274.0], [38.4, 275.0], [38.5, 277.0], [38.6, 279.0], [38.7, 281.0], [38.8, 283.0], [38.9, 285.0], [39.0, 287.0], [39.1, 289.0], [39.2, 291.0], [39.3, 293.0], [39.4, 295.0], [39.5, 297.0], [39.6, 299.0], [39.7, 301.0], [39.8, 304.0], [39.9, 306.0], [40.0, 308.0], [40.1, 311.0], [40.2, 313.0], [40.3, 315.0], [40.4, 317.0], [40.5, 320.0], [40.6, 322.0], [40.7, 325.0], [40.8, 327.0], [40.9, 330.0], [41.0, 333.0], [41.1, 336.0], [41.2, 338.0], [41.3, 341.0], [41.4, 344.0], [41.5, 347.0], [41.6, 350.0], [41.7, 354.0], [41.8, 358.0], [41.9, 361.0], [42.0, 364.0], [42.1, 367.0], [42.2, 371.0], [42.3, 374.0], [42.4, 377.0], [42.5, 380.0], [42.6, 384.0], [42.7, 388.0], [42.8, 391.0], [42.9, 395.0], [43.0, 399.0], [43.1, 402.0], [43.2, 406.0], [43.3, 410.0], [43.4, 414.0], [43.5, 418.0], [43.6, 421.0], [43.7, 425.0], [43.8, 430.0], [43.9, 434.0], [44.0, 438.0], [44.1, 442.0], [44.2, 447.0], [44.3, 451.0], [44.4, 455.0], [44.5, 460.0], [44.6, 465.0], [44.7, 470.0], [44.8, 476.0], [44.9, 480.0], [45.0, 484.0], [45.1, 489.0], [45.2, 493.0], [45.3, 498.0], [45.4, 502.0], [45.5, 506.0], [45.6, 511.0], [45.7, 516.0], [45.8, 521.0], [45.9, 525.0], [46.0, 530.0], [46.1, 534.0], [46.2, 539.0], [46.3, 544.0], [46.4, 548.0], [46.5, 553.0], [46.6, 557.0], [46.7, 561.0], [46.8, 565.0], [46.9, 569.0], [47.0, 573.0], [47.1, 577.0], [47.2, 581.0], [47.3, 585.0], [47.4, 589.0], [47.5, 593.0], [47.6, 596.0], [47.7, 600.0], [47.8, 605.0], [47.9, 608.0], [48.0, 612.0], [48.1, 617.0], [48.2, 620.0], [48.3, 624.0], [48.4, 627.0], [48.5, 630.0], [48.6, 633.0], [48.7, 638.0], [48.8, 643.0], [48.9, 646.0], [49.0, 649.0], [49.1, 652.0], [49.2, 656.0], [49.3, 660.0], [49.4, 662.0], [49.5, 667.0], [49.6, 670.0], [49.7, 673.0], [49.8, 676.0], [49.9, 679.0], [50.0, 682.0], [50.1, 685.0], [50.2, 689.0], [50.3, 691.0], [50.4, 694.0], [50.5, 697.0], [50.6, 700.0], [50.7, 703.0], [50.8, 706.0], [50.9, 709.0], [51.0, 712.0], [51.1, 714.0], [51.2, 717.0], [51.3, 720.0], [51.4, 723.0], [51.5, 725.0], [51.6, 728.0], [51.7, 731.0], [51.8, 733.0], [51.9, 736.0], [52.0, 739.0], [52.1, 742.0], [52.2, 744.0], [52.3, 747.0], [52.4, 750.0], [52.5, 752.0], [52.6, 755.0], [52.7, 757.0], [52.8, 760.0], [52.9, 763.0], [53.0, 765.0], [53.1, 768.0], [53.2, 770.0], [53.3, 772.0], [53.4, 775.0], [53.5, 778.0], [53.6, 780.0], [53.7, 783.0], [53.8, 785.0], [53.9, 788.0], [54.0, 791.0], [54.1, 793.0], [54.2, 795.0], [54.3, 797.0], [54.4, 800.0], [54.5, 802.0], [54.6, 804.0], [54.7, 807.0], [54.8, 810.0], [54.9, 812.0], [55.0, 814.0], [55.1, 816.0], [55.2, 819.0], [55.3, 822.0], [55.4, 824.0], [55.5, 827.0], [55.6, 829.0], [55.7, 831.0], [55.8, 833.0], [55.9, 836.0], [56.0, 838.0], [56.1, 841.0], [56.2, 843.0], [56.3, 845.0], [56.4, 848.0], [56.5, 850.0], [56.6, 853.0], [56.7, 855.0], [56.8, 857.0], [56.9, 860.0], [57.0, 862.0], [57.1, 865.0], [57.2, 867.0], [57.3, 869.0], [57.4, 871.0], [57.5, 873.0], [57.6, 875.0], [57.7, 878.0], [57.8, 880.0], [57.9, 882.0], [58.0, 885.0], [58.1, 887.0], [58.2, 889.0], [58.3, 891.0], [58.4, 893.0], [58.5, 895.0], [58.6, 898.0], [58.7, 900.0], [58.8, 902.0], [58.9, 904.0], [59.0, 906.0], [59.1, 908.0], [59.2, 910.0], [59.3, 913.0], [59.4, 915.0], [59.5, 917.0], [59.6, 919.0], [59.7, 921.0], [59.8, 923.0], [59.9, 925.0], [60.0, 927.0], [60.1, 929.0], [60.2, 931.0], [60.3, 933.0], [60.4, 935.0], [60.5, 937.0], [60.6, 939.0], [60.7, 941.0], [60.8, 944.0], [60.9, 946.0], [61.0, 948.0], [61.1, 950.0], [61.2, 952.0], [61.3, 954.0], [61.4, 956.0], [61.5, 958.0], [61.6, 960.0], [61.7, 962.0], [61.8, 965.0], [61.9, 967.0], [62.0, 969.0], [62.1, 971.0], [62.2, 973.0], [62.3, 975.0], [62.4, 976.0], [62.5, 978.0], [62.6, 981.0], [62.7, 983.0], [62.8, 985.0], [62.9, 987.0], [63.0, 989.0], [63.1, 991.0], [63.2, 993.0], [63.3, 995.0], [63.4, 997.0], [63.5, 999.0], [63.6, 1001.0], [63.7, 1003.0], [63.8, 1005.0], [63.9, 1007.0], [64.0, 1009.0], [64.1, 1011.0], [64.2, 1013.0], [64.3, 1015.0], [64.4, 1018.0], [64.5, 1020.0], [64.6, 1022.0], [64.7, 1024.0], [64.8, 1026.0], [64.9, 1028.0], [65.0, 1031.0], [65.1, 1033.0], [65.2, 1035.0], [65.3, 1037.0], [65.4, 1040.0], [65.5, 1042.0], [65.6, 1044.0], [65.7, 1046.0], [65.8, 1048.0], [65.9, 1050.0], [66.0, 1052.0], [66.1, 1054.0], [66.2, 1057.0], [66.3, 1059.0], [66.4, 1061.0], [66.5, 1063.0], [66.6, 1065.0], [66.7, 1068.0], [66.8, 1070.0], [66.9, 1072.0], [67.0, 1074.0], [67.1, 1076.0], [67.2, 1078.0], [67.3, 1080.0], [67.4, 1083.0], [67.5, 1085.0], [67.6, 1087.0], [67.7, 1089.0], [67.8, 1091.0], [67.9, 1094.0], [68.0, 1096.0], [68.1, 1098.0], [68.2, 1100.0], [68.3, 1102.0], [68.4, 1104.0], [68.5, 1106.0], [68.6, 1108.0], [68.7, 1110.0], [68.8, 1112.0], [68.9, 1114.0], [69.0, 1116.0], [69.1, 1117.0], [69.2, 1119.0], [69.3, 1121.0], [69.4, 1123.0], [69.5, 1125.0], [69.6, 1127.0], [69.7, 1130.0], [69.8, 1132.0], [69.9, 1134.0], [70.0, 1136.0], [70.1, 1138.0], [70.2, 1140.0], [70.3, 1142.0], [70.4, 1144.0], [70.5, 1146.0], [70.6, 1148.0], [70.7, 1150.0], [70.8, 1152.0], [70.9, 1154.0], [71.0, 1156.0], [71.1, 1158.0], [71.2, 1161.0], [71.3, 1163.0], [71.4, 1165.0], [71.5, 1167.0], [71.6, 1170.0], [71.7, 1171.0], [71.8, 1173.0], [71.9, 1176.0], [72.0, 1178.0], [72.1, 1180.0], [72.2, 1182.0], [72.3, 1185.0], [72.4, 1187.0], [72.5, 1189.0], [72.6, 1191.0], [72.7, 1193.0], [72.8, 1195.0], [72.9, 1198.0], [73.0, 1200.0], [73.1, 1202.0], [73.2, 1204.0], [73.3, 1206.0], [73.4, 1209.0], [73.5, 1211.0], [73.6, 1214.0], [73.7, 1215.0], [73.8, 1218.0], [73.9, 1220.0], [74.0, 1221.0], [74.1, 1223.0], [74.2, 1225.0], [74.3, 1228.0], [74.4, 1230.0], [74.5, 1232.0], [74.6, 1234.0], [74.7, 1236.0], [74.8, 1238.0], [74.9, 1241.0], [75.0, 1243.0], [75.1, 1245.0], [75.2, 1247.0], [75.3, 1250.0], [75.4, 1252.0], [75.5, 1254.0], [75.6, 1257.0], [75.7, 1259.0], [75.8, 1261.0], [75.9, 1263.0], [76.0, 1266.0], [76.1, 1268.0], [76.2, 1271.0], [76.3, 1273.0], [76.4, 1275.0], [76.5, 1278.0], [76.6, 1280.0], [76.7, 1282.0], [76.8, 1284.0], [76.9, 1287.0], [77.0, 1289.0], [77.1, 1292.0], [77.2, 1294.0], [77.3, 1296.0], [77.4, 1299.0], [77.5, 1301.0], [77.6, 1304.0], [77.7, 1306.0], [77.8, 1308.0], [77.9, 1311.0], [78.0, 1313.0], [78.1, 1316.0], [78.2, 1318.0], [78.3, 1321.0], [78.4, 1323.0], [78.5, 1326.0], [78.6, 1328.0], [78.7, 1331.0], [78.8, 1333.0], [78.9, 1336.0], [79.0, 1339.0], [79.1, 1341.0], [79.2, 1344.0], [79.3, 1346.0], [79.4, 1349.0], [79.5, 1351.0], [79.6, 1354.0], [79.7, 1356.0], [79.8, 1359.0], [79.9, 1361.0], [80.0, 1363.0], [80.1, 1366.0], [80.2, 1369.0], [80.3, 1372.0], [80.4, 1375.0], [80.5, 1377.0], [80.6, 1380.0], [80.7, 1383.0], [80.8, 1385.0], [80.9, 1388.0], [81.0, 1391.0], [81.1, 1393.0], [81.2, 1396.0], [81.3, 1399.0], [81.4, 1401.0], [81.5, 1404.0], [81.6, 1407.0], [81.7, 1409.0], [81.8, 1412.0], [81.9, 1415.0], [82.0, 1418.0], [82.1, 1420.0], [82.2, 1423.0], [82.3, 1425.0], [82.4, 1428.0], [82.5, 1431.0], [82.6, 1434.0], [82.7, 1437.0], [82.8, 1439.0], [82.9, 1442.0], [83.0, 1446.0], [83.1, 1449.0], [83.2, 1452.0], [83.3, 1455.0], [83.4, 1458.0], [83.5, 1461.0], [83.6, 1464.0], [83.7, 1468.0], [83.8, 1471.0], [83.9, 1474.0], [84.0, 1477.0], [84.1, 1481.0], [84.2, 1484.0], [84.3, 1486.0], [84.4, 1489.0], [84.5, 1492.0], [84.6, 1495.0], [84.7, 1498.0], [84.8, 1501.0], [84.9, 1504.0], [85.0, 1507.0], [85.1, 1511.0], [85.2, 1514.0], [85.3, 1518.0], [85.4, 1521.0], [85.5, 1524.0], [85.6, 1528.0], [85.7, 1531.0], [85.8, 1534.0], [85.9, 1537.0], [86.0, 1541.0], [86.1, 1544.0], [86.2, 1548.0], [86.3, 1551.0], [86.4, 1555.0], [86.5, 1558.0], [86.6, 1562.0], [86.7, 1565.0], [86.8, 1569.0], [86.9, 1572.0], [87.0, 1575.0], [87.1, 1578.0], [87.2, 1581.0], [87.3, 1585.0], [87.4, 1589.0], [87.5, 1592.0], [87.6, 1596.0], [87.7, 1600.0], [87.8, 1604.0], [87.9, 1608.0], [88.0, 1611.0], [88.1, 1615.0], [88.2, 1619.0], [88.3, 1623.0], [88.4, 1627.0], [88.5, 1631.0], [88.6, 1635.0], [88.7, 1639.0], [88.8, 1643.0], [88.9, 1646.0], [89.0, 1650.0], [89.1, 1655.0], [89.2, 1659.0], [89.3, 1663.0], [89.4, 1667.0], [89.5, 1670.0], [89.6, 1675.0], [89.7, 1678.0], [89.8, 1682.0], [89.9, 1686.0], [90.0, 1691.0], [90.1, 1695.0], [90.2, 1699.0], [90.3, 1704.0], [90.4, 1709.0], [90.5, 1713.0], [90.6, 1718.0], [90.7, 1723.0], [90.8, 1727.0], [90.9, 1733.0], [91.0, 1738.0], [91.1, 1743.0], [91.2, 1748.0], [91.3, 1753.0], [91.4, 1757.0], [91.5, 1762.0], [91.6, 1768.0], [91.7, 1774.0], [91.8, 1778.0], [91.9, 1783.0], [92.0, 1788.0], [92.1, 1793.0], [92.2, 1799.0], [92.3, 1804.0], [92.4, 1809.0], [92.5, 1815.0], [92.6, 1822.0], [92.7, 1827.0], [92.8, 1834.0], [92.9, 1839.0], [93.0, 1846.0], [93.1, 1852.0], [93.2, 1859.0], [93.3, 1865.0], [93.4, 1871.0], [93.5, 1876.0], [93.6, 1882.0], [93.7, 1889.0], [93.8, 1895.0], [93.9, 1902.0], [94.0, 1909.0], [94.1, 1917.0], [94.2, 1923.0], [94.3, 1930.0], [94.4, 1938.0], [94.5, 1945.0], [94.6, 1952.0], [94.7, 1960.0], [94.8, 1966.0], [94.9, 1973.0], [95.0, 1981.0], [95.1, 1990.0], [95.2, 1999.0], [95.3, 2007.0], [95.4, 2015.0], [95.5, 2022.0], [95.6, 2031.0], [95.7, 2040.0], [95.8, 2048.0], [95.9, 2058.0], [96.0, 2067.0], [96.1, 2076.0], [96.2, 2084.0], [96.3, 2095.0], [96.4, 2105.0], [96.5, 2116.0], [96.6, 2125.0], [96.7, 2136.0], [96.8, 2147.0], [96.9, 2160.0], [97.0, 2172.0], [97.1, 2185.0], [97.2, 2196.0], [97.3, 2209.0], [97.4, 2224.0], [97.5, 2239.0], [97.6, 2254.0], [97.7, 2270.0], [97.8, 2285.0], [97.9, 2302.0], [98.0, 2319.0], [98.1, 2335.0], [98.2, 2351.0], [98.3, 2372.0], [98.4, 2390.0], [98.5, 2412.0], [98.6, 2434.0], [98.7, 2463.0], [98.8, 2490.0], [98.9, 2520.0], [99.0, 2551.0], [99.1, 2585.0], [99.2, 2619.0], [99.3, 2667.0], [99.4, 2717.0], [99.5, 2762.0], [99.6, 2829.0], [99.7, 2920.0], [99.8, 3053.0], [99.9, 3257.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 28781.0, "series": [{"data": [[0.0, 8452.0], [600.0, 3403.0], [700.0, 4465.0], [800.0, 5028.0], [900.0, 5685.0], [1000.0, 5435.0], [1100.0, 5623.0], [1200.0, 5230.0], [1300.0, 4574.0], [1400.0, 3988.0], [1500.0, 3463.0], [100.0, 28781.0], [1600.0, 2944.0], [1700.0, 2362.0], [1800.0, 1935.0], [1900.0, 1566.0], [2000.0, 1334.0], [2100.0, 1041.0], [2200.0, 772.0], [2300.0, 654.0], [2400.0, 463.0], [2500.0, 354.0], [2600.0, 261.0], [2700.0, 233.0], [2800.0, 139.0], [2900.0, 90.0], [3000.0, 87.0], [3100.0, 53.0], [200.0, 9188.0], [3200.0, 44.0], [3300.0, 32.0], [3400.0, 22.0], [3500.0, 14.0], [3700.0, 7.0], [3600.0, 7.0], [3800.0, 8.0], [3900.0, 4.0], [4000.0, 1.0], [4200.0, 2.0], [300.0, 4004.0], [400.0, 2718.0], [500.0, 2734.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 17850.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 53169.0, "series": [{"data": [[0.0, 53169.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 46181.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 17850.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.72847832E12, "maxY": 16.0, "series": [{"data": [[1.7284845E12, 12.0], [1.72848612E12, 12.0], [1.7284848E12, 12.0], [1.72848582E12, 12.0], [1.72848642E12, 8.56030534351145], [1.7284842E12, 12.0], [1.72848522E12, 12.0], [1.72848462E12, 12.0], [1.72848552E12, 12.0], [1.72848492E12, 12.0], [1.72848564E12, 12.0], [1.72848432E12, 12.0], [1.72848534E12, 12.0], [1.72848624E12, 12.0], [1.72848594E12, 12.0], [1.72848474E12, 12.0], [1.72848636E12, 11.693258426966297], [1.72848504E12, 12.0], [1.72848606E12, 12.0], [1.72848414E12, 12.0], [1.72848444E12, 12.0], [1.72848486E12, 12.0], [1.72848576E12, 12.0], [1.72848516E12, 12.0], [1.72848546E12, 12.0], [1.72848426E12, 12.0], [1.72848588E12, 12.0], [1.72848456E12, 12.0], [1.72848558E12, 12.0], [1.72848648E12, 4.18627450980392], [1.72848618E12, 12.0], [1.72848498E12, 12.0], [1.7284863E12, 12.0], [1.72848438E12, 12.0], [1.72848528E12, 12.0], [1.72848468E12, 12.0], [1.7284854E12, 12.0], [1.72848408E12, 9.0], [1.7284851E12, 12.0], [1.728486E12, 12.0], [1.7284857E12, 12.0]], "isOverall": false, "label": "12", "isController": false}, {"data": [[1.72847868E12, 1.9230769230769231], [1.72847838E12, 2.0], [1.72847832E12, 2.0], [1.7284785E12, 2.0], [1.72847844E12, 2.0], [1.72847862E12, 2.0], [1.72847856E12, 2.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.72848078E12, 4.0], [1.72847886E12, 4.0], [1.72847916E12, 4.0], [1.72847946E12, 4.0], [1.72847976E12, 4.0], [1.72848006E12, 4.0], [1.72848036E12, 4.0], [1.72848066E12, 4.0], [1.72848108E12, 4.0], [1.72847874E12, 4.0], [1.72848096E12, 4.0], [1.72847904E12, 4.0], [1.72847868E12, 3.9907407407407405], [1.7284803E12, 4.0], [1.7284806E12, 4.0], [1.7284809E12, 4.0], [1.72847898E12, 4.0], [1.72847928E12, 4.0], [1.72847958E12, 4.0], [1.7284812E12, 2.8151260504201683], [1.72847988E12, 4.0], [1.72848018E12, 4.0], [1.72848048E12, 4.0], [1.72847982E12, 4.0], [1.72848012E12, 4.0], [1.7284788E12, 4.0], [1.72848042E12, 4.0], [1.72848072E12, 4.0], [1.72848102E12, 4.0], [1.7284791E12, 4.0], [1.7284794E12, 4.0], [1.7284797E12, 4.0], [1.72848E12, 4.0], [1.72847934E12, 4.0], [1.72847964E12, 4.0], [1.72848114E12, 4.0], [1.72847994E12, 4.0], [1.72848024E12, 4.0], [1.72847892E12, 4.0], [1.72848054E12, 4.0], [1.72848084E12, 4.0], [1.72847922E12, 4.0], [1.72847952E12, 4.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.72848774E12, 16.0], [1.72848804E12, 16.0], [1.72848672E12, 16.0], [1.72848834E12, 9.325581395348834], [1.72848684E12, 16.0], [1.72848654E12, 16.0], [1.72848714E12, 16.0], [1.72848744E12, 16.0], [1.72848726E12, 16.0], [1.72848756E12, 16.0], [1.72848786E12, 16.0], [1.72848816E12, 16.0], [1.72848798E12, 16.0], [1.72848828E12, 14.982058545797923], [1.72848696E12, 16.0], [1.72848666E12, 16.0], [1.72848708E12, 16.0], [1.72848678E12, 16.0], [1.72848738E12, 16.0], [1.72848768E12, 16.0], [1.7284875E12, 16.0], [1.7284878E12, 16.0], [1.72848648E12, 15.905882352941177], [1.7284881E12, 16.0], [1.7284884E12, 1.0], [1.7284866E12, 16.0], [1.72848822E12, 15.83960396039604], [1.7284872E12, 16.0], [1.7284869E12, 16.0], [1.72848732E12, 16.0], [1.72848702E12, 16.0], [1.72848762E12, 16.0], [1.72848792E12, 16.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.72848258E12, 8.0], [1.72848198E12, 8.0], [1.72848138E12, 8.0], [1.7284836E12, 8.0], [1.728483E12, 8.0], [1.7284824E12, 8.0], [1.72848402E12, 7.138888888888889], [1.7284818E12, 8.0], [1.72848342E12, 8.0], [1.7284812E12, 7.993333333333338], [1.72848282E12, 8.0], [1.72848222E12, 8.0], [1.72848192E12, 8.0], [1.72848354E12, 8.0], [1.72848132E12, 8.0], [1.72848294E12, 8.0], [1.72848234E12, 8.0], [1.72848174E12, 8.0], [1.72848396E12, 8.0], [1.72848336E12, 8.0], [1.72848276E12, 8.0], [1.72848216E12, 8.0], [1.72848378E12, 8.0], [1.72848156E12, 8.0], [1.72848318E12, 8.0], [1.72848288E12, 8.0], [1.72848228E12, 8.0], [1.7284839E12, 8.0], [1.72848168E12, 8.0], [1.7284833E12, 8.0], [1.7284827E12, 8.0], [1.7284821E12, 8.0], [1.7284815E12, 8.0], [1.72848372E12, 8.0], [1.72848312E12, 8.0], [1.72848252E12, 8.0], [1.72848162E12, 8.0], [1.72848384E12, 8.0], [1.72848324E12, 8.0], [1.72848264E12, 8.0], [1.72848204E12, 8.0], [1.72848366E12, 8.0], [1.72848144E12, 8.0], [1.72848306E12, 8.0], [1.72848246E12, 8.0], [1.72848186E12, 8.0], [1.72848408E12, 3.9893238434163685], [1.72848126E12, 8.0], [1.72848348E12, 8.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7284884E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 614.3456402199527, "minX": 1.0, "maxY": 1044.7755102040817, "series": [{"data": [[2.0, 614.3456402199527], [8.0, 715.5145462027928], [9.0, 771.2481751824815], [10.0, 698.7906976744185], [11.0, 717.742700729927], [3.0, 667.0259740259743], [12.0, 778.3957067522682], [13.0, 854.5970149253732], [14.0, 1044.7755102040817], [15.0, 855.6963394342765], [1.0, 765.2739726027394], [4.0, 624.0287581699332], [16.0, 930.6772256866097], [5.0, 695.2512820512819], [6.0, 707.3216080402007], [7.0, 669.7305389221558]], "isOverall": false, "label": "getmap", "isController": false}, {"data": [[10.706655290102418, 777.633105802056]], "isOverall": false, "label": "getmap-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.72847832E12, "maxY": 5.474627468333333E7, "series": [{"data": [[1.72848258E12, 3.412325278333333E7], [1.7284848E12, 4.5957481266666666E7], [1.72847916E12, 2.0695047083333332E7], [1.72848582E12, 4.657408938333333E7], [1.72848804E12, 5.3097806166666664E7], [1.72848684E12, 5.196911915E7], [1.72848036E12, 1.9234581816666666E7], [1.72848138E12, 3.342339505E7], [1.7284836E12, 3.49388185E7], [1.72848462E12, 4.709488896666667E7], [1.7284824E12, 3.380935196666667E7], [1.72848564E12, 4.627746038333333E7], [1.72847898E12, 1.9560967733333334E7], [1.72848342E12, 3.405116181666667E7], [1.72848786E12, 5.1269929833333336E7], [1.7284812E12, 2.14714865E7], [1.72848018E12, 2.014905215E7], [1.72848222E12, 3.486958861666667E7], [1.72848444E12, 4.7580504416666664E7], [1.72848666E12, 5.3160934766666666E7], [1.72848192E12, 3.332488325E7], [1.72848738E12, 5.241425688333333E7], [1.7284785E12, 9621971.366666667], [1.72848072E12, 1.92586303E7], [1.72848294E12, 3.2764487633333333E7], [1.72848516E12, 4.644556328333333E7], [1.7284797E12, 2.0259284466666665E7], [1.72848174E12, 3.4770302016666666E7], [1.72848396E12, 3.37424165E7], [1.72848618E12, 4.649566138333333E7], [1.7284884E12, 1750151.75], [1.72848498E12, 4.712171021666667E7], [1.72847934E12, 2.029799505E7], [1.72848822E12, 5.081263178333333E7], [1.72847832E12, 4162652.4833333334], [1.72848276E12, 3.43579564E7], [1.7284872E12, 5.2125407766666666E7], [1.72848054E12, 1.9691908766666666E7], [1.72848378E12, 3.3713755233333334E7], [1.72848702E12, 5.263883068333333E7], [1.72848156E12, 3.34360209E7], [1.728486E12, 4.8175756983333334E7], [1.72847952E12, 1.991833215E7], [1.7284845E12, 4.869168135E7], [1.72848774E12, 5.298421575E7], [1.72847886E12, 2.0339187833333332E7], [1.72848228E12, 3.383100195E7], [1.72848672E12, 5.272326765E7], [1.72848006E12, 1.9082013083333332E7], [1.7284833E12, 3.4706757E7], [1.72848654E12, 5.16811563E7], [1.72848108E12, 1.8207706133333333E7], [1.72848552E12, 4.599821931666667E7], [1.72847904E12, 1.93346458E7], [1.72847868E12, 1.2174517466666667E7], [1.72848432E12, 4.7728399666666664E7], [1.7284821E12, 3.3784290916666664E7], [1.72848534E12, 4.740453053333333E7], [1.72848756E12, 5.4661859983333334E7], [1.7284809E12, 1.981649115E7], [1.72848312E12, 3.3481733166666668E7], [1.72848636E12, 4.71147445E7], [1.72847988E12, 2.00515587E7], [1.72848414E12, 4.753381175E7], [1.72848708E12, 5.27119865E7], [1.72848162E12, 3.31306694E7], [1.72848384E12, 3.469090246666667E7], [1.72848042E12, 1.98432319E7], [1.72848486E12, 4.8203283516666666E7], [1.72848264E12, 3.401145E7], [1.72848588E12, 4.725857805E7], [1.7284794E12, 2.0026973583333332E7], [1.72848366E12, 3.2810382916666668E7], [1.7284881E12, 5.290802536666667E7], [1.72848144E12, 3.493384118333333E7], [1.72848024E12, 2.0764504366666667E7], [1.72848246E12, 3.41468617E7], [1.72848468E12, 4.7801008333333336E7], [1.7284869E12, 5.474627468333333E7], [1.72847922E12, 1.94637595E7], [1.72848126E12, 3.45116275E7], [1.72848348E12, 3.554079205E7], [1.7284857E12, 4.620262531666667E7], [1.72848792E12, 4.982635036666667E7], [1.72848078E12, 1.9873739583333332E7], [1.72848642E12, 3.49735248E7], [1.72847976E12, 1.997004635E7], [1.72848198E12, 3.3048620983333334E7], [1.7284842E12, 4.72593829E7], [1.72848522E12, 4.491447103333333E7], [1.728483E12, 3.454579531666667E7], [1.72847874E12, 1.8719969116666667E7], [1.72848096E12, 1.987452375E7], [1.72848744E12, 5.212810953333333E7], [1.72848402E12, 3.1366475016666666E7], [1.72847838E12, 1.0101161516666668E7], [1.7284806E12, 2.0327570233333334E7], [1.72848726E12, 5.2996882233333334E7], [1.7284818E12, 3.3764347083333336E7], [1.72848624E12, 4.730087806666667E7], [1.72847958E12, 1.9619999383333333E7], [1.72848282E12, 3.3814161666666664E7], [1.72848504E12, 4.754786411666667E7], [1.72848606E12, 4.8096476666666664E7], [1.72848828E12, 5.052944596666667E7], [1.72847856E12, 1.0431032083333334E7], [1.72848354E12, 3.5157550916666664E7], [1.72848012E12, 1.954650815E7], [1.72848678E12, 5.301189481666667E7], [1.72848132E12, 3.3064212466666665E7], [1.72848576E12, 4.367914538333333E7], [1.7284791E12, 2.0496948633333333E7], [1.72848234E12, 3.40597406E7], [1.72848456E12, 4.828172665E7], [1.72848558E12, 4.4385482766666666E7], [1.7284878E12, 5.264548896666667E7], [1.7284866E12, 5.279786493333333E7], [1.72848114E12, 1.9130048216666665E7], [1.72848336E12, 3.297546635E7], [1.72848438E12, 4.859067203333333E7], [1.72847994E12, 1.92164892E7], [1.72847892E12, 1.9520189383333333E7], [1.72848216E12, 3.385312045E7], [1.7284854E12, 4.537696785E7], [1.72848318E12, 3.455968518333333E7], [1.72848762E12, 5.165112403333333E7], [1.72848288E12, 3.3056504266666666E7], [1.72848612E12, 4.687515818333333E7], [1.72847946E12, 1.9612835966666665E7], [1.7284839E12, 3.40500725E7], [1.72848834E12, 2.961779485E7], [1.72847844E12, 1.00715257E7], [1.72848168E12, 3.40851852E7], [1.72848066E12, 2.0780132416666668E7], [1.7284827E12, 3.4046581016666666E7], [1.72848492E12, 4.598357268333333E7], [1.72848714E12, 5.333726456666667E7], [1.7284803E12, 1.9018902233333334E7], [1.72847928E12, 1.97865669E7], [1.7284815E12, 3.5324112766666666E7], [1.72848372E12, 3.4133774733333334E7], [1.72848594E12, 4.606816656666667E7], [1.72848816E12, 5.162758586666667E7], [1.72848474E12, 4.6727344516666666E7], [1.72848798E12, 5.31662787E7], [1.72848252E12, 3.398936606666667E7], [1.72848696E12, 5.2861302483333334E7], [1.72848048E12, 1.9969515133333333E7], [1.72847982E12, 1.941512645E7], [1.7284788E12, 1.926053865E7], [1.72848324E12, 3.2434063716666665E7], [1.72848546E12, 4.8971457016666666E7], [1.72848768E12, 5.235522721666667E7], [1.72848102E12, 1.9502216333333332E7], [1.72848426E12, 4.666789956666667E7], [1.7284875E12, 5.227157411666667E7], [1.72848648E12, 3.0528049716666665E7], [1.72848204E12, 3.393049161666667E7], [1.72848E12, 1.8472039933333334E7], [1.72848306E12, 3.5612588733333334E7], [1.72847964E12, 1.9170533233333334E7], [1.7284863E12, 4.6031089766666666E7], [1.72848528E12, 4.684971815E7], [1.72848732E12, 5.275094963333333E7], [1.72847862E12, 9443305.516666668], [1.72848084E12, 1.85688034E7], [1.72848186E12, 3.09957036E7], [1.72848408E12, 1.4110921783333333E7], [1.7284851E12, 4.6833898416666664E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72848258E12, 0.0], [1.7284848E12, 0.0], [1.72847916E12, 0.0], [1.72848582E12, 0.0], [1.72848804E12, 0.0], [1.72848684E12, 0.0], [1.72848036E12, 0.0], [1.72848138E12, 0.0], [1.7284836E12, 0.0], [1.72848462E12, 0.0], [1.7284824E12, 0.0], [1.72848564E12, 0.0], [1.72847898E12, 0.0], [1.72848342E12, 0.0], [1.72848786E12, 0.0], [1.7284812E12, 0.0], [1.72848018E12, 0.0], [1.72848222E12, 0.0], [1.72848444E12, 0.0], [1.72848666E12, 0.0], [1.72848192E12, 0.0], [1.72848738E12, 0.0], [1.7284785E12, 0.0], [1.72848072E12, 0.0], [1.72848294E12, 0.0], [1.72848516E12, 0.0], [1.7284797E12, 0.0], [1.72848174E12, 0.0], [1.72848396E12, 0.0], [1.72848618E12, 0.0], [1.7284884E12, 0.0], [1.72848498E12, 0.0], [1.72847934E12, 0.0], [1.72848822E12, 0.0], [1.72847832E12, 0.0], [1.72848276E12, 0.0], [1.7284872E12, 0.0], [1.72848054E12, 0.0], [1.72848378E12, 0.0], [1.72848702E12, 0.0], [1.72848156E12, 0.0], [1.728486E12, 0.0], [1.72847952E12, 0.0], [1.7284845E12, 0.0], [1.72848774E12, 0.0], [1.72847886E12, 0.0], [1.72848228E12, 0.0], [1.72848672E12, 0.0], [1.72848006E12, 0.0], [1.7284833E12, 0.0], [1.72848654E12, 0.0], [1.72848108E12, 0.0], [1.72848552E12, 0.0], [1.72847904E12, 0.0], [1.72847868E12, 0.0], [1.72848432E12, 0.0], [1.7284821E12, 0.0], [1.72848534E12, 0.0], [1.72848756E12, 0.0], [1.7284809E12, 0.0], [1.72848312E12, 0.0], [1.72848636E12, 0.0], [1.72847988E12, 0.0], [1.72848414E12, 0.0], [1.72848708E12, 0.0], [1.72848162E12, 0.0], [1.72848384E12, 0.0], [1.72848042E12, 0.0], [1.72848486E12, 0.0], [1.72848264E12, 0.0], [1.72848588E12, 0.0], [1.7284794E12, 0.0], [1.72848366E12, 0.0], [1.7284881E12, 0.0], [1.72848144E12, 0.0], [1.72848024E12, 0.0], [1.72848246E12, 0.0], [1.72848468E12, 0.0], [1.7284869E12, 0.0], [1.72847922E12, 0.0], [1.72848126E12, 0.0], [1.72848348E12, 0.0], [1.7284857E12, 0.0], [1.72848792E12, 0.0], [1.72848078E12, 0.0], [1.72848642E12, 0.0], [1.72847976E12, 0.0], [1.72848198E12, 0.0], [1.7284842E12, 0.0], [1.72848522E12, 0.0], [1.728483E12, 0.0], [1.72847874E12, 0.0], [1.72848096E12, 0.0], [1.72848744E12, 0.0], [1.72848402E12, 0.0], [1.72847838E12, 0.0], [1.7284806E12, 0.0], [1.72848726E12, 0.0], [1.7284818E12, 0.0], [1.72848624E12, 0.0], [1.72847958E12, 0.0], [1.72848282E12, 0.0], [1.72848504E12, 0.0], [1.72848606E12, 0.0], [1.72848828E12, 0.0], [1.72847856E12, 0.0], [1.72848354E12, 0.0], [1.72848012E12, 0.0], [1.72848678E12, 0.0], [1.72848132E12, 0.0], [1.72848576E12, 0.0], [1.7284791E12, 0.0], [1.72848234E12, 0.0], [1.72848456E12, 0.0], [1.72848558E12, 0.0], [1.7284878E12, 0.0], [1.7284866E12, 0.0], [1.72848114E12, 0.0], [1.72848336E12, 0.0], [1.72848438E12, 0.0], [1.72847994E12, 0.0], [1.72847892E12, 0.0], [1.72848216E12, 0.0], [1.7284854E12, 0.0], [1.72848318E12, 0.0], [1.72848762E12, 0.0], [1.72848288E12, 0.0], [1.72848612E12, 0.0], [1.72847946E12, 0.0], [1.7284839E12, 0.0], [1.72848834E12, 0.0], [1.72847844E12, 0.0], [1.72848168E12, 0.0], [1.72848066E12, 0.0], [1.7284827E12, 0.0], [1.72848492E12, 0.0], [1.72848714E12, 0.0], [1.7284803E12, 0.0], [1.72847928E12, 0.0], [1.7284815E12, 0.0], [1.72848372E12, 0.0], [1.72848594E12, 0.0], [1.72848816E12, 0.0], [1.72848474E12, 0.0], [1.72848798E12, 0.0], [1.72848252E12, 0.0], [1.72848696E12, 0.0], [1.72848048E12, 0.0], [1.72847982E12, 0.0], [1.7284788E12, 0.0], [1.72848324E12, 0.0], [1.72848546E12, 0.0], [1.72848768E12, 0.0], [1.72848102E12, 0.0], [1.72848426E12, 0.0], [1.7284875E12, 0.0], [1.72848648E12, 0.0], [1.72848204E12, 0.0], [1.72848E12, 0.0], [1.72848306E12, 0.0], [1.72847964E12, 0.0], [1.7284863E12, 0.0], [1.72848528E12, 0.0], [1.72848732E12, 0.0], [1.72847862E12, 0.0], [1.72848084E12, 0.0], [1.72848186E12, 0.0], [1.72848408E12, 0.0], [1.7284851E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7284884E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 560.6955503512877, "minX": 1.72847832E12, "maxY": 1033.0541125541117, "series": [{"data": [[1.72848258E12, 719.9381598793369], [1.7284848E12, 781.3096774193547], [1.72847916E12, 622.2643979057598], [1.72848582E12, 758.8461538461523], [1.72848804E12, 906.2476459510365], [1.72848684E12, 875.3659652333033], [1.72848036E12, 628.9631578947368], [1.72848138E12, 708.1422222222225], [1.7284836E12, 718.417664670658], [1.72848462E12, 757.9693446088795], [1.7284824E12, 675.116736990155], [1.72848564E12, 806.702460850112], [1.72847898E12, 655.6311475409834], [1.72848342E12, 729.0709969788518], [1.72848786E12, 907.0681818181823], [1.7284812E12, 644.763723150358], [1.72848018E12, 626.8694516971274], [1.72848222E12, 728.5572289156626], [1.72848444E12, 748.8084210526312], [1.72848666E12, 943.988246816847], [1.72848192E12, 701.4194484760515], [1.72848738E12, 903.8086710650333], [1.7284785E12, 608.7878787878792], [1.72848072E12, 678.2949438202253], [1.72848294E12, 705.275555555556], [1.72848516E12, 817.8376844494884], [1.7284797E12, 673.4166666666669], [1.72848174E12, 680.8751773049643], [1.72848396E12, 738.2523076923084], [1.72848618E12, 752.2145110410098], [1.7284884E12, 988.5652173913044], [1.72848498E12, 770.1766595289079], [1.72847934E12, 649.0378378378377], [1.72848822E12, 946.4099009900982], [1.72847832E12, 717.4776119402985], [1.72848276E12, 725.6515151515158], [1.7284872E12, 927.7635658914735], [1.72848054E12, 560.6955503512877], [1.72848378E12, 719.8221225710018], [1.72848702E12, 917.4134980988588], [1.72848156E12, 733.8018433179723], [1.728486E12, 792.9923161361146], [1.72847952E12, 624.5440414507771], [1.7284845E12, 829.4009163802986], [1.72848774E12, 918.4908916586769], [1.72847886E12, 636.1266490765173], [1.72848228E12, 710.315396113602], [1.72848672E12, 887.2824074074072], [1.72848006E12, 660.2445054945061], [1.7284833E12, 736.4946889226098], [1.72848654E12, 880.9734432234429], [1.72848108E12, 570.2023809523805], [1.72848552E12, 805.3812709030099], [1.72847904E12, 673.0055865921786], [1.72847868E12, 591.4023904382473], [1.72848432E12, 773.1011714589996], [1.7284821E12, 719.7604790419161], [1.72848534E12, 792.0306681270534], [1.72848756E12, 952.7685459940649], [1.7284809E12, 674.131652661065], [1.72848312E12, 683.4054054054056], [1.72848636E12, 789.677528089888], [1.72847988E12, 622.698701298701], [1.72848414E12, 748.278125], [1.72848708E12, 927.7580174927115], [1.72848162E12, 695.4841040462433], [1.72848384E12, 734.4609494640122], [1.72848042E12, 615.9974489795917], [1.72848486E12, 795.260532150776], [1.72848264E12, 748.3782945736435], [1.72848588E12, 813.7722660653886], [1.7284794E12, 693.0115606936422], [1.72848366E12, 698.4927113702616], [1.7284881E12, 910.1714285714281], [1.72848144E12, 708.2023633677992], [1.72848024E12, 635.3819628647215], [1.72848246E12, 705.0807635829663], [1.72848468E12, 804.7197309417045], [1.7284869E12, 960.6170000000004], [1.72847922E12, 601.8749999999999], [1.72848126E12, 752.6424050632907], [1.72848348E12, 719.1428571428578], [1.7284857E12, 772.9180151024818], [1.72848792E12, 931.4165863066544], [1.72848078E12, 619.1865284974092], [1.72848642E12, 753.1236641221375], [1.72847976E12, 616.632390745501], [1.72848198E12, 694.789550072569], [1.7284842E12, 757.0430672268909], [1.72848522E12, 744.3971044467427], [1.728483E12, 695.2813852813864], [1.72847874E12, 573.2529832935563], [1.72848096E12, 619.5747422680417], [1.72848744E12, 903.8509433962261], [1.72848402E12, 726.6475694444441], [1.72847838E12, 584.5441176470586], [1.7284806E12, 615.9716494845362], [1.72848726E12, 966.6750503018117], [1.7284818E12, 736.193548387096], [1.72848624E12, 795.2865044247776], [1.72847958E12, 624.7702349869448], [1.72848282E12, 715.9910714285711], [1.72848504E12, 822.6590126291622], [1.72848606E12, 758.5930232558142], [1.72848828E12, 846.6789423984899], [1.72847856E12, 582.1414634146338], [1.72848354E12, 737.7131901840493], [1.72848012E12, 604.436868686869], [1.72848678E12, 900.3629560336766], [1.72848132E12, 689.506419400856], [1.72848576E12, 764.7449521785339], [1.7284791E12, 607.5934343434348], [1.72848234E12, 697.5768115942033], [1.72848456E12, 807.2011173184363], [1.72848558E12, 798.1455555555544], [1.7284878E12, 974.4373737373736], [1.7284866E12, 915.4388145315487], [1.72848114E12, 596.6972704714648], [1.72848336E12, 713.8729446935724], [1.72848438E12, 816.4638009049778], [1.72847994E12, 576.9349397590364], [1.72847892E12, 600.7124999999993], [1.72848216E12, 730.4266055045879], [1.7284854E12, 770.5826180257519], [1.72848318E12, 717.3616071428581], [1.72848762E12, 932.9076773566559], [1.72848288E12, 685.152639087019], [1.72848612E12, 744.8797533401847], [1.72847946E12, 672.8732394366198], [1.7284839E12, 729.5638297872329], [1.72848834E12, 750.8156146179404], [1.72847844E12, 589.0980392156862], [1.72848168E12, 747.7352024922118], [1.72848066E12, 666.3722222222233], [1.7284827E12, 741.3508500772796], [1.72848492E12, 753.436913451512], [1.72848714E12, 949.5044247787619], [1.7284803E12, 604.5692695214104], [1.72847928E12, 647.3800539083554], [1.7284815E12, 702.2128279883384], [1.72848372E12, 731.8961832061071], [1.72848594E12, 775.4502164502155], [1.72848816E12, 1024.899572649573], [1.72848474E12, 736.4979423868306], [1.72848798E12, 942.151873767259], [1.72848252E12, 726.8338368580066], [1.72848696E12, 946.9504459861244], [1.72848048E12, 615.2384615384615], [1.72847982E12, 637.3643617021277], [1.7284788E12, 627.7453580901848], [1.72848324E12, 655.318559556787], [1.72848546E12, 748.8128898128897], [1.72848768E12, 1033.0541125541117], [1.72848102E12, 607.9441624365476], [1.72848426E12, 738.2932098765435], [1.7284875E12, 957.4363817097407], [1.72848648E12, 825.8728139904609], [1.72848204E12, 770.0144462279293], [1.72848E12, 578.3045563549166], [1.72848306E12, 738.4607087827434], [1.72847964E12, 604.505076142132], [1.7284863E12, 796.6441988950269], [1.72848528E12, 774.8160173160157], [1.72848732E12, 897.7144194756554], [1.72847862E12, 667.3575418994413], [1.72848084E12, 611.5319693094627], [1.72848186E12, 698.1332357247436], [1.72848408E12, 657.4863945578231], [1.7284851E12, 787.2350380848744]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7284884E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 385.44730679156913, "minX": 1.72847832E12, "maxY": 728.0963203463208, "series": [{"data": [[1.72848258E12, 516.651583710407], [1.7284848E12, 558.9397849462357], [1.72847916E12, 422.45287958115205], [1.72848582E12, 541.0389884088507], [1.72848804E12, 641.6393596986819], [1.72848684E12, 621.8252516010974], [1.72848036E12, 438.1552631578948], [1.72848138E12, 510.5096296296299], [1.7284836E12, 514.9685628742513], [1.72848462E12, 539.0264270613111], [1.7284824E12, 484.8832630098456], [1.72848564E12, 572.4362416107389], [1.72847898E12, 454.4426229508195], [1.72848342E12, 523.8232628398795], [1.72848786E12, 636.895833333334], [1.7284812E12, 445.474940334129], [1.72848018E12, 431.8668407310708], [1.72848222E12, 520.189759036145], [1.72848444E12, 531.5884210526316], [1.72848666E12, 664.6317335945149], [1.72848192E12, 508.35123367198855], [1.72848738E12, 638.0669180018843], [1.7284785E12, 423.4393939393938], [1.72848072E12, 471.1404494382019], [1.72848294E12, 509.07259259259246], [1.72848516E12, 583.2304199772989], [1.7284797E12, 465.07777777777767], [1.72848174E12, 484.96595744680843], [1.72848396E12, 531.9769230769238], [1.72848618E12, 533.4006309148274], [1.7284884E12, 715.6086956521739], [1.72848498E12, 547.4443254817986], [1.72847934E12, 444.2270270270272], [1.72848822E12, 676.9267326732671], [1.72847832E12, 496.5223880597016], [1.72848276E12, 520.4606060606063], [1.7284872E12, 658.4457364341077], [1.72848054E12, 385.44730679156913], [1.72848378E12, 517.3931240657702], [1.72848702E12, 651.2994296577947], [1.72848156E12, 529.3579109062977], [1.728486E12, 562.081229418222], [1.72847952E12, 430.69948186528495], [1.7284845E12, 587.7617411225656], [1.72848774E12, 646.5867689357618], [1.72847886E12, 437.0712401055411], [1.72848228E12, 511.29745889387146], [1.72848672E12, 627.0638888888892], [1.72848006E12, 460.541208791209], [1.7284833E12, 531.5022761760249], [1.72848654E12, 628.2783882783885], [1.72848108E12, 397.6380952380956], [1.72848552E12, 572.886287625418], [1.72847904E12, 470.07541899441327], [1.72847868E12, 406.3386454183266], [1.72848432E12, 550.898828541001], [1.7284821E12, 517.8128742514969], [1.72848534E12, 566.8521358159908], [1.72848756E12, 666.9782393669641], [1.7284809E12, 466.80112044817906], [1.72848312E12, 491.66287339971575], [1.72848636E12, 560.4224719101113], [1.72847988E12, 423.4623376623376], [1.72848414E12, 529.6052083333341], [1.72848708E12, 652.034985422741], [1.72848162E12, 503.5447976878611], [1.72848384E12, 525.7580398162327], [1.72848042E12, 425.4158163265308], [1.72848486E12, 562.0144124168518], [1.72848264E12, 539.9085271317834], [1.72848588E12, 579.0056369785801], [1.7284794E12, 479.21965317919114], [1.72848366E12, 507.1311953352772], [1.7284881E12, 641.4723809523805], [1.72848144E12, 504.4697193500739], [1.72848024E12, 432.6551724137931], [1.72848246E12, 505.0763582966226], [1.72848468E12, 571.3755605381164], [1.7284869E12, 671.0969999999986], [1.72847922E12, 417.05999999999995], [1.72848126E12, 539.5727848101263], [1.72848348E12, 511.65413533834607], [1.7284857E12, 547.9492988133767], [1.72848792E12, 665.6104146576669], [1.72848078E12, 426.33678756476706], [1.72848642E12, 539.5816793893134], [1.72847976E12, 423.4370179948587], [1.72848198E12, 502.27721335268524], [1.7284842E12, 539.1785714285718], [1.72848522E12, 532.1168562564635], [1.728483E12, 496.7546897546901], [1.72847874E12, 397.60620525059664], [1.72848096E12, 425.708762886598], [1.72848744E12, 641.1528301886798], [1.72848402E12, 515.8003472222225], [1.72847838E12, 399.8676470588235], [1.7284806E12, 421.7654639175255], [1.72848726E12, 678.146881287726], [1.7284818E12, 528.9938556067589], [1.72848624E12, 564.2643805309734], [1.72847958E12, 433.4046997389034], [1.72848282E12, 516.1250000000001], [1.72848504E12, 581.0459242250283], [1.72848606E12, 540.3044397463003], [1.72848828E12, 599.2351274787534], [1.72847856E12, 396.14146341463436], [1.72848354E12, 525.569018404908], [1.72848012E12, 416.6439393939394], [1.72848678E12, 641.46585594013], [1.72848132E12, 500.4650499286733], [1.72848576E12, 549.9128586609979], [1.7284791E12, 413.8181818181818], [1.72848234E12, 501.8434782608693], [1.72848456E12, 573.5407821229057], [1.72848558E12, 571.9977777777788], [1.7284878E12, 690.0787878787875], [1.7284866E12, 644.6835564053541], [1.72848114E12, 414.2679900744419], [1.72848336E12, 513.6816143497757], [1.72848438E12, 579.3552036199095], [1.72847994E12, 398.9084337349396], [1.72847892E12, 414.6349999999997], [1.72848216E12, 527.9067278287449], [1.7284854E12, 551.4324034334754], [1.72848318E12, 513.324404761904], [1.72848762E12, 660.0641399416908], [1.72848288E12, 496.564907275321], [1.72848612E12, 531.5837615621786], [1.72847946E12, 465.935211267606], [1.7284839E12, 525.1945288753797], [1.72848834E12, 539.0863787375412], [1.72847844E12, 403.9166666666667], [1.72848168E12, 536.0031152647962], [1.72848066E12, 452.05555555555554], [1.7284827E12, 531.4404945904173], [1.72848492E12, 540.1751824817508], [1.72848714E12, 672.1101278269414], [1.7284803E12, 421.73299748110827], [1.72847928E12, 446.12938005390845], [1.7284815E12, 502.63265306122446], [1.72848372E12, 525.2259541984739], [1.72848594E12, 554.5692640692637], [1.72848816E12, 719.6260683760685], [1.72848474E12, 523.304526748971], [1.72848798E12, 664.1932938856019], [1.72848252E12, 522.3700906344411], [1.72848696E12, 665.6451932606544], [1.72848048E12, 423.22820512820516], [1.72847982E12, 441.3563829787234], [1.7284788E12, 433.21485411140554], [1.72848324E12, 473.03047091412736], [1.72848546E12, 528.18503118503], [1.72848768E12, 728.0963203463208], [1.72848102E12, 419.5812182741118], [1.72848426E12, 526.2170781893009], [1.7284875E12, 677.5954274353876], [1.72848648E12, 588.764705882353], [1.72848204E12, 555.1717495987167], [1.72848E12, 405.45083932853726], [1.72848306E12, 525.7842835130978], [1.72847964E12, 417.66243654822364], [1.7284863E12, 571.7756906077344], [1.72848528E12, 549.8917748917755], [1.72848732E12, 632.1966292134832], [1.72847862E12, 470.74301675977676], [1.72848084E12, 428.3401534526856], [1.72848186E12, 507.24158125915045], [1.72848408E12, 473.7006802721086], [1.7284851E12, 561.3699673558214]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7284884E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72847832E12, "maxY": 4.9E-324, "series": [{"data": [[1.72848258E12, 0.0], [1.7284848E12, 0.0], [1.72847916E12, 0.0], [1.72848582E12, 0.0], [1.72848804E12, 0.0], [1.72848684E12, 0.0], [1.72848036E12, 0.0], [1.72848138E12, 0.0], [1.7284836E12, 0.0], [1.72848462E12, 0.0], [1.7284824E12, 0.0], [1.72848564E12, 0.0], [1.72847898E12, 0.0], [1.72848342E12, 0.0], [1.72848786E12, 0.0], [1.7284812E12, 0.0], [1.72848018E12, 0.0], [1.72848222E12, 0.0], [1.72848444E12, 0.0], [1.72848666E12, 0.0], [1.72848192E12, 0.0], [1.72848738E12, 0.0], [1.7284785E12, 0.0], [1.72848072E12, 0.0], [1.72848294E12, 0.0], [1.72848516E12, 0.0], [1.7284797E12, 0.0], [1.72848174E12, 0.0], [1.72848396E12, 0.0], [1.72848618E12, 0.0], [1.7284884E12, 0.0], [1.72848498E12, 0.0], [1.72847934E12, 0.0], [1.72848822E12, 0.0], [1.72847832E12, 0.0], [1.72848276E12, 0.0], [1.7284872E12, 0.0], [1.72848054E12, 0.0], [1.72848378E12, 0.0], [1.72848702E12, 0.0], [1.72848156E12, 0.0], [1.728486E12, 0.0], [1.72847952E12, 0.0], [1.7284845E12, 0.0], [1.72848774E12, 0.0], [1.72847886E12, 0.0], [1.72848228E12, 0.0], [1.72848672E12, 0.0], [1.72848006E12, 0.0], [1.7284833E12, 0.0], [1.72848654E12, 0.0], [1.72848108E12, 0.0], [1.72848552E12, 0.0], [1.72847904E12, 0.0], [1.72847868E12, 0.0], [1.72848432E12, 0.0], [1.7284821E12, 0.0], [1.72848534E12, 0.0], [1.72848756E12, 0.0], [1.7284809E12, 0.0], [1.72848312E12, 0.0], [1.72848636E12, 0.0], [1.72847988E12, 0.0], [1.72848414E12, 0.0], [1.72848708E12, 0.0], [1.72848162E12, 0.0], [1.72848384E12, 0.0], [1.72848042E12, 0.0], [1.72848486E12, 0.0], [1.72848264E12, 0.0], [1.72848588E12, 0.0], [1.7284794E12, 0.0], [1.72848366E12, 0.0], [1.7284881E12, 0.0], [1.72848144E12, 0.0], [1.72848024E12, 0.0], [1.72848246E12, 0.0], [1.72848468E12, 0.0], [1.7284869E12, 0.0], [1.72847922E12, 0.0], [1.72848126E12, 0.0], [1.72848348E12, 0.0], [1.7284857E12, 0.0], [1.72848792E12, 0.0], [1.72848078E12, 0.0], [1.72848642E12, 0.0], [1.72847976E12, 0.0], [1.72848198E12, 0.0], [1.7284842E12, 0.0], [1.72848522E12, 0.0], [1.728483E12, 0.0], [1.72847874E12, 0.0], [1.72848096E12, 0.0], [1.72848744E12, 0.0], [1.72848402E12, 0.0], [1.72847838E12, 0.0], [1.7284806E12, 0.0], [1.72848726E12, 0.0], [1.7284818E12, 0.0], [1.72848624E12, 0.0], [1.72847958E12, 0.0], [1.72848282E12, 0.0], [1.72848504E12, 0.0], [1.72848606E12, 0.0], [1.72848828E12, 0.0], [1.72847856E12, 0.0], [1.72848354E12, 0.0], [1.72848012E12, 0.0], [1.72848678E12, 0.0], [1.72848132E12, 0.0], [1.72848576E12, 0.0], [1.7284791E12, 0.0], [1.72848234E12, 0.0], [1.72848456E12, 0.0], [1.72848558E12, 0.0], [1.7284878E12, 0.0], [1.7284866E12, 0.0], [1.72848114E12, 0.0], [1.72848336E12, 0.0], [1.72848438E12, 0.0], [1.72847994E12, 0.0], [1.72847892E12, 0.0], [1.72848216E12, 0.0], [1.7284854E12, 0.0], [1.72848318E12, 0.0], [1.72848762E12, 0.0], [1.72848288E12, 0.0], [1.72848612E12, 0.0], [1.72847946E12, 0.0], [1.7284839E12, 0.0], [1.72848834E12, 0.0], [1.72847844E12, 0.0], [1.72848168E12, 0.0], [1.72848066E12, 0.0], [1.7284827E12, 0.0], [1.72848492E12, 0.0], [1.72848714E12, 0.0], [1.7284803E12, 0.0], [1.72847928E12, 0.0], [1.7284815E12, 0.0], [1.72848372E12, 0.0], [1.72848594E12, 0.0], [1.72848816E12, 0.0], [1.72848474E12, 0.0], [1.72848798E12, 0.0], [1.72848252E12, 0.0], [1.72848696E12, 0.0], [1.72848048E12, 0.0], [1.72847982E12, 0.0], [1.7284788E12, 0.0], [1.72848324E12, 0.0], [1.72848546E12, 0.0], [1.72848768E12, 0.0], [1.72848102E12, 0.0], [1.72848426E12, 0.0], [1.7284875E12, 0.0], [1.72848648E12, 0.0], [1.72848204E12, 0.0], [1.72848E12, 0.0], [1.72848306E12, 0.0], [1.72847964E12, 0.0], [1.7284863E12, 0.0], [1.72848528E12, 0.0], [1.72848732E12, 0.0], [1.72847862E12, 0.0], [1.72848084E12, 0.0], [1.72848186E12, 0.0], [1.72848408E12, 0.0], [1.7284851E12, 0.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7284884E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 46.0, "minX": 1.72847832E12, "maxY": 4290.0, "series": [{"data": [[1.72848258E12, 2660.0], [1.7284848E12, 2982.0], [1.72847916E12, 2499.0], [1.72848582E12, 3010.0], [1.72848804E12, 3490.0], [1.72848684E12, 3428.0], [1.72848036E12, 2162.0], [1.72848138E12, 2633.0], [1.7284836E12, 2454.0], [1.72848462E12, 3327.0], [1.7284824E12, 2614.0], [1.72848564E12, 3161.0], [1.72847898E12, 2520.0], [1.72848342E12, 2587.0], [1.72848786E12, 3962.0], [1.7284812E12, 2011.0], [1.72848018E12, 2525.0], [1.72848222E12, 2581.0], [1.72848444E12, 3273.0], [1.72848666E12, 3444.0], [1.72848192E12, 2841.0], [1.72848738E12, 3867.0], [1.7284785E12, 2559.0], [1.72848072E12, 2146.0], [1.72848294E12, 2672.0], [1.72848516E12, 3479.0], [1.7284797E12, 2599.0], [1.72848174E12, 2653.0], [1.72848396E12, 3087.0], [1.72848618E12, 2808.0], [1.7284884E12, 1750.0], [1.72848498E12, 2759.0], [1.72847934E12, 2512.0], [1.72848822E12, 3843.0], [1.72847832E12, 2204.0], [1.72848276E12, 2670.0], [1.7284872E12, 3531.0], [1.72848054E12, 2112.0], [1.72848378E12, 2974.0], [1.72848702E12, 3489.0], [1.72848156E12, 2728.0], [1.728486E12, 2910.0], [1.72847952E12, 2205.0], [1.7284845E12, 3077.0], [1.72848774E12, 3856.0], [1.72847886E12, 2213.0], [1.72848228E12, 2762.0], [1.72848672E12, 3272.0], [1.72848006E12, 2065.0], [1.7284833E12, 2676.0], [1.72848654E12, 3527.0], [1.72848108E12, 2447.0], [1.72848552E12, 3266.0], [1.72847904E12, 2200.0], [1.72847868E12, 2189.0], [1.72848432E12, 2816.0], [1.7284821E12, 2573.0], [1.72848534E12, 3094.0], [1.72848756E12, 3952.0], [1.7284809E12, 2402.0], [1.72848312E12, 2575.0], [1.72848636E12, 2758.0], [1.72847988E12, 2409.0], [1.72848414E12, 2817.0], [1.72848708E12, 3733.0], [1.72848162E12, 2467.0], [1.72848384E12, 2758.0], [1.72848042E12, 2041.0], [1.72848486E12, 3271.0], [1.72848264E12, 2907.0], [1.72848588E12, 2840.0], [1.7284794E12, 2145.0], [1.72848366E12, 2542.0], [1.7284881E12, 3607.0], [1.72848144E12, 2595.0], [1.72848024E12, 2225.0], [1.72848246E12, 2519.0], [1.72848468E12, 3325.0], [1.7284869E12, 3880.0], [1.72847922E12, 1961.0], [1.72848126E12, 2496.0], [1.72848348E12, 3051.0], [1.7284857E12, 2917.0], [1.72848792E12, 3525.0], [1.72848078E12, 2345.0], [1.72848642E12, 2789.0], [1.72847976E12, 2343.0], [1.72848198E12, 2804.0], [1.7284842E12, 3149.0], [1.72848522E12, 3032.0], [1.728483E12, 2634.0], [1.72847874E12, 1994.0], [1.72848096E12, 2056.0], [1.72848744E12, 3312.0], [1.72848402E12, 2666.0], [1.72847838E12, 2075.0], [1.7284806E12, 2238.0], [1.72848726E12, 4220.0], [1.7284818E12, 2576.0], [1.72848624E12, 2995.0], [1.72847958E12, 2051.0], [1.72848282E12, 2350.0], [1.72848504E12, 3374.0], [1.72848606E12, 2982.0], [1.72848828E12, 3552.0], [1.72847856E12, 1969.0], [1.72848354E12, 2797.0], [1.72848012E12, 2279.0], [1.72848678E12, 3723.0], [1.72848132E12, 2909.0], [1.72848576E12, 3320.0], [1.7284791E12, 2375.0], [1.72848234E12, 2669.0], [1.72848456E12, 2766.0], [1.72848558E12, 3104.0], [1.7284878E12, 3766.0], [1.7284866E12, 3550.0], [1.72848114E12, 2218.0], [1.72848336E12, 2515.0], [1.72848438E12, 2859.0], [1.72847994E12, 2427.0], [1.72847892E12, 2139.0], [1.72848216E12, 2657.0], [1.7284854E12, 2872.0], [1.72848318E12, 2741.0], [1.72848762E12, 3423.0], [1.72848288E12, 2783.0], [1.72848612E12, 2933.0], [1.72847946E12, 2149.0], [1.7284839E12, 2801.0], [1.72848834E12, 3328.0], [1.72847844E12, 1976.0], [1.72848168E12, 2756.0], [1.72848066E12, 2573.0], [1.7284827E12, 2505.0], [1.72848492E12, 2873.0], [1.72848714E12, 4078.0], [1.7284803E12, 1961.0], [1.72847928E12, 2542.0], [1.7284815E12, 2642.0], [1.72848372E12, 2873.0], [1.72848594E12, 2787.0], [1.72848816E12, 4290.0], [1.72848474E12, 3107.0], [1.72848798E12, 3774.0], [1.72848252E12, 2727.0], [1.72848696E12, 3860.0], [1.72848048E12, 2156.0], [1.72847982E12, 2485.0], [1.7284788E12, 1983.0], [1.72848324E12, 2686.0], [1.72848546E12, 2897.0], [1.72848768E12, 3877.0], [1.72848102E12, 2304.0], [1.72848426E12, 2792.0], [1.7284875E12, 3204.0], [1.72848648E12, 2999.0], [1.72848204E12, 2488.0], [1.72848E12, 2338.0], [1.72848306E12, 2617.0], [1.72847964E12, 2625.0], [1.7284863E12, 3057.0], [1.72848528E12, 2665.0], [1.72848732E12, 3336.0], [1.72847862E12, 1989.0], [1.72848084E12, 2585.0], [1.72848186E12, 3033.0], [1.72848408E12, 2592.0], [1.7284851E12, 2878.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72848258E12, 1522.6000000000001], [1.7284848E12, 1694.6999999999998], [1.72847916E12, 1325.4], [1.72848582E12, 1681.0], [1.72848804E12, 1972.7], [1.72848684E12, 1880.2000000000003], [1.72848036E12, 1349.0], [1.72848138E12, 1555.4], [1.7284836E12, 1597.5000000000005], [1.72848462E12, 1670.9], [1.7284824E12, 1474.2000000000003], [1.72848564E12, 1772.0], [1.72847898E12, 1372.9], [1.72848342E12, 1547.5000000000002], [1.72848786E12, 1977.1000000000004], [1.7284812E12, 1416.0], [1.72848018E12, 1262.0], [1.72848222E12, 1617.0], [1.72848444E12, 1666.1], [1.72848666E12, 2005.8000000000002], [1.72848192E12, 1544.0], [1.72848738E12, 1975.8000000000002], [1.7284785E12, 1301.0], [1.72848072E12, 1411.5], [1.72848294E12, 1549.0], [1.72848516E12, 1685.0000000000005], [1.7284797E12, 1422.9], [1.72848174E12, 1539.0], [1.72848396E12, 1574.9], [1.72848618E12, 1635.6000000000001], [1.7284884E12, 1681.2], [1.72848498E12, 1688.5], [1.72847934E12, 1406.9000000000003], [1.72848822E12, 1989.5], [1.72847832E12, 1677.8], [1.72848276E12, 1580.9], [1.7284872E12, 1951.4], [1.72848054E12, 1211.1999999999998], [1.72848378E12, 1546.0], [1.72848702E12, 1977.4], [1.72848156E12, 1607.0000000000007], [1.728486E12, 1711.2000000000003], [1.72847952E12, 1368.0], [1.7284845E12, 1792.6], [1.72848774E12, 2006.2], [1.72847886E12, 1329.0], [1.72848228E12, 1529.0], [1.72848672E12, 1924.1999999999998], [1.72848006E12, 1382.0], [1.7284833E12, 1588.0], [1.72848654E12, 1936.8000000000002], [1.72848108E12, 1304.3000000000002], [1.72848552E12, 1762.2], [1.72847904E12, 1317.2000000000003], [1.72847868E12, 1335.0], [1.72848432E12, 1671.0], [1.7284821E12, 1531.6000000000004], [1.72848534E12, 1674.6000000000001], [1.72848756E12, 2015.4], [1.7284809E12, 1308.3999999999999], [1.72848312E12, 1441.6], [1.72848636E12, 1699.1999999999994], [1.72847988E12, 1343.0000000000007], [1.72848414E12, 1709.9999999999998], [1.72848708E12, 1977.0], [1.72848162E12, 1501.1000000000001], [1.72848384E12, 1547.4000000000003], [1.72848042E12, 1291.7], [1.72848486E12, 1753.0], [1.72848264E12, 1575.0], [1.72848588E12, 1681.6000000000001], [1.7284794E12, 1409.9], [1.72848366E12, 1481.1000000000004], [1.7284881E12, 1992.9], [1.72848144E12, 1569.2], [1.72848024E12, 1419.0], [1.72848246E12, 1491.8000000000004], [1.72848468E12, 1663.8000000000002], [1.7284869E12, 2067.3999999999996], [1.72847922E12, 1263.4], [1.72848126E12, 1618.9000000000003], [1.72848348E12, 1549.1999999999998], [1.7284857E12, 1684.0], [1.72848792E12, 2027.2000000000005], [1.72848078E12, 1333.6000000000001], [1.72848642E12, 1630.6], [1.72847976E12, 1258.0], [1.72848198E12, 1515.0], [1.7284842E12, 1660.6000000000004], [1.72848522E12, 1644.6000000000006], [1.728483E12, 1500.0], [1.72847874E12, 1250.0], [1.72848096E12, 1355.2], [1.72848744E12, 1987.6999999999998], [1.72848402E12, 1575.6000000000001], [1.72847838E12, 1238.5], [1.7284806E12, 1291.8000000000002], [1.72848726E12, 2068.0], [1.7284818E12, 1574.6000000000004], [1.72848624E12, 1672.0], [1.72847958E12, 1326.2000000000003], [1.72848282E12, 1497.4], [1.72848504E12, 1740.0], [1.72848606E12, 1656.3000000000002], [1.72848828E12, 1887.0], [1.72847856E12, 1310.4], [1.72848354E12, 1600.8000000000006], [1.72848012E12, 1366.6], [1.72848678E12, 1988.0], [1.72848132E12, 1506.0], [1.72848576E12, 1627.2000000000003], [1.7284791E12, 1318.6000000000004], [1.72848234E12, 1534.8], [1.72848456E12, 1719.3999999999996], [1.72848558E12, 1698.5], [1.7284878E12, 2035.6999999999998], [1.7284866E12, 2005.2000000000003], [1.72848114E12, 1249.8000000000002], [1.72848336E12, 1541.0], [1.72848438E12, 1670.5], [1.72847994E12, 1289.8000000000002], [1.72847892E12, 1313.1000000000006], [1.72848216E12, 1515.0], [1.7284854E12, 1670.6000000000004], [1.72848318E12, 1511.1000000000001], [1.72848762E12, 2073.0], [1.72848288E12, 1532.8000000000002], [1.72848612E12, 1642.6000000000004], [1.72847946E12, 1399.2000000000007], [1.7284839E12, 1524.7000000000003], [1.72848834E12, 1613.7], [1.72847844E12, 1328.0], [1.72848168E12, 1555.3000000000004], [1.72848066E12, 1432.2000000000003], [1.7284827E12, 1556.2000000000005], [1.72848492E12, 1631.0], [1.72848714E12, 2021.2], [1.7284803E12, 1280.6], [1.72847928E12, 1376.6], [1.7284815E12, 1498.4000000000005], [1.72848372E12, 1552.4], [1.72848594E12, 1627.5], [1.72848816E12, 2222.3000000000006], [1.72848474E12, 1662.4], [1.72848798E12, 2056.5], [1.72848252E12, 1520.7], [1.72848696E12, 2076.0], [1.72848048E12, 1341.9000000000003], [1.72847982E12, 1297.0], [1.7284788E12, 1328.9999999999998], [1.72848324E12, 1459.8000000000002], [1.72848546E12, 1680.1000000000001], [1.72848768E12, 2176.0], [1.72848102E12, 1287.0], [1.72848426E12, 1652.2000000000003], [1.7284875E12, 2059.2000000000003], [1.72848648E12, 1806.0], [1.72848204E12, 1568.0], [1.72848E12, 1265.3999999999999], [1.72848306E12, 1631.0], [1.72847964E12, 1341.0], [1.7284863E12, 1706.1999999999998], [1.72848528E12, 1732.0], [1.72848732E12, 2028.3000000000002], [1.72847862E12, 1260.0], [1.72848084E12, 1277.2], [1.72848186E12, 1470.6], [1.72848408E12, 1455.0], [1.7284851E12, 1706.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72848258E12, 2345.5600000000004], [1.7284848E12, 2376.1399999999994], [1.72847916E12, 2022.900000000001], [1.72848582E12, 2374.0], [1.72848804E12, 2927.1099999999997], [1.72848684E12, 2768.859999999993], [1.72848036E12, 2121.95], [1.72848138E12, 2125.7200000000003], [1.7284836E12, 2186.1699999999996], [1.72848462E12, 2479.4999999999986], [1.7284824E12, 2130.56], [1.72848564E12, 2670.6999999999994], [1.72847898E12, 1824.439999999999], [1.72848342E12, 2068.7], [1.72848786E12, 2999.210000000009], [1.7284812E12, 1874.8000000000002], [1.72848018E12, 2105.239999999999], [1.72848222E12, 2389.1000000000004], [1.72848444E12, 2451.4300000000003], [1.72848666E12, 2954.68], [1.72848192E12, 2255.1000000000026], [1.72848738E12, 2864.1399999999994], [1.7284785E12, 2084.7899999999954], [1.72848072E12, 2067.16], [1.72848294E12, 2135.2], [1.72848516E12, 2564.8999999999996], [1.7284797E12, 2170.0699999999997], [1.72848174E12, 2250.6999999999966], [1.72848396E12, 2074.76], [1.72848618E12, 2319.7200000000003], [1.7284884E12, 1750.0], [1.72848498E12, 2534.5499999999997], [1.72847934E12, 2017.680000000004], [1.72848822E12, 3027.4799999999996], [1.72847832E12, 2204.0], [1.72848276E12, 2276.7499999999995], [1.7284872E12, 2933.0699999999993], [1.72848054E12, 1755.6], [1.72848378E12, 2253.799999999995], [1.72848702E12, 2932.930000000003], [1.72848156E12, 2313.6400000000012], [1.728486E12, 2608.3599999999997], [1.72847952E12, 1798.4099999999999], [1.7284845E12, 2455.04], [1.72848774E12, 2804.8399999999965], [1.72847886E12, 1858.3999999999996], [1.72848228E12, 2091.699999999997], [1.72848672E12, 2942.38], [1.72848006E12, 1970.8500000000008], [1.7284833E12, 2205.799999999998], [1.72848654E12, 2815.9999999999936], [1.72848108E12, 2006.4700000000018], [1.72848552E12, 2457.999999999999], [1.72847904E12, 2031.3300000000004], [1.72847868E12, 2001.5999999999967], [1.72848432E12, 2340.6], [1.7284821E12, 2182.649999999999], [1.72848534E12, 2719.04], [1.72848756E12, 3022.88], [1.7284809E12, 1947.5800000000008], [1.72848312E12, 2266.0800000000027], [1.72848636E12, 2382.27], [1.72847988E12, 2278.5799999999995], [1.72848414E12, 2459.2799999999993], [1.72848708E12, 3064.100000000003], [1.72848162E12, 2095.5600000000004], [1.72848384E12, 2142.2200000000003], [1.72848042E12, 1931.8599999999992], [1.72848486E12, 2539.2600000000016], [1.72848264E12, 2240.8599999999997], [1.72848588E12, 2443.36], [1.7284794E12, 1805.7699999999998], [1.72848366E12, 2148.3599999999997], [1.7284881E12, 2921.4700000000003], [1.72848144E12, 2299.600000000001], [1.72848024E12, 1921.3999999999978], [1.72848246E12, 2095.059999999994], [1.72848468E12, 2470.0599999999963], [1.7284869E12, 3047.090000000001], [1.72847922E12, 1880.7700000000002], [1.72848126E12, 2446.779999999999], [1.72848348E12, 2324.860000000001], [1.7284857E12, 2480.520000000003], [1.72848792E12, 2935.699999999996], [1.72848078E12, 1992.56], [1.72848642E12, 2337.519999999998], [1.72847976E12, 1980.2000000000037], [1.72848198E12, 2171.9000000000015], [1.7284842E12, 2367.88], [1.72848522E12, 2417.24], [1.728483E12, 2149.6599999999994], [1.72847874E12, 1726.6000000000006], [1.72848096E12, 1981.8500000000004], [1.72848744E12, 2756.920000000003], [1.72848402E12, 2212.61], [1.72847838E12, 1784.949999999998], [1.7284806E12, 1903.4200000000017], [1.72848726E12, 3139.1499999999996], [1.7284818E12, 2235.3200000000006], [1.72848624E12, 2593.75], [1.72847958E12, 1896.6399999999999], [1.72848282E12, 2190.659999999999], [1.72848504E12, 2544.68], [1.72848606E12, 2337.4799999999996], [1.72848828E12, 2715.000000000004], [1.72847856E12, 1929.1999999999998], [1.72848354E12, 2422.940000000003], [1.72848012E12, 1877.359999999997], [1.72848678E12, 2792.3], [1.72848132E12, 2383.5600000000013], [1.72848576E12, 2431.7400000000002], [1.7284791E12, 1810.409999999996], [1.72848234E12, 2279.9300000000026], [1.72848456E12, 2289.12], [1.72848558E12, 2465.83], [1.7284878E12, 3125.2300000000046], [1.7284866E12, 2849.139999999999], [1.72848114E12, 1906.1599999999996], [1.72848336E12, 2258.499999999999], [1.72848438E12, 2442.2499999999995], [1.72847994E12, 2029.239999999998], [1.72847892E12, 1932.1400000000008], [1.72848216E12, 2296.5000000000023], [1.7284854E12, 2416.0599999999995], [1.72848318E12, 2254.9399999999996], [1.72848762E12, 3101.4], [1.72848288E12, 2205.1600000000008], [1.72848612E12, 2392.3999999999996], [1.72847946E12, 2041.92], [1.7284839E12, 2253.87], [1.72848834E12, 2397.82], [1.72847844E12, 1941.6], [1.72848168E12, 2382.200000000003], [1.72848066E12, 2169.779999999997], [1.7284827E12, 2216.039999999999], [1.72848492E12, 2352.2], [1.72848714E12, 3051.3999999999987], [1.7284803E12, 1769.08], [1.72847928E12, 1991.5999999999954], [1.7284815E12, 2162.04], [1.72848372E12, 2428.6399999999994], [1.72848594E12, 2368.25], [1.72848816E12, 2962.9999999999995], [1.72848474E12, 2504.0699999999993], [1.72848798E12, 2940.300000000002], [1.72848252E12, 2351.3], [1.72848696E12, 3076.099999999998], [1.72848048E12, 1971.3399999999992], [1.72847982E12, 1877.9500000000012], [1.7284788E12, 1828.4999999999993], [1.72848324E12, 2179.269999999999], [1.72848546E12, 2420.0700000000006], [1.72848768E12, 3054.25], [1.72848102E12, 1804.3500000000001], [1.72848426E12, 2287.35], [1.7284875E12, 2832.739999999999], [1.72848648E12, 2743.7000000000016], [1.72848204E12, 2214.0], [1.72848E12, 1796.1799999999996], [1.72848306E12, 2253.0], [1.72847964E12, 2025.2000000000035], [1.7284863E12, 2492.2599999999984], [1.72848528E12, 2339.5], [1.72848732E12, 2919.869999999996], [1.72847862E12, 1954.5999999999995], [1.72848084E12, 1892.559999999999], [1.72848186E12, 2232.0], [1.72848408E12, 2230.2500000000005], [1.7284851E12, 2393.7999999999997]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72848258E12, 1741.1999999999994], [1.7284848E12, 1949.1499999999996], [1.72847916E12, 1552.3999999999999], [1.72848582E12, 1886.5], [1.72848804E12, 2291.0], [1.72848684E12, 2155.7], [1.72848036E12, 1583.2499999999998], [1.72848138E12, 1751.6], [1.7284836E12, 1805.4999999999995], [1.72848462E12, 1861.8499999999995], [1.7284824E12, 1746.5999999999997], [1.72848564E12, 2070.25], [1.72847898E12, 1558.6], [1.72848342E12, 1777.1500000000005], [1.72848786E12, 2298.0], [1.7284812E12, 1581.0], [1.72848018E12, 1441.999999999999], [1.72848222E12, 1921.25], [1.72848444E12, 1886.6999999999996], [1.72848666E12, 2338.1], [1.72848192E12, 1724.0], [1.72848738E12, 2328.4999999999995], [1.7284785E12, 1560.1999999999996], [1.72848072E12, 1560.7499999999995], [1.72848294E12, 1768.799999999997], [1.72848516E12, 1972.6999999999998], [1.7284797E12, 1632.7999999999995], [1.72848174E12, 1810.4999999999995], [1.72848396E12, 1763.9999999999986], [1.72848618E12, 1880.0], [1.7284884E12, 1739.9999999999998], [1.72848498E12, 1951.0], [1.72847934E12, 1603.7999999999997], [1.72848822E12, 2317.5999999999995], [1.72847832E12, 2050.1999999999994], [1.72848276E12, 1837.9499999999998], [1.7284872E12, 2259.0999999999995], [1.72848054E12, 1387.6], [1.72848378E12, 1785.5], [1.72848702E12, 2312.3999999999996], [1.72848156E12, 1856.1999999999998], [1.728486E12, 2085.2], [1.72847952E12, 1530.8999999999994], [1.7284845E12, 1992.8999999999994], [1.72848774E12, 2275.1999999999994], [1.72847886E12, 1560.0], [1.72848228E12, 1766.5], [1.72848672E12, 2294.0], [1.72848006E12, 1532.5], [1.7284833E12, 1801.0], [1.72848654E12, 2226.0499999999997], [1.72848108E12, 1500.5], [1.72848552E12, 2031.0], [1.72847904E12, 1580.0500000000002], [1.72847868E12, 1505.1999999999985], [1.72848432E12, 1938.0], [1.7284821E12, 1780.0], [1.72848534E12, 1967.8999999999999], [1.72848756E12, 2330.2], [1.7284809E12, 1550.899999999999], [1.72848312E12, 1671.6], [1.72848636E12, 1948.4999999999993], [1.72847988E12, 1613.8999999999999], [1.72848414E12, 1974.199999999999], [1.72848708E12, 2243.5], [1.72848162E12, 1760.2000000000003], [1.72848384E12, 1743.3], [1.72848042E12, 1654.8999999999996], [1.72848486E12, 1991.3999999999996], [1.72848264E12, 1923.299999999998], [1.72848588E12, 1998.0], [1.7284794E12, 1602.7999999999997], [1.72848366E12, 1688.1499999999996], [1.7284881E12, 2313.0], [1.72848144E12, 1830.4], [1.72848024E12, 1655.6999999999998], [1.72848246E12, 1740.6999999999998], [1.72848468E12, 1951.9999999999982], [1.7284869E12, 2354.199999999999], [1.72847922E12, 1538.2999999999997], [1.72848126E12, 1814.4500000000003], [1.72848348E12, 1790.1999999999996], [1.7284857E12, 1993.0], [1.72848792E12, 2320.3999999999996], [1.72848078E12, 1614.7999999999997], [1.72848642E12, 1887.9999999999995], [1.72847976E12, 1454.0], [1.72848198E12, 1707.0], [1.7284842E12, 1929.6999999999998], [1.72848522E12, 1918.9999999999986], [1.728483E12, 1774.1999999999994], [1.72847874E12, 1433.0], [1.72848096E12, 1563.6499999999999], [1.72848744E12, 2251.0], [1.72848402E12, 1768.4999999999998], [1.72847838E12, 1437.25], [1.7284806E12, 1500.6499999999999], [1.72848726E12, 2359.0], [1.7284818E12, 1808.8], [1.72848624E12, 1938.75], [1.72847958E12, 1493.5999999999995], [1.72848282E12, 1749.75], [1.72848504E12, 2015.1999999999998], [1.72848606E12, 1954.8999999999999], [1.72848828E12, 2210.0], [1.72847856E12, 1535.1], [1.72848354E12, 1892.5000000000002], [1.72848012E12, 1549.4499999999998], [1.72848678E12, 2288.5], [1.72848132E12, 1812.2999999999997], [1.72848576E12, 1877.499999999999], [1.7284791E12, 1496.75], [1.72848234E12, 1790.0], [1.72848456E12, 1944.3999999999996], [1.72848558E12, 1982.4999999999993], [1.7284878E12, 2362.4499999999985], [1.7284866E12, 2316.0499999999997], [1.72848114E12, 1441.9999999999986], [1.72848336E12, 1748.5], [1.72848438E12, 1939.75], [1.72847994E12, 1495.0], [1.72847892E12, 1435.0], [1.72848216E12, 1747.25], [1.7284854E12, 1936.8499999999954], [1.72848318E12, 1805.0500000000002], [1.72848762E12, 2340.0], [1.72848288E12, 1710.2999999999997], [1.72848612E12, 1913.1999999999998], [1.72847946E12, 1597.8], [1.7284839E12, 1828.8999999999992], [1.72848834E12, 1835.8000000000002], [1.72847844E12, 1575.0], [1.72848168E12, 1846.2500000000005], [1.72848066E12, 1607.3999999999999], [1.7284827E12, 1824.8000000000002], [1.72848492E12, 1875.0], [1.72848714E12, 2374.2999999999997], [1.7284803E12, 1450.6999999999994], [1.72847928E12, 1517.3999999999996], [1.7284815E12, 1770.7999999999997], [1.72848372E12, 1734.5999999999972], [1.72848594E12, 1881.25], [1.72848816E12, 2501.7999999999997], [1.72848474E12, 1938.35], [1.72848798E12, 2311.5], [1.72848252E12, 1751.4], [1.72848696E12, 2426.0], [1.72848048E12, 1538.6999999999998], [1.72847982E12, 1542.7499999999995], [1.7284788E12, 1499.1], [1.72848324E12, 1754.65], [1.72848546E12, 1982.0999999999995], [1.72848768E12, 2390.25], [1.72848102E12, 1597.0], [1.72848426E12, 1852.3999999999996], [1.7284875E12, 2316.3], [1.72848648E12, 2143.5], [1.72848204E12, 1868.7999999999997], [1.72848E12, 1447.4999999999998], [1.72848306E12, 1896.0], [1.72847964E12, 1473.25], [1.7284863E12, 2012.3999999999999], [1.72848528E12, 2015.0], [1.72848732E12, 2341.55], [1.72847862E12, 1518.0], [1.72848084E12, 1539.4], [1.72848186E12, 1714.5999999999995], [1.72848408E12, 1621.0], [1.7284851E12, 2018.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72848258E12, 57.0], [1.7284848E12, 57.0], [1.72847916E12, 57.0], [1.72848582E12, 59.0], [1.72848804E12, 63.0], [1.72848684E12, 57.0], [1.72848036E12, 72.0], [1.72848138E12, 56.0], [1.7284836E12, 49.0], [1.72848462E12, 55.0], [1.7284824E12, 65.0], [1.72848564E12, 59.0], [1.72847898E12, 66.0], [1.72848342E12, 60.0], [1.72848786E12, 55.0], [1.7284812E12, 57.0], [1.72848018E12, 55.0], [1.72848222E12, 55.0], [1.72848444E12, 58.0], [1.72848666E12, 54.0], [1.72848192E12, 57.0], [1.72848738E12, 52.0], [1.7284785E12, 66.0], [1.72848072E12, 58.0], [1.72848294E12, 52.0], [1.72848516E12, 46.0], [1.7284797E12, 64.0], [1.72848174E12, 59.0], [1.72848396E12, 54.0], [1.72848618E12, 48.0], [1.7284884E12, 130.0], [1.72848498E12, 55.0], [1.72847934E12, 62.0], [1.72848822E12, 54.0], [1.72847832E12, 78.0], [1.72848276E12, 54.0], [1.7284872E12, 49.0], [1.72848054E12, 58.0], [1.72848378E12, 59.0], [1.72848702E12, 55.0], [1.72848156E12, 61.0], [1.728486E12, 56.0], [1.72847952E12, 72.0], [1.7284845E12, 55.0], [1.72848774E12, 58.0], [1.72847886E12, 66.0], [1.72848228E12, 60.0], [1.72848672E12, 55.0], [1.72848006E12, 62.0], [1.7284833E12, 57.0], [1.72848654E12, 55.0], [1.72848108E12, 62.0], [1.72848552E12, 54.0], [1.72847904E12, 62.0], [1.72847868E12, 65.0], [1.72848432E12, 54.0], [1.7284821E12, 58.0], [1.72848534E12, 55.0], [1.72848756E12, 51.0], [1.7284809E12, 53.0], [1.72848312E12, 59.0], [1.72848636E12, 50.0], [1.72847988E12, 57.0], [1.72848414E12, 65.0], [1.72848708E12, 59.0], [1.72848162E12, 54.0], [1.72848384E12, 57.0], [1.72848042E12, 61.0], [1.72848486E12, 57.0], [1.72848264E12, 60.0], [1.72848588E12, 61.0], [1.7284794E12, 57.0], [1.72848366E12, 57.0], [1.7284881E12, 60.0], [1.72848144E12, 62.0], [1.72848024E12, 60.0], [1.72848246E12, 50.0], [1.72848468E12, 59.0], [1.7284869E12, 52.0], [1.72847922E12, 66.0], [1.72848126E12, 57.0], [1.72848348E12, 56.0], [1.7284857E12, 58.0], [1.72848792E12, 58.0], [1.72848078E12, 57.0], [1.72848642E12, 51.0], [1.72847976E12, 63.0], [1.72848198E12, 60.0], [1.7284842E12, 56.0], [1.72848522E12, 52.0], [1.728483E12, 63.0], [1.72847874E12, 63.0], [1.72848096E12, 58.0], [1.72848744E12, 60.0], [1.72848402E12, 63.0], [1.72847838E12, 66.0], [1.7284806E12, 57.0], [1.72848726E12, 60.0], [1.7284818E12, 57.0], [1.72848624E12, 57.0], [1.72847958E12, 64.0], [1.72848282E12, 55.0], [1.72848504E12, 53.0], [1.72848606E12, 49.0], [1.72848828E12, 52.0], [1.72847856E12, 68.0], [1.72848354E12, 51.0], [1.72848012E12, 63.0], [1.72848678E12, 57.0], [1.72848132E12, 59.0], [1.72848576E12, 55.0], [1.7284791E12, 62.0], [1.72848234E12, 63.0], [1.72848456E12, 57.0], [1.72848558E12, 64.0], [1.7284878E12, 57.0], [1.7284866E12, 57.0], [1.72848114E12, 69.0], [1.72848336E12, 59.0], [1.72848438E12, 52.0], [1.72847994E12, 61.0], [1.72847892E12, 63.0], [1.72848216E12, 48.0], [1.7284854E12, 64.0], [1.72848318E12, 66.0], [1.72848762E12, 54.0], [1.72848288E12, 59.0], [1.72848612E12, 62.0], [1.72847946E12, 62.0], [1.7284839E12, 53.0], [1.72848834E12, 65.0], [1.72847844E12, 61.0], [1.72848168E12, 60.0], [1.72848066E12, 65.0], [1.7284827E12, 52.0], [1.72848492E12, 60.0], [1.72848714E12, 46.0], [1.7284803E12, 52.0], [1.72847928E12, 54.0], [1.7284815E12, 52.0], [1.72848372E12, 62.0], [1.72848594E12, 56.0], [1.72848816E12, 57.0], [1.72848474E12, 48.0], [1.72848798E12, 50.0], [1.72848252E12, 53.0], [1.72848696E12, 54.0], [1.72848048E12, 63.0], [1.72847982E12, 58.0], [1.7284788E12, 68.0], [1.72848324E12, 58.0], [1.72848546E12, 58.0], [1.72848768E12, 57.0], [1.72848102E12, 57.0], [1.72848426E12, 58.0], [1.7284875E12, 61.0], [1.72848648E12, 61.0], [1.72848204E12, 57.0], [1.72848E12, 55.0], [1.72848306E12, 51.0], [1.72847964E12, 60.0], [1.7284863E12, 51.0], [1.72848528E12, 54.0], [1.72848732E12, 69.0], [1.72847862E12, 61.0], [1.72848084E12, 59.0], [1.72848186E12, 59.0], [1.72848408E12, 61.0], [1.7284851E12, 53.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72848258E12, 657.0], [1.7284848E12, 714.0], [1.72847916E12, 578.0], [1.72848582E12, 667.0], [1.72848804E12, 810.0], [1.72848684E12, 788.0], [1.72848036E12, 566.5], [1.72848138E12, 648.0], [1.7284836E12, 655.5], [1.72848462E12, 665.5], [1.7284824E12, 546.0], [1.72848564E12, 699.5], [1.72847898E12, 598.0], [1.72848342E12, 677.5], [1.72848786E12, 758.5], [1.7284812E12, 528.0], [1.72848018E12, 594.0], [1.72848222E12, 651.0], [1.72848444E12, 649.0], [1.72848666E12, 875.0], [1.72848192E12, 586.0], [1.72848738E12, 768.0], [1.7284785E12, 479.5], [1.72848072E12, 673.0], [1.72848294E12, 607.0], [1.72848516E12, 776.0], [1.7284797E12, 664.0], [1.72848174E12, 485.0], [1.72848396E12, 723.0], [1.72848618E12, 643.0], [1.7284884E12, 1062.0], [1.72848498E12, 691.5], [1.72847934E12, 612.0], [1.72848822E12, 899.0], [1.72847832E12, 605.0], [1.72848276E12, 661.0], [1.7284872E12, 874.5], [1.72848054E12, 384.0], [1.72848378E12, 680.0], [1.72848702E12, 805.5], [1.72848156E12, 648.0], [1.728486E12, 726.0], [1.72847952E12, 559.5], [1.7284845E12, 777.0], [1.72848774E12, 811.0], [1.72847886E12, 627.0], [1.72848228E12, 654.0], [1.72848672E12, 733.5], [1.72848006E12, 621.0], [1.7284833E12, 702.0], [1.72848654E12, 710.0], [1.72848108E12, 391.0], [1.72848552E12, 711.0], [1.72847904E12, 680.0], [1.72847868E12, 526.0], [1.72848432E12, 743.0], [1.7284821E12, 652.0], [1.72848534E12, 762.0], [1.72848756E12, 895.0], [1.7284809E12, 679.0], [1.72848312E12, 602.0], [1.72848636E12, 800.5], [1.72847988E12, 587.0], [1.72848414E12, 624.0], [1.72848708E12, 830.0], [1.72848162E12, 672.0], [1.72848384E12, 698.0], [1.72848042E12, 549.0], [1.72848486E12, 693.5], [1.72848264E12, 733.0], [1.72848588E12, 777.0], [1.7284794E12, 706.5], [1.72848366E12, 640.0], [1.7284881E12, 801.0], [1.72848144E12, 580.0], [1.72848024E12, 563.0], [1.72848246E12, 618.0], [1.72848468E12, 776.0], [1.7284869E12, 873.0], [1.72847922E12, 544.0], [1.72848126E12, 732.5], [1.72848348E12, 653.0], [1.7284857E12, 681.0], [1.72848792E12, 827.0], [1.72848078E12, 502.0], [1.72848642E12, 692.0], [1.72847976E12, 572.0], [1.72848198E12, 615.0], [1.7284842E12, 641.5], [1.72848522E12, 573.0], [1.728483E12, 575.0], [1.72847874E12, 487.0], [1.72848096E12, 547.0], [1.72848744E12, 815.0], [1.72848402E12, 651.5], [1.72847838E12, 479.0], [1.7284806E12, 559.0], [1.72848726E12, 871.5], [1.7284818E12, 719.0], [1.72848624E12, 745.0], [1.72847958E12, 639.0], [1.72848282E12, 669.5], [1.72848504E12, 780.0], [1.72848606E12, 657.0], [1.72848828E12, 661.0], [1.72847856E12, 444.0], [1.72848354E12, 677.5], [1.72848012E12, 553.0], [1.72848678E12, 766.0], [1.72848132E12, 574.0], [1.72848576E12, 656.0], [1.7284791E12, 533.0], [1.72848234E12, 598.0], [1.72848456E12, 803.0], [1.72848558E12, 781.5], [1.7284878E12, 910.5], [1.7284866E12, 766.0], [1.72848114E12, 564.0], [1.72848336E12, 676.0], [1.72848438E12, 782.5], [1.72847994E12, 461.0], [1.72847892E12, 544.5], [1.72848216E12, 714.5], [1.7284854E12, 678.5], [1.72848318E12, 665.5], [1.72848762E12, 813.0], [1.72848288E12, 561.0], [1.72848612E12, 617.0], [1.72847946E12, 665.0], [1.7284839E12, 698.5], [1.72848834E12, 714.0], [1.72847844E12, 458.0], [1.72848168E12, 700.0], [1.72848066E12, 621.5], [1.7284827E12, 749.0], [1.72848492E12, 665.0], [1.72848714E12, 858.0], [1.7284803E12, 592.0], [1.72847928E12, 628.0], [1.7284815E12, 612.0], [1.72848372E12, 649.0], [1.72848594E12, 734.0], [1.72848816E12, 971.5], [1.72848474E12, 615.5], [1.72848798E12, 833.0], [1.72848252E12, 676.5], [1.72848696E12, 836.0], [1.72848048E12, 542.0], [1.72847982E12, 644.5], [1.7284788E12, 593.0], [1.72848324E12, 446.0], [1.72848546E12, 599.0], [1.72848768E12, 1017.0], [1.72848102E12, 511.0], [1.72848426E12, 662.0], [1.7284875E12, 908.0], [1.72848648E12, 712.0], [1.72848204E12, 767.0], [1.72848E12, 474.0], [1.72848306E12, 688.0], [1.72847964E12, 502.0], [1.7284863E12, 739.0], [1.72848528E12, 696.0], [1.72848732E12, 724.0], [1.72847862E12, 728.0], [1.72848084E12, 581.0], [1.72848186E12, 584.0], [1.72848408E12, 544.0], [1.7284851E12, 713.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7284884E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 234.0, "minX": 1.0, "maxY": 1022.0, "series": [{"data": [[2.0, 908.5], [33.0, 256.0], [32.0, 245.0], [34.0, 234.5], [36.0, 234.0], [3.0, 850.0], [4.0, 834.0], [5.0, 784.0], [6.0, 700.5], [7.0, 702.0], [8.0, 695.0], [9.0, 724.0], [10.0, 772.0], [11.0, 724.0], [12.0, 756.0], [13.0, 721.0], [14.0, 751.0], [15.0, 704.0], [1.0, 1022.0], [16.0, 685.0], [17.0, 673.0], [18.0, 584.0], [19.0, 563.5], [20.0, 462.5], [21.0, 451.0], [22.0, 388.5], [23.0, 317.0], [24.0, 334.5], [25.0, 319.5], [26.0, 272.5], [27.0, 279.0], [28.0, 300.0], [29.0, 243.0], [30.0, 289.5], [31.0, 244.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 36.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 140.5, "minX": 1.0, "maxY": 705.5, "series": [{"data": [[2.0, 637.0], [33.0, 201.0], [32.0, 156.0], [34.0, 140.5], [36.0, 153.0], [3.0, 607.0], [4.0, 589.0], [5.0, 555.0], [6.0, 514.0], [7.0, 514.0], [8.0, 515.0], [9.0, 551.0], [10.0, 584.0], [11.0, 551.0], [12.0, 579.0], [13.0, 557.0], [14.0, 577.5], [15.0, 551.0], [1.0, 705.5], [16.0, 529.0], [17.0, 518.5], [18.0, 454.5], [19.0, 442.5], [20.0, 345.5], [21.0, 333.0], [22.0, 279.5], [23.0, 204.5], [24.0, 223.5], [25.0, 219.5], [26.0, 181.0], [27.0, 187.0], [28.0, 182.0], [29.0, 165.0], [30.0, 177.5], [31.0, 163.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 36.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.36666666666666664, "minX": 1.72847832E12, "maxY": 18.216666666666665, "series": [{"data": [[1.72848258E12, 11.05], [1.7284848E12, 15.5], [1.72847916E12, 6.366666666666666], [1.72848582E12, 15.816666666666666], [1.72848804E12, 17.7], [1.72848684E12, 18.216666666666665], [1.72848036E12, 6.333333333333333], [1.72848138E12, 11.25], [1.7284836E12, 11.133333333333333], [1.72848462E12, 15.766666666666667], [1.7284824E12, 11.85], [1.72848564E12, 14.9], [1.72847898E12, 6.1], [1.72848342E12, 11.033333333333333], [1.72848786E12, 17.6], [1.7284812E12, 7.05], [1.72848018E12, 6.383333333333334], [1.72848222E12, 11.066666666666666], [1.72848444E12, 15.833333333333334], [1.72848666E12, 17.016666666666666], [1.72848192E12, 11.483333333333333], [1.72848738E12, 17.683333333333334], [1.7284785E12, 3.3], [1.72848072E12, 5.933333333333334], [1.72848294E12, 11.25], [1.72848516E12, 14.683333333333334], [1.7284797E12, 6.0], [1.72848174E12, 11.75], [1.72848396E12, 10.833333333333334], [1.72848618E12, 15.85], [1.7284884E12, 0.36666666666666664], [1.72848498E12, 15.566666666666666], [1.72847934E12, 6.166666666666667], [1.72848822E12, 16.816666666666666], [1.72847832E12, 1.15], [1.72848276E12, 11.0], [1.7284872E12, 17.2], [1.72848054E12, 7.116666666666666], [1.72848378E12, 11.15], [1.72848702E12, 17.533333333333335], [1.72848156E12, 10.85], [1.728486E12, 15.183333333333334], [1.72847952E12, 6.433333333333334], [1.7284845E12, 14.55], [1.72848774E12, 17.383333333333333], [1.72847886E12, 6.316666666666666], [1.72848228E12, 11.15], [1.72848672E12, 18.0], [1.72848006E12, 6.066666666666666], [1.7284833E12, 10.983333333333333], [1.72848654E12, 18.2], [1.72848108E12, 7.0], [1.72848552E12, 14.95], [1.72847904E12, 5.966666666666667], [1.72847868E12, 4.2], [1.72848432E12, 15.65], [1.7284821E12, 11.133333333333333], [1.72848534E12, 15.216666666666667], [1.72848756E12, 16.85], [1.7284809E12, 5.95], [1.72848312E12, 11.716666666666667], [1.72848636E12, 14.816666666666666], [1.72847988E12, 6.416666666666667], [1.72848414E12, 16.0], [1.72848708E12, 17.15], [1.72848162E12, 11.533333333333333], [1.72848384E12, 10.883333333333333], [1.72848042E12, 6.533333333333333], [1.72848486E12, 15.033333333333333], [1.72848264E12, 10.75], [1.72848588E12, 14.783333333333333], [1.7284794E12, 5.766666666666667], [1.72848366E12, 11.433333333333334], [1.7284881E12, 17.5], [1.72848144E12, 11.283333333333333], [1.72848024E12, 6.283333333333333], [1.72848246E12, 11.35], [1.72848468E12, 14.866666666666667], [1.7284869E12, 16.666666666666668], [1.72847922E12, 6.666666666666667], [1.72848126E12, 10.533333333333333], [1.72848348E12, 11.083333333333334], [1.7284857E12, 15.45], [1.72848792E12, 17.283333333333335], [1.72848078E12, 6.433333333333334], [1.72848642E12, 10.816666666666666], [1.72847976E12, 6.483333333333333], [1.72848198E12, 11.483333333333333], [1.7284842E12, 15.866666666666667], [1.72848522E12, 16.116666666666667], [1.728483E12, 11.55], [1.72847874E12, 7.0], [1.72848096E12, 6.466666666666667], [1.72848744E12, 17.666666666666668], [1.72848402E12, 9.55], [1.72847838E12, 3.4], [1.7284806E12, 6.466666666666667], [1.72848726E12, 16.566666666666666], [1.7284818E12, 10.85], [1.72848624E12, 15.066666666666666], [1.72847958E12, 6.383333333333334], [1.72848282E12, 11.2], [1.72848504E12, 14.516666666666667], [1.72848606E12, 15.766666666666667], [1.72848828E12, 17.633333333333333], [1.72847856E12, 3.4166666666666665], [1.72848354E12, 10.866666666666667], [1.72848012E12, 6.6], [1.72848678E12, 17.816666666666666], [1.72848132E12, 11.683333333333334], [1.72848576E12, 15.683333333333334], [1.7284791E12, 6.6], [1.72848234E12, 11.5], [1.72848456E12, 14.916666666666666], [1.72848558E12, 15.0], [1.7284878E12, 16.5], [1.7284866E12, 17.433333333333334], [1.72848114E12, 6.716666666666667], [1.72848336E12, 11.15], [1.72848438E12, 14.733333333333333], [1.72847994E12, 6.916666666666667], [1.72847892E12, 6.666666666666667], [1.72848216E12, 10.9], [1.7284854E12, 15.533333333333333], [1.72848318E12, 11.2], [1.72848762E12, 17.15], [1.72848288E12, 11.683333333333334], [1.72848612E12, 16.216666666666665], [1.72847946E12, 5.916666666666667], [1.7284839E12, 10.966666666666667], [1.72848834E12, 9.816666666666666], [1.72847844E12, 3.4], [1.72848168E12, 10.7], [1.72848066E12, 6.0], [1.7284827E12, 10.783333333333333], [1.72848492E12, 15.983333333333333], [1.72848714E12, 16.95], [1.7284803E12, 6.616666666666666], [1.72847928E12, 6.183333333333334], [1.7284815E12, 11.433333333333334], [1.72848372E12, 10.916666666666666], [1.72848594E12, 15.4], [1.72848816E12, 15.6], [1.72848474E12, 16.2], [1.72848798E12, 16.9], [1.72848252E12, 11.033333333333333], [1.72848696E12, 16.816666666666666], [1.72848048E12, 6.5], [1.72847982E12, 6.266666666666667], [1.7284788E12, 6.283333333333333], [1.72848324E12, 12.033333333333333], [1.72848546E12, 16.033333333333335], [1.72848768E12, 15.4], [1.72848102E12, 6.566666666666666], [1.72848426E12, 16.2], [1.7284875E12, 16.766666666666666], [1.72848648E12, 10.666666666666666], [1.72848204E12, 10.383333333333333], [1.72848E12, 6.95], [1.72848306E12, 10.816666666666666], [1.72847964E12, 6.566666666666666], [1.7284863E12, 15.083333333333334], [1.72848528E12, 15.4], [1.72848732E12, 17.8], [1.72847862E12, 2.9833333333333334], [1.72848084E12, 6.516666666666667], [1.72848186E12, 11.383333333333333], [1.72848408E12, 5.016666666666667], [1.7284851E12, 15.316666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7284884E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.38333333333333336, "minX": 1.72847832E12, "maxY": 18.216666666666665, "series": [{"data": [[1.72848258E12, 11.05], [1.7284848E12, 15.5], [1.72847916E12, 6.366666666666666], [1.72848582E12, 15.816666666666666], [1.72848804E12, 17.7], [1.72848684E12, 18.216666666666665], [1.72848036E12, 6.333333333333333], [1.72848138E12, 11.25], [1.7284836E12, 11.133333333333333], [1.72848462E12, 15.766666666666667], [1.7284824E12, 11.85], [1.72848564E12, 14.9], [1.72847898E12, 6.1], [1.72848342E12, 11.033333333333333], [1.72848786E12, 17.6], [1.7284812E12, 6.983333333333333], [1.72848018E12, 6.383333333333334], [1.72848222E12, 11.066666666666666], [1.72848444E12, 15.833333333333334], [1.72848666E12, 17.016666666666666], [1.72848192E12, 11.483333333333333], [1.72848738E12, 17.683333333333334], [1.7284785E12, 3.3], [1.72848072E12, 5.933333333333334], [1.72848294E12, 11.25], [1.72848516E12, 14.683333333333334], [1.7284797E12, 6.0], [1.72848174E12, 11.75], [1.72848396E12, 10.833333333333334], [1.72848618E12, 15.85], [1.7284884E12, 0.38333333333333336], [1.72848498E12, 15.566666666666666], [1.72847934E12, 6.166666666666667], [1.72848822E12, 16.833333333333332], [1.72847832E12, 1.1166666666666667], [1.72848276E12, 11.0], [1.7284872E12, 17.2], [1.72848054E12, 7.116666666666666], [1.72848378E12, 11.15], [1.72848702E12, 17.533333333333335], [1.72848156E12, 10.85], [1.728486E12, 15.183333333333334], [1.72847952E12, 6.433333333333334], [1.7284845E12, 14.55], [1.72848774E12, 17.383333333333333], [1.72847886E12, 6.316666666666666], [1.72848228E12, 11.15], [1.72848672E12, 18.0], [1.72848006E12, 6.066666666666666], [1.7284833E12, 10.983333333333333], [1.72848654E12, 18.2], [1.72848108E12, 7.0], [1.72848552E12, 14.95], [1.72847904E12, 5.966666666666667], [1.72847868E12, 4.183333333333334], [1.72848432E12, 15.65], [1.7284821E12, 11.133333333333333], [1.72848534E12, 15.216666666666667], [1.72848756E12, 16.85], [1.7284809E12, 5.95], [1.72848312E12, 11.716666666666667], [1.72848636E12, 14.833333333333334], [1.72847988E12, 6.416666666666667], [1.72848414E12, 16.0], [1.72848708E12, 17.15], [1.72848162E12, 11.533333333333333], [1.72848384E12, 10.883333333333333], [1.72848042E12, 6.533333333333333], [1.72848486E12, 15.033333333333333], [1.72848264E12, 10.75], [1.72848588E12, 14.783333333333333], [1.7284794E12, 5.766666666666667], [1.72848366E12, 11.433333333333334], [1.7284881E12, 17.5], [1.72848144E12, 11.283333333333333], [1.72848024E12, 6.283333333333333], [1.72848246E12, 11.35], [1.72848468E12, 14.866666666666667], [1.7284869E12, 16.666666666666668], [1.72847922E12, 6.666666666666667], [1.72848126E12, 10.533333333333333], [1.72848348E12, 11.083333333333334], [1.7284857E12, 15.45], [1.72848792E12, 17.283333333333335], [1.72848078E12, 6.433333333333334], [1.72848642E12, 10.916666666666666], [1.72847976E12, 6.483333333333333], [1.72848198E12, 11.483333333333333], [1.7284842E12, 15.866666666666667], [1.72848522E12, 16.116666666666667], [1.728483E12, 11.55], [1.72847874E12, 6.983333333333333], [1.72848096E12, 6.466666666666667], [1.72848744E12, 17.666666666666668], [1.72848402E12, 9.6], [1.72847838E12, 3.4], [1.7284806E12, 6.466666666666667], [1.72848726E12, 16.566666666666666], [1.7284818E12, 10.85], [1.72848624E12, 15.066666666666666], [1.72847958E12, 6.383333333333334], [1.72848282E12, 11.2], [1.72848504E12, 14.516666666666667], [1.72848606E12, 15.766666666666667], [1.72848828E12, 17.65], [1.72847856E12, 3.4166666666666665], [1.72848354E12, 10.866666666666667], [1.72848012E12, 6.6], [1.72848678E12, 17.816666666666666], [1.72848132E12, 11.683333333333334], [1.72848576E12, 15.683333333333334], [1.7284791E12, 6.6], [1.72848234E12, 11.5], [1.72848456E12, 14.916666666666666], [1.72848558E12, 15.0], [1.7284878E12, 16.5], [1.7284866E12, 17.433333333333334], [1.72848114E12, 6.716666666666667], [1.72848336E12, 11.15], [1.72848438E12, 14.733333333333333], [1.72847994E12, 6.916666666666667], [1.72847892E12, 6.666666666666667], [1.72848216E12, 10.9], [1.7284854E12, 15.533333333333333], [1.72848318E12, 11.2], [1.72848762E12, 17.15], [1.72848288E12, 11.683333333333334], [1.72848612E12, 16.216666666666665], [1.72847946E12, 5.916666666666667], [1.7284839E12, 10.966666666666667], [1.72848834E12, 10.033333333333333], [1.72847844E12, 3.4], [1.72848168E12, 10.7], [1.72848066E12, 6.0], [1.7284827E12, 10.783333333333333], [1.72848492E12, 15.983333333333333], [1.72848714E12, 16.95], [1.7284803E12, 6.616666666666666], [1.72847928E12, 6.183333333333334], [1.7284815E12, 11.433333333333334], [1.72848372E12, 10.916666666666666], [1.72848594E12, 15.4], [1.72848816E12, 15.6], [1.72848474E12, 16.2], [1.72848798E12, 16.9], [1.72848252E12, 11.033333333333333], [1.72848696E12, 16.816666666666666], [1.72848048E12, 6.5], [1.72847982E12, 6.266666666666667], [1.7284788E12, 6.283333333333333], [1.72848324E12, 12.033333333333333], [1.72848546E12, 16.033333333333335], [1.72848768E12, 15.4], [1.72848102E12, 6.566666666666666], [1.72848426E12, 16.2], [1.7284875E12, 16.766666666666666], [1.72848648E12, 10.483333333333333], [1.72848204E12, 10.383333333333333], [1.72848E12, 6.95], [1.72848306E12, 10.816666666666666], [1.72847964E12, 6.566666666666666], [1.7284863E12, 15.083333333333334], [1.72848528E12, 15.4], [1.72848732E12, 17.8], [1.72847862E12, 2.9833333333333334], [1.72848084E12, 6.516666666666667], [1.72848186E12, 11.383333333333333], [1.72848408E12, 4.9], [1.7284851E12, 15.316666666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7284884E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.38333333333333336, "minX": 1.72847832E12, "maxY": 18.216666666666665, "series": [{"data": [[1.72848258E12, 11.05], [1.7284848E12, 15.5], [1.72847916E12, 6.366666666666666], [1.72848582E12, 15.816666666666666], [1.72848804E12, 17.7], [1.72848684E12, 18.216666666666665], [1.72848036E12, 6.333333333333333], [1.72848138E12, 11.25], [1.7284836E12, 11.133333333333333], [1.72848462E12, 15.766666666666667], [1.7284824E12, 11.85], [1.72848564E12, 14.9], [1.72847898E12, 6.1], [1.72848342E12, 11.033333333333333], [1.72848786E12, 17.6], [1.7284812E12, 6.983333333333333], [1.72848018E12, 6.383333333333334], [1.72848222E12, 11.066666666666666], [1.72848444E12, 15.833333333333334], [1.72848666E12, 17.016666666666666], [1.72848192E12, 11.483333333333333], [1.72848738E12, 17.683333333333334], [1.7284785E12, 3.3], [1.72848072E12, 5.933333333333334], [1.72848294E12, 11.25], [1.72848516E12, 14.683333333333334], [1.7284797E12, 6.0], [1.72848174E12, 11.75], [1.72848396E12, 10.833333333333334], [1.72848618E12, 15.85], [1.7284884E12, 0.38333333333333336], [1.72848498E12, 15.566666666666666], [1.72847934E12, 6.166666666666667], [1.72848822E12, 16.833333333333332], [1.72847832E12, 1.1166666666666667], [1.72848276E12, 11.0], [1.7284872E12, 17.2], [1.72848054E12, 7.116666666666666], [1.72848378E12, 11.15], [1.72848702E12, 17.533333333333335], [1.72848156E12, 10.85], [1.728486E12, 15.183333333333334], [1.72847952E12, 6.433333333333334], [1.7284845E12, 14.55], [1.72848774E12, 17.383333333333333], [1.72847886E12, 6.316666666666666], [1.72848228E12, 11.15], [1.72848672E12, 18.0], [1.72848006E12, 6.066666666666666], [1.7284833E12, 10.983333333333333], [1.72848654E12, 18.2], [1.72848108E12, 7.0], [1.72848552E12, 14.95], [1.72847904E12, 5.966666666666667], [1.72847868E12, 4.183333333333334], [1.72848432E12, 15.65], [1.7284821E12, 11.133333333333333], [1.72848534E12, 15.216666666666667], [1.72848756E12, 16.85], [1.7284809E12, 5.95], [1.72848312E12, 11.716666666666667], [1.72848636E12, 14.833333333333334], [1.72847988E12, 6.416666666666667], [1.72848414E12, 16.0], [1.72848708E12, 17.15], [1.72848162E12, 11.533333333333333], [1.72848384E12, 10.883333333333333], [1.72848042E12, 6.533333333333333], [1.72848486E12, 15.033333333333333], [1.72848264E12, 10.75], [1.72848588E12, 14.783333333333333], [1.7284794E12, 5.766666666666667], [1.72848366E12, 11.433333333333334], [1.7284881E12, 17.5], [1.72848144E12, 11.283333333333333], [1.72848024E12, 6.283333333333333], [1.72848246E12, 11.35], [1.72848468E12, 14.866666666666667], [1.7284869E12, 16.666666666666668], [1.72847922E12, 6.666666666666667], [1.72848126E12, 10.533333333333333], [1.72848348E12, 11.083333333333334], [1.7284857E12, 15.45], [1.72848792E12, 17.283333333333335], [1.72848078E12, 6.433333333333334], [1.72848642E12, 10.916666666666666], [1.72847976E12, 6.483333333333333], [1.72848198E12, 11.483333333333333], [1.7284842E12, 15.866666666666667], [1.72848522E12, 16.116666666666667], [1.728483E12, 11.55], [1.72847874E12, 6.983333333333333], [1.72848096E12, 6.466666666666667], [1.72848744E12, 17.666666666666668], [1.72848402E12, 9.6], [1.72847838E12, 3.4], [1.7284806E12, 6.466666666666667], [1.72848726E12, 16.566666666666666], [1.7284818E12, 10.85], [1.72848624E12, 15.066666666666666], [1.72847958E12, 6.383333333333334], [1.72848282E12, 11.2], [1.72848504E12, 14.516666666666667], [1.72848606E12, 15.766666666666667], [1.72848828E12, 17.65], [1.72847856E12, 3.4166666666666665], [1.72848354E12, 10.866666666666667], [1.72848012E12, 6.6], [1.72848678E12, 17.816666666666666], [1.72848132E12, 11.683333333333334], [1.72848576E12, 15.683333333333334], [1.7284791E12, 6.6], [1.72848234E12, 11.5], [1.72848456E12, 14.916666666666666], [1.72848558E12, 15.0], [1.7284878E12, 16.5], [1.7284866E12, 17.433333333333334], [1.72848114E12, 6.716666666666667], [1.72848336E12, 11.15], [1.72848438E12, 14.733333333333333], [1.72847994E12, 6.916666666666667], [1.72847892E12, 6.666666666666667], [1.72848216E12, 10.9], [1.7284854E12, 15.533333333333333], [1.72848318E12, 11.2], [1.72848762E12, 17.15], [1.72848288E12, 11.683333333333334], [1.72848612E12, 16.216666666666665], [1.72847946E12, 5.916666666666667], [1.7284839E12, 10.966666666666667], [1.72848834E12, 10.033333333333333], [1.72847844E12, 3.4], [1.72848168E12, 10.7], [1.72848066E12, 6.0], [1.7284827E12, 10.783333333333333], [1.72848492E12, 15.983333333333333], [1.72848714E12, 16.95], [1.7284803E12, 6.616666666666666], [1.72847928E12, 6.183333333333334], [1.7284815E12, 11.433333333333334], [1.72848372E12, 10.916666666666666], [1.72848594E12, 15.4], [1.72848816E12, 15.6], [1.72848474E12, 16.2], [1.72848798E12, 16.9], [1.72848252E12, 11.033333333333333], [1.72848696E12, 16.816666666666666], [1.72848048E12, 6.5], [1.72847982E12, 6.266666666666667], [1.7284788E12, 6.283333333333333], [1.72848324E12, 12.033333333333333], [1.72848546E12, 16.033333333333335], [1.72848768E12, 15.4], [1.72848102E12, 6.566666666666666], [1.72848426E12, 16.2], [1.7284875E12, 16.766666666666666], [1.72848648E12, 10.483333333333333], [1.72848204E12, 10.383333333333333], [1.72848E12, 6.95], [1.72848306E12, 10.816666666666666], [1.72847964E12, 6.566666666666666], [1.7284863E12, 15.083333333333334], [1.72848528E12, 15.4], [1.72848732E12, 17.8], [1.72847862E12, 2.9833333333333334], [1.72848084E12, 6.516666666666667], [1.72848186E12, 11.383333333333333], [1.72848408E12, 4.9], [1.7284851E12, 15.316666666666666]], "isOverall": false, "label": "getmap-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7284884E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.38333333333333336, "minX": 1.72847832E12, "maxY": 18.216666666666665, "series": [{"data": [[1.72848258E12, 11.05], [1.7284848E12, 15.5], [1.72847916E12, 6.366666666666666], [1.72848582E12, 15.816666666666666], [1.72848804E12, 17.7], [1.72848684E12, 18.216666666666665], [1.72848036E12, 6.333333333333333], [1.72848138E12, 11.25], [1.7284836E12, 11.133333333333333], [1.72848462E12, 15.766666666666667], [1.7284824E12, 11.85], [1.72848564E12, 14.9], [1.72847898E12, 6.1], [1.72848342E12, 11.033333333333333], [1.72848786E12, 17.6], [1.7284812E12, 6.983333333333333], [1.72848018E12, 6.383333333333334], [1.72848222E12, 11.066666666666666], [1.72848444E12, 15.833333333333334], [1.72848666E12, 17.016666666666666], [1.72848192E12, 11.483333333333333], [1.72848738E12, 17.683333333333334], [1.7284785E12, 3.3], [1.72848072E12, 5.933333333333334], [1.72848294E12, 11.25], [1.72848516E12, 14.683333333333334], [1.7284797E12, 6.0], [1.72848174E12, 11.75], [1.72848396E12, 10.833333333333334], [1.72848618E12, 15.85], [1.7284884E12, 0.38333333333333336], [1.72848498E12, 15.566666666666666], [1.72847934E12, 6.166666666666667], [1.72848822E12, 16.833333333333332], [1.72847832E12, 1.1166666666666667], [1.72848276E12, 11.0], [1.7284872E12, 17.2], [1.72848054E12, 7.116666666666666], [1.72848378E12, 11.15], [1.72848702E12, 17.533333333333335], [1.72848156E12, 10.85], [1.728486E12, 15.183333333333334], [1.72847952E12, 6.433333333333334], [1.7284845E12, 14.55], [1.72848774E12, 17.383333333333333], [1.72847886E12, 6.316666666666666], [1.72848228E12, 11.15], [1.72848672E12, 18.0], [1.72848006E12, 6.066666666666666], [1.7284833E12, 10.983333333333333], [1.72848654E12, 18.2], [1.72848108E12, 7.0], [1.72848552E12, 14.95], [1.72847904E12, 5.966666666666667], [1.72847868E12, 4.183333333333334], [1.72848432E12, 15.65], [1.7284821E12, 11.133333333333333], [1.72848534E12, 15.216666666666667], [1.72848756E12, 16.85], [1.7284809E12, 5.95], [1.72848312E12, 11.716666666666667], [1.72848636E12, 14.833333333333334], [1.72847988E12, 6.416666666666667], [1.72848414E12, 16.0], [1.72848708E12, 17.15], [1.72848162E12, 11.533333333333333], [1.72848384E12, 10.883333333333333], [1.72848042E12, 6.533333333333333], [1.72848486E12, 15.033333333333333], [1.72848264E12, 10.75], [1.72848588E12, 14.783333333333333], [1.7284794E12, 5.766666666666667], [1.72848366E12, 11.433333333333334], [1.7284881E12, 17.5], [1.72848144E12, 11.283333333333333], [1.72848024E12, 6.283333333333333], [1.72848246E12, 11.35], [1.72848468E12, 14.866666666666667], [1.7284869E12, 16.666666666666668], [1.72847922E12, 6.666666666666667], [1.72848126E12, 10.533333333333333], [1.72848348E12, 11.083333333333334], [1.7284857E12, 15.45], [1.72848792E12, 17.283333333333335], [1.72848078E12, 6.433333333333334], [1.72848642E12, 10.916666666666666], [1.72847976E12, 6.483333333333333], [1.72848198E12, 11.483333333333333], [1.7284842E12, 15.866666666666667], [1.72848522E12, 16.116666666666667], [1.728483E12, 11.55], [1.72847874E12, 6.983333333333333], [1.72848096E12, 6.466666666666667], [1.72848744E12, 17.666666666666668], [1.72848402E12, 9.6], [1.72847838E12, 3.4], [1.7284806E12, 6.466666666666667], [1.72848726E12, 16.566666666666666], [1.7284818E12, 10.85], [1.72848624E12, 15.066666666666666], [1.72847958E12, 6.383333333333334], [1.72848282E12, 11.2], [1.72848504E12, 14.516666666666667], [1.72848606E12, 15.766666666666667], [1.72848828E12, 17.65], [1.72847856E12, 3.4166666666666665], [1.72848354E12, 10.866666666666667], [1.72848012E12, 6.6], [1.72848678E12, 17.816666666666666], [1.72848132E12, 11.683333333333334], [1.72848576E12, 15.683333333333334], [1.7284791E12, 6.6], [1.72848234E12, 11.5], [1.72848456E12, 14.916666666666666], [1.72848558E12, 15.0], [1.7284878E12, 16.5], [1.7284866E12, 17.433333333333334], [1.72848114E12, 6.716666666666667], [1.72848336E12, 11.15], [1.72848438E12, 14.733333333333333], [1.72847994E12, 6.916666666666667], [1.72847892E12, 6.666666666666667], [1.72848216E12, 10.9], [1.7284854E12, 15.533333333333333], [1.72848318E12, 11.2], [1.72848762E12, 17.15], [1.72848288E12, 11.683333333333334], [1.72848612E12, 16.216666666666665], [1.72847946E12, 5.916666666666667], [1.7284839E12, 10.966666666666667], [1.72848834E12, 10.033333333333333], [1.72847844E12, 3.4], [1.72848168E12, 10.7], [1.72848066E12, 6.0], [1.7284827E12, 10.783333333333333], [1.72848492E12, 15.983333333333333], [1.72848714E12, 16.95], [1.7284803E12, 6.616666666666666], [1.72847928E12, 6.183333333333334], [1.7284815E12, 11.433333333333334], [1.72848372E12, 10.916666666666666], [1.72848594E12, 15.4], [1.72848816E12, 15.6], [1.72848474E12, 16.2], [1.72848798E12, 16.9], [1.72848252E12, 11.033333333333333], [1.72848696E12, 16.816666666666666], [1.72848048E12, 6.5], [1.72847982E12, 6.266666666666667], [1.7284788E12, 6.283333333333333], [1.72848324E12, 12.033333333333333], [1.72848546E12, 16.033333333333335], [1.72848768E12, 15.4], [1.72848102E12, 6.566666666666666], [1.72848426E12, 16.2], [1.7284875E12, 16.766666666666666], [1.72848648E12, 10.483333333333333], [1.72848204E12, 10.383333333333333], [1.72848E12, 6.95], [1.72848306E12, 10.816666666666666], [1.72847964E12, 6.566666666666666], [1.7284863E12, 15.083333333333334], [1.72848528E12, 15.4], [1.72848732E12, 17.8], [1.72847862E12, 2.9833333333333334], [1.72848084E12, 6.516666666666667], [1.72848186E12, 11.383333333333333], [1.72848408E12, 4.9], [1.7284851E12, 15.316666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7284884E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

