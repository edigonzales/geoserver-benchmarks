/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 48.0, "minX": 0.0, "maxY": 4616.0, "series": [{"data": [[0.0, 48.0], [0.1, 75.0], [0.2, 79.0], [0.3, 82.0], [0.4, 84.0], [0.5, 86.0], [0.6, 88.0], [0.7, 89.0], [0.8, 91.0], [0.9, 92.0], [1.0, 93.0], [1.1, 94.0], [1.2, 95.0], [1.3, 96.0], [1.4, 97.0], [1.5, 98.0], [1.6, 99.0], [1.7, 100.0], [1.8, 101.0], [1.9, 101.0], [2.0, 102.0], [2.1, 103.0], [2.2, 104.0], [2.3, 104.0], [2.4, 105.0], [2.5, 106.0], [2.6, 107.0], [2.7, 107.0], [2.8, 108.0], [2.9, 109.0], [3.0, 109.0], [3.1, 110.0], [3.2, 110.0], [3.3, 111.0], [3.4, 111.0], [3.5, 112.0], [3.6, 113.0], [3.7, 113.0], [3.8, 114.0], [3.9, 114.0], [4.0, 115.0], [4.1, 115.0], [4.2, 116.0], [4.3, 116.0], [4.4, 117.0], [4.5, 117.0], [4.6, 118.0], [4.7, 118.0], [4.8, 119.0], [4.9, 119.0], [5.0, 120.0], [5.1, 120.0], [5.2, 121.0], [5.3, 121.0], [5.4, 122.0], [5.5, 122.0], [5.6, 123.0], [5.7, 123.0], [5.8, 123.0], [5.9, 124.0], [6.0, 124.0], [6.1, 125.0], [6.2, 125.0], [6.3, 126.0], [6.4, 126.0], [6.5, 127.0], [6.6, 127.0], [6.7, 127.0], [6.8, 128.0], [6.9, 128.0], [7.0, 129.0], [7.1, 129.0], [7.2, 130.0], [7.3, 130.0], [7.4, 130.0], [7.5, 131.0], [7.6, 131.0], [7.7, 132.0], [7.8, 132.0], [7.9, 132.0], [8.0, 133.0], [8.1, 133.0], [8.2, 134.0], [8.3, 134.0], [8.4, 135.0], [8.5, 135.0], [8.6, 135.0], [8.7, 136.0], [8.8, 136.0], [8.9, 137.0], [9.0, 137.0], [9.1, 137.0], [9.2, 138.0], [9.3, 138.0], [9.4, 139.0], [9.5, 139.0], [9.6, 140.0], [9.7, 140.0], [9.8, 140.0], [9.9, 141.0], [10.0, 141.0], [10.1, 142.0], [10.2, 142.0], [10.3, 142.0], [10.4, 143.0], [10.5, 143.0], [10.6, 144.0], [10.7, 144.0], [10.8, 144.0], [10.9, 145.0], [11.0, 145.0], [11.1, 146.0], [11.2, 146.0], [11.3, 146.0], [11.4, 147.0], [11.5, 147.0], [11.6, 148.0], [11.7, 148.0], [11.8, 148.0], [11.9, 149.0], [12.0, 149.0], [12.1, 149.0], [12.2, 150.0], [12.3, 150.0], [12.4, 151.0], [12.5, 151.0], [12.6, 152.0], [12.7, 152.0], [12.8, 152.0], [12.9, 153.0], [13.0, 153.0], [13.1, 153.0], [13.2, 154.0], [13.3, 154.0], [13.4, 155.0], [13.5, 155.0], [13.6, 155.0], [13.7, 156.0], [13.8, 156.0], [13.9, 157.0], [14.0, 157.0], [14.1, 158.0], [14.2, 158.0], [14.3, 158.0], [14.4, 159.0], [14.5, 159.0], [14.6, 159.0], [14.7, 160.0], [14.8, 160.0], [14.9, 161.0], [15.0, 161.0], [15.1, 161.0], [15.2, 162.0], [15.3, 162.0], [15.4, 163.0], [15.5, 163.0], [15.6, 163.0], [15.7, 164.0], [15.8, 164.0], [15.9, 165.0], [16.0, 165.0], [16.1, 165.0], [16.2, 166.0], [16.3, 166.0], [16.4, 167.0], [16.5, 167.0], [16.6, 167.0], [16.7, 168.0], [16.8, 168.0], [16.9, 169.0], [17.0, 169.0], [17.1, 169.0], [17.2, 170.0], [17.3, 170.0], [17.4, 171.0], [17.5, 171.0], [17.6, 171.0], [17.7, 172.0], [17.8, 172.0], [17.9, 173.0], [18.0, 173.0], [18.1, 173.0], [18.2, 174.0], [18.3, 174.0], [18.4, 175.0], [18.5, 175.0], [18.6, 176.0], [18.7, 176.0], [18.8, 176.0], [18.9, 177.0], [19.0, 177.0], [19.1, 178.0], [19.2, 178.0], [19.3, 179.0], [19.4, 179.0], [19.5, 179.0], [19.6, 180.0], [19.7, 180.0], [19.8, 181.0], [19.9, 181.0], [20.0, 182.0], [20.1, 182.0], [20.2, 182.0], [20.3, 183.0], [20.4, 183.0], [20.5, 184.0], [20.6, 184.0], [20.7, 185.0], [20.8, 185.0], [20.9, 186.0], [21.0, 186.0], [21.1, 186.0], [21.2, 187.0], [21.3, 187.0], [21.4, 188.0], [21.5, 188.0], [21.6, 189.0], [21.7, 189.0], [21.8, 190.0], [21.9, 190.0], [22.0, 191.0], [22.1, 191.0], [22.2, 192.0], [22.3, 192.0], [22.4, 193.0], [22.5, 193.0], [22.6, 193.0], [22.7, 194.0], [22.8, 194.0], [22.9, 195.0], [23.0, 195.0], [23.1, 196.0], [23.2, 196.0], [23.3, 197.0], [23.4, 197.0], [23.5, 198.0], [23.6, 198.0], [23.7, 199.0], [23.8, 199.0], [23.9, 200.0], [24.0, 200.0], [24.1, 201.0], [24.2, 201.0], [24.3, 202.0], [24.4, 202.0], [24.5, 202.0], [24.6, 203.0], [24.7, 203.0], [24.8, 204.0], [24.9, 205.0], [25.0, 205.0], [25.1, 206.0], [25.2, 206.0], [25.3, 207.0], [25.4, 207.0], [25.5, 207.0], [25.6, 208.0], [25.7, 208.0], [25.8, 209.0], [25.9, 210.0], [26.0, 210.0], [26.1, 211.0], [26.2, 211.0], [26.3, 212.0], [26.4, 212.0], [26.5, 213.0], [26.6, 213.0], [26.7, 214.0], [26.8, 214.0], [26.9, 215.0], [27.0, 216.0], [27.1, 216.0], [27.2, 217.0], [27.3, 217.0], [27.4, 218.0], [27.5, 219.0], [27.6, 219.0], [27.7, 220.0], [27.8, 220.0], [27.9, 221.0], [28.0, 221.0], [28.1, 222.0], [28.2, 223.0], [28.3, 223.0], [28.4, 224.0], [28.5, 225.0], [28.6, 225.0], [28.7, 226.0], [28.8, 226.0], [28.9, 227.0], [29.0, 228.0], [29.1, 228.0], [29.2, 229.0], [29.3, 230.0], [29.4, 231.0], [29.5, 231.0], [29.6, 232.0], [29.7, 233.0], [29.8, 233.0], [29.9, 234.0], [30.0, 234.0], [30.1, 235.0], [30.2, 236.0], [30.3, 237.0], [30.4, 237.0], [30.5, 238.0], [30.6, 239.0], [30.7, 240.0], [30.8, 240.0], [30.9, 241.0], [31.0, 242.0], [31.1, 242.0], [31.2, 243.0], [31.3, 244.0], [31.4, 245.0], [31.5, 246.0], [31.6, 246.0], [31.7, 247.0], [31.8, 248.0], [31.9, 249.0], [32.0, 250.0], [32.1, 251.0], [32.2, 252.0], [32.3, 252.0], [32.4, 253.0], [32.5, 254.0], [32.6, 255.0], [32.7, 256.0], [32.8, 257.0], [32.9, 258.0], [33.0, 258.0], [33.1, 259.0], [33.2, 260.0], [33.3, 261.0], [33.4, 262.0], [33.5, 263.0], [33.6, 264.0], [33.7, 265.0], [33.8, 266.0], [33.9, 267.0], [34.0, 268.0], [34.1, 269.0], [34.2, 270.0], [34.3, 271.0], [34.4, 272.0], [34.5, 273.0], [34.6, 274.0], [34.7, 275.0], [34.8, 276.0], [34.9, 277.0], [35.0, 278.0], [35.1, 279.0], [35.2, 280.0], [35.3, 282.0], [35.4, 283.0], [35.5, 284.0], [35.6, 286.0], [35.7, 287.0], [35.8, 288.0], [35.9, 289.0], [36.0, 290.0], [36.1, 292.0], [36.2, 293.0], [36.3, 295.0], [36.4, 296.0], [36.5, 297.0], [36.6, 299.0], [36.7, 300.0], [36.8, 302.0], [36.9, 303.0], [37.0, 305.0], [37.1, 306.0], [37.2, 308.0], [37.3, 309.0], [37.4, 311.0], [37.5, 312.0], [37.6, 314.0], [37.7, 315.0], [37.8, 317.0], [37.9, 319.0], [38.0, 321.0], [38.1, 322.0], [38.2, 324.0], [38.3, 326.0], [38.4, 328.0], [38.5, 330.0], [38.6, 331.0], [38.7, 333.0], [38.8, 335.0], [38.9, 337.0], [39.0, 339.0], [39.1, 341.0], [39.2, 343.0], [39.3, 345.0], [39.4, 347.0], [39.5, 349.0], [39.6, 352.0], [39.7, 354.0], [39.8, 356.0], [39.9, 359.0], [40.0, 361.0], [40.1, 364.0], [40.2, 366.0], [40.3, 368.0], [40.4, 371.0], [40.5, 373.0], [40.6, 376.0], [40.7, 378.0], [40.8, 381.0], [40.9, 384.0], [41.0, 387.0], [41.1, 390.0], [41.2, 393.0], [41.3, 395.0], [41.4, 398.0], [41.5, 402.0], [41.6, 405.0], [41.7, 408.0], [41.8, 411.0], [41.9, 414.0], [42.0, 417.0], [42.1, 421.0], [42.2, 424.0], [42.3, 428.0], [42.4, 431.0], [42.5, 435.0], [42.6, 438.0], [42.7, 443.0], [42.8, 447.0], [42.9, 451.0], [43.0, 455.0], [43.1, 459.0], [43.2, 463.0], [43.3, 467.0], [43.4, 472.0], [43.5, 477.0], [43.6, 481.0], [43.7, 486.0], [43.8, 491.0], [43.9, 494.0], [44.0, 498.0], [44.1, 502.0], [44.2, 507.0], [44.3, 511.0], [44.4, 516.0], [44.5, 519.0], [44.6, 525.0], [44.7, 530.0], [44.8, 535.0], [44.9, 540.0], [45.0, 545.0], [45.1, 549.0], [45.2, 554.0], [45.3, 559.0], [45.4, 564.0], [45.5, 570.0], [45.6, 574.0], [45.7, 579.0], [45.8, 584.0], [45.9, 589.0], [46.0, 594.0], [46.1, 599.0], [46.2, 603.0], [46.3, 608.0], [46.4, 613.0], [46.5, 618.0], [46.6, 622.0], [46.7, 628.0], [46.8, 633.0], [46.9, 638.0], [47.0, 643.0], [47.1, 646.0], [47.2, 651.0], [47.3, 655.0], [47.4, 660.0], [47.5, 663.0], [47.6, 668.0], [47.7, 672.0], [47.8, 676.0], [47.9, 680.0], [48.0, 685.0], [48.1, 689.0], [48.2, 692.0], [48.3, 696.0], [48.4, 700.0], [48.5, 705.0], [48.6, 709.0], [48.7, 713.0], [48.8, 718.0], [48.9, 722.0], [49.0, 725.0], [49.1, 729.0], [49.2, 732.0], [49.3, 735.0], [49.4, 739.0], [49.5, 742.0], [49.6, 746.0], [49.7, 749.0], [49.8, 753.0], [49.9, 756.0], [50.0, 760.0], [50.1, 764.0], [50.2, 767.0], [50.3, 770.0], [50.4, 774.0], [50.5, 778.0], [50.6, 781.0], [50.7, 784.0], [50.8, 787.0], [50.9, 791.0], [51.0, 794.0], [51.1, 796.0], [51.2, 800.0], [51.3, 803.0], [51.4, 806.0], [51.5, 809.0], [51.6, 813.0], [51.7, 816.0], [51.8, 818.0], [51.9, 821.0], [52.0, 824.0], [52.1, 827.0], [52.2, 830.0], [52.3, 833.0], [52.4, 836.0], [52.5, 839.0], [52.6, 842.0], [52.7, 845.0], [52.8, 848.0], [52.9, 850.0], [53.0, 853.0], [53.1, 856.0], [53.2, 859.0], [53.3, 862.0], [53.4, 865.0], [53.5, 868.0], [53.6, 871.0], [53.7, 873.0], [53.8, 875.0], [53.9, 879.0], [54.0, 882.0], [54.1, 884.0], [54.2, 886.0], [54.3, 889.0], [54.4, 891.0], [54.5, 893.0], [54.6, 896.0], [54.7, 899.0], [54.8, 901.0], [54.9, 904.0], [55.0, 906.0], [55.1, 909.0], [55.2, 911.0], [55.3, 914.0], [55.4, 917.0], [55.5, 920.0], [55.6, 922.0], [55.7, 925.0], [55.8, 927.0], [55.9, 930.0], [56.0, 932.0], [56.1, 935.0], [56.2, 937.0], [56.3, 940.0], [56.4, 942.0], [56.5, 945.0], [56.6, 948.0], [56.7, 950.0], [56.8, 952.0], [56.9, 954.0], [57.0, 956.0], [57.1, 959.0], [57.2, 961.0], [57.3, 963.0], [57.4, 966.0], [57.5, 968.0], [57.6, 971.0], [57.7, 973.0], [57.8, 975.0], [57.9, 978.0], [58.0, 980.0], [58.1, 982.0], [58.2, 985.0], [58.3, 987.0], [58.4, 989.0], [58.5, 992.0], [58.6, 994.0], [58.7, 996.0], [58.8, 998.0], [58.9, 1000.0], [59.0, 1002.0], [59.1, 1005.0], [59.2, 1007.0], [59.3, 1009.0], [59.4, 1011.0], [59.5, 1014.0], [59.6, 1016.0], [59.7, 1019.0], [59.8, 1021.0], [59.9, 1023.0], [60.0, 1026.0], [60.1, 1028.0], [60.2, 1030.0], [60.3, 1033.0], [60.4, 1035.0], [60.5, 1038.0], [60.6, 1040.0], [60.7, 1043.0], [60.8, 1045.0], [60.9, 1048.0], [61.0, 1050.0], [61.1, 1052.0], [61.2, 1055.0], [61.3, 1057.0], [61.4, 1059.0], [61.5, 1061.0], [61.6, 1064.0], [61.7, 1065.0], [61.8, 1067.0], [61.9, 1070.0], [62.0, 1072.0], [62.1, 1074.0], [62.2, 1076.0], [62.3, 1078.0], [62.4, 1081.0], [62.5, 1083.0], [62.6, 1085.0], [62.7, 1087.0], [62.8, 1089.0], [62.9, 1091.0], [63.0, 1094.0], [63.1, 1096.0], [63.2, 1098.0], [63.3, 1100.0], [63.4, 1102.0], [63.5, 1105.0], [63.6, 1107.0], [63.7, 1109.0], [63.8, 1111.0], [63.9, 1114.0], [64.0, 1116.0], [64.1, 1118.0], [64.2, 1120.0], [64.3, 1122.0], [64.4, 1124.0], [64.5, 1127.0], [64.6, 1129.0], [64.7, 1131.0], [64.8, 1132.0], [64.9, 1135.0], [65.0, 1137.0], [65.1, 1139.0], [65.2, 1141.0], [65.3, 1143.0], [65.4, 1145.0], [65.5, 1147.0], [65.6, 1150.0], [65.7, 1152.0], [65.8, 1155.0], [65.9, 1157.0], [66.0, 1159.0], [66.1, 1161.0], [66.2, 1164.0], [66.3, 1166.0], [66.4, 1168.0], [66.5, 1170.0], [66.6, 1172.0], [66.7, 1175.0], [66.8, 1177.0], [66.9, 1179.0], [67.0, 1181.0], [67.1, 1184.0], [67.2, 1185.0], [67.3, 1188.0], [67.4, 1190.0], [67.5, 1192.0], [67.6, 1194.0], [67.7, 1197.0], [67.8, 1199.0], [67.9, 1201.0], [68.0, 1204.0], [68.1, 1206.0], [68.2, 1208.0], [68.3, 1210.0], [68.4, 1212.0], [68.5, 1215.0], [68.6, 1217.0], [68.7, 1219.0], [68.8, 1221.0], [68.9, 1224.0], [69.0, 1226.0], [69.1, 1229.0], [69.2, 1231.0], [69.3, 1233.0], [69.4, 1236.0], [69.5, 1238.0], [69.6, 1240.0], [69.7, 1242.0], [69.8, 1245.0], [69.9, 1247.0], [70.0, 1249.0], [70.1, 1252.0], [70.2, 1254.0], [70.3, 1256.0], [70.4, 1259.0], [70.5, 1261.0], [70.6, 1263.0], [70.7, 1266.0], [70.8, 1268.0], [70.9, 1270.0], [71.0, 1272.0], [71.1, 1274.0], [71.2, 1276.0], [71.3, 1279.0], [71.4, 1281.0], [71.5, 1283.0], [71.6, 1286.0], [71.7, 1288.0], [71.8, 1290.0], [71.9, 1292.0], [72.0, 1294.0], [72.1, 1297.0], [72.2, 1299.0], [72.3, 1302.0], [72.4, 1304.0], [72.5, 1306.0], [72.6, 1308.0], [72.7, 1310.0], [72.8, 1313.0], [72.9, 1315.0], [73.0, 1317.0], [73.1, 1320.0], [73.2, 1322.0], [73.3, 1324.0], [73.4, 1326.0], [73.5, 1329.0], [73.6, 1331.0], [73.7, 1334.0], [73.8, 1336.0], [73.9, 1338.0], [74.0, 1340.0], [74.1, 1343.0], [74.2, 1345.0], [74.3, 1347.0], [74.4, 1349.0], [74.5, 1351.0], [74.6, 1354.0], [74.7, 1356.0], [74.8, 1359.0], [74.9, 1361.0], [75.0, 1364.0], [75.1, 1366.0], [75.2, 1369.0], [75.3, 1371.0], [75.4, 1374.0], [75.5, 1376.0], [75.6, 1379.0], [75.7, 1381.0], [75.8, 1384.0], [75.9, 1386.0], [76.0, 1388.0], [76.1, 1391.0], [76.2, 1393.0], [76.3, 1396.0], [76.4, 1398.0], [76.5, 1401.0], [76.6, 1403.0], [76.7, 1405.0], [76.8, 1408.0], [76.9, 1411.0], [77.0, 1413.0], [77.1, 1416.0], [77.2, 1417.0], [77.3, 1420.0], [77.4, 1423.0], [77.5, 1425.0], [77.6, 1428.0], [77.7, 1431.0], [77.8, 1433.0], [77.9, 1436.0], [78.0, 1438.0], [78.1, 1441.0], [78.2, 1444.0], [78.3, 1446.0], [78.4, 1448.0], [78.5, 1451.0], [78.6, 1453.0], [78.7, 1456.0], [78.8, 1459.0], [78.9, 1461.0], [79.0, 1464.0], [79.1, 1467.0], [79.2, 1469.0], [79.3, 1472.0], [79.4, 1475.0], [79.5, 1477.0], [79.6, 1480.0], [79.7, 1483.0], [79.8, 1485.0], [79.9, 1489.0], [80.0, 1492.0], [80.1, 1495.0], [80.2, 1498.0], [80.3, 1501.0], [80.4, 1504.0], [80.5, 1506.0], [80.6, 1509.0], [80.7, 1512.0], [80.8, 1515.0], [80.9, 1518.0], [81.0, 1521.0], [81.1, 1524.0], [81.2, 1527.0], [81.3, 1530.0], [81.4, 1533.0], [81.5, 1536.0], [81.6, 1539.0], [81.7, 1542.0], [81.8, 1545.0], [81.9, 1548.0], [82.0, 1551.0], [82.1, 1553.0], [82.2, 1556.0], [82.3, 1559.0], [82.4, 1563.0], [82.5, 1565.0], [82.6, 1568.0], [82.7, 1571.0], [82.8, 1575.0], [82.9, 1578.0], [83.0, 1582.0], [83.1, 1584.0], [83.2, 1587.0], [83.3, 1590.0], [83.4, 1594.0], [83.5, 1596.0], [83.6, 1599.0], [83.7, 1603.0], [83.8, 1606.0], [83.9, 1609.0], [84.0, 1612.0], [84.1, 1615.0], [84.2, 1618.0], [84.3, 1622.0], [84.4, 1625.0], [84.5, 1628.0], [84.6, 1631.0], [84.7, 1635.0], [84.8, 1637.0], [84.9, 1641.0], [85.0, 1645.0], [85.1, 1647.0], [85.2, 1651.0], [85.3, 1654.0], [85.4, 1657.0], [85.5, 1661.0], [85.6, 1665.0], [85.7, 1668.0], [85.8, 1672.0], [85.9, 1676.0], [86.0, 1679.0], [86.1, 1683.0], [86.2, 1686.0], [86.3, 1690.0], [86.4, 1693.0], [86.5, 1697.0], [86.6, 1700.0], [86.7, 1704.0], [86.8, 1707.0], [86.9, 1711.0], [87.0, 1715.0], [87.1, 1719.0], [87.2, 1723.0], [87.3, 1726.0], [87.4, 1730.0], [87.5, 1733.0], [87.6, 1737.0], [87.7, 1741.0], [87.8, 1745.0], [87.9, 1749.0], [88.0, 1752.0], [88.1, 1756.0], [88.2, 1761.0], [88.3, 1765.0], [88.4, 1768.0], [88.5, 1773.0], [88.6, 1777.0], [88.7, 1781.0], [88.8, 1785.0], [88.9, 1789.0], [89.0, 1793.0], [89.1, 1798.0], [89.2, 1802.0], [89.3, 1807.0], [89.4, 1811.0], [89.5, 1815.0], [89.6, 1819.0], [89.7, 1823.0], [89.8, 1828.0], [89.9, 1833.0], [90.0, 1837.0], [90.1, 1841.0], [90.2, 1846.0], [90.3, 1850.0], [90.4, 1855.0], [90.5, 1859.0], [90.6, 1864.0], [90.7, 1868.0], [90.8, 1873.0], [90.9, 1878.0], [91.0, 1884.0], [91.1, 1889.0], [91.2, 1893.0], [91.3, 1898.0], [91.4, 1903.0], [91.5, 1909.0], [91.6, 1914.0], [91.7, 1920.0], [91.8, 1925.0], [91.9, 1931.0], [92.0, 1937.0], [92.1, 1943.0], [92.2, 1949.0], [92.3, 1955.0], [92.4, 1961.0], [92.5, 1966.0], [92.6, 1972.0], [92.7, 1978.0], [92.8, 1984.0], [92.9, 1989.0], [93.0, 1996.0], [93.1, 2003.0], [93.2, 2010.0], [93.3, 2016.0], [93.4, 2023.0], [93.5, 2029.0], [93.6, 2035.0], [93.7, 2042.0], [93.8, 2049.0], [93.9, 2056.0], [94.0, 2062.0], [94.1, 2069.0], [94.2, 2076.0], [94.3, 2083.0], [94.4, 2091.0], [94.5, 2098.0], [94.6, 2105.0], [94.7, 2112.0], [94.8, 2120.0], [94.9, 2129.0], [95.0, 2138.0], [95.1, 2147.0], [95.2, 2155.0], [95.3, 2163.0], [95.4, 2171.0], [95.5, 2179.0], [95.6, 2187.0], [95.7, 2196.0], [95.8, 2205.0], [95.9, 2215.0], [96.0, 2224.0], [96.1, 2234.0], [96.2, 2244.0], [96.3, 2256.0], [96.4, 2267.0], [96.5, 2277.0], [96.6, 2288.0], [96.7, 2300.0], [96.8, 2312.0], [96.9, 2325.0], [97.0, 2337.0], [97.1, 2348.0], [97.2, 2358.0], [97.3, 2372.0], [97.4, 2384.0], [97.5, 2399.0], [97.6, 2417.0], [97.7, 2430.0], [97.8, 2446.0], [97.9, 2464.0], [98.0, 2480.0], [98.1, 2495.0], [98.2, 2512.0], [98.3, 2534.0], [98.4, 2558.0], [98.5, 2581.0], [98.6, 2609.0], [98.7, 2635.0], [98.8, 2660.0], [98.9, 2688.0], [99.0, 2723.0], [99.1, 2754.0], [99.2, 2791.0], [99.3, 2831.0], [99.4, 2877.0], [99.5, 2933.0], [99.6, 2998.0], [99.7, 3089.0], [99.8, 3216.0], [99.9, 3406.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 26011.0, "series": [{"data": [[0.0, 1933.0], [600.0, 2643.0], [700.0, 3304.0], [800.0, 4147.0], [900.0, 4843.0], [1000.0, 5162.0], [1100.0, 5324.0], [1200.0, 5155.0], [1300.0, 4972.0], [1400.0, 4460.0], [1500.0, 3924.0], [100.0, 26011.0], [1600.0, 3502.0], [1700.0, 2978.0], [1800.0, 2563.0], [1900.0, 2019.0], [2000.0, 1729.0], [2100.0, 1423.0], [2200.0, 1123.0], [2300.0, 946.0], [2400.0, 721.0], [2500.0, 530.0], [2600.0, 424.0], [2700.0, 339.0], [2800.0, 261.0], [2900.0, 189.0], [3000.0, 120.0], [3100.0, 100.0], [200.0, 15007.0], [3300.0, 47.0], [3200.0, 75.0], [3400.0, 40.0], [3500.0, 27.0], [3700.0, 15.0], [3600.0, 13.0], [3800.0, 12.0], [3900.0, 2.0], [4000.0, 4.0], [4200.0, 3.0], [4100.0, 4.0], [4600.0, 1.0], [4400.0, 1.0], [300.0, 5613.0], [400.0, 3053.0], [500.0, 2438.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 23100.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 51647.0, "series": [{"data": [[0.0, 51647.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 42453.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 23100.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.7284899E12, "maxY": 16.0, "series": [{"data": [[1.72849872E12, 12.0], [1.72849692E12, 12.0], [1.72849842E12, 12.0], [1.72849722E12, 12.0], [1.72849812E12, 12.0], [1.72849752E12, 12.0], [1.72849782E12, 12.0], [1.72849914E12, 11.761336515513115], [1.72849884E12, 12.0], [1.7284968E12, 12.0], [1.72849854E12, 12.0], [1.7284971E12, 12.0], [1.7284992E12, 8.799668874172179], [1.7284974E12, 12.0], [1.7284989E12, 12.0], [1.7284977E12, 12.0], [1.7284986E12, 12.0], [1.7284983E12, 12.0], [1.728498E12, 12.0], [1.72849668E12, 11.943005181347148], [1.72849698E12, 12.0], [1.72849728E12, 12.0], [1.72849902E12, 12.0], [1.72849758E12, 12.0], [1.72849908E12, 12.0], [1.72849878E12, 12.0], [1.72849686E12, 12.0], [1.72849848E12, 12.0], [1.72849716E12, 12.0], [1.72849818E12, 12.0], [1.72849746E12, 12.0], [1.72849788E12, 12.0], [1.72849776E12, 12.0], [1.72849824E12, 12.0], [1.72849794E12, 12.0], [1.72849674E12, 12.0], [1.72849704E12, 12.0], [1.72849926E12, 1.8240740740740746], [1.72849734E12, 12.0], [1.72849896E12, 12.0], [1.72849764E12, 12.0], [1.72849866E12, 12.0], [1.72849836E12, 12.0], [1.72849806E12, 12.0]], "isOverall": false, "label": "12", "isController": false}, {"data": [[1.72849032E12, 1.8134328358208955], [1.72849002E12, 2.0], [1.7284902E12, 2.0], [1.7284899E12, 2.0], [1.72849038E12, 1.0], [1.72849008E12, 2.0], [1.72849026E12, 2.0], [1.72848996E12, 2.0], [1.72849014E12, 2.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.72849146E12, 4.0], [1.72849086E12, 4.0], [1.72849308E12, 4.0], [1.72849104E12, 4.0], [1.72849266E12, 4.0], [1.72849044E12, 4.0], [1.72849206E12, 4.0], [1.72849224E12, 4.0], [1.72849326E12, 4.0], [1.72849164E12, 4.0], [1.72849122E12, 4.0], [1.72849062E12, 4.0], [1.72849284E12, 4.0], [1.72849272E12, 4.0], [1.7284905E12, 4.0], [1.72849212E12, 4.0], [1.7284917E12, 4.0], [1.7284911E12, 4.0], [1.72849332E12, 2.775609756097562], [1.72849128E12, 4.0], [1.7284929E12, 4.0], [1.72849068E12, 4.0], [1.7284923E12, 4.0], [1.72849248E12, 4.0], [1.72849188E12, 4.0], [1.72849338E12, 1.0], [1.72849176E12, 4.0], [1.72849116E12, 4.0], [1.72849278E12, 4.0], [1.72849074E12, 4.0], [1.72849296E12, 4.0], [1.72849236E12, 4.0], [1.72849194E12, 4.0], [1.72849134E12, 4.0], [1.72849152E12, 4.0], [1.72849314E12, 4.0], [1.72849092E12, 4.0], [1.72849254E12, 4.0], [1.7284908E12, 4.0], [1.72849242E12, 4.0], [1.72849182E12, 4.0], [1.728492E12, 4.0], [1.7284914E12, 4.0], [1.72849302E12, 4.0], [1.72849098E12, 4.0], [1.7284932E12, 4.0], [1.72849038E12, 4.0], [1.7284926E12, 4.0], [1.72849056E12, 4.0], [1.72849218E12, 4.0], [1.72849158E12, 4.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.72850034E12, 16.0], [1.72850064E12, 16.0], [1.72849974E12, 16.0], [1.72850004E12, 16.0], [1.72849944E12, 16.0], [1.72850106E12, 16.0], [1.72850046E12, 16.0], [1.72850076E12, 16.0], [1.72850082E12, 16.0], [1.72850112E12, 16.0], [1.72850022E12, 16.0], [1.72850052E12, 16.0], [1.72849992E12, 16.0], [1.72849962E12, 16.0], [1.72849932E12, 16.0], [1.72850094E12, 16.0], [1.72850124E12, 14.965243296921555], [1.72849968E12, 16.0], [1.7285013E12, 6.559386973180081], [1.72849938E12, 16.0], [1.7285007E12, 16.0], [1.728501E12, 16.0], [1.7285001E12, 16.0], [1.7285004E12, 16.0], [1.7284998E12, 16.0], [1.7284995E12, 16.0], [1.72849986E12, 16.0], [1.72850016E12, 16.0], [1.72849956E12, 16.0], [1.72850118E12, 16.0], [1.72849926E12, 15.663551401869158], [1.72850058E12, 16.0], [1.72850088E12, 16.0], [1.72849998E12, 16.0], [1.72850028E12, 16.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.7284947E12, 8.0], [1.72849368E12, 8.0], [1.7284953E12, 8.0], [1.72849428E12, 8.0], [1.7284959E12, 8.0], [1.72849488E12, 8.0], [1.7284965E12, 7.0], [1.72849548E12, 8.0], [1.72849386E12, 8.0], [1.72849608E12, 8.0], [1.72849344E12, 8.0], [1.72849446E12, 8.0], [1.72849668E12, 1.2758620689655171], [1.72849506E12, 8.0], [1.72849374E12, 8.0], [1.72849596E12, 8.0], [1.72849434E12, 8.0], [1.72849656E12, 6.818181818181814], [1.72849494E12, 8.0], [1.72849392E12, 8.0], [1.72849554E12, 8.0], [1.72849452E12, 8.0], [1.72849614E12, 8.0], [1.72849512E12, 8.0], [1.72849572E12, 8.0], [1.7284935E12, 8.0], [1.7284941E12, 8.0], [1.72849632E12, 8.0], [1.72849338E12, 7.9942857142857155], [1.728495E12, 8.0], [1.72849662E12, 4.106382978723405], [1.7284956E12, 8.0], [1.72849398E12, 8.0], [1.7284962E12, 8.0], [1.72849458E12, 8.0], [1.72849518E12, 8.0], [1.72849416E12, 8.0], [1.72849578E12, 8.0], [1.72849356E12, 8.0], [1.72849476E12, 8.0], [1.72849638E12, 8.0], [1.72849536E12, 8.0], [1.72849404E12, 8.0], [1.72849566E12, 8.0], [1.72849464E12, 8.0], [1.72849626E12, 8.0], [1.72849362E12, 8.0], [1.72849524E12, 8.0], [1.72849584E12, 8.0], [1.72849422E12, 8.0], [1.72849644E12, 7.805405405405406], [1.72849482E12, 8.0], [1.7284938E12, 8.0], [1.72849542E12, 8.0], [1.7284944E12, 8.0], [1.72849602E12, 8.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7285013E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 660.6, "minX": 1.0, "maxY": 1001.1302472685476, "series": [{"data": [[2.0, 739.4764565043895], [8.0, 801.1466448979608], [9.0, 805.7258064516124], [10.0, 764.4450867052026], [11.0, 875.1788617886183], [3.0, 747.122699386503], [12.0, 849.760896141929], [13.0, 660.6], [14.0, 927.9257812500005], [15.0, 916.2295081967213], [1.0, 736.1483253588515], [4.0, 741.7637720574282], [16.0, 1001.1302472685476], [5.0, 789.3387978142075], [6.0, 811.3742331288348], [7.0, 829.25886864813]], "isOverall": false, "label": "getmap", "isController": false}, {"data": [[10.722047781570028, 860.97709044368]], "isOverall": false, "label": "getmap-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.7284899E12, "maxY": 5.054262893333333E7, "series": [{"data": [[1.72850034E12, 4.9159216166666664E7], [1.72849146E12, 1.7503470183333334E7], [1.7284947E12, 2.9989384483333334E7], [1.72849692E12, 4.0659833E7], [1.72849368E12, 3.3048151566666666E7], [1.72849812E12, 4.3947874733333334E7], [1.72849266E12, 1.65353238E7], [1.7284959E12, 3.1825424066666666E7], [1.72849914E12, 4.2585971516666666E7], [1.72849488E12, 2.8916016416666668E7], [1.72849044E12, 1.5510209666666666E7], [1.7284971E12, 4.338146163333333E7], [1.72849164E12, 1.75899468E7], [1.72849386E12, 2.9745436733333334E7], [1.72849608E12, 3.1056346333333332E7], [1.7284983E12, 4.18125395E7], [1.72850052E12, 4.947914103333333E7], [1.72849932E12, 4.74517268E7], [1.72849062E12, 1.6404771216666667E7], [1.72849284E12, 1.7390767183333334E7], [1.72849506E12, 2.8778653733333334E7], [1.72849728E12, 4.26930382E7], [1.72849758E12, 4.246268988333333E7], [1.728501E12, 4.89350279E7], [1.7284899E12, 2175770.316666667], [1.72849212E12, 1.6639907633333333E7], [1.72849434E12, 3.141805145E7], [1.72849656E12, 2.62863669E7], [1.72849878E12, 4.493916618333333E7], [1.72849008E12, 7865211.183333334], [1.7284998E12, 4.99207612E7], [1.7284911E12, 1.6472176366666667E7], [1.72849332E12, 1.1238411616666667E7], [1.72849554E12, 3.019838485E7], [1.72849776E12, 4.3253321766666666E7], [1.72849128E12, 1.6158917083333334E7], [1.72849452E12, 3.1614508433333334E7], [1.72849794E12, 4.186285785E7], [1.72850016E12, 4.8269931516666666E7], [1.72850118E12, 4.877277025E7], [1.7284923E12, 1.617332485E7], [1.72849674E12, 4.1921903083333336E7], [1.72849572E12, 3.09633785E7], [1.72849896E12, 4.415313843333333E7], [1.72849026E12, 8063592.316666666], [1.72849248E12, 1.6364129733333332E7], [1.7284935E12, 3.13581206E7], [1.72849998E12, 4.8943917583333336E7], [1.72849338E12, 1.0764457783333333E7], [1.72849662E12, 1.4812041066666666E7], [1.72849116E12, 1.6831390883333333E7], [1.7284956E12, 3.05548915E7], [1.72850004E12, 4.834208771666667E7], [1.72849782E12, 4.1730554083333336E7], [1.72850106E12, 4.954834238333333E7], [1.72849884E12, 4.246604265E7], [1.7284968E12, 4.0330974083333336E7], [1.72849014E12, 8508141.433333334], [1.72849236E12, 1.6383195116666667E7], [1.72849458E12, 3.1089170066666666E7], [1.7284992E12, 3.214132645E7], [1.72849032E12, 6730222.35], [1.72849578E12, 2.915764905E7], [1.72850022E12, 4.96664144E7], [1.72849134E12, 1.6747781966666667E7], [1.72849356E12, 3.0248754766666666E7], [1.72849152E12, 1.5217575933333334E7], [1.72849476E12, 2.838903425E7], [1.728498E12, 4.410698445E7], [1.72849698E12, 4.20560186E7], [1.72849254E12, 1.6565892266666668E7], [1.72849902E12, 4.2913193416666664E7], [1.72850124E12, 4.6084473833333336E7], [1.7284908E12, 1.717458655E7], [1.72849968E12, 4.713136206666667E7], [1.72849404E12, 3.0514967016666666E7], [1.72849182E12, 1.7122468683333334E7], [1.72849626E12, 2.94933038E7], [1.7285007E12, 4.915549343333333E7], [1.72849524E12, 2.8625810883333333E7], [1.72849848E12, 4.0035968483333334E7], [1.728492E12, 1.5518779583333334E7], [1.72849302E12, 1.6286059266666668E7], [1.72849746E12, 4.1895849983333334E7], [1.7284995E12, 4.82619989E7], [1.72849098E12, 1.6620691266666668E7], [1.7284932E12, 1.5547644933333334E7], [1.72849986E12, 4.847850043333333E7], [1.72849422E12, 2.9648948583333332E7], [1.72849644E12, 2.8898004383333333E7], [1.72849218E12, 1.7592374816666666E7], [1.72849542E12, 3.1689917366666667E7], [1.72849764E12, 4.3519866083333336E7], [1.72849866E12, 4.325350131666667E7], [1.72850088E12, 4.99321122E7], [1.72848996E12, 8648096.75], [1.7284944E12, 2.982388355E7], [1.72849872E12, 4.380644E7], [1.72849086E12, 1.6908506216666665E7], [1.72849308E12, 1.7130484383333333E7], [1.7284953E12, 2.8718019066666666E7], [1.72849752E12, 4.447102693333333E7], [1.72849974E12, 4.99559351E7], [1.72849104E12, 1.6235562666666666E7], [1.72849428E12, 2.9997248916666668E7], [1.72849206E12, 1.65172118E7], [1.7284965E12, 2.69391909E7], [1.72849854E12, 4.322812296666667E7], [1.72850076E12, 4.904580868333333E7], [1.72849548E12, 3.1080712E7], [1.7284989E12, 4.2914568833333336E7], [1.72850112E12, 4.8629912233333334E7], [1.72849002E12, 8602601.683333334], [1.72849224E12, 1.6254863766666668E7], [1.72849326E12, 1.5480480516666668E7], [1.7284977E12, 4.4013998766666666E7], [1.72849992E12, 4.928387395E7], [1.72849122E12, 1.7145227316666666E7], [1.72849344E12, 3.2087044633333333E7], [1.72849446E12, 3.110342395E7], [1.72849668E12, 2.8529514366666667E7], [1.72850094E12, 4.859462021666667E7], [1.72849272E12, 1.75227645E7], [1.72849938E12, 4.686877245E7], [1.7284905E12, 1.6952124583333332E7], [1.72849374E12, 3.1398967783333335E7], [1.72849596E12, 3.0973419366666667E7], [1.7284917E12, 1.5976918216666667E7], [1.72849494E12, 2.940293175E7], [1.72849716E12, 4.4398004483333334E7], [1.72849818E12, 4.577215285E7], [1.7285004E12, 4.813615765E7], [1.72849392E12, 3.1141508066666666E7], [1.7284929E12, 1.576698355E7], [1.72849614E12, 2.8466598033333335E7], [1.72849068E12, 1.604402195E7], [1.72849512E12, 2.8919449183333334E7], [1.72849956E12, 4.714296185E7], [1.72849734E12, 4.3723998E7], [1.72850058E12, 4.9556404483333334E7], [1.72849836E12, 4.45234636E7], [1.72849188E12, 1.5355701016666668E7], [1.7284941E12, 2.8665153766666666E7], [1.72849632E12, 3.0639401766666666E7], [1.728495E12, 2.98713176E7], [1.72849176E12, 1.6364209683333334E7], [1.72849842E12, 4.352936013333333E7], [1.72850064E12, 5.02667813E7], [1.72849278E12, 1.6104388316666666E7], [1.72849722E12, 4.442915411666667E7], [1.72849944E12, 5.054262893333333E7], [1.72849074E12, 1.6538221766666668E7], [1.72849296E12, 1.59499208E7], [1.72849398E12, 3.205648065E7], [1.7284962E12, 2.9608888383333333E7], [1.72850046E12, 4.981814361666667E7], [1.72849194E12, 1.6133035266666668E7], [1.72850082E12, 4.611899355E7], [1.72849518E12, 2.9960977133333333E7], [1.7284974E12, 4.1773208733333334E7], [1.72849416E12, 3.04623499E7], [1.7284986E12, 4.3079721833333336E7], [1.72849314E12, 1.6798239816666666E7], [1.72849638E12, 2.943923995E7], [1.72849962E12, 4.9069684983333334E7], [1.72849092E12, 1.74455374E7], [1.72849536E12, 2.8862747933333334E7], [1.7285013E12, 1.487174325E7], [1.72849242E12, 1.6232559383333333E7], [1.72849566E12, 2.9100777366666667E7], [1.72849908E12, 4.344288356666667E7], [1.7284902E12, 8588536.7], [1.72849464E12, 2.99940829E7], [1.72849362E12, 3.1906779783333335E7], [1.72849686E12, 4.060733915E7], [1.7285001E12, 4.866203275E7], [1.7284914E12, 1.6825513066666666E7], [1.72849788E12, 4.35134167E7], [1.72849584E12, 3.0153809183333334E7], [1.72849824E12, 4.297289575E7], [1.72849482E12, 3.1302628E7], [1.72849704E12, 4.39068541E7], [1.72849926E12, 1.035864835E7], [1.72849038E12, 1.206530235E7], [1.7284926E12, 1.7591388133333333E7], [1.72849056E12, 1.660066845E7], [1.7284938E12, 3.1759985466666665E7], [1.72849158E12, 1.6804403816666666E7], [1.72849602E12, 3.0295670916666668E7], [1.72849806E12, 4.2296806483333334E7], [1.72850028E12, 4.79599164E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72850034E12, 0.0], [1.72849146E12, 0.0], [1.7284947E12, 0.0], [1.72849692E12, 0.0], [1.72849368E12, 0.0], [1.72849812E12, 0.0], [1.72849266E12, 0.0], [1.7284959E12, 0.0], [1.72849914E12, 0.0], [1.72849488E12, 0.0], [1.72849044E12, 0.0], [1.7284971E12, 0.0], [1.72849164E12, 0.0], [1.72849386E12, 0.0], [1.72849608E12, 0.0], [1.7284983E12, 0.0], [1.72850052E12, 0.0], [1.72849932E12, 0.0], [1.72849062E12, 0.0], [1.72849284E12, 0.0], [1.72849506E12, 0.0], [1.72849728E12, 0.0], [1.72849758E12, 0.0], [1.728501E12, 0.0], [1.7284899E12, 0.0], [1.72849212E12, 0.0], [1.72849434E12, 0.0], [1.72849656E12, 0.0], [1.72849878E12, 0.0], [1.72849008E12, 0.0], [1.7284998E12, 0.0], [1.7284911E12, 0.0], [1.72849332E12, 0.0], [1.72849554E12, 0.0], [1.72849776E12, 0.0], [1.72849128E12, 0.0], [1.72849452E12, 0.0], [1.72849794E12, 0.0], [1.72850016E12, 0.0], [1.72850118E12, 0.0], [1.7284923E12, 0.0], [1.72849674E12, 0.0], [1.72849572E12, 0.0], [1.72849896E12, 0.0], [1.72849026E12, 0.0], [1.72849248E12, 0.0], [1.7284935E12, 0.0], [1.72849998E12, 0.0], [1.72849338E12, 0.0], [1.72849662E12, 0.0], [1.72849116E12, 0.0], [1.7284956E12, 0.0], [1.72850004E12, 0.0], [1.72849782E12, 0.0], [1.72850106E12, 0.0], [1.72849884E12, 0.0], [1.7284968E12, 0.0], [1.72849014E12, 0.0], [1.72849236E12, 0.0], [1.72849458E12, 0.0], [1.7284992E12, 0.0], [1.72849032E12, 0.0], [1.72849578E12, 0.0], [1.72850022E12, 0.0], [1.72849134E12, 0.0], [1.72849356E12, 0.0], [1.72849152E12, 0.0], [1.72849476E12, 0.0], [1.728498E12, 0.0], [1.72849698E12, 0.0], [1.72849254E12, 0.0], [1.72849902E12, 0.0], [1.72850124E12, 0.0], [1.7284908E12, 0.0], [1.72849968E12, 0.0], [1.72849404E12, 0.0], [1.72849182E12, 0.0], [1.72849626E12, 0.0], [1.7285007E12, 0.0], [1.72849524E12, 0.0], [1.72849848E12, 0.0], [1.728492E12, 0.0], [1.72849302E12, 0.0], [1.72849746E12, 0.0], [1.7284995E12, 0.0], [1.72849098E12, 0.0], [1.7284932E12, 0.0], [1.72849986E12, 0.0], [1.72849422E12, 0.0], [1.72849644E12, 0.0], [1.72849218E12, 0.0], [1.72849542E12, 0.0], [1.72849764E12, 0.0], [1.72849866E12, 0.0], [1.72850088E12, 0.0], [1.72848996E12, 0.0], [1.7284944E12, 0.0], [1.72849872E12, 0.0], [1.72849086E12, 0.0], [1.72849308E12, 0.0], [1.7284953E12, 0.0], [1.72849752E12, 0.0], [1.72849974E12, 0.0], [1.72849104E12, 0.0], [1.72849428E12, 0.0], [1.72849206E12, 0.0], [1.7284965E12, 0.0], [1.72849854E12, 0.0], [1.72850076E12, 0.0], [1.72849548E12, 0.0], [1.7284989E12, 0.0], [1.72850112E12, 0.0], [1.72849002E12, 0.0], [1.72849224E12, 0.0], [1.72849326E12, 0.0], [1.7284977E12, 0.0], [1.72849992E12, 0.0], [1.72849122E12, 0.0], [1.72849344E12, 0.0], [1.72849446E12, 0.0], [1.72849668E12, 0.0], [1.72850094E12, 0.0], [1.72849272E12, 0.0], [1.72849938E12, 0.0], [1.7284905E12, 0.0], [1.72849374E12, 0.0], [1.72849596E12, 0.0], [1.7284917E12, 0.0], [1.72849494E12, 0.0], [1.72849716E12, 0.0], [1.72849818E12, 0.0], [1.7285004E12, 0.0], [1.72849392E12, 0.0], [1.7284929E12, 0.0], [1.72849614E12, 0.0], [1.72849068E12, 0.0], [1.72849512E12, 0.0], [1.72849956E12, 0.0], [1.72849734E12, 0.0], [1.72850058E12, 0.0], [1.72849836E12, 0.0], [1.72849188E12, 0.0], [1.7284941E12, 0.0], [1.72849632E12, 0.0], [1.728495E12, 0.0], [1.72849176E12, 0.0], [1.72849842E12, 0.0], [1.72850064E12, 0.0], [1.72849278E12, 0.0], [1.72849722E12, 0.0], [1.72849944E12, 0.0], [1.72849074E12, 0.0], [1.72849296E12, 0.0], [1.72849398E12, 0.0], [1.7284962E12, 0.0], [1.72850046E12, 0.0], [1.72849194E12, 0.0], [1.72850082E12, 0.0], [1.72849518E12, 0.0], [1.7284974E12, 0.0], [1.72849416E12, 0.0], [1.7284986E12, 0.0], [1.72849314E12, 0.0], [1.72849638E12, 0.0], [1.72849962E12, 0.0], [1.72849092E12, 0.0], [1.72849536E12, 0.0], [1.7285013E12, 0.0], [1.72849242E12, 0.0], [1.72849566E12, 0.0], [1.72849908E12, 0.0], [1.7284902E12, 0.0], [1.72849464E12, 0.0], [1.72849362E12, 0.0], [1.72849686E12, 0.0], [1.7285001E12, 0.0], [1.7284914E12, 0.0], [1.72849788E12, 0.0], [1.72849584E12, 0.0], [1.72849824E12, 0.0], [1.72849482E12, 0.0], [1.72849704E12, 0.0], [1.72849926E12, 0.0], [1.72849038E12, 0.0], [1.7284926E12, 0.0], [1.72849056E12, 0.0], [1.7284938E12, 0.0], [1.72849158E12, 0.0], [1.72849602E12, 0.0], [1.72849806E12, 0.0], [1.72850028E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7285013E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 659.9670329670333, "minX": 1.7284899E12, "maxY": 1083.9343891402716, "series": [{"data": [[1.72850034E12, 999.1704781704778], [1.72849146E12, 756.6761904761909], [1.7284947E12, 752.5651491365768], [1.72849692E12, 891.9987608426267], [1.72849368E12, 750.1263650546022], [1.72849812E12, 850.6162097735393], [1.72849266E12, 781.8947368421049], [1.7284959E12, 840.3835376532402], [1.72849914E12, 842.2386634844871], [1.72849488E12, 833.3623693379795], [1.72849044E12, 710.5744047619048], [1.7284971E12, 871.0787878787885], [1.72849164E12, 789.4950819672132], [1.72849386E12, 765.7030497592297], [1.72849608E12, 835.2386759581879], [1.7284983E12, 848.5463182897865], [1.72850052E12, 1012.6052631578945], [1.72849932E12, 969.2454545454549], [1.72849062E12, 739.691358024691], [1.72849284E12, 776.8290322580648], [1.72849506E12, 849.9115044247793], [1.72849728E12, 871.1001206272612], [1.72849758E12, 828.5859284890423], [1.728501E12, 974.6460446247468], [1.7284899E12, 940.5142857142857], [1.72849212E12, 729.8374233128835], [1.72849434E12, 822.5866209262432], [1.72849656E12, 801.53162055336], [1.72849878E12, 818.9455782312918], [1.72849008E12, 717.7261904761904], [1.7284998E12, 1025.2961783439491], [1.7284911E12, 744.7343750000001], [1.72849332E12, 765.4926829268289], [1.72849554E12, 781.1391162029465], [1.72849776E12, 879.1432038834951], [1.72849128E12, 795.7417218543048], [1.72849452E12, 789.2078559738136], [1.72849794E12, 821.4266055045871], [1.72850016E12, 1001.3049792531124], [1.72850118E12, 1021.15811965812], [1.7284923E12, 737.0245398773004], [1.72849674E12, 869.1371841155242], [1.72849572E12, 856.6308243727598], [1.72849896E12, 860.1704681872749], [1.72849026E12, 792.585526315789], [1.72849248E12, 762.7999999999998], [1.7284935E12, 763.6925515055475], [1.72849998E12, 989.7894736842093], [1.72849338E12, 727.1173913043475], [1.72849662E12, 799.8120567375883], [1.72849116E12, 834.5965517241374], [1.7284956E12, 793.298187808896], [1.72850004E12, 1032.3575297941495], [1.72849782E12, 879.7195571955716], [1.72850106E12, 1054.4933920704857], [1.72849884E12, 847.1261792452833], [1.7284968E12, 865.8626506024095], [1.72849014E12, 756.8490566037736], [1.72849236E12, 761.3801916932903], [1.72849458E12, 813.3558178752102], [1.7284992E12, 817.493377483445], [1.72849032E12, 752.7462686567166], [1.72849578E12, 754.9906103286393], [1.72850022E12, 957.7574552683889], [1.72849134E12, 754.2672955974847], [1.72849356E12, 729.4939577039282], [1.72849152E12, 723.8832335329346], [1.72849476E12, 791.0965058236275], [1.728498E12, 893.5563816604712], [1.72849698E12, 928.0323834196886], [1.72849254E12, 685.9999999999997], [1.72849902E12, 854.3801652892552], [1.72850124E12, 893.7507447864945], [1.7284908E12, 772.0825396825393], [1.72849968E12, 993.3844559585494], [1.72849404E12, 800.7265100671137], [1.72849182E12, 732.7012195121953], [1.72849626E12, 800.0710659898479], [1.7285007E12, 1042.9233261339114], [1.72849524E12, 776.2233009708735], [1.72849848E12, 820.1214203894623], [1.728492E12, 778.3618421052637], [1.72849302E12, 764.4889589905367], [1.72849746E12, 864.0036188178532], [1.7284995E12, 982.5828220858895], [1.72849098E12, 708.4365781710911], [1.7284932E12, 660.1452054794528], [1.72849986E12, 994.3627858627866], [1.72849422E12, 756.8720379146921], [1.72849644E12, 849.881081081081], [1.72849218E12, 793.9013157894736], [1.72849542E12, 804.6744574290485], [1.72849764E12, 833.616898148149], [1.72849866E12, 851.0826446280992], [1.72850088E12, 1000.3434554973816], [1.72848996E12, 706.9411764705881], [1.7284944E12, 802.9615384615387], [1.72849872E12, 847.9952830188693], [1.72849086E12, 728.404255319149], [1.72849308E12, 719.7801204819277], [1.7284953E12, 837.3432574430819], [1.72849752E12, 849.7535211267607], [1.72849974E12, 1038.5423913043471], [1.72849104E12, 777.7792207792209], [1.72849428E12, 809.6785109983082], [1.72849206E12, 730.9009009009014], [1.7284965E12, 853.6056910569097], [1.72849854E12, 814.2323232323237], [1.72850076E12, 969.3035532994926], [1.72849548E12, 792.298679867987], [1.7284989E12, 795.7224669603529], [1.72850112E12, 1008.8081761006284], [1.72849002E12, 688.4080459770113], [1.72849224E12, 695.7826086956522], [1.72849326E12, 698.5014409221899], [1.7284977E12, 877.1349693251537], [1.72849992E12, 1009.8837696335074], [1.72849122E12, 804.5484949832775], [1.72849344E12, 834.2744755244753], [1.72849446E12, 807.9898477157358], [1.72849668E12, 844.1365131578946], [1.72850094E12, 976.923935091278], [1.72849272E12, 768.6141479099675], [1.72849938E12, 995.5604166666662], [1.7284905E12, 744.8492307692311], [1.72849374E12, 770.8651685393253], [1.72849596E12, 807.8114478114475], [1.7284917E12, 740.093457943925], [1.72849494E12, 839.5669565217402], [1.72849716E12, 915.1766200762394], [1.72849818E12, 814.2264573991022], [1.7285004E12, 1044.0751633986947], [1.72849392E12, 793.9999999999999], [1.7284929E12, 691.1120689655172], [1.72849614E12, 811.612521150592], [1.72849068E12, 746.9937694704045], [1.72849512E12, 834.572934973638], [1.72849956E12, 950.1861386138615], [1.72849734E12, 848.5023529411772], [1.72850058E12, 1083.9343891402716], [1.72849836E12, 834.5715935334867], [1.72849188E12, 680.9433427762041], [1.7284941E12, 772.1433172302734], [1.72849632E12, 825.9319727891159], [1.728495E12, 873.7775768535259], [1.72849176E12, 719.9641791044778], [1.72849842E12, 841.1585081585077], [1.72850064E12, 980.9000000000001], [1.72849278E12, 786.7189542483663], [1.72849722E12, 844.1395076201645], [1.72849944E12, 1016.3255813953506], [1.72849074E12, 795.7090301003346], [1.72849296E12, 794.3866666666663], [1.72849398E12, 758.943396226415], [1.7284962E12, 850.8109540636046], [1.72850046E12, 1000.68196037539], [1.72849194E12, 709.7050147492631], [1.72850082E12, 987.0287474332648], [1.72849518E12, 828.0513698630141], [1.7284974E12, 800.332222222222], [1.72849416E12, 788.962418300654], [1.7284986E12, 876.6254589963277], [1.72849314E12, 729.1319018404912], [1.72849638E12, 818.3852739726027], [1.72849962E12, 999.694791666667], [1.72849092E12, 747.2884012539188], [1.72849536E12, 806.2996632996628], [1.7285013E12, 837.0766283524902], [1.72849242E12, 716.6317365269459], [1.72849566E12, 733.914634146341], [1.72849908E12, 869.3082524271842], [1.7284902E12, 694.3604651162789], [1.72849464E12, 760.9617834394911], [1.72849362E12, 782.8134206219318], [1.72849686E12, 880.574754901961], [1.7285001E12, 1040.3557483731017], [1.7284914E12, 717.8712574850299], [1.72849788E12, 811.6949720670394], [1.72849584E12, 808.2605752961077], [1.72849824E12, 830.2011560693635], [1.72849482E12, 874.6014492753629], [1.72849704E12, 853.8770685579179], [1.72849926E12, 819.9348837209303], [1.72849038E12, 659.9670329670333], [1.7284926E12, 699.6608695652172], [1.72849056E12, 742.1677018633537], [1.7284938E12, 793.1305785123965], [1.72849158E12, 768.6302250803858], [1.72849602E12, 832.6239168110922], [1.72849806E12, 796.1565600882017], [1.72850028E12, 966.066666666667]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7285013E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 458.61172161172163, "minX": 1.7284899E12, "maxY": 737.5803167420815, "series": [{"data": [[1.72850034E12, 681.0727650727653], [1.72849146E12, 514.9460317460326], [1.7284947E12, 520.4427001569856], [1.72849692E12, 615.3147459727387], [1.72849368E12, 512.2823712948514], [1.72849812E12, 580.5470798569719], [1.72849266E12, 540.292763157895], [1.7284959E12, 578.9299474605951], [1.72849914E12, 577.952267303103], [1.72849488E12, 580.7282229965155], [1.72849044E12, 494.24404761904725], [1.7284971E12, 594.460606060607], [1.72849164E12, 538.2098360655733], [1.72849386E12, 533.0064205457462], [1.72849608E12, 575.033101045296], [1.7284983E12, 583.3408551068889], [1.72850052E12, 688.6831578947373], [1.72849932E12, 667.4030303030295], [1.72849062E12, 509.5771604938274], [1.72849284E12, 530.8548387096778], [1.72849506E12, 590.8300884955756], [1.72849728E12, 600.0144752714118], [1.72849758E12, 571.5928489042674], [1.728501E12, 662.2210953346862], [1.7284899E12, 673.2571428571429], [1.72849212E12, 505.8803680981596], [1.72849434E12, 570.567753001715], [1.72849656E12, 554.4150197628453], [1.72849878E12, 560.7086167800458], [1.72849008E12, 500.63690476190504], [1.7284998E12, 693.1242038216561], [1.7284911E12, 512.7718749999996], [1.72849332E12, 527.2292682926831], [1.72849554E12, 541.2962356792136], [1.72849776E12, 604.258495145631], [1.72849128E12, 557.2649006622514], [1.72849452E12, 545.8527004909978], [1.72849794E12, 565.7832568807344], [1.72850016E12, 682.0280082987543], [1.72850118E12, 698.0480769230767], [1.7284923E12, 515.8803680981594], [1.72849674E12, 592.7906137184119], [1.72849572E12, 598.9516129032259], [1.72849896E12, 584.4657863145263], [1.72849026E12, 561.3684210526319], [1.72849248E12, 531.2031746031747], [1.7284935E12, 532.2884310618068], [1.72849998E12, 675.4932920536631], [1.72849338E12, 507.2739130434782], [1.72849662E12, 552.2304964539005], [1.72849116E12, 575.1034482758622], [1.7284956E12, 550.4217462932454], [1.72850004E12, 699.7919826652218], [1.72849782E12, 607.6260762607623], [1.72850106E12, 712.3909691629957], [1.72849884E12, 582.9339622641498], [1.7284968E12, 599.34578313253], [1.72849014E12, 522.0880503144651], [1.72849236E12, 528.6230031948882], [1.72849458E12, 564.5210792580101], [1.7284992E12, 563.0480132450324], [1.72849032E12, 522.6641791044773], [1.72849578E12, 527.3411580594678], [1.72850022E12, 650.6819085487083], [1.72849134E12, 520.3113207547167], [1.72849356E12, 510.26888217522605], [1.72849152E12, 509.17964071856267], [1.72849476E12, 553.5041597337773], [1.728498E12, 614.14126394052], [1.72849698E12, 636.7176165803107], [1.72849254E12, 472.28490028490046], [1.72849902E12, 588.9574970484067], [1.72850124E12, 612.6057596822243], [1.7284908E12, 535.1079365079361], [1.72849968E12, 676.7616580310885], [1.72849404E12, 556.7013422818793], [1.72849182E12, 500.4207317073171], [1.72849626E12, 553.3942470389165], [1.7285007E12, 711.6544276457888], [1.72849524E12, 543.1051779935267], [1.72849848E12, 567.5441008018327], [1.728492E12, 546.5921052631578], [1.72849302E12, 534.3911671924292], [1.72849746E12, 595.0699638118222], [1.7284995E12, 669.1451942740289], [1.72849098E12, 488.1150442477882], [1.7284932E12, 459.56986301369875], [1.72849986E12, 679.4677754677763], [1.72849422E12, 529.6856240126377], [1.72849644E12, 591.198198198198], [1.72849218E12, 542.907894736842], [1.72849542E12, 553.273789649415], [1.72849764E12, 569.0370370370367], [1.72849866E12, 583.806375442738], [1.72850088E12, 677.7089005235604], [1.72848996E12, 484.6823529411766], [1.7284944E12, 560.933110367893], [1.72849872E12, 580.3856132075471], [1.72849086E12, 500.3829787234048], [1.72849308E12, 491.6174698795182], [1.7284953E12, 585.9667250437826], [1.72849752E12, 580.2934272300473], [1.72849974E12, 699.8869565217387], [1.72849104E12, 541.5519480519475], [1.72849428E12, 562.1218274111673], [1.72849206E12, 506.79579579579536], [1.7284965E12, 591.0975609756098], [1.72849854E12, 560.2177328843989], [1.72850076E12, 655.9939086294405], [1.72849548E12, 548.2128712871288], [1.7284989E12, 545.1982378854627], [1.72850112E12, 688.1467505241088], [1.72849002E12, 469.16666666666663], [1.72849224E12, 481.88115942029], [1.72849326E12, 487.61671469740713], [1.7284977E12, 595.7312883435576], [1.72849992E12, 687.456544502618], [1.72849122E12, 554.3946488294313], [1.72849344E12, 577.5332167832167], [1.72849446E12, 555.7275803722505], [1.72849668E12, 583.299342105263], [1.72850094E12, 668.1957403651113], [1.72849272E12, 523.1993569131831], [1.72849938E12, 680.6239583333328], [1.7284905E12, 513.5784615384621], [1.72849374E12, 532.1252006420547], [1.72849596E12, 556.5235690235686], [1.7284917E12, 514.4205607476637], [1.72849494E12, 586.5321739130427], [1.72849716E12, 626.8144853875482], [1.72849818E12, 553.8094170403599], [1.7285004E12, 718.504357298475], [1.72849392E12, 548.7102649006623], [1.7284929E12, 482.5919540229886], [1.72849614E12, 570.6632825719126], [1.72849068E12, 520.4112149532706], [1.72849512E12, 578.646748681898], [1.72849956E12, 648.7693069306939], [1.72849734E12, 579.7847058823539], [1.72850058E12, 737.5803167420815], [1.72849836E12, 566.854503464203], [1.72849188E12, 477.3824362606233], [1.7284941E12, 541.2399355877625], [1.72849632E12, 570.4234693877559], [1.728495E12, 607.0036166365273], [1.72849176E12, 495.71044776119385], [1.72849842E12, 575.3321678321674], [1.72850064E12, 664.2775510204079], [1.72849278E12, 550.0588235294113], [1.72849722E12, 576.1735052754977], [1.72849944E12, 683.5549682875276], [1.72849074E12, 553.3712374581937], [1.72849296E12, 556.5200000000002], [1.72849398E12, 519.1210691823898], [1.7284962E12, 589.2067137809183], [1.72850046E12, 678.5109489051102], [1.72849194E12, 491.5073746312683], [1.72850082E12, 678.0770020533882], [1.72849518E12, 577.2363013698632], [1.7284974E12, 550.617777777778], [1.72849416E12, 546.2238562091508], [1.7284986E12, 601.5997552019593], [1.72849314E12, 499.5061349693253], [1.72849638E12, 568.5599315068504], [1.72849962E12, 682.3937499999994], [1.72849092E12, 511.1661442006269], [1.72849536E12, 561.6700336700343], [1.7285013E12, 575.5402298850573], [1.72849242E12, 496.87425149700584], [1.72849566E12, 510.8963414634145], [1.72849908E12, 596.773058252427], [1.7284902E12, 475.9476744186047], [1.72849464E12, 528.487261146496], [1.72849362E12, 538.878887070376], [1.72849686E12, 605.6838235294122], [1.7285001E12, 707.0466377440351], [1.7284914E12, 494.9880239520956], [1.72849788E12, 553.0145251396649], [1.72849584E12, 559.2182741116742], [1.72849824E12, 570.0289017341034], [1.72849482E12, 601.3786231884063], [1.72849704E12, 581.0992907801419], [1.72849926E12, 561.4046511627907], [1.72849038E12, 458.61172161172163], [1.7284926E12, 478.1594202898552], [1.72849056E12, 515.313664596273], [1.7284938E12, 549.7404958677682], [1.72849158E12, 531.6109324758846], [1.72849602E12, 575.6741767764295], [1.72849806E12, 547.3428886438812], [1.72850028E12, 658.5242424242422]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7285013E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7284899E12, "maxY": 4.9E-324, "series": [{"data": [[1.72850034E12, 0.0], [1.72849146E12, 0.0], [1.7284947E12, 0.0], [1.72849692E12, 0.0], [1.72849368E12, 0.0], [1.72849812E12, 0.0], [1.72849266E12, 0.0], [1.7284959E12, 0.0], [1.72849914E12, 0.0], [1.72849488E12, 0.0], [1.72849044E12, 0.0], [1.7284971E12, 0.0], [1.72849164E12, 0.0], [1.72849386E12, 0.0], [1.72849608E12, 0.0], [1.7284983E12, 0.0], [1.72850052E12, 0.0], [1.72849932E12, 0.0], [1.72849062E12, 0.0], [1.72849284E12, 0.0], [1.72849506E12, 0.0], [1.72849728E12, 0.0], [1.72849758E12, 0.0], [1.728501E12, 0.0], [1.7284899E12, 0.0], [1.72849212E12, 0.0], [1.72849434E12, 0.0], [1.72849656E12, 0.0], [1.72849878E12, 0.0], [1.72849008E12, 0.0], [1.7284998E12, 0.0], [1.7284911E12, 0.0], [1.72849332E12, 0.0], [1.72849554E12, 0.0], [1.72849776E12, 0.0], [1.72849128E12, 0.0], [1.72849452E12, 0.0], [1.72849794E12, 0.0], [1.72850016E12, 0.0], [1.72850118E12, 0.0], [1.7284923E12, 0.0], [1.72849674E12, 0.0], [1.72849572E12, 0.0], [1.72849896E12, 0.0], [1.72849026E12, 0.0], [1.72849248E12, 0.0], [1.7284935E12, 0.0], [1.72849998E12, 0.0], [1.72849338E12, 0.0], [1.72849662E12, 0.0], [1.72849116E12, 0.0], [1.7284956E12, 0.0], [1.72850004E12, 0.0], [1.72849782E12, 0.0], [1.72850106E12, 0.0], [1.72849884E12, 0.0], [1.7284968E12, 0.0], [1.72849014E12, 0.0], [1.72849236E12, 0.0], [1.72849458E12, 0.0], [1.7284992E12, 0.0], [1.72849032E12, 0.0], [1.72849578E12, 0.0], [1.72850022E12, 0.0], [1.72849134E12, 0.0], [1.72849356E12, 0.0], [1.72849152E12, 0.0], [1.72849476E12, 0.0], [1.728498E12, 0.0], [1.72849698E12, 0.0], [1.72849254E12, 0.0], [1.72849902E12, 0.0], [1.72850124E12, 0.0], [1.7284908E12, 0.0], [1.72849968E12, 0.0], [1.72849404E12, 0.0], [1.72849182E12, 0.0], [1.72849626E12, 0.0], [1.7285007E12, 0.0], [1.72849524E12, 0.0], [1.72849848E12, 0.0], [1.728492E12, 0.0], [1.72849302E12, 0.0], [1.72849746E12, 0.0], [1.7284995E12, 0.0], [1.72849098E12, 0.0], [1.7284932E12, 0.0], [1.72849986E12, 0.0], [1.72849422E12, 0.0], [1.72849644E12, 0.0], [1.72849218E12, 0.0], [1.72849542E12, 0.0], [1.72849764E12, 0.0], [1.72849866E12, 0.0], [1.72850088E12, 0.0], [1.72848996E12, 0.0], [1.7284944E12, 0.0], [1.72849872E12, 0.0], [1.72849086E12, 0.0], [1.72849308E12, 0.0], [1.7284953E12, 0.0], [1.72849752E12, 0.0], [1.72849974E12, 0.0], [1.72849104E12, 0.0], [1.72849428E12, 0.0], [1.72849206E12, 0.0], [1.7284965E12, 0.0], [1.72849854E12, 0.0], [1.72850076E12, 0.0], [1.72849548E12, 0.0], [1.7284989E12, 0.0], [1.72850112E12, 0.0], [1.72849002E12, 0.0], [1.72849224E12, 0.0], [1.72849326E12, 0.0], [1.7284977E12, 0.0], [1.72849992E12, 0.0], [1.72849122E12, 0.0], [1.72849344E12, 0.0], [1.72849446E12, 0.0], [1.72849668E12, 0.0], [1.72850094E12, 0.0], [1.72849272E12, 0.0], [1.72849938E12, 0.0], [1.7284905E12, 0.0], [1.72849374E12, 0.0], [1.72849596E12, 0.0], [1.7284917E12, 0.0], [1.72849494E12, 0.0], [1.72849716E12, 0.0], [1.72849818E12, 0.0], [1.7285004E12, 0.0], [1.72849392E12, 0.0], [1.7284929E12, 0.0], [1.72849614E12, 0.0], [1.72849068E12, 0.0], [1.72849512E12, 0.0], [1.72849956E12, 0.0], [1.72849734E12, 0.0], [1.72850058E12, 0.0], [1.72849836E12, 0.0], [1.72849188E12, 0.0], [1.7284941E12, 0.0], [1.72849632E12, 0.0], [1.728495E12, 0.0], [1.72849176E12, 0.0], [1.72849842E12, 0.0], [1.72850064E12, 0.0], [1.72849278E12, 0.0], [1.72849722E12, 0.0], [1.72849944E12, 0.0], [1.72849074E12, 0.0], [1.72849296E12, 0.0], [1.72849398E12, 0.0], [1.7284962E12, 0.0], [1.72850046E12, 0.0], [1.72849194E12, 0.0], [1.72850082E12, 0.0], [1.72849518E12, 0.0], [1.7284974E12, 0.0], [1.72849416E12, 0.0], [1.7284986E12, 0.0], [1.72849314E12, 0.0], [1.72849638E12, 0.0], [1.72849962E12, 0.0], [1.72849092E12, 0.0], [1.72849536E12, 0.0], [1.7285013E12, 0.0], [1.72849242E12, 0.0], [1.72849566E12, 0.0], [1.72849908E12, 0.0], [1.7284902E12, 0.0], [1.72849464E12, 0.0], [1.72849362E12, 0.0], [1.72849686E12, 0.0], [1.7285001E12, 0.0], [1.7284914E12, 0.0], [1.72849788E12, 0.0], [1.72849584E12, 0.0], [1.72849824E12, 0.0], [1.72849482E12, 0.0], [1.72849704E12, 0.0], [1.72849926E12, 0.0], [1.72849038E12, 0.0], [1.7284926E12, 0.0], [1.72849056E12, 0.0], [1.7284938E12, 0.0], [1.72849158E12, 0.0], [1.72849602E12, 0.0], [1.72849806E12, 0.0], [1.72850028E12, 0.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7285013E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 48.0, "minX": 1.7284899E12, "maxY": 4616.0, "series": [{"data": [[1.72850034E12, 3700.0], [1.72849146E12, 2948.0], [1.7284947E12, 2748.0], [1.72849692E12, 2975.0], [1.72849368E12, 2847.0], [1.72849812E12, 3000.0], [1.72849266E12, 2841.0], [1.7284959E12, 3064.0], [1.72849914E12, 2927.0], [1.72849488E12, 3030.0], [1.72849044E12, 2393.0], [1.7284971E12, 3250.0], [1.72849164E12, 2643.0], [1.72849386E12, 2593.0], [1.72849608E12, 2891.0], [1.7284983E12, 3220.0], [1.72850052E12, 3523.0], [1.72849932E12, 3858.0], [1.72849062E12, 2446.0], [1.72849284E12, 2339.0], [1.72849506E12, 2843.0], [1.72849728E12, 3433.0], [1.72849758E12, 2990.0], [1.728501E12, 3522.0], [1.7284899E12, 2703.0], [1.72849212E12, 2858.0], [1.72849434E12, 2822.0], [1.72849656E12, 3110.0], [1.72849878E12, 3160.0], [1.72849008E12, 2319.0], [1.7284998E12, 3993.0], [1.7284911E12, 2436.0], [1.72849332E12, 2380.0], [1.72849554E12, 2838.0], [1.72849776E12, 3053.0], [1.72849128E12, 2451.0], [1.72849452E12, 2671.0], [1.72849794E12, 3267.0], [1.72850016E12, 4111.0], [1.72850118E12, 4091.0], [1.7284923E12, 2455.0], [1.72849674E12, 3571.0], [1.72849572E12, 2887.0], [1.72849896E12, 3122.0], [1.72849026E12, 2318.0], [1.72849248E12, 2442.0], [1.7284935E12, 2955.0], [1.72849998E12, 4231.0], [1.72849338E12, 2269.0], [1.72849662E12, 2932.0], [1.72849116E12, 2882.0], [1.7284956E12, 2934.0], [1.72850004E12, 3821.0], [1.72849782E12, 3444.0], [1.72850106E12, 4178.0], [1.72849884E12, 3110.0], [1.7284968E12, 2995.0], [1.72849014E12, 2854.0], [1.72849236E12, 2613.0], [1.72849458E12, 2975.0], [1.7284992E12, 2920.0], [1.72849032E12, 2399.0], [1.72849578E12, 2877.0], [1.72850022E12, 4440.0], [1.72849134E12, 2474.0], [1.72849356E12, 2847.0], [1.72849152E12, 2760.0], [1.72849476E12, 2724.0], [1.728498E12, 2979.0], [1.72849698E12, 3024.0], [1.72849254E12, 2440.0], [1.72849902E12, 3093.0], [1.72850124E12, 3807.0], [1.7284908E12, 2562.0], [1.72849968E12, 3589.0], [1.72849404E12, 2750.0], [1.72849182E12, 2836.0], [1.72849626E12, 2766.0], [1.7285007E12, 4267.0], [1.72849524E12, 3015.0], [1.72849848E12, 3525.0], [1.728492E12, 2337.0], [1.72849302E12, 2480.0], [1.72849746E12, 3000.0], [1.7284995E12, 3776.0], [1.72849098E12, 2261.0], [1.7284932E12, 2643.0], [1.72849986E12, 3598.0], [1.72849422E12, 3007.0], [1.72849644E12, 3291.0], [1.72849218E12, 2582.0], [1.72849542E12, 2866.0], [1.72849764E12, 2835.0], [1.72849866E12, 3064.0], [1.72850088E12, 4090.0], [1.72848996E12, 2661.0], [1.7284944E12, 2656.0], [1.72849872E12, 2994.0], [1.72849086E12, 2691.0], [1.72849308E12, 2383.0], [1.7284953E12, 2979.0], [1.72849752E12, 3399.0], [1.72849974E12, 3848.0], [1.72849104E12, 2636.0], [1.72849428E12, 2718.0], [1.72849206E12, 2343.0], [1.7284965E12, 3246.0], [1.72849854E12, 3119.0], [1.72850076E12, 3867.0], [1.72849548E12, 2765.0], [1.7284989E12, 3049.0], [1.72850112E12, 3512.0], [1.72849002E12, 2426.0], [1.72849224E12, 2546.0], [1.72849326E12, 2821.0], [1.7284977E12, 3739.0], [1.72849992E12, 3990.0], [1.72849122E12, 2182.0], [1.72849344E12, 2738.0], [1.72849446E12, 2822.0], [1.72849668E12, 3187.0], [1.72850094E12, 3719.0], [1.72849272E12, 2757.0], [1.72849938E12, 3734.0], [1.7284905E12, 2318.0], [1.72849374E12, 2809.0], [1.72849596E12, 3321.0], [1.7284917E12, 2825.0], [1.72849494E12, 3130.0], [1.72849716E12, 2886.0], [1.72849818E12, 2998.0], [1.7285004E12, 3571.0], [1.72849392E12, 2912.0], [1.7284929E12, 2689.0], [1.72849614E12, 2870.0], [1.72849068E12, 2488.0], [1.72849512E12, 2941.0], [1.72849956E12, 3748.0], [1.72849734E12, 3261.0], [1.72850058E12, 3833.0], [1.72849836E12, 3046.0], [1.72849188E12, 2625.0], [1.7284941E12, 3096.0], [1.72849632E12, 3300.0], [1.728495E12, 3111.0], [1.72849176E12, 2615.0], [1.72849842E12, 2940.0], [1.72850064E12, 4201.0], [1.72849278E12, 2429.0], [1.72849722E12, 3406.0], [1.72849944E12, 3682.0], [1.72849074E12, 2347.0], [1.72849296E12, 2977.0], [1.72849398E12, 2792.0], [1.7284962E12, 3196.0], [1.72850046E12, 4136.0], [1.72849194E12, 2376.0], [1.72850082E12, 3740.0], [1.72849518E12, 2850.0], [1.7284974E12, 3185.0], [1.72849416E12, 2979.0], [1.7284986E12, 2931.0], [1.72849314E12, 2511.0], [1.72849638E12, 2663.0], [1.72849962E12, 4005.0], [1.72849092E12, 2856.0], [1.72849536E12, 2806.0], [1.7285013E12, 2600.0], [1.72849242E12, 2314.0], [1.72849566E12, 2745.0], [1.72849908E12, 3362.0], [1.7284902E12, 2379.0], [1.72849464E12, 2937.0], [1.72849362E12, 2721.0], [1.72849686E12, 3293.0], [1.7285001E12, 4616.0], [1.7284914E12, 2227.0], [1.72849788E12, 2953.0], [1.72849584E12, 2766.0], [1.72849824E12, 3184.0], [1.72849482E12, 3072.0], [1.72849704E12, 3401.0], [1.72849926E12, 2831.0], [1.72849038E12, 2441.0], [1.7284926E12, 2069.0], [1.72849056E12, 2565.0], [1.7284938E12, 2774.0], [1.72849158E12, 2923.0], [1.72849602E12, 2970.0], [1.72849806E12, 3229.0], [1.72850028E12, 3426.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72850034E12, 2126.0000000000005], [1.72849146E12, 1605.8000000000002], [1.7284947E12, 1604.0000000000005], [1.72849692E12, 1916.2000000000003], [1.72849368E12, 1650.4], [1.72849812E12, 1824.0], [1.72849266E12, 1575.5], [1.7284959E12, 1787.2000000000003], [1.72849914E12, 1752.3000000000002], [1.72849488E12, 1709.5], [1.72849044E12, 1535.3], [1.7284971E12, 1866.1999999999998], [1.72849164E12, 1546.2000000000003], [1.72849386E12, 1568.2000000000003], [1.72849608E12, 1801.5], [1.7284983E12, 1725.1000000000001], [1.72850052E12, 2200.6], [1.72849932E12, 2060.7999999999997], [1.72849062E12, 1601.5], [1.72849284E12, 1666.4], [1.72849506E12, 1737.6000000000001], [1.72849728E12, 1825.0], [1.72849758E12, 1766.2], [1.728501E12, 2138.2000000000003], [1.7284899E12, 2282.7999999999997], [1.72849212E12, 1529.9], [1.72849434E12, 1697.4], [1.72849656E12, 1731.8000000000002], [1.72849878E12, 1788.1000000000006], [1.72849008E12, 1548.3999999999999], [1.7284998E12, 2210.3], [1.7284911E12, 1610.1000000000006], [1.72849332E12, 1648.2], [1.72849554E12, 1611.8000000000002], [1.72849776E12, 1844.0], [1.72849128E12, 1585.5], [1.72849452E12, 1743.6000000000001], [1.72849794E12, 1771.7], [1.72850016E12, 2211.5], [1.72850118E12, 2107.1000000000004], [1.7284923E12, 1519.6], [1.72849674E12, 1946.6000000000001], [1.72849572E12, 1783.3000000000002], [1.72849896E12, 1771.8000000000002], [1.72849026E12, 1536.7000000000007], [1.72849248E12, 1617.6000000000017], [1.7284935E12, 1614.2000000000012], [1.72849998E12, 2124.0], [1.72849338E12, 1579.3], [1.72849662E12, 1755.9000000000003], [1.72849116E12, 1729.0000000000007], [1.7284956E12, 1690.8000000000002], [1.72850004E12, 2091.4], [1.72849782E12, 1770.2000000000003], [1.72850106E12, 2212.7000000000003], [1.72849884E12, 1838.4], [1.7284968E12, 1852.9], [1.72849014E12, 1615.0], [1.72849236E12, 1648.6000000000001], [1.72849458E12, 1695.8000000000002], [1.7284992E12, 1764.5], [1.72849032E12, 1683.0], [1.72849578E12, 1593.0], [1.72850022E12, 2146.3], [1.72849134E12, 1674.9000000000005], [1.72849356E12, 1591.5000000000002], [1.72849152E12, 1581.0], [1.72849476E12, 1658.0000000000007], [1.728498E12, 1861.4000000000005], [1.72849698E12, 1864.6000000000004], [1.72849254E12, 1566.4], [1.72849902E12, 1759.2], [1.72850124E12, 1962.4], [1.7284908E12, 1504.6000000000004], [1.72849968E12, 2101.8], [1.72849404E12, 1687.5000000000005], [1.72849182E12, 1562.7000000000003], [1.72849626E12, 1692.8000000000002], [1.7285007E12, 2143.3], [1.72849524E12, 1706.1], [1.72849848E12, 1702.2], [1.728492E12, 1623.0], [1.72849302E12, 1507.4], [1.72849746E12, 1866.0], [1.7284995E12, 2066.2000000000003], [1.72849098E12, 1547.0], [1.7284932E12, 1516.6000000000001], [1.72849986E12, 2109.9000000000005], [1.72849422E12, 1645.6000000000004], [1.72849644E12, 1726.8000000000002], [1.72849218E12, 1683.5], [1.72849542E12, 1727.0], [1.72849764E12, 1804.5], [1.72849866E12, 1784.2000000000003], [1.72850088E12, 2205.3999999999996], [1.72848996E12, 1455.9], [1.7284944E12, 1645.2], [1.72849872E12, 1800.4], [1.72849086E12, 1582.0], [1.72849308E12, 1593.8999999999999], [1.7284953E12, 1770.0000000000023], [1.72849752E12, 1837.4], [1.72849974E12, 2191.4999999999995], [1.72849104E12, 1613.1000000000004], [1.72849428E12, 1649.8000000000002], [1.72849206E12, 1612.8000000000002], [1.7284965E12, 1771.4], [1.72849854E12, 1772.0], [1.72850076E12, 2066.2], [1.72849548E12, 1744.5000000000005], [1.7284989E12, 1741.6000000000001], [1.72850112E12, 2197.0], [1.72849002E12, 1552.5], [1.72849224E12, 1543.6000000000001], [1.72849326E12, 1457.1999999999998], [1.7284977E12, 1873.3999999999996], [1.72849992E12, 2096.2], [1.72849122E12, 1602.0], [1.72849344E12, 1755.7], [1.72849446E12, 1698.8000000000002], [1.72849668E12, 1893.1], [1.72850094E12, 2085.500000000001], [1.72849272E12, 1648.8], [1.72849938E12, 2109.0], [1.7284905E12, 1583.8000000000002], [1.72849374E12, 1646.6000000000004], [1.72849596E12, 1716.5], [1.7284917E12, 1486.2], [1.72849494E12, 1752.9999999999998], [1.72849716E12, 1882.0000000000005], [1.72849818E12, 1734.9000000000003], [1.7285004E12, 2123.8], [1.72849392E12, 1732.5], [1.7284929E12, 1545.1], [1.72849614E12, 1685.200000000001], [1.72849068E12, 1616.4], [1.72849512E12, 1826.0], [1.72849956E12, 2074.3999999999996], [1.72849734E12, 1770.9999999999998], [1.72850058E12, 2214.0], [1.72849836E12, 1840.0], [1.72849188E12, 1538.8000000000002], [1.7284941E12, 1596.6000000000008], [1.72849632E12, 1835.2], [1.728495E12, 1832.8000000000002], [1.72849176E12, 1563.8000000000002], [1.72849842E12, 1794.1], [1.72850064E12, 2142.7], [1.72849278E12, 1617.0], [1.72849722E12, 1814.6000000000004], [1.72849944E12, 2224.0], [1.72849074E12, 1601.0], [1.72849296E12, 1560.9000000000003], [1.72849398E12, 1664.8000000000004], [1.7284962E12, 1743.8000000000002], [1.72850046E12, 2110.0], [1.72849194E12, 1559.0], [1.72850082E12, 2130.5], [1.72849518E12, 1696.0], [1.7284974E12, 1781.6999999999998], [1.72849416E12, 1672.3000000000004], [1.7284986E12, 1796.0], [1.72849314E12, 1564.2000000000003], [1.72849638E12, 1629.0], [1.72849962E12, 2131.8], [1.72849092E12, 1561.0], [1.72849536E12, 1707.0], [1.7285013E12, 1789.0], [1.72849242E12, 1522.5], [1.72849566E12, 1622.5000000000005], [1.72849908E12, 1794.0], [1.7284902E12, 1591.2], [1.72849464E12, 1662.6000000000001], [1.72849362E12, 1704.800000000001], [1.72849686E12, 1881.2000000000003], [1.7285001E12, 2209.7], [1.7284914E12, 1586.0], [1.72849788E12, 1800.6], [1.72849584E12, 1709.000000000001], [1.72849824E12, 1786.8], [1.72849482E12, 1799.3], [1.72849704E12, 1834.5000000000005], [1.72849926E12, 1807.8000000000002], [1.72849038E12, 1455.6], [1.7284926E12, 1476.6000000000004], [1.72849056E12, 1546.4], [1.7284938E12, 1737.5999999999997], [1.72849158E12, 1636.8000000000002], [1.72849602E12, 1743.2], [1.72849806E12, 1726.2], [1.72850028E12, 2130.4999999999995]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72850034E12, 2964.92], [1.72849146E12, 2360.3999999999955], [1.7284947E12, 2301.2], [1.72849692E12, 2607.92], [1.72849368E12, 2445.840000000004], [1.72849812E12, 2635.4000000000005], [1.72849266E12, 2423.099999999998], [1.7284959E12, 2430.7199999999984], [1.72849914E12, 2503.630000000001], [1.72849488E12, 2762.75], [1.72849044E12, 1990.1999999999998], [1.7284971E12, 2667.7], [1.72849164E12, 2500.0199999999995], [1.72849386E12, 2275.399999999999], [1.72849608E12, 2503.5], [1.7284983E12, 2473.4499999999944], [1.72850052E12, 3127.0700000000006], [1.72849932E12, 3118.100000000003], [1.72849062E12, 2228.5], [1.72849284E12, 2297.7], [1.72849506E12, 2554.7400000000002], [1.72849728E12, 2694.0], [1.72849758E12, 2567.439999999994], [1.728501E12, 3179.26], [1.7284899E12, 2703.0], [1.72849212E12, 2440.4700000000025], [1.72849434E12, 2463.279999999999], [1.72849656E12, 2367.86], [1.72849878E12, 2489.249999999995], [1.72849008E12, 2131.3200000000006], [1.7284998E12, 3203.2399999999916], [1.7284911E12, 2311.58], [1.72849332E12, 2185.42], [1.72849554E12, 2493.3999999999996], [1.72849776E12, 2583.75], [1.72849128E12, 2234.059999999997], [1.72849452E12, 2431.04], [1.72849794E12, 2568.7799999999997], [1.72850016E12, 3255.2500000000005], [1.72850118E12, 3057.79], [1.7284923E12, 2108.070000000001], [1.72849674E12, 2774.559999999999], [1.72849572E12, 2510.0599999999913], [1.72849896E12, 2665.119999999999], [1.72849026E12, 2298.39], [1.72849248E12, 2335.1599999999994], [1.7284935E12, 2380.279999999998], [1.72849998E12, 3069.899999999996], [1.72849338E12, 2100.4199999999996], [1.72849662E12, 2562.700000000005], [1.72849116E12, 2479.989999999997], [1.7284956E12, 2479.079999999998], [1.72850004E12, 3132.2], [1.72849782E12, 2585.32], [1.72850106E12, 3204.659999999999], [1.72849884E12, 2611.6499999999996], [1.7284968E12, 2636.2099999999996], [1.72849014E12, 2429.200000000004], [1.72849236E12, 2372.600000000001], [1.72849458E12, 2346.059999999997], [1.7284992E12, 2570.800000000004], [1.72849032E12, 2333.900000000001], [1.72849578E12, 2319.000000000001], [1.72850022E12, 3132.5099999999998], [1.72849134E12, 2383.7800000000007], [1.72849356E12, 2223.0200000000004], [1.72849152E12, 2168.2999999999993], [1.72849476E12, 2289.5000000000005], [1.728498E12, 2675.679999999999], [1.72849698E12, 2756.8699999999985], [1.72849254E12, 2134.5600000000004], [1.72849902E12, 2789.559999999999], [1.72850124E12, 2876.839999999998], [1.7284908E12, 2461.679999999996], [1.72849968E12, 3111.4000000000005], [1.72849404E12, 2372.039999999998], [1.72849182E12, 2652.879999999999], [1.72849626E12, 2586.2400000000002], [1.7285007E12, 3320.760000000002], [1.72849524E12, 2495.2999999999984], [1.72849848E12, 2650.56], [1.728492E12, 2116.3999999999996], [1.72849302E12, 2290.94], [1.72849746E12, 2621.500000000002], [1.7284995E12, 3082.8900000000003], [1.72849098E12, 2182.4], [1.7284932E12, 2297.3399999999974], [1.72849986E12, 3003.74], [1.72849422E12, 2286.5199999999995], [1.72849644E12, 2569.9999999999955], [1.72849218E12, 2465.5499999999984], [1.72849542E12, 2548.0], [1.72849764E12, 2647.8500000000013], [1.72849866E12, 2503.16], [1.72850088E12, 3106.519999999997], [1.72848996E12, 2188.849999999995], [1.7284944E12, 2207.5299999999997], [1.72849872E12, 2666.59], [1.72849086E12, 2144.9999999999995], [1.72849308E12, 2352.7300000000005], [1.7284953E12, 2534.039999999997], [1.72849752E12, 2571.7700000000023], [1.72849974E12, 3179.4799999999996], [1.72849104E12, 2268.3700000000003], [1.72849428E12, 2348.0400000000004], [1.72849206E12, 2223.920000000004], [1.7284965E12, 2488.0899999999992], [1.72849854E12, 2533.600000000001], [1.72850076E12, 3159.22], [1.72849548E12, 2397.9499999999994], [1.7284989E12, 2391.37], [1.72850112E12, 3095.4000000000015], [1.72849002E12, 2316.5], [1.72849224E12, 2108.78], [1.72849326E12, 2213.7599999999975], [1.7284977E12, 2636.400000000003], [1.72849992E12, 3287.7599999999984], [1.72849122E12, 2090.0], [1.72849344E12, 2574.24], [1.72849446E12, 2593.160000000001], [1.72849668E12, 2651.389999999999], [1.72850094E12, 2977.38], [1.72849272E12, 2395.8399999999992], [1.72849938E12, 3026.4299999999994], [1.7284905E12, 2076.32], [1.72849374E12, 2248.7599999999993], [1.72849596E12, 2714.3499999999985], [1.7284917E12, 2173.499999999999], [1.72849494E12, 2516.5200000000013], [1.72849716E12, 2505.12], [1.72849818E12, 2505.0399999999954], [1.7285004E12, 3145.969999999998], [1.72849392E12, 2496.700000000004], [1.7284929E12, 2171.3799999999997], [1.72849614E12, 2486.7200000000043], [1.72849068E12, 2220.56], [1.72849512E12, 2536.899999999995], [1.72849956E12, 3080.289999999999], [1.72849734E12, 2835.4500000000007], [1.72850058E12, 3008.9999999999995], [1.72849836E12, 2738.260000000001], [1.72849188E12, 2111.319999999996], [1.7284941E12, 2351.319999999999], [1.72849632E12, 2713.1700000000005], [1.728495E12, 2495.8200000000006], [1.72849176E12, 2437.9599999999973], [1.72849842E12, 2665.499999999998], [1.72850064E12, 2938.969999999996], [1.72849278E12, 2208.4800000000005], [1.72849722E12, 2532.3600000000006], [1.72849944E12, 3229.319999999999], [1.72849074E12, 2268.0], [1.72849296E12, 2262.290000000001], [1.72849398E12, 2458.3499999999995], [1.7284962E12, 2602.65], [1.72850046E12, 3103.799999999999], [1.72849194E12, 2204.6000000000004], [1.72850082E12, 3042.0], [1.72849518E12, 2498.349999999999], [1.7284974E12, 2557.0], [1.72849416E12, 2464.66], [1.7284986E12, 2579.46], [1.72849314E12, 2166.960000000001], [1.72849638E12, 2326.35], [1.72849962E12, 3151.0], [1.72849092E12, 2377.2000000000007], [1.72849536E12, 2390.749999999999], [1.7285013E12, 2466.7399999999993], [1.72849242E12, 2255.999999999999], [1.72849566E12, 2376.72], [1.72849908E12, 2537.5], [1.7284902E12, 2264.3900000000017], [1.72849464E12, 2420.300000000001], [1.72849362E12, 2346.4799999999996], [1.72849686E12, 2550.66], [1.7285001E12, 3115.9499999999994], [1.7284914E12, 1998.65], [1.72849788E12, 2591.3999999999996], [1.72849584E12, 2554.4000000000024], [1.72849824E12, 2563.7000000000003], [1.72849482E12, 2618.740000000001], [1.72849704E12, 2677.5099999999984], [1.72849926E12, 2740.48], [1.72849038E12, 1979.8599999999994], [1.7284926E12, 1939.0400000000027], [1.72849056E12, 2149.0999999999995], [1.7284938E12, 2421.619999999996], [1.72849158E12, 2557.24], [1.72849602E12, 2632.240000000001], [1.72849806E12, 2681.5199999999995], [1.72850028E12, 2999.7200000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72850034E12, 2445.3999999999996], [1.72849146E12, 1861.0], [1.7284947E12, 1878.8000000000002], [1.72849692E12, 2120.2], [1.72849368E12, 1944.9999999999998], [1.72849812E12, 2069.0], [1.72849266E12, 1862.0], [1.7284959E12, 2008.3999999999994], [1.72849914E12, 2073.1], [1.72849488E12, 1963.5], [1.72849044E12, 1696.999999999999], [1.7284971E12, 2062.3999999999996], [1.72849164E12, 1796.5999999999995], [1.72849386E12, 1839.6], [1.72849608E12, 2051.0], [1.7284983E12, 2034.9499999999994], [1.72850052E12, 2500.749999999999], [1.72849932E12, 2353.1499999999996], [1.72849062E12, 1730.25], [1.72849284E12, 1907.6999999999998], [1.72849506E12, 2014.1], [1.72849728E12, 2081.5], [1.72849758E12, 2037.7999999999993], [1.728501E12, 2477.25], [1.7284899E12, 2450.1999999999985], [1.72849212E12, 1750.25], [1.72849434E12, 2024.7999999999995], [1.72849656E12, 1841.6], [1.72849878E12, 2064.3999999999996], [1.72849008E12, 1769.7499999999993], [1.7284998E12, 2550.499999999999], [1.7284911E12, 1791.9], [1.72849332E12, 1881.4999999999998], [1.72849554E12, 1841.599999999999], [1.72849776E12, 2137.0], [1.72849128E12, 1814.55], [1.72849452E12, 2010.7999999999997], [1.72849794E12, 2019.7999999999993], [1.72850016E12, 2447.75], [1.72850118E12, 2423.2], [1.7284923E12, 1745.4999999999998], [1.72849674E12, 2250.7999999999997], [1.72849572E12, 2017.6999999999994], [1.72849896E12, 1999.3], [1.72849026E12, 1766.05], [1.72849248E12, 1841.3999999999999], [1.7284935E12, 1890.1999999999998], [1.72849998E12, 2450.0], [1.72849338E12, 1787.85], [1.72849662E12, 1900.4999999999995], [1.72849116E12, 1944.3499999999997], [1.7284956E12, 2009.2000000000003], [1.72850004E12, 2526.399999999999], [1.72849782E12, 2107.6], [1.72850106E12, 2547.8499999999995], [1.72849884E12, 2146.1], [1.7284968E12, 2119.7999999999997], [1.72849014E12, 1848.0], [1.72849236E12, 1818.1000000000001], [1.72849458E12, 1968.1999999999998], [1.7284992E12, 2038.75], [1.72849032E12, 1966.5], [1.72849578E12, 1841.0], [1.72850022E12, 2481.7], [1.72849134E12, 1844.9000000000005], [1.72849356E12, 1828.85], [1.72849152E12, 1708.0], [1.72849476E12, 1901.5], [1.728498E12, 2167.5999999999995], [1.72849698E12, 2249.999999999998], [1.72849254E12, 1786.1999999999994], [1.72849902E12, 2059.1999999999994], [1.72850124E12, 2273.2], [1.7284908E12, 1929.5999999999997], [1.72849968E12, 2418.1999999999975], [1.72849404E12, 1934.75], [1.72849182E12, 1857.9500000000007], [1.72849626E12, 1947.3999999999987], [1.7285007E12, 2441.1499999999996], [1.72849524E12, 1886.2499999999998], [1.72849848E12, 1997.8999999999994], [1.728492E12, 1749.75], [1.72849302E12, 1811.2999999999995], [1.72849746E12, 2077.0], [1.7284995E12, 2316.05], [1.72849098E12, 1757.0], [1.7284932E12, 1749.0999999999997], [1.72849986E12, 2421.0], [1.72849422E12, 1857.3], [1.72849644E12, 2084.599999999999], [1.72849218E12, 1913.25], [1.72849542E12, 2012.0], [1.72849764E12, 2124.75], [1.72849866E12, 2049.3999999999996], [1.72850088E12, 2497.9999999999995], [1.72848996E12, 1737.1], [1.7284944E12, 1828.6999999999985], [1.72849872E12, 2075.4999999999995], [1.72849086E12, 1732.5], [1.72849308E12, 1800.5999999999995], [1.7284953E12, 2064.2], [1.72849752E12, 2078.4499999999994], [1.72849974E12, 2559.1999999999975], [1.72849104E12, 1818.6500000000003], [1.72849428E12, 1940.6], [1.72849206E12, 1806.3000000000004], [1.7284965E12, 2005.35], [1.72849854E12, 1986.8], [1.72850076E12, 2416.3999999999996], [1.72849548E12, 2026.0499999999997], [1.7284989E12, 2024.7499999999998], [1.72850112E12, 2511.25], [1.72849002E12, 1899.25], [1.72849224E12, 1756.7], [1.72849326E12, 1607.7999999999993], [1.7284977E12, 2131.7999999999993], [1.72849992E12, 2456.3999999999996], [1.72849122E12, 1822.0], [1.72849344E12, 2053.500000000001], [1.72849446E12, 2100.2], [1.72849668E12, 2193.3499999999995], [1.72850094E12, 2408.65], [1.72849272E12, 1844.3999999999999], [1.72849938E12, 2449.249999999999], [1.7284905E12, 1802.1999999999998], [1.72849374E12, 1855.1999999999996], [1.72849596E12, 2013.5], [1.7284917E12, 1793.1999999999982], [1.72849494E12, 2013.999999999998], [1.72849716E12, 2132.3999999999996], [1.72849818E12, 2055.2999999999965], [1.7285004E12, 2476.7999999999993], [1.72849392E12, 1942.0], [1.7284929E12, 1795.9500000000003], [1.72849614E12, 1933.9999999999989], [1.72849068E12, 1813.499999999999], [1.72849512E12, 2089.0], [1.72849956E12, 2480.45], [1.72849734E12, 2104.45], [1.72850058E12, 2521.5], [1.72849836E12, 2133.6], [1.72849188E12, 1734.9], [1.7284941E12, 1859.6999999999998], [1.72849632E12, 2125.75], [1.728495E12, 2151.7], [1.72849176E12, 1826.4], [1.72849842E12, 2053.2], [1.72850064E12, 2353.95], [1.72849278E12, 1792.1999999999998], [1.72849722E12, 2037.7999999999997], [1.72849944E12, 2635.6499999999996], [1.72849074E12, 1872.0], [1.72849296E12, 1779.5], [1.72849398E12, 1967.3], [1.7284962E12, 1962.3], [1.72850046E12, 2422.0], [1.72849194E12, 1724.0], [1.72850082E12, 2402.0], [1.72849518E12, 2027.0], [1.7284974E12, 2020.4499999999994], [1.72849416E12, 1905.8500000000004], [1.7284986E12, 2096.1], [1.72849314E12, 1873.3999999999996], [1.72849638E12, 1827.25], [1.72849962E12, 2427.6499999999996], [1.72849092E12, 1904.0], [1.72849536E12, 1933.5], [1.7285013E12, 1962.4999999999995], [1.72849242E12, 1788.25], [1.72849566E12, 1914.5499999999997], [1.72849908E12, 2166.5], [1.7284902E12, 1829.7999999999997], [1.72849464E12, 1912.2999999999997], [1.72849362E12, 1904.7999999999997], [1.72849686E12, 2182.35], [1.7285001E12, 2473.849999999998], [1.7284914E12, 1722.25], [1.72849788E12, 2103.2], [1.72849584E12, 1925.4], [1.72849824E12, 2058.7999999999997], [1.72849482E12, 2075.4], [1.72849704E12, 2107.25], [1.72849926E12, 2125.199999999999], [1.72849038E12, 1686.5], [1.7284926E12, 1711.5999999999997], [1.72849056E12, 1890.9499999999985], [1.7284938E12, 2029.099999999999], [1.72849158E12, 1836.3999999999996], [1.72849602E12, 2025.7000000000003], [1.72849806E12, 2051.599999999999], [1.72850028E12, 2401.0499999999993]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72850034E12, 80.0], [1.72849146E12, 83.0], [1.7284947E12, 87.0], [1.72849692E12, 76.0], [1.72849368E12, 71.0], [1.72849812E12, 79.0], [1.72849266E12, 79.0], [1.7284959E12, 78.0], [1.72849914E12, 61.0], [1.72849488E12, 83.0], [1.72849044E12, 79.0], [1.7284971E12, 73.0], [1.72849164E12, 78.0], [1.72849386E12, 80.0], [1.72849608E12, 86.0], [1.7284983E12, 83.0], [1.72850052E12, 68.0], [1.72849932E12, 64.0], [1.72849062E12, 82.0], [1.72849284E12, 82.0], [1.72849506E12, 82.0], [1.72849728E12, 70.0], [1.72849758E12, 79.0], [1.728501E12, 77.0], [1.7284899E12, 118.0], [1.72849212E12, 59.0], [1.72849434E12, 64.0], [1.72849656E12, 71.0], [1.72849878E12, 77.0], [1.72849008E12, 78.0], [1.7284998E12, 72.0], [1.7284911E12, 68.0], [1.72849332E12, 81.0], [1.72849554E12, 78.0], [1.72849776E12, 73.0], [1.72849128E12, 72.0], [1.72849452E12, 73.0], [1.72849794E12, 81.0], [1.72850016E12, 78.0], [1.72850118E12, 78.0], [1.7284923E12, 79.0], [1.72849674E12, 72.0], [1.72849572E12, 70.0], [1.72849896E12, 62.0], [1.72849026E12, 86.0], [1.72849248E12, 75.0], [1.7284935E12, 76.0], [1.72849998E12, 79.0], [1.72849338E12, 90.0], [1.72849662E12, 89.0], [1.72849116E12, 92.0], [1.7284956E12, 69.0], [1.72850004E12, 63.0], [1.72849782E12, 71.0], [1.72850106E12, 75.0], [1.72849884E12, 62.0], [1.7284968E12, 76.0], [1.72849014E12, 77.0], [1.72849236E12, 87.0], [1.72849458E12, 79.0], [1.7284992E12, 75.0], [1.72849032E12, 97.0], [1.72849578E12, 78.0], [1.72850022E12, 77.0], [1.72849134E12, 90.0], [1.72849356E12, 75.0], [1.72849152E12, 76.0], [1.72849476E12, 79.0], [1.728498E12, 65.0], [1.72849698E12, 75.0], [1.72849254E12, 77.0], [1.72849902E12, 66.0], [1.72850124E12, 77.0], [1.7284908E12, 77.0], [1.72849968E12, 79.0], [1.72849404E12, 75.0], [1.72849182E12, 69.0], [1.72849626E12, 82.0], [1.7285007E12, 70.0], [1.72849524E12, 78.0], [1.72849848E12, 79.0], [1.728492E12, 88.0], [1.72849302E12, 62.0], [1.72849746E12, 79.0], [1.7284995E12, 78.0], [1.72849098E12, 75.0], [1.7284932E12, 80.0], [1.72849986E12, 79.0], [1.72849422E12, 67.0], [1.72849644E12, 71.0], [1.72849218E12, 82.0], [1.72849542E12, 78.0], [1.72849764E12, 73.0], [1.72849866E12, 72.0], [1.72850088E12, 72.0], [1.72848996E12, 91.0], [1.7284944E12, 84.0], [1.72849872E12, 80.0], [1.72849086E12, 73.0], [1.72849308E12, 69.0], [1.7284953E12, 68.0], [1.72849752E12, 63.0], [1.72849974E12, 49.0], [1.72849104E12, 90.0], [1.72849428E12, 77.0], [1.72849206E12, 76.0], [1.7284965E12, 75.0], [1.72849854E12, 83.0], [1.72850076E12, 74.0], [1.72849548E12, 73.0], [1.7284989E12, 77.0], [1.72850112E12, 74.0], [1.72849002E12, 91.0], [1.72849224E12, 76.0], [1.72849326E12, 82.0], [1.7284977E12, 75.0], [1.72849992E12, 79.0], [1.72849122E12, 72.0], [1.72849344E12, 65.0], [1.72849446E12, 69.0], [1.72849668E12, 74.0], [1.72850094E12, 48.0], [1.72849272E12, 89.0], [1.72849938E12, 69.0], [1.7284905E12, 82.0], [1.72849374E12, 69.0], [1.72849596E12, 85.0], [1.7284917E12, 73.0], [1.72849494E12, 71.0], [1.72849716E12, 69.0], [1.72849818E12, 73.0], [1.7285004E12, 65.0], [1.72849392E12, 80.0], [1.7284929E12, 70.0], [1.72849614E12, 73.0], [1.72849068E12, 72.0], [1.72849512E12, 75.0], [1.72849956E12, 66.0], [1.72849734E12, 68.0], [1.72850058E12, 72.0], [1.72849836E12, 77.0], [1.72849188E12, 73.0], [1.7284941E12, 72.0], [1.72849632E12, 77.0], [1.728495E12, 69.0], [1.72849176E12, 71.0], [1.72849842E12, 77.0], [1.72850064E12, 73.0], [1.72849278E12, 74.0], [1.72849722E12, 77.0], [1.72849944E12, 71.0], [1.72849074E12, 82.0], [1.72849296E12, 87.0], [1.72849398E12, 65.0], [1.7284962E12, 78.0], [1.72850046E12, 73.0], [1.72849194E12, 77.0], [1.72850082E12, 76.0], [1.72849518E12, 78.0], [1.7284974E12, 66.0], [1.72849416E12, 77.0], [1.7284986E12, 78.0], [1.72849314E12, 75.0], [1.72849638E12, 70.0], [1.72849962E12, 69.0], [1.72849092E12, 77.0], [1.72849536E12, 74.0], [1.7285013E12, 77.0], [1.72849242E12, 73.0], [1.72849566E12, 72.0], [1.72849908E12, 69.0], [1.7284902E12, 83.0], [1.72849464E12, 64.0], [1.72849362E12, 79.0], [1.72849686E12, 71.0], [1.7285001E12, 81.0], [1.7284914E12, 81.0], [1.72849788E12, 67.0], [1.72849584E12, 79.0], [1.72849824E12, 77.0], [1.72849482E12, 90.0], [1.72849704E12, 72.0], [1.72849926E12, 77.0], [1.72849038E12, 82.0], [1.7284926E12, 76.0], [1.72849056E12, 86.0], [1.7284938E12, 71.0], [1.72849158E12, 77.0], [1.72849602E12, 74.0], [1.72849806E12, 70.0], [1.72850028E12, 75.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72850034E12, 912.0], [1.72849146E12, 769.0], [1.7284947E12, 586.0], [1.72849692E12, 855.0], [1.72849368E12, 565.0], [1.72849812E12, 753.0], [1.72849266E12, 779.5], [1.7284959E12, 787.0], [1.72849914E12, 843.5], [1.72849488E12, 764.5], [1.72849044E12, 668.0], [1.7284971E12, 806.0], [1.72849164E12, 770.0], [1.72849386E12, 749.0], [1.72849608E12, 760.0], [1.7284983E12, 855.5], [1.72850052E12, 876.5], [1.72849932E12, 809.0], [1.72849062E12, 694.0], [1.72849284E12, 769.0], [1.72849506E12, 848.0], [1.72849728E12, 784.0], [1.72849758E12, 736.0], [1.728501E12, 847.5], [1.7284899E12, 775.0], [1.72849212E12, 657.5], [1.72849434E12, 764.0], [1.72849656E12, 709.5], [1.72849878E12, 697.0], [1.72849008E12, 529.0], [1.7284998E12, 913.0], [1.7284911E12, 669.5], [1.72849332E12, 748.0], [1.72849554E12, 727.0], [1.72849776E12, 830.5], [1.72849128E12, 833.5], [1.72849452E12, 680.0], [1.72849794E12, 708.5], [1.72850016E12, 889.0], [1.72850118E12, 946.5], [1.7284923E12, 710.5], [1.72849674E12, 685.0], [1.72849572E12, 830.0], [1.72849896E12, 820.0], [1.72849026E12, 872.5], [1.72849248E12, 734.0], [1.7284935E12, 704.0], [1.72849998E12, 854.0], [1.72849338E12, 581.0], [1.72849662E12, 704.5], [1.72849116E12, 806.5], [1.7284956E12, 679.0], [1.72850004E12, 980.0], [1.72849782E12, 849.0], [1.72850106E12, 982.0], [1.72849884E12, 742.0], [1.7284968E12, 784.5], [1.72849014E12, 693.0], [1.72849236E12, 730.0], [1.72849458E12, 764.0], [1.7284992E12, 761.0], [1.72849032E12, 656.0], [1.72849578E12, 677.0], [1.72850022E12, 725.0], [1.72849134E12, 708.0], [1.72849356E12, 601.5], [1.72849152E12, 591.0], [1.72849476E12, 706.0], [1.728498E12, 877.0], [1.72849698E12, 885.0], [1.72849254E12, 398.0], [1.72849902E12, 803.0], [1.72850124E12, 679.0], [1.7284908E12, 793.0], [1.72849968E12, 877.0], [1.72849404E12, 762.0], [1.72849182E12, 639.5], [1.72849626E12, 698.0], [1.7285007E12, 964.5], [1.72849524E12, 604.5], [1.72849848E12, 691.0], [1.728492E12, 724.0], [1.72849302E12, 761.0], [1.72849746E12, 782.0], [1.7284995E12, 876.0], [1.72849098E12, 572.0], [1.7284932E12, 449.0], [1.72849986E12, 862.5], [1.72849422E12, 657.0], [1.72849644E12, 803.0], [1.72849218E12, 742.0], [1.72849542E12, 699.0], [1.72849764E12, 726.5], [1.72849866E12, 787.0], [1.72850088E12, 872.0], [1.72848996E12, 592.0], [1.7284944E12, 743.5], [1.72849872E12, 771.0], [1.72849086E12, 622.0], [1.72849308E12, 598.5], [1.7284953E12, 734.0], [1.72849752E12, 749.5], [1.72849974E12, 953.5], [1.72849104E12, 777.5], [1.72849428E12, 764.0], [1.72849206E12, 722.0], [1.7284965E12, 839.0], [1.72849854E12, 702.0], [1.72850076E12, 843.0], [1.72849548E12, 705.0], [1.7284989E12, 637.0], [1.72850112E12, 907.0], [1.72849002E12, 416.0], [1.72849224E12, 517.0], [1.72849326E12, 622.0], [1.7284977E12, 805.0], [1.72849992E12, 905.0], [1.72849122E12, 836.0], [1.72849344E12, 812.0], [1.72849446E12, 751.0], [1.72849668E12, 646.5], [1.72850094E12, 877.0], [1.72849272E12, 719.0], [1.72849938E12, 848.0], [1.7284905E12, 673.0], [1.72849374E12, 686.0], [1.72849596E12, 716.0], [1.7284917E12, 733.0], [1.72849494E12, 778.0], [1.72849716E12, 918.0], [1.72849818E12, 671.0], [1.7285004E12, 985.0], [1.72849392E12, 705.0], [1.7284929E12, 611.5], [1.72849614E12, 725.0], [1.72849068E12, 721.0], [1.72849512E12, 726.0], [1.72849956E12, 767.5], [1.72849734E12, 787.0], [1.72850058E12, 1050.0], [1.72849836E12, 700.0], [1.72849188E12, 546.0], [1.7284941E12, 674.0], [1.72849632E12, 710.0], [1.728495E12, 844.0], [1.72849176E12, 651.0], [1.72849842E12, 771.0], [1.72850064E12, 873.0], [1.72849278E12, 770.5], [1.72849722E12, 782.0], [1.72849944E12, 821.5], [1.72849074E12, 744.0], [1.72849296E12, 802.0], [1.72849398E12, 587.0], [1.7284962E12, 788.5], [1.72850046E12, 918.0], [1.72849194E12, 591.0], [1.72850082E12, 843.5], [1.72849518E12, 744.0], [1.7284974E12, 655.5], [1.72849416E12, 681.0], [1.7284986E12, 818.0], [1.72849314E12, 677.0], [1.72849638E12, 818.5], [1.72849962E12, 875.0], [1.72849092E12, 688.0], [1.72849536E12, 711.0], [1.7285013E12, 843.0], [1.72849242E12, 572.0], [1.72849566E12, 490.5], [1.72849908E12, 819.5], [1.7284902E12, 425.0], [1.72849464E12, 652.5], [1.72849362E12, 739.0], [1.72849686E12, 792.0], [1.7285001E12, 939.0], [1.7284914E12, 599.0], [1.72849788E12, 630.0], [1.72849584E12, 738.0], [1.72849824E12, 696.0], [1.72849482E12, 824.0], [1.72849704E12, 754.5], [1.72849926E12, 659.0], [1.72849038E12, 550.0], [1.7284926E12, 619.0], [1.72849056E12, 729.5], [1.7284938E12, 705.0], [1.72849158E12, 734.0], [1.72849602E12, 754.0], [1.72849806E12, 639.0], [1.72850028E12, 821.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7285013E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 269.5, "minX": 1.0, "maxY": 1166.0, "series": [{"data": [[2.0, 1022.0], [34.0, 296.5], [3.0, 1002.5], [4.0, 940.0], [5.0, 866.0], [6.0, 782.0], [7.0, 762.0], [8.0, 826.0], [9.0, 837.0], [10.0, 829.0], [11.0, 821.5], [12.0, 821.0], [13.0, 809.0], [14.0, 755.5], [15.0, 717.5], [1.0, 1166.0], [16.0, 697.5], [17.0, 615.0], [18.0, 586.0], [19.0, 486.0], [20.0, 505.0], [21.0, 419.5], [22.0, 409.0], [23.0, 390.0], [24.0, 351.0], [25.0, 436.0], [26.0, 423.0], [27.0, 307.0], [28.0, 289.0], [29.0, 363.0], [30.0, 313.5], [31.0, 269.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 34.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 148.0, "minX": 1.0, "maxY": 817.0, "series": [{"data": [[2.0, 736.0], [34.0, 178.5], [3.0, 712.5], [4.0, 676.5], [5.0, 633.0], [6.0, 582.0], [7.0, 567.0], [8.0, 618.0], [9.0, 622.0], [10.0, 614.0], [11.0, 611.0], [12.0, 613.5], [13.0, 609.0], [14.0, 571.0], [15.0, 541.5], [1.0, 817.0], [16.0, 531.5], [17.0, 463.0], [18.0, 431.5], [19.0, 331.5], [20.0, 350.0], [21.0, 274.0], [22.0, 258.0], [23.0, 242.0], [24.0, 214.5], [25.0, 277.0], [26.0, 269.5], [27.0, 182.0], [28.0, 187.0], [29.0, 220.0], [30.0, 148.0], [31.0, 166.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 34.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.6166666666666667, "minX": 1.7284899E12, "maxY": 16.833333333333332, "series": [{"data": [[1.72850034E12, 16.033333333333335], [1.72849146E12, 5.25], [1.7284947E12, 10.616666666666667], [1.72849692E12, 13.45], [1.72849368E12, 10.683333333333334], [1.72849812E12, 13.983333333333333], [1.72849266E12, 5.066666666666666], [1.7284959E12, 9.516666666666667], [1.72849914E12, 13.95], [1.72849488E12, 9.566666666666666], [1.72849044E12, 5.6], [1.7284971E12, 13.75], [1.72849164E12, 5.083333333333333], [1.72849386E12, 10.383333333333333], [1.72849608E12, 9.566666666666666], [1.7284983E12, 14.033333333333333], [1.72850052E12, 15.833333333333334], [1.72849932E12, 16.5], [1.72849062E12, 5.4], [1.72849284E12, 5.166666666666667], [1.72849506E12, 9.416666666666666], [1.72849728E12, 13.816666666666666], [1.72849758E12, 14.45], [1.728501E12, 16.433333333333334], [1.7284899E12, 0.6166666666666667], [1.72849212E12, 5.433333333333334], [1.72849434E12, 9.716666666666667], [1.72849656E12, 8.416666666666666], [1.72849878E12, 14.7], [1.72849008E12, 2.8], [1.7284998E12, 15.7], [1.7284911E12, 5.333333333333333], [1.72849332E12, 3.3666666666666667], [1.72849554E12, 10.183333333333334], [1.72849776E12, 13.733333333333333], [1.72849128E12, 5.033333333333333], [1.72849452E12, 10.183333333333334], [1.72849794E12, 14.533333333333333], [1.72850016E12, 16.066666666666666], [1.72850118E12, 15.6], [1.7284923E12, 5.433333333333334], [1.72849674E12, 13.85], [1.72849572E12, 9.3], [1.72849896E12, 13.883333333333333], [1.72849026E12, 2.533333333333333], [1.72849248E12, 5.25], [1.7284935E12, 10.516666666666667], [1.72849998E12, 16.15], [1.72849338E12, 3.95], [1.72849662E12, 4.633333333333334], [1.72849116E12, 4.833333333333333], [1.7284956E12, 10.116666666666667], [1.72850004E12, 15.383333333333333], [1.72849782E12, 13.55], [1.72850106E12, 15.133333333333333], [1.72849884E12, 14.133333333333333], [1.7284968E12, 13.833333333333334], [1.72849014E12, 2.65], [1.72849236E12, 5.216666666666667], [1.72849458E12, 9.883333333333333], [1.7284992E12, 9.933333333333334], [1.72849032E12, 2.216666666666667], [1.72849578E12, 10.65], [1.72850022E12, 16.766666666666666], [1.72849134E12, 5.3], [1.72849356E12, 11.033333333333333], [1.72849152E12, 5.566666666666666], [1.72849476E12, 10.016666666666667], [1.728498E12, 13.45], [1.72849698E12, 12.866666666666667], [1.72849254E12, 5.85], [1.72849902E12, 14.116666666666667], [1.72850124E12, 16.7], [1.7284908E12, 5.25], [1.72849968E12, 16.083333333333332], [1.72849404E12, 9.933333333333334], [1.72849182E12, 5.466666666666667], [1.72849626E12, 9.85], [1.7285007E12, 15.433333333333334], [1.72849524E12, 10.3], [1.72849848E12, 14.55], [1.728492E12, 5.066666666666666], [1.72849302E12, 5.283333333333333], [1.72849746E12, 13.816666666666666], [1.7284995E12, 16.3], [1.72849098E12, 5.65], [1.7284932E12, 6.083333333333333], [1.72849986E12, 16.033333333333335], [1.72849422E12, 10.55], [1.72849644E12, 9.233333333333333], [1.72849218E12, 5.066666666666666], [1.72849542E12, 9.983333333333333], [1.72849764E12, 14.4], [1.72849866E12, 14.116666666666667], [1.72850088E12, 15.916666666666666], [1.72848996E12, 2.8333333333333335], [1.7284944E12, 9.966666666666667], [1.72849872E12, 14.133333333333333], [1.72849086E12, 5.483333333333333], [1.72849308E12, 5.533333333333333], [1.7284953E12, 9.516666666666667], [1.72849752E12, 14.2], [1.72849974E12, 15.333333333333334], [1.72849104E12, 5.133333333333334], [1.72849428E12, 9.85], [1.72849206E12, 5.55], [1.7284965E12, 8.2], [1.72849854E12, 14.85], [1.72850076E12, 16.416666666666668], [1.72849548E12, 10.1], [1.7284989E12, 15.133333333333333], [1.72850112E12, 15.9], [1.72849002E12, 2.9], [1.72849224E12, 5.75], [1.72849326E12, 5.783333333333333], [1.7284977E12, 13.583333333333334], [1.72849992E12, 15.916666666666666], [1.72849122E12, 4.983333333333333], [1.72849344E12, 9.533333333333333], [1.72849446E12, 9.85], [1.72849668E12, 10.3], [1.72850094E12, 16.433333333333334], [1.72849272E12, 5.183333333333334], [1.72849938E12, 16.0], [1.7284905E12, 5.416666666666667], [1.72849374E12, 10.383333333333333], [1.72849596E12, 9.9], [1.7284917E12, 5.35], [1.72849494E12, 9.583333333333334], [1.72849716E12, 13.116666666666667], [1.72849818E12, 14.866666666666667], [1.7285004E12, 15.3], [1.72849392E12, 10.066666666666666], [1.7284929E12, 5.8], [1.72849614E12, 9.85], [1.72849068E12, 5.35], [1.72849512E12, 9.483333333333333], [1.72849956E12, 16.833333333333332], [1.72849734E12, 14.166666666666666], [1.72850058E12, 14.733333333333333], [1.72849836E12, 14.433333333333334], [1.72849188E12, 5.883333333333334], [1.7284941E12, 10.35], [1.72849632E12, 9.8], [1.728495E12, 9.216666666666667], [1.72849176E12, 5.583333333333333], [1.72849842E12, 14.3], [1.72850064E12, 16.333333333333332], [1.72849278E12, 5.1], [1.72849722E12, 14.216666666666667], [1.72849944E12, 15.766666666666667], [1.72849074E12, 4.983333333333333], [1.72849296E12, 5.0], [1.72849398E12, 10.6], [1.7284962E12, 9.433333333333334], [1.72850046E12, 15.983333333333333], [1.72849194E12, 5.65], [1.72850082E12, 16.233333333333334], [1.72849518E12, 9.733333333333333], [1.7284974E12, 15.0], [1.72849416E12, 10.2], [1.7284986E12, 13.616666666666667], [1.72849314E12, 5.433333333333334], [1.72849638E12, 9.733333333333333], [1.72849962E12, 16.0], [1.72849092E12, 5.316666666666666], [1.72849536E12, 9.9], [1.7285013E12, 4.166666666666667], [1.72849242E12, 5.566666666666666], [1.72849566E12, 10.933333333333334], [1.72849908E12, 13.733333333333333], [1.7284902E12, 2.8666666666666667], [1.72849464E12, 10.466666666666667], [1.72849362E12, 10.183333333333334], [1.72849686E12, 13.6], [1.7285001E12, 15.366666666666667], [1.7284914E12, 5.566666666666666], [1.72849788E12, 14.916666666666666], [1.72849584E12, 9.85], [1.72849824E12, 14.416666666666666], [1.72849482E12, 9.2], [1.72849704E12, 14.1], [1.72849926E12, 3.8], [1.72849038E12, 4.6], [1.7284926E12, 5.75], [1.72849056E12, 5.366666666666666], [1.7284938E12, 10.083333333333334], [1.72849158E12, 5.183333333333334], [1.72849602E12, 9.616666666666667], [1.72849806E12, 15.116666666666667], [1.72850028E12, 16.5]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7285013E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.5833333333333334, "minX": 1.7284899E12, "maxY": 16.833333333333332, "series": [{"data": [[1.72850034E12, 16.033333333333335], [1.72849146E12, 5.25], [1.7284947E12, 10.616666666666667], [1.72849692E12, 13.45], [1.72849368E12, 10.683333333333334], [1.72849812E12, 13.983333333333333], [1.72849266E12, 5.066666666666666], [1.7284959E12, 9.516666666666667], [1.72849914E12, 13.966666666666667], [1.72849488E12, 9.566666666666666], [1.72849044E12, 5.6], [1.7284971E12, 13.75], [1.72849164E12, 5.083333333333333], [1.72849386E12, 10.383333333333333], [1.72849608E12, 9.566666666666666], [1.7284983E12, 14.033333333333333], [1.72850052E12, 15.833333333333334], [1.72849932E12, 16.5], [1.72849062E12, 5.4], [1.72849284E12, 5.166666666666667], [1.72849506E12, 9.416666666666666], [1.72849728E12, 13.816666666666666], [1.72849758E12, 14.45], [1.728501E12, 16.433333333333334], [1.7284899E12, 0.5833333333333334], [1.72849212E12, 5.433333333333334], [1.72849434E12, 9.716666666666667], [1.72849656E12, 8.433333333333334], [1.72849878E12, 14.7], [1.72849008E12, 2.8], [1.7284998E12, 15.7], [1.7284911E12, 5.333333333333333], [1.72849332E12, 3.4166666666666665], [1.72849554E12, 10.183333333333334], [1.72849776E12, 13.733333333333333], [1.72849128E12, 5.033333333333333], [1.72849452E12, 10.183333333333334], [1.72849794E12, 14.533333333333333], [1.72850016E12, 16.066666666666666], [1.72850118E12, 15.6], [1.7284923E12, 5.433333333333334], [1.72849674E12, 13.85], [1.72849572E12, 9.3], [1.72849896E12, 13.883333333333333], [1.72849026E12, 2.533333333333333], [1.72849248E12, 5.25], [1.7284935E12, 10.516666666666667], [1.72849998E12, 16.15], [1.72849338E12, 3.8333333333333335], [1.72849662E12, 4.7], [1.72849116E12, 4.833333333333333], [1.7284956E12, 10.116666666666667], [1.72850004E12, 15.383333333333333], [1.72849782E12, 13.55], [1.72850106E12, 15.133333333333333], [1.72849884E12, 14.133333333333333], [1.7284968E12, 13.833333333333334], [1.72849014E12, 2.65], [1.72849236E12, 5.216666666666667], [1.72849458E12, 9.883333333333333], [1.7284992E12, 10.066666666666666], [1.72849032E12, 2.2333333333333334], [1.72849578E12, 10.65], [1.72850022E12, 16.766666666666666], [1.72849134E12, 5.3], [1.72849356E12, 11.033333333333333], [1.72849152E12, 5.566666666666666], [1.72849476E12, 10.016666666666667], [1.728498E12, 13.45], [1.72849698E12, 12.866666666666667], [1.72849254E12, 5.85], [1.72849902E12, 14.116666666666667], [1.72850124E12, 16.783333333333335], [1.7284908E12, 5.25], [1.72849968E12, 16.083333333333332], [1.72849404E12, 9.933333333333334], [1.72849182E12, 5.466666666666667], [1.72849626E12, 9.85], [1.7285007E12, 15.433333333333334], [1.72849524E12, 10.3], [1.72849848E12, 14.55], [1.728492E12, 5.066666666666666], [1.72849302E12, 5.283333333333333], [1.72849746E12, 13.816666666666666], [1.7284995E12, 16.3], [1.72849098E12, 5.65], [1.7284932E12, 6.083333333333333], [1.72849986E12, 16.033333333333335], [1.72849422E12, 10.55], [1.72849644E12, 9.25], [1.72849218E12, 5.066666666666666], [1.72849542E12, 9.983333333333333], [1.72849764E12, 14.4], [1.72849866E12, 14.116666666666667], [1.72850088E12, 15.916666666666666], [1.72848996E12, 2.8333333333333335], [1.7284944E12, 9.966666666666667], [1.72849872E12, 14.133333333333333], [1.72849086E12, 5.483333333333333], [1.72849308E12, 5.533333333333333], [1.7284953E12, 9.516666666666667], [1.72849752E12, 14.2], [1.72849974E12, 15.333333333333334], [1.72849104E12, 5.133333333333334], [1.72849428E12, 9.85], [1.72849206E12, 5.55], [1.7284965E12, 8.2], [1.72849854E12, 14.85], [1.72850076E12, 16.416666666666668], [1.72849548E12, 10.1], [1.7284989E12, 15.133333333333333], [1.72850112E12, 15.9], [1.72849002E12, 2.9], [1.72849224E12, 5.75], [1.72849326E12, 5.783333333333333], [1.7284977E12, 13.583333333333334], [1.72849992E12, 15.916666666666666], [1.72849122E12, 4.983333333333333], [1.72849344E12, 9.533333333333333], [1.72849446E12, 9.85], [1.72849668E12, 10.133333333333333], [1.72850094E12, 16.433333333333334], [1.72849272E12, 5.183333333333334], [1.72849938E12, 16.0], [1.7284905E12, 5.416666666666667], [1.72849374E12, 10.383333333333333], [1.72849596E12, 9.9], [1.7284917E12, 5.35], [1.72849494E12, 9.583333333333334], [1.72849716E12, 13.116666666666667], [1.72849818E12, 14.866666666666667], [1.7285004E12, 15.3], [1.72849392E12, 10.066666666666666], [1.7284929E12, 5.8], [1.72849614E12, 9.85], [1.72849068E12, 5.35], [1.72849512E12, 9.483333333333333], [1.72849956E12, 16.833333333333332], [1.72849734E12, 14.166666666666666], [1.72850058E12, 14.733333333333333], [1.72849836E12, 14.433333333333334], [1.72849188E12, 5.883333333333334], [1.7284941E12, 10.35], [1.72849632E12, 9.8], [1.728495E12, 9.216666666666667], [1.72849176E12, 5.583333333333333], [1.72849842E12, 14.3], [1.72850064E12, 16.333333333333332], [1.72849278E12, 5.1], [1.72849722E12, 14.216666666666667], [1.72849944E12, 15.766666666666667], [1.72849074E12, 4.983333333333333], [1.72849296E12, 5.0], [1.72849398E12, 10.6], [1.7284962E12, 9.433333333333334], [1.72850046E12, 15.983333333333333], [1.72849194E12, 5.65], [1.72850082E12, 16.233333333333334], [1.72849518E12, 9.733333333333333], [1.7284974E12, 15.0], [1.72849416E12, 10.2], [1.7284986E12, 13.616666666666667], [1.72849314E12, 5.433333333333334], [1.72849638E12, 9.733333333333333], [1.72849962E12, 16.0], [1.72849092E12, 5.316666666666666], [1.72849536E12, 9.9], [1.7285013E12, 4.35], [1.72849242E12, 5.566666666666666], [1.72849566E12, 10.933333333333334], [1.72849908E12, 13.733333333333333], [1.7284902E12, 2.8666666666666667], [1.72849464E12, 10.466666666666667], [1.72849362E12, 10.183333333333334], [1.72849686E12, 13.6], [1.7285001E12, 15.366666666666667], [1.7284914E12, 5.566666666666666], [1.72849788E12, 14.916666666666666], [1.72849584E12, 9.85], [1.72849824E12, 14.416666666666666], [1.72849482E12, 9.2], [1.72849704E12, 14.1], [1.72849926E12, 3.5833333333333335], [1.72849038E12, 4.55], [1.7284926E12, 5.75], [1.72849056E12, 5.366666666666666], [1.7284938E12, 10.083333333333334], [1.72849158E12, 5.183333333333334], [1.72849602E12, 9.616666666666667], [1.72849806E12, 15.116666666666667], [1.72850028E12, 16.5]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7285013E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5833333333333334, "minX": 1.7284899E12, "maxY": 16.833333333333332, "series": [{"data": [[1.72850034E12, 16.033333333333335], [1.72849146E12, 5.25], [1.7284947E12, 10.616666666666667], [1.72849692E12, 13.45], [1.72849368E12, 10.683333333333334], [1.72849812E12, 13.983333333333333], [1.72849266E12, 5.066666666666666], [1.7284959E12, 9.516666666666667], [1.72849914E12, 13.966666666666667], [1.72849488E12, 9.566666666666666], [1.72849044E12, 5.6], [1.7284971E12, 13.75], [1.72849164E12, 5.083333333333333], [1.72849386E12, 10.383333333333333], [1.72849608E12, 9.566666666666666], [1.7284983E12, 14.033333333333333], [1.72850052E12, 15.833333333333334], [1.72849932E12, 16.5], [1.72849062E12, 5.4], [1.72849284E12, 5.166666666666667], [1.72849506E12, 9.416666666666666], [1.72849728E12, 13.816666666666666], [1.72849758E12, 14.45], [1.728501E12, 16.433333333333334], [1.7284899E12, 0.5833333333333334], [1.72849212E12, 5.433333333333334], [1.72849434E12, 9.716666666666667], [1.72849656E12, 8.433333333333334], [1.72849878E12, 14.7], [1.72849008E12, 2.8], [1.7284998E12, 15.7], [1.7284911E12, 5.333333333333333], [1.72849332E12, 3.4166666666666665], [1.72849554E12, 10.183333333333334], [1.72849776E12, 13.733333333333333], [1.72849128E12, 5.033333333333333], [1.72849452E12, 10.183333333333334], [1.72849794E12, 14.533333333333333], [1.72850016E12, 16.066666666666666], [1.72850118E12, 15.6], [1.7284923E12, 5.433333333333334], [1.72849674E12, 13.85], [1.72849572E12, 9.3], [1.72849896E12, 13.883333333333333], [1.72849026E12, 2.533333333333333], [1.72849248E12, 5.25], [1.7284935E12, 10.516666666666667], [1.72849998E12, 16.15], [1.72849338E12, 3.8333333333333335], [1.72849662E12, 4.7], [1.72849116E12, 4.833333333333333], [1.7284956E12, 10.116666666666667], [1.72850004E12, 15.383333333333333], [1.72849782E12, 13.55], [1.72850106E12, 15.133333333333333], [1.72849884E12, 14.133333333333333], [1.7284968E12, 13.833333333333334], [1.72849014E12, 2.65], [1.72849236E12, 5.216666666666667], [1.72849458E12, 9.883333333333333], [1.7284992E12, 10.066666666666666], [1.72849032E12, 2.2333333333333334], [1.72849578E12, 10.65], [1.72850022E12, 16.766666666666666], [1.72849134E12, 5.3], [1.72849356E12, 11.033333333333333], [1.72849152E12, 5.566666666666666], [1.72849476E12, 10.016666666666667], [1.728498E12, 13.45], [1.72849698E12, 12.866666666666667], [1.72849254E12, 5.85], [1.72849902E12, 14.116666666666667], [1.72850124E12, 16.783333333333335], [1.7284908E12, 5.25], [1.72849968E12, 16.083333333333332], [1.72849404E12, 9.933333333333334], [1.72849182E12, 5.466666666666667], [1.72849626E12, 9.85], [1.7285007E12, 15.433333333333334], [1.72849524E12, 10.3], [1.72849848E12, 14.55], [1.728492E12, 5.066666666666666], [1.72849302E12, 5.283333333333333], [1.72849746E12, 13.816666666666666], [1.7284995E12, 16.3], [1.72849098E12, 5.65], [1.7284932E12, 6.083333333333333], [1.72849986E12, 16.033333333333335], [1.72849422E12, 10.55], [1.72849644E12, 9.25], [1.72849218E12, 5.066666666666666], [1.72849542E12, 9.983333333333333], [1.72849764E12, 14.4], [1.72849866E12, 14.116666666666667], [1.72850088E12, 15.916666666666666], [1.72848996E12, 2.8333333333333335], [1.7284944E12, 9.966666666666667], [1.72849872E12, 14.133333333333333], [1.72849086E12, 5.483333333333333], [1.72849308E12, 5.533333333333333], [1.7284953E12, 9.516666666666667], [1.72849752E12, 14.2], [1.72849974E12, 15.333333333333334], [1.72849104E12, 5.133333333333334], [1.72849428E12, 9.85], [1.72849206E12, 5.55], [1.7284965E12, 8.2], [1.72849854E12, 14.85], [1.72850076E12, 16.416666666666668], [1.72849548E12, 10.1], [1.7284989E12, 15.133333333333333], [1.72850112E12, 15.9], [1.72849002E12, 2.9], [1.72849224E12, 5.75], [1.72849326E12, 5.783333333333333], [1.7284977E12, 13.583333333333334], [1.72849992E12, 15.916666666666666], [1.72849122E12, 4.983333333333333], [1.72849344E12, 9.533333333333333], [1.72849446E12, 9.85], [1.72849668E12, 10.133333333333333], [1.72850094E12, 16.433333333333334], [1.72849272E12, 5.183333333333334], [1.72849938E12, 16.0], [1.7284905E12, 5.416666666666667], [1.72849374E12, 10.383333333333333], [1.72849596E12, 9.9], [1.7284917E12, 5.35], [1.72849494E12, 9.583333333333334], [1.72849716E12, 13.116666666666667], [1.72849818E12, 14.866666666666667], [1.7285004E12, 15.3], [1.72849392E12, 10.066666666666666], [1.7284929E12, 5.8], [1.72849614E12, 9.85], [1.72849068E12, 5.35], [1.72849512E12, 9.483333333333333], [1.72849956E12, 16.833333333333332], [1.72849734E12, 14.166666666666666], [1.72850058E12, 14.733333333333333], [1.72849836E12, 14.433333333333334], [1.72849188E12, 5.883333333333334], [1.7284941E12, 10.35], [1.72849632E12, 9.8], [1.728495E12, 9.216666666666667], [1.72849176E12, 5.583333333333333], [1.72849842E12, 14.3], [1.72850064E12, 16.333333333333332], [1.72849278E12, 5.1], [1.72849722E12, 14.216666666666667], [1.72849944E12, 15.766666666666667], [1.72849074E12, 4.983333333333333], [1.72849296E12, 5.0], [1.72849398E12, 10.6], [1.7284962E12, 9.433333333333334], [1.72850046E12, 15.983333333333333], [1.72849194E12, 5.65], [1.72850082E12, 16.233333333333334], [1.72849518E12, 9.733333333333333], [1.7284974E12, 15.0], [1.72849416E12, 10.2], [1.7284986E12, 13.616666666666667], [1.72849314E12, 5.433333333333334], [1.72849638E12, 9.733333333333333], [1.72849962E12, 16.0], [1.72849092E12, 5.316666666666666], [1.72849536E12, 9.9], [1.7285013E12, 4.35], [1.72849242E12, 5.566666666666666], [1.72849566E12, 10.933333333333334], [1.72849908E12, 13.733333333333333], [1.7284902E12, 2.8666666666666667], [1.72849464E12, 10.466666666666667], [1.72849362E12, 10.183333333333334], [1.72849686E12, 13.6], [1.7285001E12, 15.366666666666667], [1.7284914E12, 5.566666666666666], [1.72849788E12, 14.916666666666666], [1.72849584E12, 9.85], [1.72849824E12, 14.416666666666666], [1.72849482E12, 9.2], [1.72849704E12, 14.1], [1.72849926E12, 3.5833333333333335], [1.72849038E12, 4.55], [1.7284926E12, 5.75], [1.72849056E12, 5.366666666666666], [1.7284938E12, 10.083333333333334], [1.72849158E12, 5.183333333333334], [1.72849602E12, 9.616666666666667], [1.72849806E12, 15.116666666666667], [1.72850028E12, 16.5]], "isOverall": false, "label": "getmap-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7285013E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.5833333333333334, "minX": 1.7284899E12, "maxY": 16.833333333333332, "series": [{"data": [[1.72850034E12, 16.033333333333335], [1.72849146E12, 5.25], [1.7284947E12, 10.616666666666667], [1.72849692E12, 13.45], [1.72849368E12, 10.683333333333334], [1.72849812E12, 13.983333333333333], [1.72849266E12, 5.066666666666666], [1.7284959E12, 9.516666666666667], [1.72849914E12, 13.966666666666667], [1.72849488E12, 9.566666666666666], [1.72849044E12, 5.6], [1.7284971E12, 13.75], [1.72849164E12, 5.083333333333333], [1.72849386E12, 10.383333333333333], [1.72849608E12, 9.566666666666666], [1.7284983E12, 14.033333333333333], [1.72850052E12, 15.833333333333334], [1.72849932E12, 16.5], [1.72849062E12, 5.4], [1.72849284E12, 5.166666666666667], [1.72849506E12, 9.416666666666666], [1.72849728E12, 13.816666666666666], [1.72849758E12, 14.45], [1.728501E12, 16.433333333333334], [1.7284899E12, 0.5833333333333334], [1.72849212E12, 5.433333333333334], [1.72849434E12, 9.716666666666667], [1.72849656E12, 8.433333333333334], [1.72849878E12, 14.7], [1.72849008E12, 2.8], [1.7284998E12, 15.7], [1.7284911E12, 5.333333333333333], [1.72849332E12, 3.4166666666666665], [1.72849554E12, 10.183333333333334], [1.72849776E12, 13.733333333333333], [1.72849128E12, 5.033333333333333], [1.72849452E12, 10.183333333333334], [1.72849794E12, 14.533333333333333], [1.72850016E12, 16.066666666666666], [1.72850118E12, 15.6], [1.7284923E12, 5.433333333333334], [1.72849674E12, 13.85], [1.72849572E12, 9.3], [1.72849896E12, 13.883333333333333], [1.72849026E12, 2.533333333333333], [1.72849248E12, 5.25], [1.7284935E12, 10.516666666666667], [1.72849998E12, 16.15], [1.72849338E12, 3.8333333333333335], [1.72849662E12, 4.7], [1.72849116E12, 4.833333333333333], [1.7284956E12, 10.116666666666667], [1.72850004E12, 15.383333333333333], [1.72849782E12, 13.55], [1.72850106E12, 15.133333333333333], [1.72849884E12, 14.133333333333333], [1.7284968E12, 13.833333333333334], [1.72849014E12, 2.65], [1.72849236E12, 5.216666666666667], [1.72849458E12, 9.883333333333333], [1.7284992E12, 10.066666666666666], [1.72849032E12, 2.2333333333333334], [1.72849578E12, 10.65], [1.72850022E12, 16.766666666666666], [1.72849134E12, 5.3], [1.72849356E12, 11.033333333333333], [1.72849152E12, 5.566666666666666], [1.72849476E12, 10.016666666666667], [1.728498E12, 13.45], [1.72849698E12, 12.866666666666667], [1.72849254E12, 5.85], [1.72849902E12, 14.116666666666667], [1.72850124E12, 16.783333333333335], [1.7284908E12, 5.25], [1.72849968E12, 16.083333333333332], [1.72849404E12, 9.933333333333334], [1.72849182E12, 5.466666666666667], [1.72849626E12, 9.85], [1.7285007E12, 15.433333333333334], [1.72849524E12, 10.3], [1.72849848E12, 14.55], [1.728492E12, 5.066666666666666], [1.72849302E12, 5.283333333333333], [1.72849746E12, 13.816666666666666], [1.7284995E12, 16.3], [1.72849098E12, 5.65], [1.7284932E12, 6.083333333333333], [1.72849986E12, 16.033333333333335], [1.72849422E12, 10.55], [1.72849644E12, 9.25], [1.72849218E12, 5.066666666666666], [1.72849542E12, 9.983333333333333], [1.72849764E12, 14.4], [1.72849866E12, 14.116666666666667], [1.72850088E12, 15.916666666666666], [1.72848996E12, 2.8333333333333335], [1.7284944E12, 9.966666666666667], [1.72849872E12, 14.133333333333333], [1.72849086E12, 5.483333333333333], [1.72849308E12, 5.533333333333333], [1.7284953E12, 9.516666666666667], [1.72849752E12, 14.2], [1.72849974E12, 15.333333333333334], [1.72849104E12, 5.133333333333334], [1.72849428E12, 9.85], [1.72849206E12, 5.55], [1.7284965E12, 8.2], [1.72849854E12, 14.85], [1.72850076E12, 16.416666666666668], [1.72849548E12, 10.1], [1.7284989E12, 15.133333333333333], [1.72850112E12, 15.9], [1.72849002E12, 2.9], [1.72849224E12, 5.75], [1.72849326E12, 5.783333333333333], [1.7284977E12, 13.583333333333334], [1.72849992E12, 15.916666666666666], [1.72849122E12, 4.983333333333333], [1.72849344E12, 9.533333333333333], [1.72849446E12, 9.85], [1.72849668E12, 10.133333333333333], [1.72850094E12, 16.433333333333334], [1.72849272E12, 5.183333333333334], [1.72849938E12, 16.0], [1.7284905E12, 5.416666666666667], [1.72849374E12, 10.383333333333333], [1.72849596E12, 9.9], [1.7284917E12, 5.35], [1.72849494E12, 9.583333333333334], [1.72849716E12, 13.116666666666667], [1.72849818E12, 14.866666666666667], [1.7285004E12, 15.3], [1.72849392E12, 10.066666666666666], [1.7284929E12, 5.8], [1.72849614E12, 9.85], [1.72849068E12, 5.35], [1.72849512E12, 9.483333333333333], [1.72849956E12, 16.833333333333332], [1.72849734E12, 14.166666666666666], [1.72850058E12, 14.733333333333333], [1.72849836E12, 14.433333333333334], [1.72849188E12, 5.883333333333334], [1.7284941E12, 10.35], [1.72849632E12, 9.8], [1.728495E12, 9.216666666666667], [1.72849176E12, 5.583333333333333], [1.72849842E12, 14.3], [1.72850064E12, 16.333333333333332], [1.72849278E12, 5.1], [1.72849722E12, 14.216666666666667], [1.72849944E12, 15.766666666666667], [1.72849074E12, 4.983333333333333], [1.72849296E12, 5.0], [1.72849398E12, 10.6], [1.7284962E12, 9.433333333333334], [1.72850046E12, 15.983333333333333], [1.72849194E12, 5.65], [1.72850082E12, 16.233333333333334], [1.72849518E12, 9.733333333333333], [1.7284974E12, 15.0], [1.72849416E12, 10.2], [1.7284986E12, 13.616666666666667], [1.72849314E12, 5.433333333333334], [1.72849638E12, 9.733333333333333], [1.72849962E12, 16.0], [1.72849092E12, 5.316666666666666], [1.72849536E12, 9.9], [1.7285013E12, 4.35], [1.72849242E12, 5.566666666666666], [1.72849566E12, 10.933333333333334], [1.72849908E12, 13.733333333333333], [1.7284902E12, 2.8666666666666667], [1.72849464E12, 10.466666666666667], [1.72849362E12, 10.183333333333334], [1.72849686E12, 13.6], [1.7285001E12, 15.366666666666667], [1.7284914E12, 5.566666666666666], [1.72849788E12, 14.916666666666666], [1.72849584E12, 9.85], [1.72849824E12, 14.416666666666666], [1.72849482E12, 9.2], [1.72849704E12, 14.1], [1.72849926E12, 3.5833333333333335], [1.72849038E12, 4.55], [1.7284926E12, 5.75], [1.72849056E12, 5.366666666666666], [1.7284938E12, 10.083333333333334], [1.72849158E12, 5.183333333333334], [1.72849602E12, 9.616666666666667], [1.72849806E12, 15.116666666666667], [1.72850028E12, 16.5]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7285013E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

