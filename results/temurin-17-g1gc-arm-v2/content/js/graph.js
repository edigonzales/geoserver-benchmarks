/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 58.0, "minX": 0.0, "maxY": 5289.0, "series": [{"data": [[0.0, 58.0], [0.1, 76.0], [0.2, 80.0], [0.3, 82.0], [0.4, 85.0], [0.5, 87.0], [0.6, 88.0], [0.7, 90.0], [0.8, 91.0], [0.9, 92.0], [1.0, 93.0], [1.1, 95.0], [1.2, 96.0], [1.3, 97.0], [1.4, 98.0], [1.5, 99.0], [1.6, 100.0], [1.7, 101.0], [1.8, 101.0], [1.9, 102.0], [2.0, 103.0], [2.1, 104.0], [2.2, 104.0], [2.3, 105.0], [2.4, 106.0], [2.5, 107.0], [2.6, 107.0], [2.7, 108.0], [2.8, 109.0], [2.9, 109.0], [3.0, 110.0], [3.1, 111.0], [3.2, 111.0], [3.3, 112.0], [3.4, 112.0], [3.5, 113.0], [3.6, 114.0], [3.7, 114.0], [3.8, 115.0], [3.9, 115.0], [4.0, 116.0], [4.1, 116.0], [4.2, 117.0], [4.3, 118.0], [4.4, 118.0], [4.5, 119.0], [4.6, 119.0], [4.7, 120.0], [4.8, 120.0], [4.9, 121.0], [5.0, 121.0], [5.1, 122.0], [5.2, 122.0], [5.3, 123.0], [5.4, 123.0], [5.5, 124.0], [5.6, 124.0], [5.7, 124.0], [5.8, 125.0], [5.9, 125.0], [6.0, 126.0], [6.1, 126.0], [6.2, 127.0], [6.3, 127.0], [6.4, 128.0], [6.5, 128.0], [6.6, 129.0], [6.7, 129.0], [6.8, 130.0], [6.9, 130.0], [7.0, 130.0], [7.1, 131.0], [7.2, 131.0], [7.3, 132.0], [7.4, 132.0], [7.5, 133.0], [7.6, 133.0], [7.7, 133.0], [7.8, 134.0], [7.9, 134.0], [8.0, 135.0], [8.1, 135.0], [8.2, 135.0], [8.3, 136.0], [8.4, 136.0], [8.5, 137.0], [8.6, 137.0], [8.7, 138.0], [8.8, 138.0], [8.9, 138.0], [9.0, 139.0], [9.1, 139.0], [9.2, 140.0], [9.3, 140.0], [9.4, 140.0], [9.5, 141.0], [9.6, 141.0], [9.7, 142.0], [9.8, 142.0], [9.9, 142.0], [10.0, 143.0], [10.1, 143.0], [10.2, 144.0], [10.3, 144.0], [10.4, 145.0], [10.5, 145.0], [10.6, 145.0], [10.7, 146.0], [10.8, 146.0], [10.9, 147.0], [11.0, 147.0], [11.1, 147.0], [11.2, 148.0], [11.3, 148.0], [11.4, 149.0], [11.5, 149.0], [11.6, 149.0], [11.7, 150.0], [11.8, 150.0], [11.9, 151.0], [12.0, 151.0], [12.1, 151.0], [12.2, 152.0], [12.3, 152.0], [12.4, 153.0], [12.5, 153.0], [12.6, 153.0], [12.7, 154.0], [12.8, 154.0], [12.9, 154.0], [13.0, 155.0], [13.1, 155.0], [13.2, 156.0], [13.3, 156.0], [13.4, 156.0], [13.5, 157.0], [13.6, 157.0], [13.7, 158.0], [13.8, 158.0], [13.9, 158.0], [14.0, 159.0], [14.1, 159.0], [14.2, 160.0], [14.3, 160.0], [14.4, 161.0], [14.5, 161.0], [14.6, 161.0], [14.7, 162.0], [14.8, 162.0], [14.9, 163.0], [15.0, 163.0], [15.1, 163.0], [15.2, 164.0], [15.3, 164.0], [15.4, 165.0], [15.5, 165.0], [15.6, 165.0], [15.7, 166.0], [15.8, 166.0], [15.9, 167.0], [16.0, 167.0], [16.1, 168.0], [16.2, 168.0], [16.3, 168.0], [16.4, 169.0], [16.5, 169.0], [16.6, 170.0], [16.7, 170.0], [16.8, 171.0], [16.9, 171.0], [17.0, 171.0], [17.1, 172.0], [17.2, 172.0], [17.3, 173.0], [17.4, 173.0], [17.5, 173.0], [17.6, 174.0], [17.7, 174.0], [17.8, 175.0], [17.9, 175.0], [18.0, 176.0], [18.1, 176.0], [18.2, 176.0], [18.3, 177.0], [18.4, 177.0], [18.5, 178.0], [18.6, 178.0], [18.7, 179.0], [18.8, 179.0], [18.9, 179.0], [19.0, 180.0], [19.1, 180.0], [19.2, 181.0], [19.3, 181.0], [19.4, 182.0], [19.5, 182.0], [19.6, 182.0], [19.7, 183.0], [19.8, 183.0], [19.9, 184.0], [20.0, 184.0], [20.1, 185.0], [20.2, 185.0], [20.3, 186.0], [20.4, 186.0], [20.5, 186.0], [20.6, 187.0], [20.7, 187.0], [20.8, 188.0], [20.9, 188.0], [21.0, 189.0], [21.1, 189.0], [21.2, 190.0], [21.3, 190.0], [21.4, 190.0], [21.5, 191.0], [21.6, 191.0], [21.7, 192.0], [21.8, 192.0], [21.9, 193.0], [22.0, 193.0], [22.1, 194.0], [22.2, 194.0], [22.3, 195.0], [22.4, 195.0], [22.5, 196.0], [22.6, 196.0], [22.7, 197.0], [22.8, 197.0], [22.9, 198.0], [23.0, 198.0], [23.1, 199.0], [23.2, 199.0], [23.3, 200.0], [23.4, 200.0], [23.5, 201.0], [23.6, 201.0], [23.7, 202.0], [23.8, 202.0], [23.9, 203.0], [24.0, 203.0], [24.1, 204.0], [24.2, 204.0], [24.3, 205.0], [24.4, 205.0], [24.5, 206.0], [24.6, 206.0], [24.7, 207.0], [24.8, 207.0], [24.9, 208.0], [25.0, 209.0], [25.1, 209.0], [25.2, 210.0], [25.3, 210.0], [25.4, 211.0], [25.5, 211.0], [25.6, 212.0], [25.7, 212.0], [25.8, 213.0], [25.9, 213.0], [26.0, 214.0], [26.1, 215.0], [26.2, 215.0], [26.3, 216.0], [26.4, 217.0], [26.5, 217.0], [26.6, 218.0], [26.7, 218.0], [26.8, 219.0], [26.9, 219.0], [27.0, 220.0], [27.1, 220.0], [27.2, 221.0], [27.3, 222.0], [27.4, 222.0], [27.5, 223.0], [27.6, 224.0], [27.7, 224.0], [27.8, 225.0], [27.9, 225.0], [28.0, 226.0], [28.1, 227.0], [28.2, 227.0], [28.3, 228.0], [28.4, 229.0], [28.5, 229.0], [28.6, 230.0], [28.7, 230.0], [28.8, 231.0], [28.9, 232.0], [29.0, 233.0], [29.1, 233.0], [29.2, 234.0], [29.3, 235.0], [29.4, 235.0], [29.5, 236.0], [29.6, 237.0], [29.7, 238.0], [29.8, 238.0], [29.9, 239.0], [30.0, 240.0], [30.1, 241.0], [30.2, 241.0], [30.3, 242.0], [30.4, 243.0], [30.5, 243.0], [30.6, 244.0], [30.7, 245.0], [30.8, 246.0], [30.9, 246.0], [31.0, 247.0], [31.1, 248.0], [31.2, 249.0], [31.3, 249.0], [31.4, 250.0], [31.5, 251.0], [31.6, 252.0], [31.7, 253.0], [31.8, 254.0], [31.9, 254.0], [32.0, 255.0], [32.1, 256.0], [32.2, 257.0], [32.3, 258.0], [32.4, 259.0], [32.5, 260.0], [32.6, 261.0], [32.7, 262.0], [32.8, 263.0], [32.9, 264.0], [33.0, 265.0], [33.1, 266.0], [33.2, 267.0], [33.3, 268.0], [33.4, 268.0], [33.5, 269.0], [33.6, 270.0], [33.7, 271.0], [33.8, 272.0], [33.9, 273.0], [34.0, 274.0], [34.1, 276.0], [34.2, 277.0], [34.3, 278.0], [34.4, 279.0], [34.5, 280.0], [34.6, 281.0], [34.7, 282.0], [34.8, 283.0], [34.9, 284.0], [35.0, 285.0], [35.1, 287.0], [35.2, 288.0], [35.3, 289.0], [35.4, 290.0], [35.5, 292.0], [35.6, 293.0], [35.7, 294.0], [35.8, 295.0], [35.9, 296.0], [36.0, 298.0], [36.1, 299.0], [36.2, 300.0], [36.3, 302.0], [36.4, 303.0], [36.5, 304.0], [36.6, 306.0], [36.7, 308.0], [36.8, 309.0], [36.9, 311.0], [37.0, 312.0], [37.1, 314.0], [37.2, 315.0], [37.3, 317.0], [37.4, 319.0], [37.5, 320.0], [37.6, 321.0], [37.7, 323.0], [37.8, 325.0], [37.9, 326.0], [38.0, 328.0], [38.1, 330.0], [38.2, 332.0], [38.3, 333.0], [38.4, 335.0], [38.5, 337.0], [38.6, 339.0], [38.7, 341.0], [38.8, 343.0], [38.9, 345.0], [39.0, 348.0], [39.1, 350.0], [39.2, 352.0], [39.3, 354.0], [39.4, 356.0], [39.5, 358.0], [39.6, 360.0], [39.7, 363.0], [39.8, 365.0], [39.9, 368.0], [40.0, 370.0], [40.1, 372.0], [40.2, 375.0], [40.3, 378.0], [40.4, 380.0], [40.5, 383.0], [40.6, 386.0], [40.7, 389.0], [40.8, 391.0], [40.9, 394.0], [41.0, 397.0], [41.1, 400.0], [41.2, 403.0], [41.3, 406.0], [41.4, 409.0], [41.5, 412.0], [41.6, 415.0], [41.7, 417.0], [41.8, 421.0], [41.9, 424.0], [42.0, 428.0], [42.1, 432.0], [42.2, 435.0], [42.3, 439.0], [42.4, 442.0], [42.5, 445.0], [42.6, 449.0], [42.7, 453.0], [42.8, 457.0], [42.9, 461.0], [43.0, 465.0], [43.1, 469.0], [43.2, 473.0], [43.3, 477.0], [43.4, 481.0], [43.5, 485.0], [43.6, 489.0], [43.7, 493.0], [43.8, 498.0], [43.9, 503.0], [44.0, 507.0], [44.1, 512.0], [44.2, 517.0], [44.3, 522.0], [44.4, 527.0], [44.5, 532.0], [44.6, 537.0], [44.7, 542.0], [44.8, 547.0], [44.9, 553.0], [45.0, 558.0], [45.1, 563.0], [45.2, 569.0], [45.3, 573.0], [45.4, 578.0], [45.5, 584.0], [45.6, 589.0], [45.7, 594.0], [45.8, 598.0], [45.9, 603.0], [46.0, 608.0], [46.1, 613.0], [46.2, 618.0], [46.3, 623.0], [46.4, 628.0], [46.5, 633.0], [46.6, 638.0], [46.7, 643.0], [46.8, 648.0], [46.9, 652.0], [47.0, 658.0], [47.1, 663.0], [47.2, 668.0], [47.3, 672.0], [47.4, 677.0], [47.5, 682.0], [47.6, 686.0], [47.7, 691.0], [47.8, 696.0], [47.9, 701.0], [48.0, 705.0], [48.1, 709.0], [48.2, 713.0], [48.3, 717.0], [48.4, 721.0], [48.5, 725.0], [48.6, 728.0], [48.7, 733.0], [48.8, 737.0], [48.9, 740.0], [49.0, 745.0], [49.1, 749.0], [49.2, 753.0], [49.3, 756.0], [49.4, 760.0], [49.5, 764.0], [49.6, 768.0], [49.7, 772.0], [49.8, 775.0], [49.9, 779.0], [50.0, 783.0], [50.1, 786.0], [50.2, 791.0], [50.3, 794.0], [50.4, 797.0], [50.5, 800.0], [50.6, 803.0], [50.7, 806.0], [50.8, 810.0], [50.9, 813.0], [51.0, 816.0], [51.1, 819.0], [51.2, 822.0], [51.3, 826.0], [51.4, 829.0], [51.5, 832.0], [51.6, 835.0], [51.7, 838.0], [51.8, 841.0], [51.9, 844.0], [52.0, 847.0], [52.1, 850.0], [52.2, 853.0], [52.3, 856.0], [52.4, 859.0], [52.5, 862.0], [52.6, 865.0], [52.7, 868.0], [52.8, 871.0], [52.9, 874.0], [53.0, 877.0], [53.1, 880.0], [53.2, 883.0], [53.3, 886.0], [53.4, 889.0], [53.5, 892.0], [53.6, 895.0], [53.7, 898.0], [53.8, 901.0], [53.9, 904.0], [54.0, 907.0], [54.1, 909.0], [54.2, 912.0], [54.3, 914.0], [54.4, 917.0], [54.5, 920.0], [54.6, 923.0], [54.7, 925.0], [54.8, 928.0], [54.9, 931.0], [55.0, 934.0], [55.1, 936.0], [55.2, 939.0], [55.3, 942.0], [55.4, 944.0], [55.5, 947.0], [55.6, 950.0], [55.7, 953.0], [55.8, 955.0], [55.9, 958.0], [56.0, 960.0], [56.1, 963.0], [56.2, 965.0], [56.3, 968.0], [56.4, 971.0], [56.5, 973.0], [56.6, 976.0], [56.7, 978.0], [56.8, 981.0], [56.9, 983.0], [57.0, 986.0], [57.1, 989.0], [57.2, 991.0], [57.3, 994.0], [57.4, 996.0], [57.5, 998.0], [57.6, 1001.0], [57.7, 1004.0], [57.8, 1006.0], [57.9, 1008.0], [58.0, 1011.0], [58.1, 1013.0], [58.2, 1015.0], [58.3, 1018.0], [58.4, 1021.0], [58.5, 1023.0], [58.6, 1025.0], [58.7, 1027.0], [58.8, 1030.0], [58.9, 1032.0], [59.0, 1035.0], [59.1, 1038.0], [59.2, 1040.0], [59.3, 1042.0], [59.4, 1045.0], [59.5, 1047.0], [59.6, 1049.0], [59.7, 1052.0], [59.8, 1054.0], [59.9, 1056.0], [60.0, 1058.0], [60.1, 1061.0], [60.2, 1063.0], [60.3, 1065.0], [60.4, 1068.0], [60.5, 1070.0], [60.6, 1072.0], [60.7, 1074.0], [60.8, 1077.0], [60.9, 1080.0], [61.0, 1082.0], [61.1, 1084.0], [61.2, 1086.0], [61.3, 1089.0], [61.4, 1091.0], [61.5, 1093.0], [61.6, 1096.0], [61.7, 1098.0], [61.8, 1100.0], [61.9, 1102.0], [62.0, 1104.0], [62.1, 1106.0], [62.2, 1108.0], [62.3, 1110.0], [62.4, 1113.0], [62.5, 1115.0], [62.6, 1118.0], [62.7, 1120.0], [62.8, 1122.0], [62.9, 1124.0], [63.0, 1126.0], [63.1, 1129.0], [63.2, 1131.0], [63.3, 1133.0], [63.4, 1135.0], [63.5, 1138.0], [63.6, 1140.0], [63.7, 1142.0], [63.8, 1144.0], [63.9, 1147.0], [64.0, 1149.0], [64.1, 1151.0], [64.2, 1154.0], [64.3, 1157.0], [64.4, 1159.0], [64.5, 1161.0], [64.6, 1163.0], [64.7, 1166.0], [64.8, 1168.0], [64.9, 1170.0], [65.0, 1173.0], [65.1, 1175.0], [65.2, 1177.0], [65.3, 1180.0], [65.4, 1182.0], [65.5, 1184.0], [65.6, 1187.0], [65.7, 1189.0], [65.8, 1191.0], [65.9, 1194.0], [66.0, 1196.0], [66.1, 1199.0], [66.2, 1201.0], [66.3, 1203.0], [66.4, 1206.0], [66.5, 1208.0], [66.6, 1210.0], [66.7, 1213.0], [66.8, 1215.0], [66.9, 1217.0], [67.0, 1219.0], [67.1, 1221.0], [67.2, 1224.0], [67.3, 1226.0], [67.4, 1229.0], [67.5, 1231.0], [67.6, 1233.0], [67.7, 1235.0], [67.8, 1238.0], [67.9, 1240.0], [68.0, 1243.0], [68.1, 1245.0], [68.2, 1248.0], [68.3, 1250.0], [68.4, 1252.0], [68.5, 1255.0], [68.6, 1257.0], [68.7, 1259.0], [68.8, 1262.0], [68.9, 1264.0], [69.0, 1266.0], [69.1, 1268.0], [69.2, 1271.0], [69.3, 1273.0], [69.4, 1275.0], [69.5, 1277.0], [69.6, 1280.0], [69.7, 1282.0], [69.8, 1284.0], [69.9, 1287.0], [70.0, 1289.0], [70.1, 1291.0], [70.2, 1294.0], [70.3, 1296.0], [70.4, 1299.0], [70.5, 1301.0], [70.6, 1303.0], [70.7, 1306.0], [70.8, 1308.0], [70.9, 1310.0], [71.0, 1312.0], [71.1, 1314.0], [71.2, 1316.0], [71.3, 1319.0], [71.4, 1321.0], [71.5, 1323.0], [71.6, 1325.0], [71.7, 1327.0], [71.8, 1330.0], [71.9, 1332.0], [72.0, 1335.0], [72.1, 1337.0], [72.2, 1339.0], [72.3, 1342.0], [72.4, 1344.0], [72.5, 1346.0], [72.6, 1348.0], [72.7, 1351.0], [72.8, 1353.0], [72.9, 1356.0], [73.0, 1358.0], [73.1, 1360.0], [73.2, 1362.0], [73.3, 1365.0], [73.4, 1368.0], [73.5, 1370.0], [73.6, 1373.0], [73.7, 1376.0], [73.8, 1378.0], [73.9, 1380.0], [74.0, 1383.0], [74.1, 1385.0], [74.2, 1388.0], [74.3, 1390.0], [74.4, 1392.0], [74.5, 1395.0], [74.6, 1398.0], [74.7, 1400.0], [74.8, 1403.0], [74.9, 1405.0], [75.0, 1407.0], [75.1, 1410.0], [75.2, 1412.0], [75.3, 1415.0], [75.4, 1417.0], [75.5, 1420.0], [75.6, 1422.0], [75.7, 1425.0], [75.8, 1427.0], [75.9, 1429.0], [76.0, 1432.0], [76.1, 1435.0], [76.2, 1437.0], [76.3, 1440.0], [76.4, 1442.0], [76.5, 1445.0], [76.6, 1448.0], [76.7, 1450.0], [76.8, 1452.0], [76.9, 1455.0], [77.0, 1457.0], [77.1, 1460.0], [77.2, 1463.0], [77.3, 1466.0], [77.4, 1469.0], [77.5, 1471.0], [77.6, 1473.0], [77.7, 1476.0], [77.8, 1478.0], [77.9, 1481.0], [78.0, 1483.0], [78.1, 1486.0], [78.2, 1489.0], [78.3, 1492.0], [78.4, 1495.0], [78.5, 1498.0], [78.6, 1500.0], [78.7, 1503.0], [78.8, 1506.0], [78.9, 1508.0], [79.0, 1511.0], [79.1, 1514.0], [79.2, 1517.0], [79.3, 1519.0], [79.4, 1522.0], [79.5, 1525.0], [79.6, 1528.0], [79.7, 1530.0], [79.8, 1534.0], [79.9, 1536.0], [80.0, 1539.0], [80.1, 1542.0], [80.2, 1545.0], [80.3, 1548.0], [80.4, 1550.0], [80.5, 1553.0], [80.6, 1556.0], [80.7, 1558.0], [80.8, 1562.0], [80.9, 1564.0], [81.0, 1568.0], [81.1, 1571.0], [81.2, 1574.0], [81.3, 1577.0], [81.4, 1580.0], [81.5, 1582.0], [81.6, 1586.0], [81.7, 1589.0], [81.8, 1592.0], [81.9, 1595.0], [82.0, 1598.0], [82.1, 1600.0], [82.2, 1603.0], [82.3, 1606.0], [82.4, 1609.0], [82.5, 1611.0], [82.6, 1615.0], [82.7, 1619.0], [82.8, 1622.0], [82.9, 1625.0], [83.0, 1628.0], [83.1, 1632.0], [83.2, 1635.0], [83.3, 1638.0], [83.4, 1641.0], [83.5, 1645.0], [83.6, 1648.0], [83.7, 1652.0], [83.8, 1655.0], [83.9, 1659.0], [84.0, 1662.0], [84.1, 1665.0], [84.2, 1669.0], [84.3, 1672.0], [84.4, 1676.0], [84.5, 1679.0], [84.6, 1683.0], [84.7, 1686.0], [84.8, 1690.0], [84.9, 1693.0], [85.0, 1696.0], [85.1, 1700.0], [85.2, 1703.0], [85.3, 1707.0], [85.4, 1711.0], [85.5, 1714.0], [85.6, 1718.0], [85.7, 1721.0], [85.8, 1726.0], [85.9, 1729.0], [86.0, 1733.0], [86.1, 1737.0], [86.2, 1741.0], [86.3, 1744.0], [86.4, 1749.0], [86.5, 1752.0], [86.6, 1756.0], [86.7, 1760.0], [86.8, 1765.0], [86.9, 1769.0], [87.0, 1773.0], [87.1, 1776.0], [87.2, 1779.0], [87.3, 1783.0], [87.4, 1787.0], [87.5, 1791.0], [87.6, 1795.0], [87.7, 1799.0], [87.8, 1803.0], [87.9, 1807.0], [88.0, 1810.0], [88.1, 1815.0], [88.2, 1818.0], [88.3, 1823.0], [88.4, 1827.0], [88.5, 1831.0], [88.6, 1836.0], [88.7, 1840.0], [88.8, 1844.0], [88.9, 1848.0], [89.0, 1852.0], [89.1, 1856.0], [89.2, 1861.0], [89.3, 1865.0], [89.4, 1869.0], [89.5, 1874.0], [89.6, 1878.0], [89.7, 1883.0], [89.8, 1887.0], [89.9, 1892.0], [90.0, 1896.0], [90.1, 1901.0], [90.2, 1905.0], [90.3, 1911.0], [90.4, 1916.0], [90.5, 1920.0], [90.6, 1925.0], [90.7, 1930.0], [90.8, 1935.0], [90.9, 1940.0], [91.0, 1945.0], [91.1, 1950.0], [91.2, 1956.0], [91.3, 1962.0], [91.4, 1967.0], [91.5, 1972.0], [91.6, 1977.0], [91.7, 1983.0], [91.8, 1989.0], [91.9, 1994.0], [92.0, 2000.0], [92.1, 2006.0], [92.2, 2012.0], [92.3, 2018.0], [92.4, 2025.0], [92.5, 2031.0], [92.6, 2037.0], [92.7, 2044.0], [92.8, 2051.0], [92.9, 2057.0], [93.0, 2063.0], [93.1, 2070.0], [93.2, 2076.0], [93.3, 2083.0], [93.4, 2090.0], [93.5, 2097.0], [93.6, 2103.0], [93.7, 2110.0], [93.8, 2117.0], [93.9, 2124.0], [94.0, 2131.0], [94.1, 2138.0], [94.2, 2145.0], [94.3, 2153.0], [94.4, 2161.0], [94.5, 2171.0], [94.6, 2178.0], [94.7, 2186.0], [94.8, 2193.0], [94.9, 2202.0], [95.0, 2211.0], [95.1, 2218.0], [95.2, 2227.0], [95.3, 2234.0], [95.4, 2243.0], [95.5, 2253.0], [95.6, 2262.0], [95.7, 2271.0], [95.8, 2280.0], [95.9, 2289.0], [96.0, 2300.0], [96.1, 2310.0], [96.2, 2322.0], [96.3, 2333.0], [96.4, 2344.0], [96.5, 2354.0], [96.6, 2367.0], [96.7, 2379.0], [96.8, 2391.0], [96.9, 2404.0], [97.0, 2417.0], [97.1, 2429.0], [97.2, 2442.0], [97.3, 2457.0], [97.4, 2472.0], [97.5, 2486.0], [97.6, 2503.0], [97.7, 2519.0], [97.8, 2534.0], [97.9, 2550.0], [98.0, 2569.0], [98.1, 2590.0], [98.2, 2611.0], [98.3, 2629.0], [98.4, 2645.0], [98.5, 2668.0], [98.6, 2693.0], [98.7, 2718.0], [98.8, 2747.0], [98.9, 2775.0], [99.0, 2809.0], [99.1, 2857.0], [99.2, 2898.0], [99.3, 2943.0], [99.4, 2990.0], [99.5, 3049.0], [99.6, 3131.0], [99.7, 3223.0], [99.8, 3364.0], [99.9, 3572.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 25434.0, "series": [{"data": [[0.0, 1828.0], [600.0, 2402.0], [700.0, 3066.0], [800.0, 3811.0], [900.0, 4466.0], [1000.0, 4980.0], [1100.0, 5073.0], [1200.0, 5050.0], [1300.0, 4970.0], [1400.0, 4567.0], [1500.0, 4098.0], [100.0, 25434.0], [1600.0, 3541.0], [1700.0, 3076.0], [1800.0, 2766.0], [1900.0, 2250.0], [2000.0, 1807.0], [2100.0, 1568.0], [2300.0, 1027.0], [2200.0, 1308.0], [2400.0, 835.0], [2500.0, 663.0], [2600.0, 558.0], [2700.0, 409.0], [2800.0, 274.0], [2900.0, 249.0], [3000.0, 174.0], [3100.0, 134.0], [200.0, 15071.0], [3200.0, 90.0], [3300.0, 74.0], [3400.0, 55.0], [3500.0, 45.0], [3700.0, 29.0], [3600.0, 34.0], [3800.0, 17.0], [3900.0, 10.0], [4000.0, 5.0], [4100.0, 5.0], [4200.0, 3.0], [4300.0, 1.0], [4400.0, 4.0], [4600.0, 1.0], [300.0, 5817.0], [4900.0, 1.0], [5200.0, 2.0], [400.0, 3219.0], [500.0, 2333.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 25073.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 51387.0, "series": [{"data": [[0.0, 51387.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 40740.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 25073.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.72855494E12, "maxY": 16.0, "series": [{"data": [[1.7285622E12, 12.0], [1.72856382E12, 12.0], [1.7285619E12, 12.0], [1.72856412E12, 12.0], [1.7285628E12, 12.0], [1.72856442E12, 9.174629324546956], [1.7285625E12, 12.0], [1.7285631E12, 12.0], [1.7285634E12, 12.0], [1.72856208E12, 12.0], [1.7285637E12, 12.0], [1.728564E12, 12.0], [1.72856178E12, 11.266666666666664], [1.72856268E12, 12.0], [1.7285643E12, 12.0], [1.72856238E12, 12.0], [1.72856298E12, 12.0], [1.72856328E12, 12.0], [1.72856196E12, 12.0], [1.72856358E12, 12.0], [1.72856388E12, 12.0], [1.72856256E12, 12.0], [1.72856418E12, 12.0], [1.72856226E12, 12.0], [1.72856448E12, 3.4476744186046515], [1.72856286E12, 12.0], [1.72856316E12, 12.0], [1.72856184E12, 12.0], [1.72856346E12, 12.0], [1.72856376E12, 12.0], [1.72856244E12, 12.0], [1.72856406E12, 12.0], [1.72856214E12, 12.0], [1.72856436E12, 12.0], [1.72856274E12, 12.0], [1.72856304E12, 12.0], [1.72856334E12, 12.0], [1.72856364E12, 12.0], [1.72856232E12, 12.0], [1.72856394E12, 12.0], [1.72856202E12, 12.0], [1.72856424E12, 12.0], [1.72856262E12, 12.0], [1.72856292E12, 12.0], [1.72856322E12, 12.0], [1.72856352E12, 12.0]], "isOverall": false, "label": "12", "isController": false}, {"data": [[1.72855494E12, 2.0], [1.72855542E12, 1.3499999999999999], [1.72855524E12, 2.0], [1.72855506E12, 2.0], [1.72855536E12, 2.0], [1.72855518E12, 2.0], [1.728555E12, 2.0], [1.7285553E12, 2.0], [1.72855512E12, 2.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.72855704E12, 4.0], [1.72855584E12, 4.0], [1.72855806E12, 4.0], [1.72855566E12, 4.0], [1.72855824E12, 4.0], [1.72855626E12, 4.0], [1.72855764E12, 4.0], [1.72855722E12, 4.0], [1.72855662E12, 4.0], [1.7285568E12, 4.0], [1.72855842E12, 3.829581993569132], [1.72855548E12, 4.0], [1.72855608E12, 4.0], [1.72855782E12, 4.0], [1.7285562E12, 4.0], [1.7285577E12, 4.0], [1.7285571E12, 4.0], [1.72855728E12, 4.0], [1.72855668E12, 4.0], [1.7285556E12, 4.0], [1.7285583E12, 4.0], [1.72855848E12, 2.830845771144278], [1.72855542E12, 4.0], [1.72855602E12, 4.0], [1.72855788E12, 4.0], [1.72855644E12, 4.0], [1.72855746E12, 4.0], [1.72855686E12, 4.0], [1.72855674E12, 4.0], [1.72855554E12, 4.0], [1.72855836E12, 4.0], [1.72855596E12, 4.0], [1.72855794E12, 4.0], [1.72855656E12, 4.0], [1.72855734E12, 4.0], [1.72855638E12, 4.0], [1.72855752E12, 4.0], [1.72855692E12, 4.0], [1.72855854E12, 1.0], [1.72855578E12, 4.0], [1.72855812E12, 4.0], [1.7285559E12, 4.0], [1.728558E12, 4.0], [1.7285565E12, 4.0], [1.7285574E12, 4.0], [1.72855698E12, 4.0], [1.72855572E12, 4.0], [1.72855818E12, 4.0], [1.72855632E12, 4.0], [1.72855758E12, 4.0], [1.72855614E12, 4.0], [1.72855776E12, 4.0], [1.72855716E12, 4.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.72856592E12, 16.0], [1.72856562E12, 16.0], [1.72856532E12, 16.0], [1.72856472E12, 16.0], [1.72856502E12, 16.0], [1.72856664E12, 1.0], [1.72856634E12, 16.0], [1.72856604E12, 16.0], [1.72856574E12, 16.0], [1.7285664E12, 16.0], [1.7285646E12, 16.0], [1.7285661E12, 16.0], [1.7285649E12, 16.0], [1.7285658E12, 16.0], [1.7285655E12, 16.0], [1.7285652E12, 16.0], [1.72856652E12, 15.77300613496933], [1.72856448E12, 15.569767441860467], [1.72856622E12, 16.0], [1.72856478E12, 16.0], [1.72856496E12, 16.0], [1.72856658E12, 8.59354838709677], [1.72856628E12, 16.0], [1.72856598E12, 16.0], [1.72856568E12, 16.0], [1.72856538E12, 16.0], [1.72856466E12, 16.0], [1.72856508E12, 16.0], [1.72856544E12, 16.0], [1.72856514E12, 16.0], [1.72856646E12, 16.0], [1.72856454E12, 16.0], [1.72856616E12, 16.0], [1.72856484E12, 16.0], [1.72856586E12, 16.0], [1.72856556E12, 16.0], [1.72856526E12, 16.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.72855866E12, 8.0], [1.72856088E12, 8.0], [1.72856028E12, 8.0], [1.72855986E12, 8.0], [1.72856148E12, 8.0], [1.72855926E12, 8.0], [1.72855944E12, 8.0], [1.72856046E12, 8.0], [1.72855884E12, 8.0], [1.72856106E12, 8.0], [1.72856064E12, 8.0], [1.72856166E12, 8.0], [1.72856004E12, 8.0], [1.72855992E12, 8.0], [1.72856094E12, 8.0], [1.72855932E12, 8.0], [1.72856154E12, 8.0], [1.7285589E12, 8.0], [1.72856112E12, 8.0], [1.72856052E12, 8.0], [1.7285601E12, 8.0], [1.72856172E12, 7.690346083788708], [1.7285595E12, 8.0], [1.72855968E12, 8.0], [1.7285607E12, 8.0], [1.72855908E12, 8.0], [1.7285613E12, 8.0], [1.72856058E12, 8.0], [1.72855896E12, 8.0], [1.72855998E12, 8.0], [1.72856016E12, 8.0], [1.72856118E12, 8.0], [1.72855956E12, 8.0], [1.72856178E12, 4.517605633802817], [1.72855914E12, 8.0], [1.72856076E12, 8.0], [1.72856136E12, 8.0], [1.72855854E12, 7.998178506375225], [1.72856034E12, 8.0], [1.72855872E12, 8.0], [1.72855974E12, 8.0], [1.72855962E12, 8.0], [1.72856124E12, 8.0], [1.72855902E12, 8.0], [1.7285592E12, 8.0], [1.7285586E12, 8.0], [1.72856022E12, 8.0], [1.72856082E12, 8.0], [1.7285604E12, 8.0], [1.72856142E12, 8.0], [1.7285598E12, 8.0], [1.72855938E12, 8.0], [1.728561E12, 8.0], [1.72855878E12, 8.0], [1.7285616E12, 8.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72856664E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 727.4556962025316, "minX": 1.0, "maxY": 1037.633129498696, "series": [{"data": [[2.0, 755.9462102689495], [8.0, 815.5584670400941], [9.0, 808.2272727272727], [10.0, 771.9189189189186], [11.0, 847.030769230769], [3.0, 794.9225352112678], [12.0, 880.2051709994003], [13.0, 727.4556962025316], [14.0, 976.9013157894738], [15.0, 863.4062499999998], [1.0, 775.3900000000002], [4.0, 768.265698958662], [16.0, 1037.633129498696], [5.0, 762.3707165109035], [6.0, 801.4339080459771], [7.0, 809.1666666666667]], "isOverall": false, "label": "getmap", "isController": false}, {"data": [[10.733233788395982, 887.4270563139938]], "isOverall": false, "label": "getmap-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.72855494E12, "maxY": 4.87119139E7, "series": [{"data": [[1.72855584E12, 1.6275278633333333E7], [1.72855806E12, 1.5306040366666667E7], [1.72856028E12, 2.9900099333333332E7], [1.7285625E12, 4.139099918333333E7], [1.72856472E12, 4.5655243E7], [1.72855566E12, 1.5962632166666666E7], [1.72855824E12, 1.6071523933333334E7], [1.72856268E12, 4.265105361666667E7], [1.72856046E12, 2.8713486166666668E7], [1.7285649E12, 4.564336568333333E7], [1.72855842E12, 1.4873761066666666E7], [1.72856064E12, 3.0047506483333334E7], [1.72855548E12, 1.5073440216666667E7], [1.7285562E12, 1.5636519633333333E7], [1.7285577E12, 1.61550313E7], [1.72855992E12, 2.934256345E7], [1.72856658E12, 2.3598300733333334E7], [1.72856214E12, 4.254331596666667E7], [1.72856436E12, 4.172631393333333E7], [1.7285601E12, 2.903610125E7], [1.72855602E12, 1.5742253166666666E7], [1.72855788E12, 1.5687886883333333E7], [1.72856232E12, 4.1399111E7], [1.72856454E12, 4.59393476E7], [1.72855494E12, 2317710.1333333333], [1.72856382E12, 4.336674756666667E7], [1.72856604E12, 4.685586356666667E7], [1.728564E12, 4.262015403333333E7], [1.72855734E12, 1.6655882783333333E7], [1.72855956E12, 2.8858120233333334E7], [1.72856178E12, 1.6269003383333333E7], [1.7285664E12, 4.660439603333333E7], [1.72855752E12, 1.5174527583333334E7], [1.72856196E12, 3.952316371666667E7], [1.72855974E12, 3.09099147E7], [1.72856418E12, 4.287250131666667E7], [1.72856622E12, 4.68274025E7], [1.72856124E12, 3.0499564666666668E7], [1.72855902E12, 2.97018227E7], [1.72856346E12, 4.054419205E7], [1.72856568E12, 4.694007688333333E7], [1.72855698E12, 1.472841185E7], [1.7285592E12, 2.9318644066666666E7], [1.7285553E12, 8054300.033333333], [1.72856142E12, 3.0020420433333334E7], [1.72856364E12, 4.109687618333333E7], [1.72855938E12, 2.9276855283333335E7], [1.72856586E12, 4.76346628E7], [1.72855716E12, 1.5803368166666666E7], [1.7285616E12, 2.926097085E7], [1.72855512E12, 7576637.533333333], [1.72855866E12, 2.89583233E7], [1.72856088E12, 3.0432456583333332E7], [1.72856532E12, 4.680662768333333E7], [1.7285631E12, 3.95990695E7], [1.72855626E12, 1.63933929E7], [1.72855662E12, 1.4947003733333332E7], [1.72855884E12, 3.1763181516666666E7], [1.72856106E12, 3.1153474916666668E7], [1.72856328E12, 4.1407377233333334E7], [1.7285655E12, 4.706957206666667E7], [1.7285568E12, 1.5830426416666666E7], [1.72855608E12, 1.6142273683333334E7], [1.72856478E12, 4.664054625E7], [1.72856496E12, 4.78306539E7], [1.7285583E12, 1.5571379983333332E7], [1.72856052E12, 2.9683386683333334E7], [1.72856274E12, 3.9210919916666664E7], [1.72855848E12, 1.0516734683333334E7], [1.72856514E12, 4.540863095E7], [1.72855644E12, 1.6075924266666668E7], [1.72856292E12, 4.2082883516666666E7], [1.7285607E12, 2.9756063333333332E7], [1.7285622E12, 4.1583045666666664E7], [1.72855554E12, 1.622693355E7], [1.72855998E12, 3.170163745E7], [1.72856442E12, 3.1785273133333333E7], [1.72856664E12, 265621.3], [1.72855794E12, 1.67368286E7], [1.72856016E12, 3.0045470016666666E7], [1.72856238E12, 4.295368175E7], [1.7285646E12, 4.559496706666667E7], [1.72855536E12, 7522091.45], [1.72856034E12, 2.9282046283333335E7], [1.72855518E12, 8133520.033333333], [1.72855812E12, 1.5747642416666666E7], [1.72856256E12, 3.949645311666667E7], [1.7285559E12, 1.6881162083333332E7], [1.72855962E12, 3.1121787133333333E7], [1.72856184E12, 4.057630775E7], [1.72856628E12, 4.666216643333333E7], [1.7285574E12, 1.53324555E7], [1.72856406E12, 4.127878028333333E7], [1.72855572E12, 1.53573962E7], [1.7285598E12, 2.9889654483333334E7], [1.72856202E12, 4.1157184083333336E7], [1.72856424E12, 4.0897641483333334E7], [1.72856646E12, 4.630471075E7], [1.72855758E12, 1.6058123733333332E7], [1.72855776E12, 1.6786151483333334E7], [1.72855704E12, 1.5551231216666667E7], [1.72856592E12, 4.718818163333333E7], [1.72856148E12, 2.9542376166666668E7], [1.72855926E12, 2.84407215E7], [1.7285637E12, 4.057207428333333E7], [1.72856574E12, 4.79622973E7], [1.7285661E12, 4.549207293333333E7], [1.72855722E12, 1.622973925E7], [1.72855944E12, 2.9269813033333335E7], [1.72856166E12, 2.973818315E7], [1.72856388E12, 4.0282498516666666E7], [1.72856094E12, 2.8446444533333335E7], [1.72856316E12, 4.30472184E7], [1.7285589E12, 2.947971055E7], [1.728555E12, 8295448.266666667], [1.72856538E12, 4.7776621083333336E7], [1.72855668E12, 1.5881122016666668E7], [1.72856112E12, 3.05418749E7], [1.72856334E12, 4.325189563333333E7], [1.72856556E12, 4.61446305E7], [1.72855686E12, 1.6443824533333333E7], [1.72855908E12, 2.9782784583333332E7], [1.7285613E12, 2.79774138E7], [1.72856352E12, 4.231436625E7], [1.72856058E12, 3.0334595166666668E7], [1.72855836E12, 1.4899391033333333E7], [1.7285628E12, 4.07836538E7], [1.72856502E12, 4.799052995E7], [1.72855596E12, 1.64347823E7], [1.72856076E12, 3.0238103883333333E7], [1.72856298E12, 4.0548505E7], [1.72855854E12, 2.8500219633333333E7], [1.7285652E12, 4.797597705E7], [1.72855872E12, 3.0064615116666667E7], [1.72855578E12, 1.6044662183333334E7], [1.728558E12, 1.53262817E7], [1.7285565E12, 1.6073114466666667E7], [1.72856244E12, 4.06343139E7], [1.72856022E12, 2.9413173016666666E7], [1.72856466E12, 4.78929325E7], [1.72855818E12, 1.6399283033333333E7], [1.7285604E12, 2.9372405183333334E7], [1.72855632E12, 1.61983312E7], [1.72855614E12, 1.59208889E7], [1.72856262E12, 3.9691058333333336E7], [1.72856484E12, 4.734427793333333E7], [1.7285619E12, 4.221875938333333E7], [1.72856412E12, 4.084144375E7], [1.72855524E12, 8631035.933333334], [1.72855986E12, 3.0101115433333334E7], [1.72856634E12, 4.8470484916666664E7], [1.72855764E12, 1.6528607283333333E7], [1.72856208E12, 4.031537156666667E7], [1.7285643E12, 4.1415768666666664E7], [1.72855506E12, 8423090.283333333], [1.72856652E12, 4.5652674E7], [1.72855782E12, 1.6650609716666667E7], [1.72856004E12, 2.9457543566666666E7], [1.72856226E12, 4.122876111666667E7], [1.72856448E12, 1.28851571E7], [1.7285571E12, 1.5356154033333333E7], [1.72855932E12, 2.9641609966666665E7], [1.72856154E12, 3.0355641716666665E7], [1.72856376E12, 4.0447596266666666E7], [1.72856598E12, 4.828685165E7], [1.72855728E12, 1.7079355383333333E7], [1.7285556E12, 1.6283862516666668E7], [1.72855542E12, 1.2293628166666666E7], [1.72856172E12, 2.9550057733333334E7], [1.72856394E12, 4.3357512516666666E7], [1.7285595E12, 3.0755033166666668E7], [1.72856616E12, 4.87119139E7], [1.72855746E12, 1.608498745E7], [1.72855968E12, 3.0608733133333333E7], [1.72855674E12, 1.6406789416666666E7], [1.72855896E12, 2.905395925E7], [1.72856562E12, 4.7573155016666666E7], [1.72856118E12, 2.9560592233333334E7], [1.7285634E12, 4.33406967E7], [1.72855656E12, 1.597474915E7], [1.72855638E12, 1.5597001983333332E7], [1.72855914E12, 3.0879526733333334E7], [1.72855692E12, 1.6035482816666666E7], [1.72856136E12, 2.9104719416666668E7], [1.7285658E12, 4.7085066E7], [1.72856358E12, 4.2704514E7], [1.72856286E12, 4.3086224266666666E7], [1.7285586E12, 2.9854115433333334E7], [1.72856508E12, 4.850569111666667E7], [1.72856082E12, 2.8319021216666665E7], [1.72856304E12, 4.3262432266666666E7], [1.72856544E12, 4.709683945E7], [1.728561E12, 2.93580771E7], [1.72855878E12, 3.0984632366666667E7], [1.72856322E12, 4.127367918333333E7], [1.72856526E12, 4.782338128333333E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72855584E12, 0.0], [1.72855806E12, 0.0], [1.72856028E12, 0.0], [1.7285625E12, 0.0], [1.72856472E12, 0.0], [1.72855566E12, 0.0], [1.72855824E12, 0.0], [1.72856268E12, 0.0], [1.72856046E12, 0.0], [1.7285649E12, 0.0], [1.72855842E12, 0.0], [1.72856064E12, 0.0], [1.72855548E12, 0.0], [1.7285562E12, 0.0], [1.7285577E12, 0.0], [1.72855992E12, 0.0], [1.72856658E12, 0.0], [1.72856214E12, 0.0], [1.72856436E12, 0.0], [1.7285601E12, 0.0], [1.72855602E12, 0.0], [1.72855788E12, 0.0], [1.72856232E12, 0.0], [1.72856454E12, 0.0], [1.72855494E12, 0.0], [1.72856382E12, 0.0], [1.72856604E12, 0.0], [1.728564E12, 0.0], [1.72855734E12, 0.0], [1.72855956E12, 0.0], [1.72856178E12, 0.0], [1.7285664E12, 0.0], [1.72855752E12, 0.0], [1.72856196E12, 0.0], [1.72855974E12, 0.0], [1.72856418E12, 0.0], [1.72856622E12, 0.0], [1.72856124E12, 0.0], [1.72855902E12, 0.0], [1.72856346E12, 0.0], [1.72856568E12, 0.0], [1.72855698E12, 0.0], [1.7285592E12, 0.0], [1.7285553E12, 0.0], [1.72856142E12, 0.0], [1.72856364E12, 0.0], [1.72855938E12, 0.0], [1.72856586E12, 0.0], [1.72855716E12, 0.0], [1.7285616E12, 0.0], [1.72855512E12, 0.0], [1.72855866E12, 0.0], [1.72856088E12, 0.0], [1.72856532E12, 0.0], [1.7285631E12, 0.0], [1.72855626E12, 0.0], [1.72855662E12, 0.0], [1.72855884E12, 0.0], [1.72856106E12, 0.0], [1.72856328E12, 0.0], [1.7285655E12, 0.0], [1.7285568E12, 0.0], [1.72855608E12, 0.0], [1.72856478E12, 0.0], [1.72856496E12, 0.0], [1.7285583E12, 0.0], [1.72856052E12, 0.0], [1.72856274E12, 0.0], [1.72855848E12, 0.0], [1.72856514E12, 0.0], [1.72855644E12, 0.0], [1.72856292E12, 0.0], [1.7285607E12, 0.0], [1.7285622E12, 0.0], [1.72855554E12, 0.0], [1.72855998E12, 0.0], [1.72856442E12, 0.0], [1.72856664E12, 0.0], [1.72855794E12, 0.0], [1.72856016E12, 0.0], [1.72856238E12, 0.0], [1.7285646E12, 0.0], [1.72855536E12, 0.0], [1.72856034E12, 0.0], [1.72855518E12, 0.0], [1.72855812E12, 0.0], [1.72856256E12, 0.0], [1.7285559E12, 0.0], [1.72855962E12, 0.0], [1.72856184E12, 0.0], [1.72856628E12, 0.0], [1.7285574E12, 0.0], [1.72856406E12, 0.0], [1.72855572E12, 0.0], [1.7285598E12, 0.0], [1.72856202E12, 0.0], [1.72856424E12, 0.0], [1.72856646E12, 0.0], [1.72855758E12, 0.0], [1.72855776E12, 0.0], [1.72855704E12, 0.0], [1.72856592E12, 0.0], [1.72856148E12, 0.0], [1.72855926E12, 0.0], [1.7285637E12, 0.0], [1.72856574E12, 0.0], [1.7285661E12, 0.0], [1.72855722E12, 0.0], [1.72855944E12, 0.0], [1.72856166E12, 0.0], [1.72856388E12, 0.0], [1.72856094E12, 0.0], [1.72856316E12, 0.0], [1.7285589E12, 0.0], [1.728555E12, 0.0], [1.72856538E12, 0.0], [1.72855668E12, 0.0], [1.72856112E12, 0.0], [1.72856334E12, 0.0], [1.72856556E12, 0.0], [1.72855686E12, 0.0], [1.72855908E12, 0.0], [1.7285613E12, 0.0], [1.72856352E12, 0.0], [1.72856058E12, 0.0], [1.72855836E12, 0.0], [1.7285628E12, 0.0], [1.72856502E12, 0.0], [1.72855596E12, 0.0], [1.72856076E12, 0.0], [1.72856298E12, 0.0], [1.72855854E12, 0.0], [1.7285652E12, 0.0], [1.72855872E12, 0.0], [1.72855578E12, 0.0], [1.728558E12, 0.0], [1.7285565E12, 0.0], [1.72856244E12, 0.0], [1.72856022E12, 0.0], [1.72856466E12, 0.0], [1.72855818E12, 0.0], [1.7285604E12, 0.0], [1.72855632E12, 0.0], [1.72855614E12, 0.0], [1.72856262E12, 0.0], [1.72856484E12, 0.0], [1.7285619E12, 0.0], [1.72856412E12, 0.0], [1.72855524E12, 0.0], [1.72855986E12, 0.0], [1.72856634E12, 0.0], [1.72855764E12, 0.0], [1.72856208E12, 0.0], [1.7285643E12, 0.0], [1.72855506E12, 0.0], [1.72856652E12, 0.0], [1.72855782E12, 0.0], [1.72856004E12, 0.0], [1.72856226E12, 0.0], [1.72856448E12, 0.0], [1.7285571E12, 0.0], [1.72855932E12, 0.0], [1.72856154E12, 0.0], [1.72856376E12, 0.0], [1.72856598E12, 0.0], [1.72855728E12, 0.0], [1.7285556E12, 0.0], [1.72855542E12, 0.0], [1.72856172E12, 0.0], [1.72856394E12, 0.0], [1.7285595E12, 0.0], [1.72856616E12, 0.0], [1.72855746E12, 0.0], [1.72855968E12, 0.0], [1.72855674E12, 0.0], [1.72855896E12, 0.0], [1.72856562E12, 0.0], [1.72856118E12, 0.0], [1.7285634E12, 0.0], [1.72855656E12, 0.0], [1.72855638E12, 0.0], [1.72855914E12, 0.0], [1.72855692E12, 0.0], [1.72856136E12, 0.0], [1.7285658E12, 0.0], [1.72856358E12, 0.0], [1.72856286E12, 0.0], [1.7285586E12, 0.0], [1.72856508E12, 0.0], [1.72856082E12, 0.0], [1.72856304E12, 0.0], [1.72856544E12, 0.0], [1.728561E12, 0.0], [1.72855878E12, 0.0], [1.72856322E12, 0.0], [1.72856526E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72856664E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 681.0433212996386, "minX": 1.72855494E12, "maxY": 1159.25, "series": [{"data": [[1.72855584E12, 862.5631768953062], [1.72855806E12, 789.0196721311476], [1.72856028E12, 838.8066783831277], [1.7285625E12, 897.3750000000005], [1.72856472E12, 999.6054564533054], [1.72855566E12, 754.8652037617561], [1.72855824E12, 755.6847133757968], [1.72856268E12, 909.1035353535356], [1.72856046E12, 814.2551020408159], [1.7285649E12, 1001.5197916666665], [1.72855842E12, 726.048231511254], [1.72856064E12, 824.4844290657448], [1.72855548E12, 724.3424242424245], [1.7285562E12, 806.6700336700335], [1.7285577E12, 707.4837758112093], [1.72855992E12, 777.8289902280126], [1.72856658E12, 797.230107526882], [1.72856214E12, 904.2681704260651], [1.72856436E12, 896.910112359551], [1.7285601E12, 834.1637630662021], [1.72855602E12, 733.5820433436535], [1.72855788E12, 777.0741935483873], [1.72856232E12, 930.5927367055765], [1.72856454E12, 982.7518022657049], [1.72855494E12, 988.8333333333337], [1.72856382E12, 923.3738796414863], [1.72856604E12, 999.2864637985317], [1.728564E12, 870.9359903381642], [1.72855734E12, 746.8944099378881], [1.72855956E12, 834.6409807355514], [1.72856178E12, 778.8905775075984], [1.7285664E12, 1077.1107382550335], [1.72855752E12, 696.1612903225806], [1.72856196E12, 849.7218934911232], [1.72855974E12, 824.2837606837606], [1.72856418E12, 886.5364647713225], [1.72856622E12, 1021.2740740740742], [1.72856124E12, 832.4991364421418], [1.72855902E12, 837.128919860627], [1.72856346E12, 850.1786982248519], [1.72856568E12, 1100.1736111111115], [1.72855698E12, 706.165680473373], [1.7285592E12, 852.8199643493762], [1.7285553E12, 869.4782608695652], [1.72856142E12, 802.8868552412647], [1.72856364E12, 916.2731893265568], [1.72855938E12, 795.2347107438021], [1.72856586E12, 1101.0000000000005], [1.72855716E12, 748.7735849056602], [1.7285616E12, 843.5600706713781], [1.72855512E12, 730.7530864197531], [1.72855866E12, 777.8804523424883], [1.72856088E12, 876.1316270566732], [1.72856532E12, 1068.1657397107888], [1.7285631E12, 823.0766590389014], [1.72855626E12, 871.8949275362323], [1.72855662E12, 766.4340836012858], [1.72855884E12, 813.0505902192244], [1.72856106E12, 861.6451612903228], [1.72856328E12, 838.7086247086247], [1.7285655E12, 1021.5244161358814], [1.7285568E12, 784.7766990291259], [1.72855608E12, 755.2194357366767], [1.72856478E12, 1001.9189189189182], [1.72856496E12, 1092.49828178694], [1.7285583E12, 684.7272727272725], [1.72856052E12, 835.1655172413787], [1.72856274E12, 901.1537500000001], [1.72855848E12, 777.7960199004976], [1.72856514E12, 1057.1995565410205], [1.72855644E12, 778.2394822006472], [1.72856292E12, 942.6360052562421], [1.7285607E12, 796.9916943521608], [1.7285622E12, 900.6641509433965], [1.72855554E12, 767.6857142857147], [1.72855998E12, 850.425044091711], [1.72856442E12, 848.4102141680395], [1.72856664E12, 1159.25], [1.72855794E12, 850.2614840989398], [1.72856016E12, 842.4807692307688], [1.72856238E12, 884.645121951219], [1.7285646E12, 1039.8356756756757], [1.72855536E12, 735.3926380368099], [1.72856034E12, 818.8438030560274], [1.72855518E12, 757.0499999999998], [1.72855812E12, 820.8767123287674], [1.72856256E12, 833.0451911935096], [1.7285559E12, 776.4405144694535], [1.72855962E12, 831.4871355060034], [1.72856184E12, 861.0060024009601], [1.72856628E12, 1014.9692470837751], [1.7285574E12, 741.5510835913311], [1.72856406E12, 851.0730270906952], [1.72855572E12, 770.7734627831717], [1.7285598E12, 767.1696000000003], [1.72856202E12, 938.1966145833334], [1.72856424E12, 904.6104868913856], [1.72856646E12, 1080.0090191657291], [1.72855758E12, 779.2677419354836], [1.72855776E12, 763.6962025316466], [1.72855704E12, 735.3600000000004], [1.72856592E12, 1023.0170940170932], [1.72856148E12, 844.2442477876102], [1.72855926E12, 789.9228243021338], [1.7285637E12, 839.5571095571103], [1.72856574E12, 1030.5734042553188], [1.7285661E12, 1019.3541226215635], [1.72855722E12, 757.8603174603176], [1.72855944E12, 821.084628670121], [1.72856166E12, 847.4522968197882], [1.72856388E12, 874.0415647921756], [1.72856094E12, 767.3716108452944], [1.72856316E12, 911.9253164556959], [1.7285589E12, 805.1838111298481], [1.728555E12, 730.8780487804881], [1.72856538E12, 1062.7929125138442], [1.72855668E12, 814.0067567567567], [1.72856112E12, 837.9060869565218], [1.72856334E12, 840.1834112149528], [1.72856556E12, 983.3800205973223], [1.72855686E12, 754.2484472049691], [1.72855908E12, 820.5648464163817], [1.7285613E12, 823.0086655112644], [1.72856352E12, 907.4797979797978], [1.72856058E12, 800.8324958123951], [1.72855836E12, 731.2682926829268], [1.7285628E12, 874.9036585365864], [1.72856502E12, 1042.8143322475553], [1.72855596E12, 744.1857585139311], [1.72856076E12, 796.3904448105441], [1.72856298E12, 868.9866989117281], [1.72855854E12, 813.456521739131], [1.7285652E12, 1010.5430672268908], [1.72855872E12, 800.0948419301161], [1.72855578E12, 801.7433333333331], [1.728558E12, 726.9151515151513], [1.7285565E12, 758.5189873417719], [1.72856244E12, 927.0299089726931], [1.72856022E12, 834.4208695652177], [1.72856466E12, 1081.319460067493], [1.72855818E12, 792.1617161716174], [1.7285604E12, 773.727419354838], [1.72855632E12, 865.942238267148], [1.72855614E12, 825.1065292096226], [1.72856262E12, 918.1184713375808], [1.72856484E12, 1036.4720430107511], [1.7285619E12, 858.4333333333344], [1.72856412E12, 833.0708478513349], [1.72855524E12, 702.3333333333335], [1.72855986E12, 756.8456692913383], [1.72856634E12, 1063.9199999999985], [1.72855764E12, 758.552050473186], [1.72856208E12, 890.6197530864201], [1.7285643E12, 900.3023839397737], [1.72855506E12, 724.5602409638553], [1.72856652E12, 973.9805725971379], [1.72855782E12, 819.8551724137933], [1.72856004E12, 834.2142857142857], [1.72856226E12, 954.8730158730161], [1.72856448E12, 842.6937984496117], [1.7285571E12, 794.9868421052627], [1.72855932E12, 786.022913256956], [1.72856154E12, 825.3094017094004], [1.72856376E12, 825.6153846153838], [1.72856598E12, 1088.5394144144143], [1.72855728E12, 796.6513157894739], [1.7285556E12, 775.2718446601948], [1.72855542E12, 681.0433212996386], [1.72856172E12, 839.7978142076503], [1.72856394E12, 878.8505467800736], [1.7285595E12, 839.5615251299834], [1.72856616E12, 1022.451820128479], [1.72855746E12, 792.3432343234318], [1.72855968E12, 787.3619834710743], [1.72855674E12, 793.4060402684564], [1.72855896E12, 804.6907563025214], [1.72856562E12, 1029.5182012847984], [1.72856118E12, 848.4260249554369], [1.7285634E12, 868.6618531889284], [1.72855656E12, 781.8668831168828], [1.72855638E12, 793.4152823920266], [1.72855914E12, 748.799687010955], [1.72855692E12, 748.4875000000001], [1.72856136E12, 861.4535714285716], [1.7285658E12, 1099.7666666666662], [1.72856358E12, 810.842164599774], [1.72856286E12, 871.0796139927622], [1.7285586E12, 846.1554770318012], [1.72856508E12, 1043.6583783783788], [1.72856082E12, 747.5837245696403], [1.72856304E12, 863.4550898203584], [1.72856544E12, 1008.1540880503135], [1.728561E12, 829.4506065857876], [1.72855878E12, 777.4068071312798], [1.72856322E12, 865.1642685851326], [1.72856526E12, 1037.735135135135]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72856664E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 473.3465703971118, "minX": 1.72855494E12, "maxY": 833.0, "series": [{"data": [[1.72855584E12, 604.1335740072201], [1.72855806E12, 553.4131147540984], [1.72856028E12, 579.0650263620395], [1.7285625E12, 614.0853960396045], [1.72856472E12, 685.8121720881434], [1.72855566E12, 521.7774294670845], [1.72855824E12, 520.856687898089], [1.72856268E12, 618.6666666666671], [1.72856046E12, 564.773809523809], [1.7285649E12, 687.4624999999993], [1.72855842E12, 503.12861736334423], [1.72856064E12, 569.4896193771625], [1.72855548E12, 504.06969696969725], [1.7285562E12, 556.1885521885523], [1.7285577E12, 488.0058997050149], [1.72855992E12, 541.1579804560255], [1.72856658E12, 548.2129032258061], [1.72856214E12, 620.1278195488718], [1.72856436E12, 614.5955056179771], [1.7285601E12, 580.9111498257838], [1.72855602E12, 506.8390092879261], [1.72855788E12, 541.2967741935483], [1.72856232E12, 640.2723735408554], [1.72856454E12, 679.4830072090629], [1.72855494E12, 700.8055555555554], [1.72856382E12, 635.0076824583872], [1.72856604E12, 681.5414480587622], [1.728564E12, 599.8562801932363], [1.72855734E12, 516.0403726708071], [1.72855956E12, 582.0893169877407], [1.72856178E12, 538.0881458966571], [1.7285664E12, 737.7953020134223], [1.72855752E12, 485.73900293255144], [1.72856196E12, 587.8840236686398], [1.72855974E12, 571.7948717948728], [1.72856418E12, 604.1829419035846], [1.72856622E12, 703.6423280423278], [1.72856124E12, 571.2607944732304], [1.72855902E12, 579.5000000000005], [1.72856346E12, 590.4331360946743], [1.72856568E12, 751.770833333333], [1.72855698E12, 497.01479289940823], [1.7285592E12, 592.5044563279858], [1.7285553E12, 614.9927536231886], [1.72856142E12, 551.2462562396007], [1.72856364E12, 631.2846251588302], [1.72855938E12, 552.9801652892567], [1.72856586E12, 754.7899543378992], [1.72855716E12, 520.424528301886], [1.7285616E12, 585.9310954063608], [1.72855512E12, 509.3703703703705], [1.72855866E12, 545.2116316639734], [1.72856088E12, 610.177330895795], [1.72856532E12, 731.0122358175742], [1.7285631E12, 571.4462242562919], [1.72855626E12, 601.0181159420292], [1.72855662E12, 538.4855305466243], [1.72855884E12, 558.6576728499167], [1.72856106E12, 593.2186379928319], [1.72856328E12, 579.710955710955], [1.7285655E12, 696.9766454352444], [1.7285568E12, 546.3948220064724], [1.72855608E12, 521.3855799373042], [1.72856478E12, 685.1725571725575], [1.72856496E12, 743.0927835051546], [1.7285583E12, 475.0085227272728], [1.72856052E12, 580.2327586206898], [1.72856274E12, 625.5175000000003], [1.72855848E12, 542.0298507462685], [1.72856514E12, 727.7050997782696], [1.72855644E12, 538.5695792880258], [1.72856292E12, 647.0354796320634], [1.7285607E12, 549.5249169435208], [1.7285622E12, 613.1987421383654], [1.72855554E12, 532.1015873015874], [1.72855998E12, 581.2239858906526], [1.72856442E12, 584.5222405271825], [1.72856664E12, 833.0], [1.72855794E12, 586.1413427561838], [1.72856016E12, 585.1625874125884], [1.72856238E12, 602.6109756097563], [1.7285646E12, 712.899459459459], [1.72855536E12, 515.7730061349691], [1.72856034E12, 570.9881154499151], [1.72855518E12, 527.9062499999999], [1.72855812E12, 573.3219178082189], [1.72856256E12, 573.5701042873704], [1.7285559E12, 533.2090032154342], [1.72855962E12, 570.5951972555748], [1.72856184E12, 590.6194477791121], [1.72856628E12, 694.3658536585361], [1.7285574E12, 518.2600619195044], [1.72856406E12, 586.8939929328628], [1.72855572E12, 537.779935275081], [1.7285598E12, 534.1504000000004], [1.72856202E12, 644.6171874999998], [1.72856424E12, 624.868913857678], [1.72856646E12, 744.9503945885006], [1.72855758E12, 542.6999999999996], [1.72855776E12, 526.1550632911396], [1.72855704E12, 509.0184615384616], [1.72856592E12, 699.6164529914525], [1.72856148E12, 581.8513274336278], [1.72855926E12, 552.2249589490978], [1.7285637E12, 581.3776223776227], [1.72856574E12, 705.4563829787231], [1.7285661E12, 705.0570824524301], [1.72855722E12, 526.4190476190465], [1.72855944E12, 568.4870466321248], [1.72856166E12, 585.5583038869258], [1.72856388E12, 603.9718826405867], [1.72856094E12, 534.0223285486444], [1.72856316E12, 626.5518987341774], [1.7285589E12, 556.414839797639], [1.728555E12, 502.61585365853597], [1.72856538E12, 722.4507198228127], [1.72855668E12, 566.1317567567565], [1.72856112E12, 573.681739130435], [1.72856334E12, 574.1904205607483], [1.72856556E12, 675.9763130792996], [1.72855686E12, 517.0310559006207], [1.72855908E12, 566.0443686006831], [1.7285613E12, 573.3206239168117], [1.72856352E12, 621.0972222222213], [1.72856058E12, 551.0770519262992], [1.72855836E12, 513.0243902439026], [1.7285628E12, 601.2634146341462], [1.72856502E12, 712.6818675352888], [1.72855596E12, 513.9009287925697], [1.72856076E12, 550.2092257001653], [1.72856298E12, 604.8561064087065], [1.72855854E12, 562.8460144927539], [1.7285652E12, 687.8855042016811], [1.72855872E12, 554.2129783693846], [1.72855578E12, 558.1133333333332], [1.728558E12, 506.10000000000053], [1.7285565E12, 524.5474683544305], [1.72856244E12, 635.7958387516253], [1.72856022E12, 574.8556521739134], [1.72856466E12, 732.850393700787], [1.72855818E12, 546.4620462046202], [1.7285604E12, 536.5580645161288], [1.72855632E12, 598.927797833935], [1.72855614E12, 572.6941580756016], [1.72856262E12, 633.8904458598726], [1.72856484E12, 715.2784946236552], [1.7285619E12, 584.817857142857], [1.72856412E12, 570.6829268292679], [1.72855524E12, 479.04093567251465], [1.72855986E12, 522.3716535433065], [1.72856634E12, 719.5111111111107], [1.72855764E12, 520.9526813880125], [1.72856208E12, 612.374074074074], [1.7285643E12, 622.0326223337516], [1.72855506E12, 494.0662650602409], [1.72856652E12, 670.8558282208595], [1.72855782E12, 559.475862068965], [1.72856004E12, 581.2491289198617], [1.72856226E12, 655.301587301587], [1.72856448E12, 582.422480620155], [1.7285571E12, 559.7335526315793], [1.72855932E12, 544.8592471358419], [1.72856154E12, 572.435897435897], [1.72856376E12, 572.6107921928815], [1.72856598E12, 741.7781531531529], [1.72855728E12, 545.8355263157897], [1.7285556E12, 536.9482200647246], [1.72855542E12, 473.3465703971118], [1.72856172E12, 576.967213114754], [1.72856394E12, 599.2660996354804], [1.7285595E12, 582.6793760831889], [1.72856616E12, 694.5235546038543], [1.72855746E12, 550.7293729372941], [1.72855968E12, 544.6297520661155], [1.72855674E12, 544.9261744966442], [1.72855896E12, 561.5109243697482], [1.72856562E12, 705.0353319057824], [1.72856118E12, 584.2709447415331], [1.7285634E12, 593.3116726835134], [1.72855656E12, 539.6266233766235], [1.72855638E12, 548.2259136212629], [1.72855914E12, 512.2018779342711], [1.72855692E12, 513.8812499999996], [1.72856136E12, 599.6857142857148], [1.7285658E12, 750.5137931034484], [1.72856358E12, 553.3021420518602], [1.72856286E12, 593.0747889022916], [1.7285586E12, 591.1307420494697], [1.72856508E12, 712.9286486486475], [1.72856082E12, 519.1533646322378], [1.72856304E12, 587.8610778443123], [1.72856544E12, 687.7211740041928], [1.728561E12, 571.485268630849], [1.72855878E12, 532.5510534846022], [1.72856322E12, 599.5659472422062], [1.72856526E12, 709.2475675675668]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72856664E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72855494E12, "maxY": 4.9E-324, "series": [{"data": [[1.72855584E12, 0.0], [1.72855806E12, 0.0], [1.72856028E12, 0.0], [1.7285625E12, 0.0], [1.72856472E12, 0.0], [1.72855566E12, 0.0], [1.72855824E12, 0.0], [1.72856268E12, 0.0], [1.72856046E12, 0.0], [1.7285649E12, 0.0], [1.72855842E12, 0.0], [1.72856064E12, 0.0], [1.72855548E12, 0.0], [1.7285562E12, 0.0], [1.7285577E12, 0.0], [1.72855992E12, 0.0], [1.72856658E12, 0.0], [1.72856214E12, 0.0], [1.72856436E12, 0.0], [1.7285601E12, 0.0], [1.72855602E12, 0.0], [1.72855788E12, 0.0], [1.72856232E12, 0.0], [1.72856454E12, 0.0], [1.72855494E12, 0.0], [1.72856382E12, 0.0], [1.72856604E12, 0.0], [1.728564E12, 0.0], [1.72855734E12, 0.0], [1.72855956E12, 0.0], [1.72856178E12, 0.0], [1.7285664E12, 0.0], [1.72855752E12, 0.0], [1.72856196E12, 0.0], [1.72855974E12, 0.0], [1.72856418E12, 0.0], [1.72856622E12, 0.0], [1.72856124E12, 0.0], [1.72855902E12, 0.0], [1.72856346E12, 0.0], [1.72856568E12, 0.0], [1.72855698E12, 0.0], [1.7285592E12, 0.0], [1.7285553E12, 0.0], [1.72856142E12, 0.0], [1.72856364E12, 0.0], [1.72855938E12, 0.0], [1.72856586E12, 0.0], [1.72855716E12, 0.0], [1.7285616E12, 0.0], [1.72855512E12, 0.0], [1.72855866E12, 0.0], [1.72856088E12, 0.0], [1.72856532E12, 0.0], [1.7285631E12, 0.0], [1.72855626E12, 0.0], [1.72855662E12, 0.0], [1.72855884E12, 0.0], [1.72856106E12, 0.0], [1.72856328E12, 0.0], [1.7285655E12, 0.0], [1.7285568E12, 0.0], [1.72855608E12, 0.0], [1.72856478E12, 0.0], [1.72856496E12, 0.0], [1.7285583E12, 0.0], [1.72856052E12, 0.0], [1.72856274E12, 0.0], [1.72855848E12, 0.0], [1.72856514E12, 0.0], [1.72855644E12, 0.0], [1.72856292E12, 0.0], [1.7285607E12, 0.0], [1.7285622E12, 0.0], [1.72855554E12, 0.0], [1.72855998E12, 0.0], [1.72856442E12, 0.0], [1.72856664E12, 0.0], [1.72855794E12, 0.0], [1.72856016E12, 0.0], [1.72856238E12, 0.0], [1.7285646E12, 0.0], [1.72855536E12, 0.0], [1.72856034E12, 0.0], [1.72855518E12, 0.0], [1.72855812E12, 0.0], [1.72856256E12, 0.0], [1.7285559E12, 0.0], [1.72855962E12, 0.0], [1.72856184E12, 0.0], [1.72856628E12, 0.0], [1.7285574E12, 0.0], [1.72856406E12, 0.0], [1.72855572E12, 0.0], [1.7285598E12, 0.0], [1.72856202E12, 0.0], [1.72856424E12, 0.0], [1.72856646E12, 0.0], [1.72855758E12, 0.0], [1.72855776E12, 0.0], [1.72855704E12, 0.0], [1.72856592E12, 0.0], [1.72856148E12, 0.0], [1.72855926E12, 0.0], [1.7285637E12, 0.0], [1.72856574E12, 0.0], [1.7285661E12, 0.0], [1.72855722E12, 0.0], [1.72855944E12, 0.0], [1.72856166E12, 0.0], [1.72856388E12, 0.0], [1.72856094E12, 0.0], [1.72856316E12, 0.0], [1.7285589E12, 0.0], [1.728555E12, 0.0], [1.72856538E12, 0.0], [1.72855668E12, 0.0], [1.72856112E12, 0.0], [1.72856334E12, 0.0], [1.72856556E12, 0.0], [1.72855686E12, 0.0], [1.72855908E12, 0.0], [1.7285613E12, 0.0], [1.72856352E12, 0.0], [1.72856058E12, 0.0], [1.72855836E12, 0.0], [1.7285628E12, 0.0], [1.72856502E12, 0.0], [1.72855596E12, 0.0], [1.72856076E12, 0.0], [1.72856298E12, 0.0], [1.72855854E12, 0.0], [1.7285652E12, 0.0], [1.72855872E12, 0.0], [1.72855578E12, 0.0], [1.728558E12, 0.0], [1.7285565E12, 0.0], [1.72856244E12, 0.0], [1.72856022E12, 0.0], [1.72856466E12, 0.0], [1.72855818E12, 0.0], [1.7285604E12, 0.0], [1.72855632E12, 0.0], [1.72855614E12, 0.0], [1.72856262E12, 0.0], [1.72856484E12, 0.0], [1.7285619E12, 0.0], [1.72856412E12, 0.0], [1.72855524E12, 0.0], [1.72855986E12, 0.0], [1.72856634E12, 0.0], [1.72855764E12, 0.0], [1.72856208E12, 0.0], [1.7285643E12, 0.0], [1.72855506E12, 0.0], [1.72856652E12, 0.0], [1.72855782E12, 0.0], [1.72856004E12, 0.0], [1.72856226E12, 0.0], [1.72856448E12, 0.0], [1.7285571E12, 0.0], [1.72855932E12, 0.0], [1.72856154E12, 0.0], [1.72856376E12, 0.0], [1.72856598E12, 0.0], [1.72855728E12, 0.0], [1.7285556E12, 0.0], [1.72855542E12, 0.0], [1.72856172E12, 0.0], [1.72856394E12, 0.0], [1.7285595E12, 0.0], [1.72856616E12, 0.0], [1.72855746E12, 0.0], [1.72855968E12, 0.0], [1.72855674E12, 0.0], [1.72855896E12, 0.0], [1.72856562E12, 0.0], [1.72856118E12, 0.0], [1.7285634E12, 0.0], [1.72855656E12, 0.0], [1.72855638E12, 0.0], [1.72855914E12, 0.0], [1.72855692E12, 0.0], [1.72856136E12, 0.0], [1.7285658E12, 0.0], [1.72856358E12, 0.0], [1.72856286E12, 0.0], [1.7285586E12, 0.0], [1.72856508E12, 0.0], [1.72856082E12, 0.0], [1.72856304E12, 0.0], [1.72856544E12, 0.0], [1.728561E12, 0.0], [1.72855878E12, 0.0], [1.72856322E12, 0.0], [1.72856526E12, 0.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72856664E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 58.0, "minX": 1.72855494E12, "maxY": 5289.0, "series": [{"data": [[1.72855584E12, 2607.0], [1.72855806E12, 2992.0], [1.72856028E12, 3084.0], [1.7285625E12, 3379.0], [1.72856472E12, 3659.0], [1.72855566E12, 2514.0], [1.72855824E12, 2762.0], [1.72856268E12, 3470.0], [1.72856046E12, 2960.0], [1.7285649E12, 3848.0], [1.72855842E12, 2438.0], [1.72856064E12, 2908.0], [1.72855548E12, 2443.0], [1.7285562E12, 3156.0], [1.7285577E12, 2268.0], [1.72855992E12, 2626.0], [1.72856658E12, 2773.0], [1.72856214E12, 3253.0], [1.72856436E12, 2980.0], [1.7285601E12, 2720.0], [1.72855602E12, 2590.0], [1.72855788E12, 2563.0], [1.72856232E12, 3075.0], [1.72856454E12, 3700.0], [1.72855494E12, 2795.0], [1.72856382E12, 3097.0], [1.72856604E12, 4622.0], [1.728564E12, 3473.0], [1.72855734E12, 2550.0], [1.72855956E12, 2711.0], [1.72856178E12, 2880.0], [1.7285664E12, 3697.0], [1.72855752E12, 2487.0], [1.72856196E12, 3169.0], [1.72855974E12, 3079.0], [1.72856418E12, 3018.0], [1.72856622E12, 3644.0], [1.72856124E12, 2798.0], [1.72855902E12, 3220.0], [1.72856346E12, 3287.0], [1.72856568E12, 3904.0], [1.72855698E12, 3005.0], [1.7285592E12, 2773.0], [1.7285553E12, 2441.0], [1.72856142E12, 2825.0], [1.72856364E12, 3456.0], [1.72855938E12, 2991.0], [1.72856586E12, 3769.0], [1.72855716E12, 2434.0], [1.7285616E12, 3097.0], [1.72855512E12, 2359.0], [1.72855866E12, 3011.0], [1.72856088E12, 3083.0], [1.72856532E12, 4152.0], [1.7285631E12, 3451.0], [1.72855626E12, 2413.0], [1.72855662E12, 3211.0], [1.72855884E12, 2762.0], [1.72856106E12, 3001.0], [1.72856328E12, 3173.0], [1.7285655E12, 4430.0], [1.7285568E12, 2875.0], [1.72855608E12, 2659.0], [1.72856478E12, 3975.0], [1.72856496E12, 5218.0], [1.7285583E12, 2335.0], [1.72856052E12, 2947.0], [1.72856274E12, 3125.0], [1.72855848E12, 2547.0], [1.72856514E12, 4015.0], [1.72855644E12, 2588.0], [1.72856292E12, 3417.0], [1.7285607E12, 2803.0], [1.7285622E12, 3519.0], [1.72855554E12, 2429.0], [1.72855998E12, 2982.0], [1.72856442E12, 3055.0], [1.72856664E12, 1777.0], [1.72855794E12, 2533.0], [1.72856016E12, 3091.0], [1.72856238E12, 3728.0], [1.7285646E12, 3930.0], [1.72855536E12, 2484.0], [1.72856034E12, 2685.0], [1.72855518E12, 2947.0], [1.72855812E12, 2596.0], [1.72856256E12, 3280.0], [1.7285559E12, 2669.0], [1.72855962E12, 2908.0], [1.72856184E12, 3150.0], [1.72856628E12, 3515.0], [1.7285574E12, 2227.0], [1.72856406E12, 3285.0], [1.72855572E12, 2655.0], [1.7285598E12, 2811.0], [1.72856202E12, 3188.0], [1.72856424E12, 3365.0], [1.72856646E12, 4414.0], [1.72855758E12, 2494.0], [1.72855776E12, 2457.0], [1.72855704E12, 2483.0], [1.72856592E12, 4287.0], [1.72856148E12, 3342.0], [1.72855926E12, 3331.0], [1.7285637E12, 3379.0], [1.72856574E12, 5289.0], [1.7285661E12, 3843.0], [1.72855722E12, 2907.0], [1.72855944E12, 2788.0], [1.72856166E12, 3245.0], [1.72856388E12, 3198.0], [1.72856094E12, 2977.0], [1.72856316E12, 3052.0], [1.7285589E12, 3184.0], [1.728555E12, 2657.0], [1.72856538E12, 4106.0], [1.72855668E12, 3153.0], [1.72856112E12, 3395.0], [1.72856334E12, 3095.0], [1.72856556E12, 3509.0], [1.72855686E12, 2772.0], [1.72855908E12, 3007.0], [1.7285613E12, 2851.0], [1.72856352E12, 3354.0], [1.72856058E12, 2866.0], [1.72855836E12, 2886.0], [1.7285628E12, 3137.0], [1.72856502E12, 4042.0], [1.72855596E12, 2947.0], [1.72856076E12, 3133.0], [1.72856298E12, 3489.0], [1.72855854E12, 2659.0], [1.7285652E12, 3958.0], [1.72855872E12, 2622.0], [1.72855578E12, 2426.0], [1.728558E12, 2857.0], [1.7285565E12, 2452.0], [1.72856244E12, 3765.0], [1.72856022E12, 3002.0], [1.72856466E12, 3914.0], [1.72855818E12, 2484.0], [1.7285604E12, 3073.0], [1.72855632E12, 2536.0], [1.72855614E12, 2604.0], [1.72856262E12, 3297.0], [1.72856484E12, 3987.0], [1.7285619E12, 3557.0], [1.72856412E12, 3184.0], [1.72855524E12, 2476.0], [1.72855986E12, 2913.0], [1.72856634E12, 4491.0], [1.72855764E12, 2528.0], [1.72856208E12, 3039.0], [1.7285643E12, 3572.0], [1.72855506E12, 2437.0], [1.72856652E12, 3739.0], [1.72855782E12, 2986.0], [1.72856004E12, 2995.0], [1.72856226E12, 3457.0], [1.72856448E12, 3151.0], [1.7285571E12, 2593.0], [1.72855932E12, 3026.0], [1.72856154E12, 2827.0], [1.72856376E12, 3419.0], [1.72856598E12, 4494.0], [1.72855728E12, 2548.0], [1.7285556E12, 2713.0], [1.72855542E12, 2483.0], [1.72856172E12, 3181.0], [1.72856394E12, 3170.0], [1.7285595E12, 2899.0], [1.72856616E12, 4240.0], [1.72855746E12, 2608.0], [1.72855968E12, 2885.0], [1.72855674E12, 2770.0], [1.72855896E12, 2985.0], [1.72856562E12, 3666.0], [1.72856118E12, 2950.0], [1.7285634E12, 3182.0], [1.72855656E12, 3163.0], [1.72855638E12, 2621.0], [1.72855914E12, 2898.0], [1.72855692E12, 2946.0], [1.72856136E12, 3243.0], [1.7285658E12, 4143.0], [1.72856358E12, 3204.0], [1.72856286E12, 3740.0], [1.7285586E12, 3229.0], [1.72856508E12, 3741.0], [1.72856082E12, 2761.0], [1.72856304E12, 3072.0], [1.72856544E12, 3740.0], [1.728561E12, 2931.0], [1.72855878E12, 2919.0], [1.72856322E12, 3505.0], [1.72856526E12, 3993.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72855584E12, 1636.4000000000003], [1.72855806E12, 1633.2000000000007], [1.72856028E12, 1798.0], [1.7285625E12, 1873.3000000000006], [1.72856472E12, 2124.0], [1.72855566E12, 1634.0], [1.72855824E12, 1633.0], [1.72856268E12, 1969.6000000000004], [1.72856046E12, 1742.3000000000002], [1.7285649E12, 2125.6], [1.72855842E12, 1523.8], [1.72856064E12, 1755.8000000000002], [1.72855548E12, 1561.9], [1.7285562E12, 1717.8], [1.7285577E12, 1509.0], [1.72855992E12, 1666.0], [1.72856658E12, 1772.2000000000005], [1.72856214E12, 1862.4], [1.72856436E12, 1823.8000000000002], [1.7285601E12, 1729.0], [1.72855602E12, 1576.8000000000006], [1.72855788E12, 1588.5000000000002], [1.72856232E12, 1915.6000000000008], [1.72856454E12, 2099.600000000001], [1.72855494E12, 2403.5], [1.72856382E12, 1880.0000000000005], [1.72856604E12, 2134.6], [1.728564E12, 1860.1], [1.72855734E12, 1687.3], [1.72855956E12, 1685.8000000000002], [1.72856178E12, 1774.0], [1.7285664E12, 2330.0], [1.72855752E12, 1522.6], [1.72856196E12, 1827.4], [1.72855974E12, 1740.0], [1.72856418E12, 1837.0], [1.72856622E12, 2220.0], [1.72856124E12, 1860.0], [1.72855902E12, 1684.5], [1.72856346E12, 1852.1999999999996], [1.72856568E12, 2251.5], [1.72855698E12, 1551.5], [1.7285592E12, 1788.8], [1.7285553E12, 1637.4], [1.72856142E12, 1685.2000000000003], [1.72856364E12, 1932.4000000000003], [1.72855938E12, 1718.1999999999998], [1.72856586E12, 2297.900000000001], [1.72855716E12, 1669.0000000000005], [1.7285616E12, 1733.3], [1.72855512E12, 1582.2000000000005], [1.72855866E12, 1667.0], [1.72856088E12, 1835.6], [1.72856532E12, 2231.0], [1.7285631E12, 1786.5], [1.72855626E12, 1778.6], [1.72855662E12, 1615.0], [1.72855884E12, 1726.0], [1.72856106E12, 1833.2], [1.72856328E12, 1801.1], [1.7285655E12, 2224.8], [1.7285568E12, 1569.0], [1.72855608E12, 1659.0], [1.72856478E12, 2145.7], [1.72856496E12, 2280.0000000000005], [1.7285583E12, 1508.3999999999996], [1.72856052E12, 1734.0], [1.72856274E12, 1900.2999999999997], [1.72855848E12, 1694.0000000000005], [1.72856514E12, 2188.1000000000004], [1.72855644E12, 1679.0], [1.72856292E12, 1987.0], [1.7285607E12, 1676.0], [1.7285622E12, 1969.6], [1.72855554E12, 1654.4], [1.72855998E12, 1759.1999999999998], [1.72856442E12, 1854.0000000000007], [1.72856664E12, 1777.0], [1.72855794E12, 1781.3999999999999], [1.72856016E12, 1781.5000000000002], [1.72856238E12, 1918.0], [1.7285646E12, 2255.0], [1.72855536E12, 1677.0], [1.72856034E12, 1727.0], [1.72855518E12, 1658.8], [1.72855812E12, 1629.1999999999998], [1.72856256E12, 1840.6], [1.7285559E12, 1666.0000000000002], [1.72855962E12, 1755.8000000000002], [1.72856184E12, 1929.2000000000007], [1.72856628E12, 2204.0], [1.7285574E12, 1559.4], [1.72856406E12, 1852.0], [1.72855572E12, 1696.0], [1.7285598E12, 1650.6], [1.72856202E12, 2006.0], [1.72856424E12, 1874.6000000000001], [1.72856646E12, 2202.0000000000005], [1.72855758E12, 1694.1000000000004], [1.72855776E12, 1632.7000000000003], [1.72855704E12, 1616.2000000000007], [1.72856592E12, 2212.2000000000003], [1.72856148E12, 1861.6000000000004], [1.72855926E12, 1648.0], [1.7285637E12, 1777.5], [1.72856574E12, 2179.0999999999995], [1.7285661E12, 2201.3], [1.72855722E12, 1613.0], [1.72855944E12, 1673.0], [1.72856166E12, 1765.6000000000001], [1.72856388E12, 1804.6000000000001], [1.72856094E12, 1649.6000000000001], [1.72856316E12, 1964.6999999999998], [1.7285589E12, 1742.2], [1.728555E12, 1533.5], [1.72856538E12, 2275.8], [1.72855668E12, 1751.0], [1.72856112E12, 1785.1999999999998], [1.72856334E12, 1827.3000000000002], [1.72856556E12, 2151.2000000000003], [1.72855686E12, 1670.4999999999995], [1.72855908E12, 1834.9], [1.7285613E12, 1736.6000000000006], [1.72856352E12, 1864.7], [1.72856058E12, 1742.2], [1.72855836E12, 1611.6000000000001], [1.7285628E12, 1879.8], [1.72856502E12, 2235.8], [1.72855596E12, 1635.4000000000005], [1.72856076E12, 1664.2], [1.72856298E12, 1789.8000000000002], [1.72855854E12, 1802.1999999999998], [1.7285652E12, 2140.5], [1.72855872E12, 1719.0000000000005], [1.72855578E12, 1624.5000000000002], [1.728558E12, 1616.3000000000006], [1.7285565E12, 1614.0000000000002], [1.72856244E12, 1915.0], [1.72856022E12, 1684.3999999999999], [1.72856466E12, 2275.0], [1.72855818E12, 1632.6], [1.7285604E12, 1719.8], [1.72855632E12, 1649.4], [1.72855614E12, 1713.2], [1.72856262E12, 2010.3999999999999], [1.72856484E12, 2233.9], [1.7285619E12, 1855.0], [1.72856412E12, 1832.6000000000001], [1.72855524E12, 1598.2000000000003], [1.72855986E12, 1620.4], [1.72856634E12, 2267.9], [1.72855764E12, 1651.2], [1.72856208E12, 1891.3999999999999], [1.7285643E12, 1861.2000000000003], [1.72855506E12, 1627.9000000000005], [1.72856652E12, 2113.5000000000005], [1.72855782E12, 1720.7000000000005], [1.72856004E12, 1744.5], [1.72856226E12, 2016.7000000000007], [1.72856448E12, 1849.0], [1.7285571E12, 1651.5], [1.72855932E12, 1689.0000000000005], [1.72856154E12, 1658.6], [1.72856376E12, 1791.8000000000002], [1.72856598E12, 2222.7000000000003], [1.72855728E12, 1687.0], [1.7285556E12, 1570.0], [1.72855542E12, 1503.4], [1.72856172E12, 1788.0], [1.72856394E12, 1851.2], [1.7285595E12, 1743.6000000000013], [1.72856616E12, 2247.0], [1.72855746E12, 1728.6000000000004], [1.72855968E12, 1709.7999999999997], [1.72855674E12, 1607.5], [1.72855896E12, 1745.5999999999997], [1.72856562E12, 2179.0], [1.72856118E12, 1794.6], [1.7285634E12, 1854.6000000000008], [1.72855656E12, 1693.7000000000003], [1.72855638E12, 1742.2000000000003], [1.72855914E12, 1652.0], [1.72855692E12, 1619.9], [1.72856136E12, 1741.5000000000002], [1.7285658E12, 2354.0], [1.72856358E12, 1832.2], [1.72856286E12, 1854.0], [1.7285586E12, 1730.8000000000002], [1.72856508E12, 2244.3999999999996], [1.72856082E12, 1670.0], [1.72856304E12, 1894.1999999999998], [1.72856544E12, 2226.0], [1.728561E12, 1724.2000000000005], [1.72855878E12, 1692.6000000000001], [1.72856322E12, 1837.0], [1.72856526E12, 2128.7999999999993]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72855584E12, 2477.139999999999], [1.72855806E12, 2385.7], [1.72856028E12, 2532.8999999999987], [1.7285625E12, 2974.719999999997], [1.72856472E12, 3111.600000000002], [1.72855566E12, 2288.200000000001], [1.72855824E12, 2462.8500000000017], [1.72856268E12, 2720.6099999999988], [1.72856046E12, 2555.0], [1.7285649E12, 3204.9199999999996], [1.72855842E12, 2179.6399999999994], [1.72856064E12, 2522.6500000000024], [1.72855548E12, 2078.87], [1.7285562E12, 2567.999999999998], [1.7285577E12, 2046.6000000000008], [1.72855992E12, 2290.7500000000005], [1.72856658E12, 2316.439999999997], [1.72856214E12, 2766.3199999999997], [1.72856436E12, 2659.4600000000005], [1.7285601E12, 2353.25], [1.72855602E12, 2141.7599999999993], [1.72855788E12, 2247.0499999999993], [1.72856232E12, 2620.7999999999997], [1.72856454E12, 3016.6799999999976], [1.72855494E12, 2795.0], [1.72856382E12, 2673.72], [1.72856604E12, 3503.92], [1.728564E12, 2571.6800000000003], [1.72855734E12, 2240.6799999999985], [1.72855956E12, 2246.319999999998], [1.72856178E12, 2495.9], [1.7285664E12, 3208.4999999999986], [1.72855752E12, 2282.74], [1.72856196E12, 2596.3399999999974], [1.72855974E12, 2431.1], [1.72856418E12, 2841.799999999999], [1.72856622E12, 3005.8399999999983], [1.72856124E12, 2490.0000000000027], [1.72855902E12, 2430.25], [1.72856346E12, 2657.4799999999996], [1.72856568E12, 3234.650000000003], [1.72855698E12, 2185.570000000002], [1.7285592E12, 2437.38], [1.7285553E12, 2392.639999999998], [1.72856142E12, 2624.84], [1.72856364E12, 2772.7200000000003], [1.72855938E12, 2447.219999999996], [1.72856586E12, 3183.380000000002], [1.72855716E12, 2285.5200000000004], [1.7285616E12, 2553.3100000000004], [1.72855512E12, 2246.230000000001], [1.72855866E12, 2547.5999999999995], [1.72856088E12, 2574.439999999998], [1.72856532E12, 3215.0], [1.7285631E12, 2636.0], [1.72855626E12, 2283.8100000000027], [1.72855662E12, 2549.44], [1.72855884E12, 2404.179999999997], [1.72856106E12, 2353.1499999999996], [1.72856328E12, 2563.609999999999], [1.7285655E12, 3135.3899999999985], [1.7285568E12, 2418.7999999999975], [1.72855608E12, 2362.4], [1.72856478E12, 3233.73], [1.72856496E12, 3494.04], [1.7285583E12, 2255.3199999999983], [1.72856052E12, 2517.5499999999975], [1.72856274E12, 2776.51], [1.72855848E12, 2307.0], [1.72856514E12, 3254.810000000002], [1.72855644E12, 2097.999999999999], [1.72856292E12, 2689.0399999999995], [1.7285607E12, 2617.6100000000006], [1.7285622E12, 2890.3599999999988], [1.72855554E12, 2218.639999999998], [1.72855998E12, 2741.0000000000027], [1.72856442E12, 2665.3599999999997], [1.72856664E12, 1777.0], [1.72855794E12, 2271.3200000000015], [1.72856016E12, 2442.27], [1.72856238E12, 2661.2699999999995], [1.7285646E12, 3279.840000000001], [1.72855536E12, 2431.5199999999986], [1.72856034E12, 2439.9000000000024], [1.72855518E12, 2516.9499999999903], [1.72855812E12, 2352.059999999999], [1.72856256E12, 2700.2800000000007], [1.7285559E12, 2364.8399999999992], [1.72855962E12, 2669.999999999998], [1.72856184E12, 2773.0599999999986], [1.72856628E12, 3366.7999999999984], [1.7285574E12, 2132.119999999999], [1.72856406E12, 2660.5], [1.72855572E12, 2347.8], [1.7285598E12, 2489.0800000000004], [1.72856202E12, 2653.399999999998], [1.72856424E12, 2885.920000000001], [1.72856646E12, 3253.4800000000005], [1.72855758E12, 2424.0], [1.72855776E12, 2200.459999999999], [1.72855704E12, 2321.000000000001], [1.72856592E12, 3161.3], [1.72856148E12, 2748.5800000000027], [1.72855926E12, 2496.899999999999], [1.7285637E12, 2710.659999999999], [1.72856574E12, 3479.4500000000016], [1.7285661E12, 3118.3099999999995], [1.72855722E12, 2486.159999999993], [1.72855944E12, 2473.8], [1.72856166E12, 2388.440000000003], [1.72856388E12, 2515.9099999999994], [1.72856094E12, 2386.8800000000015], [1.72856316E12, 2814.4500000000003], [1.7285589E12, 2536.7799999999993], [1.728555E12, 2244.2499999999964], [1.72856538E12, 3351.120000000001], [1.72855668E12, 2491.9399999999946], [1.72856112E12, 2821.6400000000003], [1.72856334E12, 2744.72], [1.72856556E12, 3013.4799999999996], [1.72855686E12, 2497.769999999998], [1.72855908E12, 2639.3], [1.7285613E12, 2442.380000000001], [1.72856352E12, 2722.5199999999977], [1.72856058E12, 2487.04], [1.72855836E12, 2427.7199999999993], [1.7285628E12, 2853.189999999998], [1.72856502E12, 3426.0599999999995], [1.72855596E12, 2454.7599999999993], [1.72856076E12, 2489.239999999999], [1.72856298E12, 2661.040000000001], [1.72855854E12, 2428.29], [1.7285652E12, 3337.600000000002], [1.72855872E12, 2324.94], [1.72855578E12, 2282.9], [1.728558E12, 2412.59], [1.7285565E12, 2270.5599999999995], [1.72856244E12, 2910.0999999999967], [1.72856022E12, 2482.2400000000007], [1.72856466E12, 3524.800000000001], [1.72855818E12, 2320.519999999998], [1.7285604E12, 2635.4299999999994], [1.72855632E12, 2255.619999999998], [1.72855614E12, 2381.799999999999], [1.72856262E12, 2742.7999999999975], [1.72856484E12, 3234.7499999999955], [1.7285619E12, 2704.8100000000018], [1.72856412E12, 2487.52], [1.72855524E12, 2313.28], [1.72855986E12, 2366.4799999999987], [1.72856634E12, 3411.580000000002], [1.72855764E12, 2391.04], [1.72856208E12, 2695.609999999998], [1.7285643E12, 2637.6799999999985], [1.72855506E12, 2434.32], [1.72856652E12, 3154.2000000000007], [1.72855782E12, 2764.8299999999977], [1.72856004E12, 2715.75], [1.72856226E12, 2776.29], [1.72856448E12, 2848.4500000000035], [1.7285571E12, 2370.1499999999987], [1.72855932E12, 2519.08], [1.72856154E12, 2375.6999999999994], [1.72856376E12, 2518.8399999999974], [1.72856598E12, 3562.4100000000003], [1.72855728E12, 2449.5], [1.7285556E12, 2226.2999999999997], [1.72855542E12, 2176.7199999999993], [1.72856172E12, 2531.0], [1.72856394E12, 2781.52], [1.7285595E12, 2506.040000000001], [1.72856616E12, 3234.799999999997], [1.72855746E12, 2557.3599999999988], [1.72855968E12, 2435.619999999996], [1.72855674E12, 2640.9299999999994], [1.72855896E12, 2406.9599999999973], [1.72856562E12, 3167.3499999999995], [1.72856118E12, 2747.9199999999996], [1.7285634E12, 2601.72], [1.72855656E12, 2394.5600000000004], [1.72855638E12, 2459.5000000000023], [1.72855914E12, 2318.8000000000015], [1.72855692E12, 2711.000000000002], [1.72856136E12, 2645.95], [1.7285658E12, 3303.5099999999993], [1.72856358E12, 2716.12], [1.72856286E12, 2601.8], [1.7285586E12, 2728.270000000001], [1.72856508E12, 3193.0600000000004], [1.72856082E12, 2448.4000000000005], [1.72856304E12, 2726.3999999999996], [1.72856544E12, 3267.000000000001], [1.728561E12, 2601.8200000000006], [1.72855878E12, 2548.0], [1.72856322E12, 2759.5499999999993], [1.72856526E12, 2991.54]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72855584E12, 1994.8999999999987], [1.72855806E12, 1969.4], [1.72856028E12, 2085.0], [1.7285625E12, 2232.6499999999996], [1.72856472E12, 2402.0999999999995], [1.72855566E12, 1783.0], [1.72855824E12, 1905.5], [1.72856268E12, 2243.7999999999993], [1.72856046E12, 2026.1], [1.7285649E12, 2466.6499999999996], [1.72855842E12, 1712.999999999999], [1.72856064E12, 2031.2999999999997], [1.72855548E12, 1749.4499999999996], [1.7285562E12, 2005.4999999999998], [1.7285577E12, 1680.0], [1.72855992E12, 1855.5], [1.72856658E12, 1945.1], [1.72856214E12, 2189.099999999999], [1.72856436E12, 2169.7], [1.7285601E12, 2012.75], [1.72855602E12, 1816.0000000000005], [1.72855788E12, 1829.85], [1.72856232E12, 2227.0], [1.72856454E12, 2406.2], [1.72855494E12, 2562.0999999999995], [1.72856382E12, 2209.6], [1.72856604E12, 2511.5], [1.728564E12, 2190.8499999999995], [1.72855734E12, 1867.6999999999998], [1.72855956E12, 1892.1999999999998], [1.72856178E12, 1974.0], [1.7285664E12, 2626.25], [1.72855752E12, 1690.2999999999997], [1.72856196E12, 2134.399999999999], [1.72855974E12, 1993.6999999999998], [1.72856418E12, 2114.0], [1.72856622E12, 2509.199999999999], [1.72856124E12, 2033.0], [1.72855902E12, 1910.25], [1.72856346E12, 2136.2], [1.72856568E12, 2561.0], [1.72855698E12, 1795.4000000000005], [1.7285592E12, 1989.1], [1.7285553E12, 1926.6499999999999], [1.72856142E12, 2004.6], [1.72856364E12, 2127.7999999999997], [1.72855938E12, 1970.5999999999995], [1.72856586E12, 2604.6], [1.72855716E12, 1884.1], [1.7285616E12, 2099.1499999999996], [1.72855512E12, 1755.7], [1.72855866E12, 2013.0], [1.72856088E12, 2126.2000000000003], [1.72856532E12, 2628.0], [1.7285631E12, 2041.75], [1.72855626E12, 1997.35], [1.72855662E12, 1824.5999999999997], [1.72855884E12, 1992.2999999999995], [1.72856106E12, 2060.45], [1.72856328E12, 2067.1499999999996], [1.7285655E12, 2545.499999999999], [1.7285568E12, 1854.0], [1.72855608E12, 1924.0], [1.72856478E12, 2582.0], [1.72856496E12, 2617.6], [1.7285583E12, 1813.4499999999985], [1.72856052E12, 2039.3999999999992], [1.72856274E12, 2208.399999999999], [1.72855848E12, 1939.0999999999985], [1.72856514E12, 2507.649999999999], [1.72855644E12, 1889.0], [1.72856292E12, 2248.3999999999996], [1.7285607E12, 1915.85], [1.7285622E12, 2233.2], [1.72855554E12, 1863.9999999999998], [1.72855998E12, 1997.0000000000002], [1.72856442E12, 2154.0], [1.72856664E12, 1777.0], [1.72855794E12, 1979.8000000000004], [1.72856016E12, 2121.7], [1.72856238E12, 2114.0999999999985], [1.7285646E12, 2614.2999999999993], [1.72855536E12, 1941.3999999999994], [1.72856034E12, 1976.0], [1.72855518E12, 1884.2999999999997], [1.72855812E12, 1811.3999999999992], [1.72856256E12, 2124.1999999999994], [1.7285559E12, 1893.599999999999], [1.72855962E12, 2148.3999999999983], [1.72856184E12, 2293.8999999999996], [1.72856628E12, 2548.0], [1.7285574E12, 1726.0], [1.72856406E12, 2137.0], [1.72855572E12, 1876.0], [1.7285598E12, 1871.4999999999995], [1.72856202E12, 2273.2], [1.72856424E12, 2219.8999999999996], [1.72856646E12, 2497.9999999999977], [1.72855758E12, 1940.4999999999995], [1.72855776E12, 1861.849999999999], [1.72855704E12, 1813.1], [1.72856592E12, 2485.75], [1.72856148E12, 2138.5999999999995], [1.72855926E12, 1966.5], [1.7285637E12, 2068.7999999999984], [1.72856574E12, 2613.399999999998], [1.7285661E12, 2473.8999999999996], [1.72855722E12, 1837.3999999999996], [1.72855944E12, 1950.0], [1.72856166E12, 1992.7999999999997], [1.72856388E12, 2040.05], [1.72856094E12, 1945.4000000000005], [1.72856316E12, 2268.8999999999996], [1.7285589E12, 1964.3999999999996], [1.728555E12, 1770.25], [1.72856538E12, 2559.199999999999], [1.72855668E12, 2008.2999999999986], [1.72856112E12, 2093.7999999999993], [1.72856334E12, 2173.0499999999997], [1.72856556E12, 2478.0], [1.72855686E12, 1934.249999999999], [1.72855908E12, 2039.5499999999997], [1.7285613E12, 1990.4000000000005], [1.72856352E12, 2189.049999999998], [1.72856058E12, 2071.1], [1.72855836E12, 1842.6000000000001], [1.7285628E12, 2239.2999999999993], [1.72856502E12, 2626.8999999999996], [1.72855596E12, 1916.0000000000002], [1.72856076E12, 2018.4000000000005], [1.72856298E12, 2093.5999999999995], [1.72855854E12, 2060.7], [1.7285652E12, 2542.0499999999997], [1.72855872E12, 1943.1999999999998], [1.72855578E12, 1839.9], [1.728558E12, 1903.1999999999991], [1.7285565E12, 1839.4499999999998], [1.72856244E12, 2194.0], [1.72856022E12, 2003.0], [1.72856466E12, 2699.0], [1.72855818E12, 1918.4], [1.7285604E12, 1905.9499999999998], [1.72855632E12, 2010.1999999999996], [1.72855614E12, 1962.1999999999998], [1.72856262E12, 2228.3999999999996], [1.72856484E12, 2587.45], [1.7285619E12, 2121.95], [1.72856412E12, 2137.5], [1.72855524E12, 1838.4000000000003], [1.72855986E12, 1901.1999999999998], [1.72856634E12, 2622.95], [1.72855764E12, 1912.5999999999995], [1.72856208E12, 2193.8999999999996], [1.7285643E12, 2267.2], [1.72855506E12, 1943.3500000000004], [1.72856652E12, 2527.5999999999995], [1.72855782E12, 2004.9], [1.72856004E12, 1990.5], [1.72856226E12, 2245.0], [1.72856448E12, 2295.7999999999997], [1.7285571E12, 1798.75], [1.72855932E12, 1920.1999999999998], [1.72856154E12, 1870.7999999999984], [1.72856376E12, 2037.1999999999998], [1.72856598E12, 2589.6499999999996], [1.72855728E12, 1904.75], [1.7285556E12, 1906.5], [1.72855542E12, 1739.3999999999996], [1.72856172E12, 1951.5], [1.72856394E12, 2173.7999999999997], [1.7285595E12, 2086.1000000000004], [1.72856616E12, 2583.5], [1.72855746E12, 1907.6], [1.72855968E12, 2003.2999999999993], [1.72855674E12, 1788.9], [1.72855896E12, 2086.7999999999993], [1.72856562E12, 2561.0], [1.72856118E12, 2065.5999999999995], [1.7285634E12, 2121.6], [1.72855656E12, 1851.4000000000003], [1.72855638E12, 1943.1999999999996], [1.72855914E12, 1977.0], [1.72855692E12, 1929.9499999999998], [1.72856136E12, 1960.8999999999999], [1.7285658E12, 2654.7], [1.72856358E12, 2138.9999999999995], [1.72856286E12, 2122.5], [1.7285586E12, 1938.2999999999995], [1.72856508E12, 2618.0], [1.72856082E12, 1931.0], [1.72856304E12, 2171.199999999998], [1.72856544E12, 2646.5], [1.728561E12, 1972.5000000000005], [1.72855878E12, 1970.2000000000003], [1.72856322E12, 2134.25], [1.72856526E12, 2443.7999999999997]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.72855584E12, 81.0], [1.72855806E12, 78.0], [1.72856028E12, 72.0], [1.7285625E12, 74.0], [1.72856472E12, 82.0], [1.72855566E12, 80.0], [1.72855824E12, 71.0], [1.72856268E12, 58.0], [1.72856046E12, 70.0], [1.7285649E12, 74.0], [1.72855842E12, 83.0], [1.72856064E12, 75.0], [1.72855548E12, 77.0], [1.7285562E12, 89.0], [1.7285577E12, 76.0], [1.72855992E12, 74.0], [1.72856658E12, 80.0], [1.72856214E12, 71.0], [1.72856436E12, 71.0], [1.7285601E12, 79.0], [1.72855602E12, 71.0], [1.72855788E12, 76.0], [1.72856232E12, 87.0], [1.72856454E12, 67.0], [1.72855494E12, 131.0], [1.72856382E12, 71.0], [1.72856604E12, 78.0], [1.728564E12, 82.0], [1.72855734E12, 75.0], [1.72855956E12, 85.0], [1.72856178E12, 75.0], [1.7285664E12, 74.0], [1.72855752E12, 70.0], [1.72856196E12, 76.0], [1.72855974E12, 83.0], [1.72856418E12, 82.0], [1.72856622E12, 81.0], [1.72856124E12, 70.0], [1.72855902E12, 90.0], [1.72856346E12, 73.0], [1.72856568E12, 75.0], [1.72855698E12, 74.0], [1.7285592E12, 75.0], [1.7285553E12, 81.0], [1.72856142E12, 81.0], [1.72856364E12, 75.0], [1.72855938E12, 74.0], [1.72856586E12, 81.0], [1.72855716E12, 79.0], [1.7285616E12, 74.0], [1.72855512E12, 79.0], [1.72855866E12, 81.0], [1.72856088E12, 70.0], [1.72856532E12, 63.0], [1.7285631E12, 92.0], [1.72855626E12, 65.0], [1.72855662E12, 81.0], [1.72855884E12, 73.0], [1.72856106E12, 72.0], [1.72856328E12, 75.0], [1.7285655E12, 82.0], [1.7285568E12, 79.0], [1.72855608E12, 73.0], [1.72856478E12, 76.0], [1.72856496E12, 89.0], [1.7285583E12, 83.0], [1.72856052E12, 78.0], [1.72856274E12, 78.0], [1.72855848E12, 87.0], [1.72856514E12, 82.0], [1.72855644E12, 97.0], [1.72856292E12, 81.0], [1.7285607E12, 77.0], [1.7285622E12, 72.0], [1.72855554E12, 75.0], [1.72855998E12, 67.0], [1.72856442E12, 72.0], [1.72856664E12, 170.0], [1.72855794E12, 93.0], [1.72856016E12, 85.0], [1.72856238E12, 77.0], [1.7285646E12, 82.0], [1.72855536E12, 95.0], [1.72856034E12, 68.0], [1.72855518E12, 77.0], [1.72855812E12, 62.0], [1.72856256E12, 73.0], [1.7285559E12, 72.0], [1.72855962E12, 72.0], [1.72856184E12, 83.0], [1.72856628E12, 81.0], [1.7285574E12, 78.0], [1.72856406E12, 61.0], [1.72855572E12, 74.0], [1.7285598E12, 73.0], [1.72856202E12, 86.0], [1.72856424E12, 72.0], [1.72856646E12, 73.0], [1.72855758E12, 74.0], [1.72855776E12, 80.0], [1.72855704E12, 82.0], [1.72856592E12, 75.0], [1.72856148E12, 76.0], [1.72855926E12, 78.0], [1.7285637E12, 69.0], [1.72856574E12, 74.0], [1.7285661E12, 89.0], [1.72855722E12, 78.0], [1.72855944E12, 82.0], [1.72856166E12, 79.0], [1.72856388E12, 71.0], [1.72856094E12, 74.0], [1.72856316E12, 77.0], [1.7285589E12, 81.0], [1.728555E12, 91.0], [1.72856538E12, 87.0], [1.72855668E12, 77.0], [1.72856112E12, 79.0], [1.72856334E12, 75.0], [1.72856556E12, 66.0], [1.72855686E12, 78.0], [1.72855908E12, 79.0], [1.7285613E12, 71.0], [1.72856352E12, 80.0], [1.72856058E12, 74.0], [1.72855836E12, 88.0], [1.7285628E12, 67.0], [1.72856502E12, 80.0], [1.72855596E12, 82.0], [1.72856076E12, 69.0], [1.72856298E12, 67.0], [1.72855854E12, 78.0], [1.7285652E12, 65.0], [1.72855872E12, 82.0], [1.72855578E12, 85.0], [1.728558E12, 72.0], [1.7285565E12, 85.0], [1.72856244E12, 82.0], [1.72856022E12, 81.0], [1.72856466E12, 70.0], [1.72855818E12, 76.0], [1.7285604E12, 71.0], [1.72855632E12, 77.0], [1.72855614E12, 77.0], [1.72856262E12, 76.0], [1.72856484E12, 69.0], [1.7285619E12, 67.0], [1.72856412E12, 75.0], [1.72855524E12, 83.0], [1.72855986E12, 87.0], [1.72856634E12, 75.0], [1.72855764E12, 84.0], [1.72856208E12, 77.0], [1.7285643E12, 73.0], [1.72855506E12, 95.0], [1.72856652E12, 60.0], [1.72855782E12, 87.0], [1.72856004E12, 76.0], [1.72856226E12, 70.0], [1.72856448E12, 83.0], [1.7285571E12, 83.0], [1.72855932E12, 80.0], [1.72856154E12, 67.0], [1.72856376E12, 70.0], [1.72856598E12, 81.0], [1.72855728E12, 67.0], [1.7285556E12, 87.0], [1.72855542E12, 72.0], [1.72856172E12, 78.0], [1.72856394E12, 84.0], [1.7285595E12, 63.0], [1.72856616E12, 77.0], [1.72855746E12, 84.0], [1.72855968E12, 78.0], [1.72855674E12, 89.0], [1.72855896E12, 76.0], [1.72856562E12, 82.0], [1.72856118E12, 79.0], [1.7285634E12, 72.0], [1.72855656E12, 72.0], [1.72855638E12, 80.0], [1.72855914E12, 72.0], [1.72855692E12, 77.0], [1.72856136E12, 70.0], [1.7285658E12, 73.0], [1.72856358E12, 76.0], [1.72856286E12, 68.0], [1.7285586E12, 82.0], [1.72856508E12, 73.0], [1.72856082E12, 76.0], [1.72856304E12, 64.0], [1.72856544E12, 81.0], [1.728561E12, 84.0], [1.72855878E12, 82.0], [1.72856322E12, 78.0], [1.72856526E12, 82.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72855584E12, 904.0], [1.72855806E12, 747.0], [1.72856028E12, 768.0], [1.7285625E12, 833.0], [1.72856472E12, 899.0], [1.72855566E12, 721.0], [1.72855824E12, 638.0], [1.72856268E12, 815.0], [1.72856046E12, 677.0], [1.7285649E12, 846.5], [1.72855842E12, 652.0], [1.72856064E12, 779.5], [1.72855548E12, 666.5], [1.7285562E12, 736.0], [1.7285577E12, 625.0], [1.72855992E12, 669.0], [1.72856658E12, 693.0], [1.72856214E12, 849.0], [1.72856436E12, 893.0], [1.7285601E12, 808.0], [1.72855602E12, 676.0], [1.72855788E12, 778.0], [1.72856232E12, 921.0], [1.72856454E12, 799.0], [1.72855494E12, 902.5], [1.72856382E12, 882.0], [1.72856604E12, 862.0], [1.728564E12, 775.5], [1.72855734E12, 584.0], [1.72855956E12, 795.0], [1.72856178E12, 624.0], [1.7285664E12, 959.0], [1.72855752E12, 505.0], [1.72856196E12, 753.0], [1.72855974E12, 747.0], [1.72856418E12, 823.0], [1.72856622E12, 942.0], [1.72856124E12, 754.0], [1.72855902E12, 870.5], [1.72856346E12, 751.0], [1.72856568E12, 1063.0], [1.72855698E12, 541.0], [1.7285592E12, 848.0], [1.7285553E12, 940.0], [1.72856142E12, 636.0], [1.72856364E12, 849.0], [1.72855938E12, 711.0], [1.72856586E12, 1073.5], [1.72855716E12, 714.0], [1.7285616E12, 760.5], [1.72855512E12, 560.0], [1.72855866E12, 639.0], [1.72856088E12, 833.0], [1.72856532E12, 978.0], [1.7285631E12, 698.5], [1.72855626E12, 841.5], [1.72855662E12, 641.0], [1.72855884E12, 695.0], [1.72856106E12, 818.0], [1.72856328E12, 715.0], [1.7285655E12, 837.5], [1.7285568E12, 769.0], [1.72855608E12, 620.0], [1.72856478E12, 845.5], [1.72856496E12, 1008.0], [1.7285583E12, 522.0], [1.72856052E12, 749.5], [1.72856274E12, 847.5], [1.72855848E12, 743.0], [1.72856514E12, 967.5], [1.72855644E12, 726.0], [1.72856292E12, 880.0], [1.7285607E12, 691.5], [1.7285622E12, 776.0], [1.72855554E12, 708.0], [1.72855998E12, 803.0], [1.72856442E12, 740.0], [1.72856664E12, 1345.0], [1.72855794E12, 812.0], [1.72856016E12, 818.0], [1.72856238E12, 821.0], [1.7285646E12, 820.0], [1.72855536E12, 616.0], [1.72856034E12, 742.0], [1.72855518E12, 690.5], [1.72855812E12, 844.5], [1.72856256E12, 665.0], [1.7285559E12, 737.0], [1.72855962E12, 771.0], [1.72856184E12, 704.0], [1.72856628E12, 888.0], [1.7285574E12, 736.0], [1.72856406E12, 731.0], [1.72855572E12, 756.0], [1.7285598E12, 670.0], [1.72856202E12, 865.5], [1.72856424E12, 843.0], [1.72856646E12, 1015.0], [1.72855758E12, 743.0], [1.72855776E12, 659.0], [1.72855704E12, 617.0], [1.72856592E12, 904.5], [1.72856148E12, 758.0], [1.72855926E12, 673.0], [1.7285637E12, 732.0], [1.72856574E12, 871.0], [1.7285661E12, 910.0], [1.72855722E12, 694.0], [1.72855944E12, 772.0], [1.72856166E12, 814.0], [1.72856388E12, 828.5], [1.72856094E12, 670.0], [1.72856316E12, 881.5], [1.7285589E12, 699.0], [1.728555E12, 617.0], [1.72856538E12, 931.0], [1.72855668E12, 793.5], [1.72856112E12, 742.0], [1.72856334E12, 636.5], [1.72856556E12, 859.0], [1.72855686E12, 681.0], [1.72855908E12, 719.5], [1.7285613E12, 732.0], [1.72856352E12, 892.5], [1.72856058E12, 671.0], [1.72855836E12, 573.5], [1.7285628E12, 757.0], [1.72856502E12, 870.0], [1.72855596E12, 628.0], [1.72856076E12, 713.0], [1.72856298E12, 829.0], [1.72855854E12, 704.0], [1.7285652E12, 838.5], [1.72855872E12, 726.0], [1.72855578E12, 729.5], [1.728558E12, 594.5], [1.7285565E12, 756.5], [1.72856244E12, 855.0], [1.72856022E12, 831.0], [1.72856466E12, 925.0], [1.72855818E12, 737.0], [1.7285604E12, 595.5], [1.72855632E12, 929.0], [1.72855614E12, 803.0], [1.72856262E12, 846.0], [1.72856484E12, 919.0], [1.7285619E12, 695.5], [1.72856412E12, 660.0], [1.72855524E12, 410.0], [1.72855986E12, 584.0], [1.72856634E12, 923.5], [1.72855764E12, 643.0], [1.72856208E12, 827.5], [1.7285643E12, 854.0], [1.72855506E12, 452.0], [1.72856652E12, 783.5], [1.72855782E12, 765.5], [1.72856004E12, 774.5], [1.72856226E12, 888.5], [1.72856448E12, 704.5], [1.7285571E12, 737.5], [1.72855932E12, 653.0], [1.72856154E12, 809.0], [1.72856376E12, 706.0], [1.72856598E12, 1039.5], [1.72855728E12, 752.0], [1.7285556E12, 747.0], [1.72855542E12, 553.0], [1.72856172E12, 762.0], [1.72856394E12, 793.0], [1.7285595E12, 794.0], [1.72856616E12, 858.5], [1.72855746E12, 721.0], [1.72855968E12, 687.0], [1.72855674E12, 742.5], [1.72855896E12, 714.0], [1.72856562E12, 962.0], [1.72856118E12, 787.0], [1.7285634E12, 765.0], [1.72855656E12, 699.0], [1.72855638E12, 769.0], [1.72855914E12, 519.0], [1.72855692E12, 633.0], [1.72856136E12, 814.5], [1.7285658E12, 993.0], [1.72856358E12, 554.0], [1.72856286E12, 774.0], [1.7285586E12, 840.5], [1.72856508E12, 903.0], [1.72856082E12, 501.0], [1.72856304E12, 731.0], [1.72856544E12, 799.5], [1.728561E12, 764.0], [1.72855878E12, 598.0], [1.72856322E12, 793.0], [1.72856526E12, 1000.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72856664E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 243.0, "minX": 1.0, "maxY": 1231.0, "series": [{"data": [[2.0, 1065.0], [35.0, 243.0], [3.0, 1002.0], [4.0, 947.0], [5.0, 871.0], [6.0, 808.0], [7.0, 822.0], [8.0, 839.0], [9.0, 840.0], [10.0, 868.5], [11.0, 868.0], [12.0, 794.5], [13.0, 839.5], [14.0, 747.0], [15.0, 753.0], [1.0, 1231.0], [16.0, 693.5], [17.0, 642.0], [18.0, 473.0], [19.0, 552.0], [20.0, 499.0], [21.0, 453.0], [22.0, 387.0], [23.0, 379.0], [24.0, 352.0], [25.0, 358.5], [26.0, 340.0], [27.0, 279.0], [28.0, 301.5], [29.0, 412.0], [31.0, 279.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 35.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 144.0, "minX": 1.0, "maxY": 847.0, "series": [{"data": [[2.0, 755.0], [35.0, 144.0], [3.0, 714.0], [4.0, 686.0], [5.0, 644.0], [6.0, 597.5], [7.0, 604.0], [8.0, 622.0], [9.0, 630.0], [10.0, 645.0], [11.0, 642.5], [12.0, 594.5], [13.0, 627.0], [14.0, 556.0], [15.0, 568.0], [1.0, 847.0], [16.0, 519.0], [17.0, 478.0], [18.0, 325.0], [19.0, 392.0], [20.0, 345.0], [21.0, 291.0], [22.0, 242.0], [23.0, 235.0], [24.0, 207.5], [25.0, 226.0], [26.0, 206.0], [27.0, 169.0], [28.0, 203.0], [29.0, 279.5], [31.0, 176.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 35.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.72855494E12, "maxY": 16.266666666666666, "series": [{"data": [[1.72855584E12, 4.616666666666666], [1.72855806E12, 5.083333333333333], [1.72856028E12, 9.483333333333333], [1.7285625E12, 13.466666666666667], [1.72856472E12, 15.883333333333333], [1.72855566E12, 5.316666666666666], [1.72855824E12, 5.233333333333333], [1.72856268E12, 13.2], [1.72856046E12, 9.8], [1.7285649E12, 16.0], [1.72855842E12, 5.166666666666667], [1.72856064E12, 9.633333333333333], [1.72855548E12, 5.5], [1.7285562E12, 4.95], [1.7285577E12, 5.65], [1.72855992E12, 10.233333333333333], [1.72856658E12, 7.533333333333333], [1.72856214E12, 13.3], [1.72856436E12, 13.35], [1.7285601E12, 9.566666666666666], [1.72855602E12, 5.383333333333334], [1.72855788E12, 5.166666666666667], [1.72856232E12, 12.85], [1.72856454E12, 16.2], [1.72855494E12, 0.6333333333333333], [1.72856382E12, 13.016666666666667], [1.72856604E12, 15.883333333333333], [1.728564E12, 13.8], [1.72855734E12, 5.366666666666666], [1.72855956E12, 9.516666666666667], [1.72856178E12, 5.583333333333333], [1.7285664E12, 14.9], [1.72855752E12, 5.683333333333334], [1.72856196E12, 14.083333333333334], [1.72855974E12, 9.75], [1.72856418E12, 13.483333333333333], [1.72856622E12, 15.75], [1.72856124E12, 9.65], [1.72855902E12, 9.566666666666666], [1.72856346E12, 14.083333333333334], [1.72856568E12, 14.4], [1.72855698E12, 5.633333333333334], [1.7285592E12, 9.35], [1.7285553E12, 2.3], [1.72856142E12, 10.016666666666667], [1.72856364E12, 13.116666666666667], [1.72855938E12, 10.083333333333334], [1.72856586E12, 14.6], [1.72855716E12, 5.3], [1.7285616E12, 9.433333333333334], [1.72855512E12, 2.7], [1.72855866E12, 10.316666666666666], [1.72856088E12, 9.116666666666667], [1.72856532E12, 14.983333333333333], [1.7285631E12, 14.566666666666666], [1.72855626E12, 4.6], [1.72855662E12, 5.183333333333334], [1.72855884E12, 9.883333333333333], [1.72856106E12, 9.3], [1.72856328E12, 14.3], [1.7285655E12, 15.7], [1.7285568E12, 5.15], [1.72855608E12, 5.316666666666666], [1.72856478E12, 16.033333333333335], [1.72856496E12, 14.55], [1.7285583E12, 5.866666666666666], [1.72856052E12, 9.666666666666666], [1.72856274E12, 13.333333333333334], [1.72855848E12, 3.316666666666667], [1.72856514E12, 15.033333333333333], [1.72855644E12, 5.15], [1.72856292E12, 12.683333333333334], [1.7285607E12, 10.033333333333333], [1.7285622E12, 13.25], [1.72855554E12, 5.25], [1.72855998E12, 9.45], [1.72856442E12, 10.0], [1.72856664E12, 0.05], [1.72855794E12, 4.716666666666667], [1.72856016E12, 9.533333333333333], [1.72856238E12, 13.666666666666666], [1.7285646E12, 15.416666666666666], [1.72855536E12, 2.716666666666667], [1.72856034E12, 9.816666666666666], [1.72855518E12, 2.6666666666666665], [1.72855812E12, 4.866666666666666], [1.72856256E12, 14.383333333333333], [1.7285559E12, 5.183333333333334], [1.72855962E12, 9.716666666666667], [1.72856184E12, 13.883333333333333], [1.72856628E12, 15.716666666666667], [1.7285574E12, 5.383333333333334], [1.72856406E12, 14.15], [1.72855572E12, 5.15], [1.7285598E12, 10.416666666666666], [1.72856202E12, 12.8], [1.72856424E12, 13.35], [1.72856646E12, 14.783333333333333], [1.72855758E12, 5.166666666666667], [1.72855776E12, 5.266666666666667], [1.72855704E12, 5.416666666666667], [1.72856592E12, 15.6], [1.72856148E12, 9.416666666666666], [1.72855926E12, 10.15], [1.7285637E12, 14.3], [1.72856574E12, 15.666666666666666], [1.7285661E12, 15.766666666666667], [1.72855722E12, 5.25], [1.72855944E12, 9.65], [1.72856166E12, 9.433333333333334], [1.72856388E12, 13.633333333333333], [1.72856094E12, 10.45], [1.72856316E12, 13.166666666666666], [1.7285589E12, 9.883333333333333], [1.728555E12, 2.7333333333333334], [1.72856538E12, 15.05], [1.72855668E12, 4.933333333333334], [1.72856112E12, 9.583333333333334], [1.72856334E12, 14.266666666666667], [1.72856556E12, 16.183333333333334], [1.72855686E12, 5.366666666666666], [1.72855908E12, 9.766666666666667], [1.7285613E12, 9.616666666666667], [1.72856352E12, 13.2], [1.72856058E12, 9.95], [1.72855836E12, 5.466666666666667], [1.7285628E12, 13.666666666666666], [1.72856502E12, 15.35], [1.72855596E12, 5.383333333333334], [1.72856076E12, 10.116666666666667], [1.72856298E12, 13.783333333333333], [1.72855854E12, 9.316666666666666], [1.7285652E12, 15.866666666666667], [1.72855872E12, 10.016666666666667], [1.72855578E12, 5.0], [1.728558E12, 5.5], [1.7285565E12, 5.266666666666667], [1.72856244E12, 12.816666666666666], [1.72856022E12, 9.583333333333334], [1.72856466E12, 14.816666666666666], [1.72855818E12, 5.05], [1.7285604E12, 10.333333333333334], [1.72855632E12, 4.616666666666666], [1.72855614E12, 4.85], [1.72856262E12, 13.083333333333334], [1.72856484E12, 15.5], [1.7285619E12, 14.0], [1.72856412E12, 14.35], [1.72855524E12, 2.85], [1.72855986E12, 10.583333333333334], [1.72856634E12, 15.0], [1.72855764E12, 5.283333333333333], [1.72856208E12, 13.5], [1.7285643E12, 13.283333333333333], [1.72855506E12, 2.7666666666666666], [1.72856652E12, 16.266666666666666], [1.72855782E12, 4.833333333333333], [1.72856004E12, 9.566666666666666], [1.72856226E12, 12.6], [1.72856448E12, 4.466666666666667], [1.7285571E12, 5.066666666666666], [1.72855932E12, 10.183333333333334], [1.72856154E12, 9.75], [1.72856376E12, 14.516666666666667], [1.72856598E12, 14.8], [1.72855728E12, 5.066666666666666], [1.7285556E12, 5.15], [1.72855542E12, 4.65], [1.72856172E12, 9.116666666666667], [1.72856394E12, 13.716666666666667], [1.7285595E12, 9.616666666666667], [1.72856616E12, 15.566666666666666], [1.72855746E12, 5.05], [1.72855968E12, 10.083333333333334], [1.72855674E12, 4.966666666666667], [1.72855896E12, 9.916666666666666], [1.72856562E12, 15.566666666666666], [1.72856118E12, 9.35], [1.7285634E12, 13.85], [1.72855656E12, 5.133333333333334], [1.72855638E12, 5.016666666666667], [1.72855914E12, 10.65], [1.72855692E12, 5.333333333333333], [1.72856136E12, 9.333333333333334], [1.7285658E12, 14.5], [1.72856358E12, 14.783333333333333], [1.72856286E12, 13.816666666666666], [1.7285586E12, 9.433333333333334], [1.72856508E12, 15.416666666666666], [1.72856082E12, 10.65], [1.72856304E12, 13.916666666666666], [1.72856544E12, 15.9], [1.728561E12, 9.616666666666667], [1.72855878E12, 10.283333333333333], [1.72856322E12, 13.9], [1.72856526E12, 15.416666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72856664E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.72855494E12, "maxY": 16.3, "series": [{"data": [[1.72855584E12, 4.616666666666666], [1.72855806E12, 5.083333333333333], [1.72856028E12, 9.483333333333333], [1.7285625E12, 13.466666666666667], [1.72856472E12, 15.883333333333333], [1.72855566E12, 5.316666666666666], [1.72855824E12, 5.233333333333333], [1.72856268E12, 13.2], [1.72856046E12, 9.8], [1.7285649E12, 16.0], [1.72855842E12, 5.183333333333334], [1.72856064E12, 9.633333333333333], [1.72855548E12, 5.5], [1.7285562E12, 4.95], [1.7285577E12, 5.65], [1.72855992E12, 10.233333333333333], [1.72856658E12, 7.75], [1.72856214E12, 13.3], [1.72856436E12, 13.35], [1.7285601E12, 9.566666666666666], [1.72855602E12, 5.383333333333334], [1.72855788E12, 5.166666666666667], [1.72856232E12, 12.85], [1.72856454E12, 16.183333333333334], [1.72855494E12, 0.6], [1.72856382E12, 13.016666666666667], [1.72856604E12, 15.883333333333333], [1.728564E12, 13.8], [1.72855734E12, 5.366666666666666], [1.72855956E12, 9.516666666666667], [1.72856178E12, 5.483333333333333], [1.7285664E12, 14.9], [1.72855752E12, 5.683333333333334], [1.72856196E12, 14.083333333333334], [1.72855974E12, 9.75], [1.72856418E12, 13.483333333333333], [1.72856622E12, 15.75], [1.72856124E12, 9.65], [1.72855902E12, 9.566666666666666], [1.72856346E12, 14.083333333333334], [1.72856568E12, 14.4], [1.72855698E12, 5.633333333333334], [1.7285592E12, 9.35], [1.7285553E12, 2.3], [1.72856142E12, 10.016666666666667], [1.72856364E12, 13.116666666666667], [1.72855938E12, 10.083333333333334], [1.72856586E12, 14.6], [1.72855716E12, 5.3], [1.7285616E12, 9.433333333333334], [1.72855512E12, 2.7], [1.72855866E12, 10.316666666666666], [1.72856088E12, 9.116666666666667], [1.72856532E12, 14.983333333333333], [1.7285631E12, 14.566666666666666], [1.72855626E12, 4.6], [1.72855662E12, 5.183333333333334], [1.72855884E12, 9.883333333333333], [1.72856106E12, 9.3], [1.72856328E12, 14.3], [1.7285655E12, 15.7], [1.7285568E12, 5.15], [1.72855608E12, 5.316666666666666], [1.72856478E12, 16.033333333333335], [1.72856496E12, 14.55], [1.7285583E12, 5.866666666666666], [1.72856052E12, 9.666666666666666], [1.72856274E12, 13.333333333333334], [1.72855848E12, 3.35], [1.72856514E12, 15.033333333333333], [1.72855644E12, 5.15], [1.72856292E12, 12.683333333333334], [1.7285607E12, 10.033333333333333], [1.7285622E12, 13.25], [1.72855554E12, 5.25], [1.72855998E12, 9.45], [1.72856442E12, 10.116666666666667], [1.72856664E12, 0.06666666666666667], [1.72855794E12, 4.716666666666667], [1.72856016E12, 9.533333333333333], [1.72856238E12, 13.666666666666666], [1.7285646E12, 15.416666666666666], [1.72855536E12, 2.716666666666667], [1.72856034E12, 9.816666666666666], [1.72855518E12, 2.6666666666666665], [1.72855812E12, 4.866666666666666], [1.72856256E12, 14.383333333333333], [1.7285559E12, 5.183333333333334], [1.72855962E12, 9.716666666666667], [1.72856184E12, 13.883333333333333], [1.72856628E12, 15.716666666666667], [1.7285574E12, 5.383333333333334], [1.72856406E12, 14.15], [1.72855572E12, 5.15], [1.7285598E12, 10.416666666666666], [1.72856202E12, 12.8], [1.72856424E12, 13.35], [1.72856646E12, 14.783333333333333], [1.72855758E12, 5.166666666666667], [1.72855776E12, 5.266666666666667], [1.72855704E12, 5.416666666666667], [1.72856592E12, 15.6], [1.72856148E12, 9.416666666666666], [1.72855926E12, 10.15], [1.7285637E12, 14.3], [1.72856574E12, 15.666666666666666], [1.7285661E12, 15.766666666666667], [1.72855722E12, 5.25], [1.72855944E12, 9.65], [1.72856166E12, 9.433333333333334], [1.72856388E12, 13.633333333333333], [1.72856094E12, 10.45], [1.72856316E12, 13.166666666666666], [1.7285589E12, 9.883333333333333], [1.728555E12, 2.7333333333333334], [1.72856538E12, 15.05], [1.72855668E12, 4.933333333333334], [1.72856112E12, 9.583333333333334], [1.72856334E12, 14.266666666666667], [1.72856556E12, 16.183333333333334], [1.72855686E12, 5.366666666666666], [1.72855908E12, 9.766666666666667], [1.7285613E12, 9.616666666666667], [1.72856352E12, 13.2], [1.72856058E12, 9.95], [1.72855836E12, 5.466666666666667], [1.7285628E12, 13.666666666666666], [1.72856502E12, 15.35], [1.72855596E12, 5.383333333333334], [1.72856076E12, 10.116666666666667], [1.72856298E12, 13.783333333333333], [1.72855854E12, 9.2], [1.7285652E12, 15.866666666666667], [1.72855872E12, 10.016666666666667], [1.72855578E12, 5.0], [1.728558E12, 5.5], [1.7285565E12, 5.266666666666667], [1.72856244E12, 12.816666666666666], [1.72856022E12, 9.583333333333334], [1.72856466E12, 14.816666666666666], [1.72855818E12, 5.05], [1.7285604E12, 10.333333333333334], [1.72855632E12, 4.616666666666666], [1.72855614E12, 4.85], [1.72856262E12, 13.083333333333334], [1.72856484E12, 15.5], [1.7285619E12, 14.0], [1.72856412E12, 14.35], [1.72855524E12, 2.85], [1.72855986E12, 10.583333333333334], [1.72856634E12, 15.0], [1.72855764E12, 5.283333333333333], [1.72856208E12, 13.5], [1.7285643E12, 13.283333333333333], [1.72855506E12, 2.7666666666666666], [1.72856652E12, 16.3], [1.72855782E12, 4.833333333333333], [1.72856004E12, 9.566666666666666], [1.72856226E12, 12.6], [1.72856448E12, 4.3], [1.7285571E12, 5.066666666666666], [1.72855932E12, 10.183333333333334], [1.72856154E12, 9.75], [1.72856376E12, 14.516666666666667], [1.72856598E12, 14.8], [1.72855728E12, 5.066666666666666], [1.7285556E12, 5.15], [1.72855542E12, 4.616666666666666], [1.72856172E12, 9.15], [1.72856394E12, 13.716666666666667], [1.7285595E12, 9.616666666666667], [1.72856616E12, 15.566666666666666], [1.72855746E12, 5.05], [1.72855968E12, 10.083333333333334], [1.72855674E12, 4.966666666666667], [1.72855896E12, 9.916666666666666], [1.72856562E12, 15.566666666666666], [1.72856118E12, 9.35], [1.7285634E12, 13.85], [1.72855656E12, 5.133333333333334], [1.72855638E12, 5.016666666666667], [1.72855914E12, 10.65], [1.72855692E12, 5.333333333333333], [1.72856136E12, 9.333333333333334], [1.7285658E12, 14.5], [1.72856358E12, 14.783333333333333], [1.72856286E12, 13.816666666666666], [1.7285586E12, 9.433333333333334], [1.72856508E12, 15.416666666666666], [1.72856082E12, 10.65], [1.72856304E12, 13.916666666666666], [1.72856544E12, 15.9], [1.728561E12, 9.616666666666667], [1.72855878E12, 10.283333333333333], [1.72856322E12, 13.9], [1.72856526E12, 15.416666666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72856664E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.72855494E12, "maxY": 16.3, "series": [{"data": [[1.72855584E12, 4.616666666666666], [1.72855806E12, 5.083333333333333], [1.72856028E12, 9.483333333333333], [1.7285625E12, 13.466666666666667], [1.72856472E12, 15.883333333333333], [1.72855566E12, 5.316666666666666], [1.72855824E12, 5.233333333333333], [1.72856268E12, 13.2], [1.72856046E12, 9.8], [1.7285649E12, 16.0], [1.72855842E12, 5.183333333333334], [1.72856064E12, 9.633333333333333], [1.72855548E12, 5.5], [1.7285562E12, 4.95], [1.7285577E12, 5.65], [1.72855992E12, 10.233333333333333], [1.72856658E12, 7.75], [1.72856214E12, 13.3], [1.72856436E12, 13.35], [1.7285601E12, 9.566666666666666], [1.72855602E12, 5.383333333333334], [1.72855788E12, 5.166666666666667], [1.72856232E12, 12.85], [1.72856454E12, 16.183333333333334], [1.72855494E12, 0.6], [1.72856382E12, 13.016666666666667], [1.72856604E12, 15.883333333333333], [1.728564E12, 13.8], [1.72855734E12, 5.366666666666666], [1.72855956E12, 9.516666666666667], [1.72856178E12, 5.483333333333333], [1.7285664E12, 14.9], [1.72855752E12, 5.683333333333334], [1.72856196E12, 14.083333333333334], [1.72855974E12, 9.75], [1.72856418E12, 13.483333333333333], [1.72856622E12, 15.75], [1.72856124E12, 9.65], [1.72855902E12, 9.566666666666666], [1.72856346E12, 14.083333333333334], [1.72856568E12, 14.4], [1.72855698E12, 5.633333333333334], [1.7285592E12, 9.35], [1.7285553E12, 2.3], [1.72856142E12, 10.016666666666667], [1.72856364E12, 13.116666666666667], [1.72855938E12, 10.083333333333334], [1.72856586E12, 14.6], [1.72855716E12, 5.3], [1.7285616E12, 9.433333333333334], [1.72855512E12, 2.7], [1.72855866E12, 10.316666666666666], [1.72856088E12, 9.116666666666667], [1.72856532E12, 14.983333333333333], [1.7285631E12, 14.566666666666666], [1.72855626E12, 4.6], [1.72855662E12, 5.183333333333334], [1.72855884E12, 9.883333333333333], [1.72856106E12, 9.3], [1.72856328E12, 14.3], [1.7285655E12, 15.7], [1.7285568E12, 5.15], [1.72855608E12, 5.316666666666666], [1.72856478E12, 16.033333333333335], [1.72856496E12, 14.55], [1.7285583E12, 5.866666666666666], [1.72856052E12, 9.666666666666666], [1.72856274E12, 13.333333333333334], [1.72855848E12, 3.35], [1.72856514E12, 15.033333333333333], [1.72855644E12, 5.15], [1.72856292E12, 12.683333333333334], [1.7285607E12, 10.033333333333333], [1.7285622E12, 13.25], [1.72855554E12, 5.25], [1.72855998E12, 9.45], [1.72856442E12, 10.116666666666667], [1.72856664E12, 0.06666666666666667], [1.72855794E12, 4.716666666666667], [1.72856016E12, 9.533333333333333], [1.72856238E12, 13.666666666666666], [1.7285646E12, 15.416666666666666], [1.72855536E12, 2.716666666666667], [1.72856034E12, 9.816666666666666], [1.72855518E12, 2.6666666666666665], [1.72855812E12, 4.866666666666666], [1.72856256E12, 14.383333333333333], [1.7285559E12, 5.183333333333334], [1.72855962E12, 9.716666666666667], [1.72856184E12, 13.883333333333333], [1.72856628E12, 15.716666666666667], [1.7285574E12, 5.383333333333334], [1.72856406E12, 14.15], [1.72855572E12, 5.15], [1.7285598E12, 10.416666666666666], [1.72856202E12, 12.8], [1.72856424E12, 13.35], [1.72856646E12, 14.783333333333333], [1.72855758E12, 5.166666666666667], [1.72855776E12, 5.266666666666667], [1.72855704E12, 5.416666666666667], [1.72856592E12, 15.6], [1.72856148E12, 9.416666666666666], [1.72855926E12, 10.15], [1.7285637E12, 14.3], [1.72856574E12, 15.666666666666666], [1.7285661E12, 15.766666666666667], [1.72855722E12, 5.25], [1.72855944E12, 9.65], [1.72856166E12, 9.433333333333334], [1.72856388E12, 13.633333333333333], [1.72856094E12, 10.45], [1.72856316E12, 13.166666666666666], [1.7285589E12, 9.883333333333333], [1.728555E12, 2.7333333333333334], [1.72856538E12, 15.05], [1.72855668E12, 4.933333333333334], [1.72856112E12, 9.583333333333334], [1.72856334E12, 14.266666666666667], [1.72856556E12, 16.183333333333334], [1.72855686E12, 5.366666666666666], [1.72855908E12, 9.766666666666667], [1.7285613E12, 9.616666666666667], [1.72856352E12, 13.2], [1.72856058E12, 9.95], [1.72855836E12, 5.466666666666667], [1.7285628E12, 13.666666666666666], [1.72856502E12, 15.35], [1.72855596E12, 5.383333333333334], [1.72856076E12, 10.116666666666667], [1.72856298E12, 13.783333333333333], [1.72855854E12, 9.2], [1.7285652E12, 15.866666666666667], [1.72855872E12, 10.016666666666667], [1.72855578E12, 5.0], [1.728558E12, 5.5], [1.7285565E12, 5.266666666666667], [1.72856244E12, 12.816666666666666], [1.72856022E12, 9.583333333333334], [1.72856466E12, 14.816666666666666], [1.72855818E12, 5.05], [1.7285604E12, 10.333333333333334], [1.72855632E12, 4.616666666666666], [1.72855614E12, 4.85], [1.72856262E12, 13.083333333333334], [1.72856484E12, 15.5], [1.7285619E12, 14.0], [1.72856412E12, 14.35], [1.72855524E12, 2.85], [1.72855986E12, 10.583333333333334], [1.72856634E12, 15.0], [1.72855764E12, 5.283333333333333], [1.72856208E12, 13.5], [1.7285643E12, 13.283333333333333], [1.72855506E12, 2.7666666666666666], [1.72856652E12, 16.3], [1.72855782E12, 4.833333333333333], [1.72856004E12, 9.566666666666666], [1.72856226E12, 12.6], [1.72856448E12, 4.3], [1.7285571E12, 5.066666666666666], [1.72855932E12, 10.183333333333334], [1.72856154E12, 9.75], [1.72856376E12, 14.516666666666667], [1.72856598E12, 14.8], [1.72855728E12, 5.066666666666666], [1.7285556E12, 5.15], [1.72855542E12, 4.616666666666666], [1.72856172E12, 9.15], [1.72856394E12, 13.716666666666667], [1.7285595E12, 9.616666666666667], [1.72856616E12, 15.566666666666666], [1.72855746E12, 5.05], [1.72855968E12, 10.083333333333334], [1.72855674E12, 4.966666666666667], [1.72855896E12, 9.916666666666666], [1.72856562E12, 15.566666666666666], [1.72856118E12, 9.35], [1.7285634E12, 13.85], [1.72855656E12, 5.133333333333334], [1.72855638E12, 5.016666666666667], [1.72855914E12, 10.65], [1.72855692E12, 5.333333333333333], [1.72856136E12, 9.333333333333334], [1.7285658E12, 14.5], [1.72856358E12, 14.783333333333333], [1.72856286E12, 13.816666666666666], [1.7285586E12, 9.433333333333334], [1.72856508E12, 15.416666666666666], [1.72856082E12, 10.65], [1.72856304E12, 13.916666666666666], [1.72856544E12, 15.9], [1.728561E12, 9.616666666666667], [1.72855878E12, 10.283333333333333], [1.72856322E12, 13.9], [1.72856526E12, 15.416666666666666]], "isOverall": false, "label": "getmap-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72856664E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.72855494E12, "maxY": 16.3, "series": [{"data": [[1.72855584E12, 4.616666666666666], [1.72855806E12, 5.083333333333333], [1.72856028E12, 9.483333333333333], [1.7285625E12, 13.466666666666667], [1.72856472E12, 15.883333333333333], [1.72855566E12, 5.316666666666666], [1.72855824E12, 5.233333333333333], [1.72856268E12, 13.2], [1.72856046E12, 9.8], [1.7285649E12, 16.0], [1.72855842E12, 5.183333333333334], [1.72856064E12, 9.633333333333333], [1.72855548E12, 5.5], [1.7285562E12, 4.95], [1.7285577E12, 5.65], [1.72855992E12, 10.233333333333333], [1.72856658E12, 7.75], [1.72856214E12, 13.3], [1.72856436E12, 13.35], [1.7285601E12, 9.566666666666666], [1.72855602E12, 5.383333333333334], [1.72855788E12, 5.166666666666667], [1.72856232E12, 12.85], [1.72856454E12, 16.183333333333334], [1.72855494E12, 0.6], [1.72856382E12, 13.016666666666667], [1.72856604E12, 15.883333333333333], [1.728564E12, 13.8], [1.72855734E12, 5.366666666666666], [1.72855956E12, 9.516666666666667], [1.72856178E12, 5.483333333333333], [1.7285664E12, 14.9], [1.72855752E12, 5.683333333333334], [1.72856196E12, 14.083333333333334], [1.72855974E12, 9.75], [1.72856418E12, 13.483333333333333], [1.72856622E12, 15.75], [1.72856124E12, 9.65], [1.72855902E12, 9.566666666666666], [1.72856346E12, 14.083333333333334], [1.72856568E12, 14.4], [1.72855698E12, 5.633333333333334], [1.7285592E12, 9.35], [1.7285553E12, 2.3], [1.72856142E12, 10.016666666666667], [1.72856364E12, 13.116666666666667], [1.72855938E12, 10.083333333333334], [1.72856586E12, 14.6], [1.72855716E12, 5.3], [1.7285616E12, 9.433333333333334], [1.72855512E12, 2.7], [1.72855866E12, 10.316666666666666], [1.72856088E12, 9.116666666666667], [1.72856532E12, 14.983333333333333], [1.7285631E12, 14.566666666666666], [1.72855626E12, 4.6], [1.72855662E12, 5.183333333333334], [1.72855884E12, 9.883333333333333], [1.72856106E12, 9.3], [1.72856328E12, 14.3], [1.7285655E12, 15.7], [1.7285568E12, 5.15], [1.72855608E12, 5.316666666666666], [1.72856478E12, 16.033333333333335], [1.72856496E12, 14.55], [1.7285583E12, 5.866666666666666], [1.72856052E12, 9.666666666666666], [1.72856274E12, 13.333333333333334], [1.72855848E12, 3.35], [1.72856514E12, 15.033333333333333], [1.72855644E12, 5.15], [1.72856292E12, 12.683333333333334], [1.7285607E12, 10.033333333333333], [1.7285622E12, 13.25], [1.72855554E12, 5.25], [1.72855998E12, 9.45], [1.72856442E12, 10.116666666666667], [1.72856664E12, 0.06666666666666667], [1.72855794E12, 4.716666666666667], [1.72856016E12, 9.533333333333333], [1.72856238E12, 13.666666666666666], [1.7285646E12, 15.416666666666666], [1.72855536E12, 2.716666666666667], [1.72856034E12, 9.816666666666666], [1.72855518E12, 2.6666666666666665], [1.72855812E12, 4.866666666666666], [1.72856256E12, 14.383333333333333], [1.7285559E12, 5.183333333333334], [1.72855962E12, 9.716666666666667], [1.72856184E12, 13.883333333333333], [1.72856628E12, 15.716666666666667], [1.7285574E12, 5.383333333333334], [1.72856406E12, 14.15], [1.72855572E12, 5.15], [1.7285598E12, 10.416666666666666], [1.72856202E12, 12.8], [1.72856424E12, 13.35], [1.72856646E12, 14.783333333333333], [1.72855758E12, 5.166666666666667], [1.72855776E12, 5.266666666666667], [1.72855704E12, 5.416666666666667], [1.72856592E12, 15.6], [1.72856148E12, 9.416666666666666], [1.72855926E12, 10.15], [1.7285637E12, 14.3], [1.72856574E12, 15.666666666666666], [1.7285661E12, 15.766666666666667], [1.72855722E12, 5.25], [1.72855944E12, 9.65], [1.72856166E12, 9.433333333333334], [1.72856388E12, 13.633333333333333], [1.72856094E12, 10.45], [1.72856316E12, 13.166666666666666], [1.7285589E12, 9.883333333333333], [1.728555E12, 2.7333333333333334], [1.72856538E12, 15.05], [1.72855668E12, 4.933333333333334], [1.72856112E12, 9.583333333333334], [1.72856334E12, 14.266666666666667], [1.72856556E12, 16.183333333333334], [1.72855686E12, 5.366666666666666], [1.72855908E12, 9.766666666666667], [1.7285613E12, 9.616666666666667], [1.72856352E12, 13.2], [1.72856058E12, 9.95], [1.72855836E12, 5.466666666666667], [1.7285628E12, 13.666666666666666], [1.72856502E12, 15.35], [1.72855596E12, 5.383333333333334], [1.72856076E12, 10.116666666666667], [1.72856298E12, 13.783333333333333], [1.72855854E12, 9.2], [1.7285652E12, 15.866666666666667], [1.72855872E12, 10.016666666666667], [1.72855578E12, 5.0], [1.728558E12, 5.5], [1.7285565E12, 5.266666666666667], [1.72856244E12, 12.816666666666666], [1.72856022E12, 9.583333333333334], [1.72856466E12, 14.816666666666666], [1.72855818E12, 5.05], [1.7285604E12, 10.333333333333334], [1.72855632E12, 4.616666666666666], [1.72855614E12, 4.85], [1.72856262E12, 13.083333333333334], [1.72856484E12, 15.5], [1.7285619E12, 14.0], [1.72856412E12, 14.35], [1.72855524E12, 2.85], [1.72855986E12, 10.583333333333334], [1.72856634E12, 15.0], [1.72855764E12, 5.283333333333333], [1.72856208E12, 13.5], [1.7285643E12, 13.283333333333333], [1.72855506E12, 2.7666666666666666], [1.72856652E12, 16.3], [1.72855782E12, 4.833333333333333], [1.72856004E12, 9.566666666666666], [1.72856226E12, 12.6], [1.72856448E12, 4.3], [1.7285571E12, 5.066666666666666], [1.72855932E12, 10.183333333333334], [1.72856154E12, 9.75], [1.72856376E12, 14.516666666666667], [1.72856598E12, 14.8], [1.72855728E12, 5.066666666666666], [1.7285556E12, 5.15], [1.72855542E12, 4.616666666666666], [1.72856172E12, 9.15], [1.72856394E12, 13.716666666666667], [1.7285595E12, 9.616666666666667], [1.72856616E12, 15.566666666666666], [1.72855746E12, 5.05], [1.72855968E12, 10.083333333333334], [1.72855674E12, 4.966666666666667], [1.72855896E12, 9.916666666666666], [1.72856562E12, 15.566666666666666], [1.72856118E12, 9.35], [1.7285634E12, 13.85], [1.72855656E12, 5.133333333333334], [1.72855638E12, 5.016666666666667], [1.72855914E12, 10.65], [1.72855692E12, 5.333333333333333], [1.72856136E12, 9.333333333333334], [1.7285658E12, 14.5], [1.72856358E12, 14.783333333333333], [1.72856286E12, 13.816666666666666], [1.7285586E12, 9.433333333333334], [1.72856508E12, 15.416666666666666], [1.72856082E12, 10.65], [1.72856304E12, 13.916666666666666], [1.72856544E12, 15.9], [1.728561E12, 9.616666666666667], [1.72855878E12, 10.283333333333333], [1.72856322E12, 13.9], [1.72856526E12, 15.416666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72856664E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

