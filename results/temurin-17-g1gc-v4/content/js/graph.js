/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 24.0, "minX": 0.0, "maxY": 3880.0, "series": [{"data": [[0.0, 24.0], [0.1, 41.0], [0.2, 43.0], [0.3, 45.0], [0.4, 47.0], [0.5, 48.0], [0.6, 50.0], [0.7, 51.0], [0.8, 52.0], [0.9, 52.0], [1.0, 53.0], [1.1, 54.0], [1.2, 55.0], [1.3, 56.0], [1.4, 57.0], [1.5, 57.0], [1.6, 58.0], [1.7, 59.0], [1.8, 59.0], [1.9, 60.0], [2.0, 61.0], [2.1, 61.0], [2.2, 62.0], [2.3, 62.0], [2.4, 63.0], [2.5, 63.0], [2.6, 64.0], [2.7, 64.0], [2.8, 65.0], [2.9, 65.0], [3.0, 66.0], [3.1, 66.0], [3.2, 67.0], [3.3, 67.0], [3.4, 67.0], [3.5, 68.0], [3.6, 68.0], [3.7, 69.0], [3.8, 69.0], [3.9, 70.0], [4.0, 70.0], [4.1, 71.0], [4.2, 71.0], [4.3, 71.0], [4.4, 72.0], [4.5, 72.0], [4.6, 73.0], [4.7, 73.0], [4.8, 73.0], [4.9, 74.0], [5.0, 74.0], [5.1, 75.0], [5.2, 75.0], [5.3, 75.0], [5.4, 76.0], [5.5, 76.0], [5.6, 76.0], [5.7, 77.0], [5.8, 77.0], [5.9, 78.0], [6.0, 78.0], [6.1, 78.0], [6.2, 79.0], [6.3, 79.0], [6.4, 80.0], [6.5, 80.0], [6.6, 80.0], [6.7, 81.0], [6.8, 81.0], [6.9, 81.0], [7.0, 82.0], [7.1, 82.0], [7.2, 82.0], [7.3, 83.0], [7.4, 83.0], [7.5, 83.0], [7.6, 84.0], [7.7, 84.0], [7.8, 84.0], [7.9, 85.0], [8.0, 85.0], [8.1, 86.0], [8.2, 86.0], [8.3, 86.0], [8.4, 87.0], [8.5, 87.0], [8.6, 87.0], [8.7, 87.0], [8.8, 88.0], [8.9, 88.0], [9.0, 88.0], [9.1, 89.0], [9.2, 89.0], [9.3, 89.0], [9.4, 90.0], [9.5, 90.0], [9.6, 91.0], [9.7, 91.0], [9.8, 91.0], [9.9, 91.0], [10.0, 92.0], [10.1, 92.0], [10.2, 92.0], [10.3, 93.0], [10.4, 93.0], [10.5, 93.0], [10.6, 94.0], [10.7, 94.0], [10.8, 94.0], [10.9, 95.0], [11.0, 95.0], [11.1, 95.0], [11.2, 96.0], [11.3, 96.0], [11.4, 96.0], [11.5, 97.0], [11.6, 97.0], [11.7, 97.0], [11.8, 98.0], [11.9, 98.0], [12.0, 98.0], [12.1, 99.0], [12.2, 99.0], [12.3, 99.0], [12.4, 100.0], [12.5, 100.0], [12.6, 100.0], [12.7, 101.0], [12.8, 101.0], [12.9, 101.0], [13.0, 102.0], [13.1, 102.0], [13.2, 102.0], [13.3, 103.0], [13.4, 103.0], [13.5, 103.0], [13.6, 103.0], [13.7, 104.0], [13.8, 104.0], [13.9, 104.0], [14.0, 105.0], [14.1, 105.0], [14.2, 105.0], [14.3, 106.0], [14.4, 106.0], [14.5, 106.0], [14.6, 107.0], [14.7, 107.0], [14.8, 107.0], [14.9, 108.0], [15.0, 108.0], [15.1, 108.0], [15.2, 109.0], [15.3, 109.0], [15.4, 109.0], [15.5, 110.0], [15.6, 110.0], [15.7, 111.0], [15.8, 111.0], [15.9, 111.0], [16.0, 112.0], [16.1, 112.0], [16.2, 112.0], [16.3, 113.0], [16.4, 113.0], [16.5, 113.0], [16.6, 114.0], [16.7, 114.0], [16.8, 114.0], [16.9, 115.0], [17.0, 115.0], [17.1, 116.0], [17.2, 116.0], [17.3, 116.0], [17.4, 117.0], [17.5, 117.0], [17.6, 117.0], [17.7, 118.0], [17.8, 118.0], [17.9, 118.0], [18.0, 119.0], [18.1, 119.0], [18.2, 120.0], [18.3, 120.0], [18.4, 120.0], [18.5, 121.0], [18.6, 121.0], [18.7, 121.0], [18.8, 122.0], [18.9, 122.0], [19.0, 123.0], [19.1, 123.0], [19.2, 123.0], [19.3, 124.0], [19.4, 124.0], [19.5, 124.0], [19.6, 125.0], [19.7, 125.0], [19.8, 126.0], [19.9, 126.0], [20.0, 126.0], [20.1, 127.0], [20.2, 127.0], [20.3, 128.0], [20.4, 128.0], [20.5, 128.0], [20.6, 129.0], [20.7, 129.0], [20.8, 130.0], [20.9, 130.0], [21.0, 130.0], [21.1, 131.0], [21.2, 131.0], [21.3, 132.0], [21.4, 132.0], [21.5, 132.0], [21.6, 133.0], [21.7, 133.0], [21.8, 134.0], [21.9, 134.0], [22.0, 134.0], [22.1, 135.0], [22.2, 135.0], [22.3, 136.0], [22.4, 136.0], [22.5, 137.0], [22.6, 137.0], [22.7, 137.0], [22.8, 138.0], [22.9, 138.0], [23.0, 139.0], [23.1, 139.0], [23.2, 140.0], [23.3, 140.0], [23.4, 141.0], [23.5, 141.0], [23.6, 142.0], [23.7, 142.0], [23.8, 142.0], [23.9, 143.0], [24.0, 143.0], [24.1, 144.0], [24.2, 144.0], [24.3, 145.0], [24.4, 145.0], [24.5, 146.0], [24.6, 146.0], [24.7, 147.0], [24.8, 147.0], [24.9, 148.0], [25.0, 148.0], [25.1, 148.0], [25.2, 149.0], [25.3, 149.0], [25.4, 150.0], [25.5, 150.0], [25.6, 151.0], [25.7, 151.0], [25.8, 152.0], [25.9, 152.0], [26.0, 153.0], [26.1, 153.0], [26.2, 154.0], [26.3, 154.0], [26.4, 155.0], [26.5, 155.0], [26.6, 156.0], [26.7, 156.0], [26.8, 157.0], [26.9, 157.0], [27.0, 158.0], [27.1, 158.0], [27.2, 159.0], [27.3, 159.0], [27.4, 160.0], [27.5, 160.0], [27.6, 161.0], [27.7, 161.0], [27.8, 162.0], [27.9, 162.0], [28.0, 163.0], [28.1, 164.0], [28.2, 164.0], [28.3, 165.0], [28.4, 165.0], [28.5, 166.0], [28.6, 166.0], [28.7, 167.0], [28.8, 168.0], [28.9, 168.0], [29.0, 169.0], [29.1, 169.0], [29.2, 170.0], [29.3, 170.0], [29.4, 171.0], [29.5, 172.0], [29.6, 172.0], [29.7, 173.0], [29.8, 174.0], [29.9, 174.0], [30.0, 175.0], [30.1, 175.0], [30.2, 176.0], [30.3, 177.0], [30.4, 177.0], [30.5, 178.0], [30.6, 178.0], [30.7, 179.0], [30.8, 180.0], [30.9, 180.0], [31.0, 181.0], [31.1, 182.0], [31.2, 183.0], [31.3, 183.0], [31.4, 184.0], [31.5, 185.0], [31.6, 185.0], [31.7, 186.0], [31.8, 187.0], [31.9, 187.0], [32.0, 188.0], [32.1, 189.0], [32.2, 190.0], [32.3, 190.0], [32.4, 191.0], [32.5, 192.0], [32.6, 193.0], [32.7, 193.0], [32.8, 194.0], [32.9, 195.0], [33.0, 196.0], [33.1, 197.0], [33.2, 197.0], [33.3, 198.0], [33.4, 199.0], [33.5, 200.0], [33.6, 200.0], [33.7, 201.0], [33.8, 202.0], [33.9, 203.0], [34.0, 204.0], [34.1, 205.0], [34.2, 205.0], [34.3, 206.0], [34.4, 207.0], [34.5, 208.0], [34.6, 209.0], [34.7, 210.0], [34.8, 211.0], [34.9, 212.0], [35.0, 213.0], [35.1, 214.0], [35.2, 215.0], [35.3, 216.0], [35.4, 217.0], [35.5, 218.0], [35.6, 219.0], [35.7, 220.0], [35.8, 221.0], [35.9, 222.0], [36.0, 223.0], [36.1, 224.0], [36.2, 226.0], [36.3, 227.0], [36.4, 228.0], [36.5, 229.0], [36.6, 230.0], [36.7, 231.0], [36.8, 232.0], [36.9, 234.0], [37.0, 235.0], [37.1, 236.0], [37.2, 237.0], [37.3, 238.0], [37.4, 240.0], [37.5, 241.0], [37.6, 242.0], [37.7, 244.0], [37.8, 245.0], [37.9, 246.0], [38.0, 247.0], [38.1, 249.0], [38.2, 250.0], [38.3, 252.0], [38.4, 253.0], [38.5, 255.0], [38.6, 256.0], [38.7, 258.0], [38.8, 259.0], [38.9, 261.0], [39.0, 263.0], [39.1, 265.0], [39.2, 266.0], [39.3, 268.0], [39.4, 270.0], [39.5, 272.0], [39.6, 274.0], [39.7, 275.0], [39.8, 277.0], [39.9, 279.0], [40.0, 281.0], [40.1, 283.0], [40.2, 285.0], [40.3, 287.0], [40.4, 289.0], [40.5, 291.0], [40.6, 293.0], [40.7, 295.0], [40.8, 298.0], [40.9, 300.0], [41.0, 302.0], [41.1, 304.0], [41.2, 306.0], [41.3, 309.0], [41.4, 311.0], [41.5, 314.0], [41.6, 316.0], [41.7, 318.0], [41.8, 321.0], [41.9, 323.0], [42.0, 326.0], [42.1, 328.0], [42.2, 331.0], [42.3, 333.0], [42.4, 336.0], [42.5, 339.0], [42.6, 341.0], [42.7, 344.0], [42.8, 347.0], [42.9, 350.0], [43.0, 352.0], [43.1, 355.0], [43.2, 359.0], [43.3, 361.0], [43.4, 364.0], [43.5, 367.0], [43.6, 370.0], [43.7, 372.0], [43.8, 375.0], [43.9, 378.0], [44.0, 381.0], [44.1, 384.0], [44.2, 387.0], [44.3, 390.0], [44.4, 394.0], [44.5, 397.0], [44.6, 400.0], [44.7, 403.0], [44.8, 406.0], [44.9, 409.0], [45.0, 413.0], [45.1, 416.0], [45.2, 419.0], [45.3, 422.0], [45.4, 425.0], [45.5, 428.0], [45.6, 431.0], [45.7, 434.0], [45.8, 438.0], [45.9, 441.0], [46.0, 443.0], [46.1, 446.0], [46.2, 449.0], [46.3, 452.0], [46.4, 455.0], [46.5, 459.0], [46.6, 461.0], [46.7, 464.0], [46.8, 467.0], [46.9, 470.0], [47.0, 473.0], [47.1, 476.0], [47.2, 479.0], [47.3, 482.0], [47.4, 485.0], [47.5, 488.0], [47.6, 491.0], [47.7, 494.0], [47.8, 496.0], [47.9, 499.0], [48.0, 502.0], [48.1, 504.0], [48.2, 507.0], [48.3, 510.0], [48.4, 513.0], [48.5, 515.0], [48.6, 518.0], [48.7, 521.0], [48.8, 523.0], [48.9, 526.0], [49.0, 529.0], [49.1, 532.0], [49.2, 534.0], [49.3, 537.0], [49.4, 539.0], [49.5, 541.0], [49.6, 544.0], [49.7, 546.0], [49.8, 548.0], [49.9, 551.0], [50.0, 554.0], [50.1, 556.0], [50.2, 559.0], [50.3, 561.0], [50.4, 563.0], [50.5, 566.0], [50.6, 568.0], [50.7, 571.0], [50.8, 573.0], [50.9, 575.0], [51.0, 578.0], [51.1, 580.0], [51.2, 583.0], [51.3, 585.0], [51.4, 587.0], [51.5, 590.0], [51.6, 592.0], [51.7, 594.0], [51.8, 596.0], [51.9, 599.0], [52.0, 601.0], [52.1, 604.0], [52.2, 606.0], [52.3, 609.0], [52.4, 611.0], [52.5, 613.0], [52.6, 615.0], [52.7, 618.0], [52.8, 620.0], [52.9, 623.0], [53.0, 625.0], [53.1, 627.0], [53.2, 629.0], [53.3, 631.0], [53.4, 633.0], [53.5, 635.0], [53.6, 638.0], [53.7, 640.0], [53.8, 642.0], [53.9, 644.0], [54.0, 646.0], [54.1, 649.0], [54.2, 651.0], [54.3, 653.0], [54.4, 655.0], [54.5, 657.0], [54.6, 660.0], [54.7, 662.0], [54.8, 664.0], [54.9, 666.0], [55.0, 669.0], [55.1, 671.0], [55.2, 673.0], [55.3, 675.0], [55.4, 677.0], [55.5, 679.0], [55.6, 681.0], [55.7, 683.0], [55.8, 685.0], [55.9, 687.0], [56.0, 689.0], [56.1, 691.0], [56.2, 694.0], [56.3, 696.0], [56.4, 698.0], [56.5, 700.0], [56.6, 702.0], [56.7, 704.0], [56.8, 707.0], [56.9, 709.0], [57.0, 711.0], [57.1, 713.0], [57.2, 715.0], [57.3, 717.0], [57.4, 719.0], [57.5, 721.0], [57.6, 723.0], [57.7, 725.0], [57.8, 727.0], [57.9, 729.0], [58.0, 731.0], [58.1, 733.0], [58.2, 735.0], [58.3, 737.0], [58.4, 739.0], [58.5, 741.0], [58.6, 743.0], [58.7, 745.0], [58.8, 747.0], [58.9, 749.0], [59.0, 751.0], [59.1, 753.0], [59.2, 755.0], [59.3, 757.0], [59.4, 759.0], [59.5, 761.0], [59.6, 763.0], [59.7, 765.0], [59.8, 767.0], [59.9, 769.0], [60.0, 771.0], [60.1, 774.0], [60.2, 776.0], [60.3, 778.0], [60.4, 780.0], [60.5, 782.0], [60.6, 784.0], [60.7, 786.0], [60.8, 787.0], [60.9, 789.0], [61.0, 791.0], [61.1, 793.0], [61.2, 795.0], [61.3, 798.0], [61.4, 800.0], [61.5, 802.0], [61.6, 804.0], [61.7, 806.0], [61.8, 808.0], [61.9, 810.0], [62.0, 812.0], [62.1, 815.0], [62.2, 817.0], [62.3, 819.0], [62.4, 820.0], [62.5, 823.0], [62.6, 825.0], [62.7, 827.0], [62.8, 829.0], [62.9, 831.0], [63.0, 833.0], [63.1, 834.0], [63.2, 836.0], [63.3, 838.0], [63.4, 840.0], [63.5, 842.0], [63.6, 844.0], [63.7, 846.0], [63.8, 848.0], [63.9, 850.0], [64.0, 852.0], [64.1, 855.0], [64.2, 857.0], [64.3, 859.0], [64.4, 860.0], [64.5, 862.0], [64.6, 864.0], [64.7, 867.0], [64.8, 869.0], [64.9, 871.0], [65.0, 873.0], [65.1, 875.0], [65.2, 877.0], [65.3, 879.0], [65.4, 881.0], [65.5, 883.0], [65.6, 885.0], [65.7, 887.0], [65.8, 889.0], [65.9, 891.0], [66.0, 893.0], [66.1, 895.0], [66.2, 897.0], [66.3, 899.0], [66.4, 901.0], [66.5, 903.0], [66.6, 905.0], [66.7, 908.0], [66.8, 910.0], [66.9, 912.0], [67.0, 914.0], [67.1, 916.0], [67.2, 918.0], [67.3, 920.0], [67.4, 922.0], [67.5, 924.0], [67.6, 926.0], [67.7, 928.0], [67.8, 930.0], [67.9, 932.0], [68.0, 934.0], [68.1, 936.0], [68.2, 938.0], [68.3, 941.0], [68.4, 942.0], [68.5, 945.0], [68.6, 947.0], [68.7, 949.0], [68.8, 951.0], [68.9, 953.0], [69.0, 955.0], [69.1, 957.0], [69.2, 959.0], [69.3, 961.0], [69.4, 964.0], [69.5, 966.0], [69.6, 968.0], [69.7, 970.0], [69.8, 973.0], [69.9, 975.0], [70.0, 977.0], [70.1, 979.0], [70.2, 981.0], [70.3, 983.0], [70.4, 985.0], [70.5, 987.0], [70.6, 989.0], [70.7, 991.0], [70.8, 994.0], [70.9, 996.0], [71.0, 998.0], [71.1, 1000.0], [71.2, 1002.0], [71.3, 1004.0], [71.4, 1007.0], [71.5, 1009.0], [71.6, 1011.0], [71.7, 1013.0], [71.8, 1015.0], [71.9, 1018.0], [72.0, 1020.0], [72.1, 1022.0], [72.2, 1024.0], [72.3, 1027.0], [72.4, 1029.0], [72.5, 1031.0], [72.6, 1033.0], [72.7, 1035.0], [72.8, 1037.0], [72.9, 1039.0], [73.0, 1041.0], [73.1, 1043.0], [73.2, 1045.0], [73.3, 1048.0], [73.4, 1050.0], [73.5, 1052.0], [73.6, 1055.0], [73.7, 1057.0], [73.8, 1059.0], [73.9, 1061.0], [74.0, 1063.0], [74.1, 1065.0], [74.2, 1067.0], [74.3, 1070.0], [74.4, 1072.0], [74.5, 1074.0], [74.6, 1076.0], [74.7, 1078.0], [74.8, 1081.0], [74.9, 1083.0], [75.0, 1085.0], [75.1, 1087.0], [75.2, 1090.0], [75.3, 1092.0], [75.4, 1094.0], [75.5, 1096.0], [75.6, 1099.0], [75.7, 1101.0], [75.8, 1103.0], [75.9, 1106.0], [76.0, 1108.0], [76.1, 1111.0], [76.2, 1114.0], [76.3, 1116.0], [76.4, 1119.0], [76.5, 1121.0], [76.6, 1124.0], [76.7, 1126.0], [76.8, 1129.0], [76.9, 1132.0], [77.0, 1134.0], [77.1, 1137.0], [77.2, 1140.0], [77.3, 1142.0], [77.4, 1145.0], [77.5, 1147.0], [77.6, 1150.0], [77.7, 1153.0], [77.8, 1155.0], [77.9, 1158.0], [78.0, 1160.0], [78.1, 1163.0], [78.2, 1165.0], [78.3, 1168.0], [78.4, 1170.0], [78.5, 1173.0], [78.6, 1175.0], [78.7, 1177.0], [78.8, 1180.0], [78.9, 1183.0], [79.0, 1185.0], [79.1, 1188.0], [79.2, 1191.0], [79.3, 1193.0], [79.4, 1195.0], [79.5, 1198.0], [79.6, 1201.0], [79.7, 1203.0], [79.8, 1206.0], [79.9, 1209.0], [80.0, 1212.0], [80.1, 1214.0], [80.2, 1217.0], [80.3, 1220.0], [80.4, 1222.0], [80.5, 1225.0], [80.6, 1228.0], [80.7, 1231.0], [80.8, 1233.0], [80.9, 1237.0], [81.0, 1239.0], [81.1, 1242.0], [81.2, 1245.0], [81.3, 1248.0], [81.4, 1251.0], [81.5, 1253.0], [81.6, 1256.0], [81.7, 1259.0], [81.8, 1263.0], [81.9, 1266.0], [82.0, 1268.0], [82.1, 1271.0], [82.2, 1274.0], [82.3, 1277.0], [82.4, 1280.0], [82.5, 1283.0], [82.6, 1286.0], [82.7, 1289.0], [82.8, 1292.0], [82.9, 1295.0], [83.0, 1299.0], [83.1, 1302.0], [83.2, 1305.0], [83.3, 1308.0], [83.4, 1311.0], [83.5, 1315.0], [83.6, 1318.0], [83.7, 1321.0], [83.8, 1324.0], [83.9, 1326.0], [84.0, 1329.0], [84.1, 1332.0], [84.2, 1335.0], [84.3, 1339.0], [84.4, 1341.0], [84.5, 1345.0], [84.6, 1348.0], [84.7, 1351.0], [84.8, 1355.0], [84.9, 1358.0], [85.0, 1361.0], [85.1, 1365.0], [85.2, 1368.0], [85.3, 1371.0], [85.4, 1374.0], [85.5, 1378.0], [85.6, 1381.0], [85.7, 1385.0], [85.8, 1388.0], [85.9, 1392.0], [86.0, 1396.0], [86.1, 1400.0], [86.2, 1403.0], [86.3, 1406.0], [86.4, 1410.0], [86.5, 1413.0], [86.6, 1417.0], [86.7, 1420.0], [86.8, 1424.0], [86.9, 1428.0], [87.0, 1433.0], [87.1, 1437.0], [87.2, 1441.0], [87.3, 1445.0], [87.4, 1449.0], [87.5, 1453.0], [87.6, 1456.0], [87.7, 1460.0], [87.8, 1464.0], [87.9, 1468.0], [88.0, 1472.0], [88.1, 1476.0], [88.2, 1480.0], [88.3, 1484.0], [88.4, 1488.0], [88.5, 1491.0], [88.6, 1496.0], [88.7, 1500.0], [88.8, 1504.0], [88.9, 1509.0], [89.0, 1513.0], [89.1, 1518.0], [89.2, 1522.0], [89.3, 1527.0], [89.4, 1531.0], [89.5, 1536.0], [89.6, 1541.0], [89.7, 1545.0], [89.8, 1550.0], [89.9, 1555.0], [90.0, 1559.0], [90.1, 1563.0], [90.2, 1568.0], [90.3, 1574.0], [90.4, 1578.0], [90.5, 1583.0], [90.6, 1588.0], [90.7, 1593.0], [90.8, 1599.0], [90.9, 1604.0], [91.0, 1609.0], [91.1, 1614.0], [91.2, 1619.0], [91.3, 1624.0], [91.4, 1629.0], [91.5, 1634.0], [91.6, 1640.0], [91.7, 1645.0], [91.8, 1651.0], [91.9, 1657.0], [92.0, 1663.0], [92.1, 1668.0], [92.2, 1674.0], [92.3, 1679.0], [92.4, 1684.0], [92.5, 1690.0], [92.6, 1697.0], [92.7, 1703.0], [92.8, 1709.0], [92.9, 1716.0], [93.0, 1722.0], [93.1, 1729.0], [93.2, 1736.0], [93.3, 1742.0], [93.4, 1749.0], [93.5, 1756.0], [93.6, 1762.0], [93.7, 1769.0], [93.8, 1776.0], [93.9, 1784.0], [94.0, 1791.0], [94.1, 1800.0], [94.2, 1808.0], [94.3, 1816.0], [94.4, 1824.0], [94.5, 1833.0], [94.6, 1840.0], [94.7, 1847.0], [94.8, 1855.0], [94.9, 1862.0], [95.0, 1871.0], [95.1, 1881.0], [95.2, 1890.0], [95.3, 1898.0], [95.4, 1906.0], [95.5, 1914.0], [95.6, 1924.0], [95.7, 1932.0], [95.8, 1942.0], [95.9, 1951.0], [96.0, 1961.0], [96.1, 1972.0], [96.2, 1982.0], [96.3, 1992.0], [96.4, 2004.0], [96.5, 2015.0], [96.6, 2026.0], [96.7, 2037.0], [96.8, 2050.0], [96.9, 2063.0], [97.0, 2075.0], [97.1, 2089.0], [97.2, 2102.0], [97.3, 2117.0], [97.4, 2130.0], [97.5, 2147.0], [97.6, 2164.0], [97.7, 2180.0], [97.8, 2196.0], [97.9, 2213.0], [98.0, 2230.0], [98.1, 2249.0], [98.2, 2269.0], [98.3, 2289.0], [98.4, 2312.0], [98.5, 2335.0], [98.6, 2361.0], [98.7, 2390.0], [98.8, 2416.0], [98.9, 2451.0], [99.0, 2481.0], [99.1, 2516.0], [99.2, 2552.0], [99.3, 2598.0], [99.4, 2639.0], [99.5, 2702.0], [99.6, 2779.0], [99.7, 2873.0], [99.8, 2992.0], [99.9, 3159.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 6.0, "minX": 0.0, "maxY": 24736.0, "series": [{"data": [[0.0, 14505.0], [600.0, 5328.0], [700.0, 5763.0], [800.0, 5757.0], [900.0, 5588.0], [1000.0, 5334.0], [1100.0, 4600.0], [1200.0, 4074.0], [1300.0, 3601.0], [1400.0, 3044.0], [1500.0, 2488.0], [100.0, 24736.0], [1600.0, 2139.0], [1700.0, 1700.0], [1800.0, 1440.0], [1900.0, 1220.0], [2000.0, 959.0], [2100.0, 747.0], [2200.0, 619.0], [2300.0, 463.0], [2400.0, 374.0], [2500.0, 286.0], [2600.0, 222.0], [2700.0, 157.0], [2800.0, 117.0], [2900.0, 91.0], [3000.0, 77.0], [3100.0, 53.0], [200.0, 8674.0], [3300.0, 16.0], [3200.0, 38.0], [3400.0, 16.0], [3500.0, 7.0], [3600.0, 7.0], [3700.0, 8.0], [3800.0, 6.0], [300.0, 4337.0], [400.0, 3905.0], [500.0, 4704.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 3800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 13225.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 56202.0, "series": [{"data": [[0.0, 56202.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 47773.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 13225.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.72854822E12, "maxY": 16.0, "series": [{"data": [[1.72855332E12, 12.0], [1.72855302E12, 12.0], [1.72855392E12, 12.0], [1.72855362E12, 12.0], [1.72855404E12, 12.0], [1.72855374E12, 12.0], [1.72855272E12, 12.0], [1.72855434E12, 12.0], [1.72855464E12, 12.0], [1.72855284E12, 12.0], [1.72855446E12, 12.0], [1.72855476E12, 9.821155943293341], [1.72855344E12, 12.0], [1.72855314E12, 12.0], [1.72855356E12, 12.0], [1.72855326E12, 12.0], [1.72855416E12, 12.0], [1.72855386E12, 12.0], [1.72855428E12, 12.0], [1.72855398E12, 12.0], [1.72855296E12, 12.0], [1.72855458E12, 12.0], [1.72855266E12, 12.0], [1.72855308E12, 12.0], [1.7285547E12, 11.892324093816637], [1.72855278E12, 12.0], [1.72855368E12, 12.0], [1.72855338E12, 12.0], [1.7285538E12, 12.0], [1.7285535E12, 12.0], [1.7285544E12, 12.0], [1.7285541E12, 12.0], [1.7285526E12, 11.823970037453185], [1.72855422E12, 12.0], [1.72855452E12, 12.0], [1.7285532E12, 12.0], [1.72855482E12, 3.064777327935222], [1.7285529E12, 12.0]], "isOverall": false, "label": "12", "isController": false}, {"data": [[1.72854834E12, 2.0], [1.72854852E12, 1.0], [1.72854822E12, 2.0], [1.7285484E12, 2.0], [1.72854828E12, 2.0], [1.72854846E12, 1.7964601769911503]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.72855008E12, 4.0], [1.72854978E12, 4.0], [1.72854948E12, 4.0], [1.72854918E12, 4.0], [1.72854888E12, 4.0], [1.72854858E12, 4.0], [1.7285502E12, 4.0], [1.7285499E12, 4.0], [1.7285496E12, 4.0], [1.7285493E12, 4.0], [1.728549E12, 4.0], [1.7285487E12, 4.0], [1.72855002E12, 4.0], [1.72855032E12, 4.0], [1.72854972E12, 4.0], [1.72854942E12, 4.0], [1.72854912E12, 4.0], [1.72854882E12, 4.0], [1.72854852E12, 3.9980842911877414], [1.72855014E12, 4.0], [1.72854984E12, 4.0], [1.72854954E12, 4.0], [1.72854924E12, 4.0], [1.72854894E12, 4.0], [1.72854864E12, 4.0], [1.72855026E12, 4.0], [1.72854996E12, 4.0], [1.72854966E12, 4.0], [1.72854936E12, 4.0], [1.72854906E12, 4.0], [1.72854876E12, 4.0], [1.72855038E12, 3.04089219330855]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.72855494E12, 16.0], [1.72855524E12, 16.0], [1.72855674E12, 1.9444444444444442], [1.72855554E12, 16.0], [1.72855584E12, 16.0], [1.72855566E12, 16.0], [1.72855596E12, 16.0], [1.72855626E12, 16.0], [1.72855656E12, 16.0], [1.72855638E12, 16.0], [1.72855506E12, 16.0], [1.72855536E12, 16.0], [1.72855662E12, 15.690384615384621], [1.72855518E12, 16.0], [1.72855548E12, 16.0], [1.72855578E12, 16.0], [1.72855608E12, 16.0], [1.7285559E12, 16.0], [1.7285562E12, 16.0], [1.7285565E12, 16.0], [1.72855488E12, 16.0], [1.728555E12, 16.0], [1.7285553E12, 16.0], [1.72855668E12, 10.97234513274336], [1.7285556E12, 16.0], [1.72855542E12, 16.0], [1.72855572E12, 16.0], [1.72855602E12, 16.0], [1.72855632E12, 16.0], [1.72855614E12, 16.0], [1.72855644E12, 16.0], [1.72855482E12, 15.75], [1.72855512E12, 16.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.7285517E12, 8.0], [1.728552E12, 8.0], [1.7285511E12, 8.0], [1.7285514E12, 8.0], [1.7285505E12, 8.0], [1.7285508E12, 8.0], [1.72855182E12, 8.0], [1.72855212E12, 8.0], [1.72855242E12, 8.0], [1.72855122E12, 8.0], [1.72855152E12, 8.0], [1.72855254E12, 7.501925545571245], [1.72855062E12, 8.0], [1.72855092E12, 8.0], [1.72855194E12, 8.0], [1.72855224E12, 8.0], [1.72855134E12, 8.0], [1.72855164E12, 8.0], [1.72855074E12, 8.0], [1.72855104E12, 8.0], [1.72855206E12, 8.0], [1.72855236E12, 8.0], [1.72855044E12, 8.0], [1.72855146E12, 8.0], [1.72855176E12, 8.0], [1.72855086E12, 8.0], [1.72855116E12, 8.0], [1.72855218E12, 8.0], [1.72855056E12, 8.0], [1.72855158E12, 8.0], [1.72855248E12, 8.0], [1.72855188E12, 8.0], [1.72855098E12, 8.0], [1.7285526E12, 3.1541218637992827], [1.72855128E12, 8.0], [1.7285523E12, 8.0], [1.72855038E12, 7.979057591623035], [1.72855068E12, 8.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72855674E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 448.68838526912185, "minX": 1.0, "maxY": 1025.909090909091, "series": [{"data": [[2.0, 465.1989449886972], [8.0, 546.8288638301891], [9.0, 586.2560975609756], [10.0, 610.9639175257734], [11.0, 679.1748633879776], [3.0, 448.68838526912185], [12.0, 728.4084129909032], [13.0, 786.1411290322583], [14.0, 1025.909090909091], [15.0, 792.3721374045793], [1.0, 469.6814159292037], [4.0, 472.58186240877876], [16.0, 932.8877680518084], [5.0, 470.5677083333334], [6.0, 542.8928571428572], [7.0, 526.4782608695652]], "isOverall": false, "label": "getmap", "isController": false}, {"data": [[10.704522184300108, 692.9055204778158]], "isOverall": false, "label": "getmap-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.72854822E12, "maxY": 5.37013846E7, "series": [{"data": [[1.7285514E12, 4.502606575E7], [1.72855362E12, 5.066772775E7], [1.72855584E12, 5.264170775E7], [1.72854918E12, 2.7251435683333334E7], [1.72855566E12, 5.198721105E7], [1.7285502E12, 2.6737859633333333E7], [1.72855242E12, 4.579230321666667E7], [1.72855464E12, 4.901141168333333E7], [1.72855122E12, 4.537217628333333E7], [1.72855446E12, 5.038289853333333E7], [1.72855344E12, 5.118492263333333E7], [1.728549E12, 2.6460744116666667E7], [1.72855002E12, 2.5810842633333333E7], [1.72855224E12, 4.49908956E7], [1.72855326E12, 4.806271921666667E7], [1.72855548E12, 5.33869472E7], [1.72855074E12, 4.377313896666667E7], [1.72855398E12, 4.9240369416666664E7], [1.7285562E12, 5.300359005E7], [1.72854852E12, 2.432806565E7], [1.72855296E12, 5.013387603333333E7], [1.72854954E12, 2.4896863033333335E7], [1.72855176E12, 4.40766835E7], [1.72855278E12, 5.0297925166666664E7], [1.728555E12, 5.26564711E7], [1.72855668E12, 4.209482561666667E7], [1.7285538E12, 4.871495463333333E7], [1.72854834E12, 1.3013297016666668E7], [1.72855056E12, 4.57178057E7], [1.72855158E12, 4.428016343333333E7], [1.72855602E12, 5.3657443333333336E7], [1.72854936E12, 2.5840201566666666E7], [1.7285526E12, 2.6329195E7], [1.72855038E12, 2.3382431366666667E7], [1.72855482E12, 2.1085297316666666E7], [1.7285517E12, 4.3884498983333334E7], [1.72855494E12, 5.158873543333333E7], [1.72854948E12, 2.4439189783333335E7], [1.72855392E12, 5.0907751016666666E7], [1.7285505E12, 4.251018821666667E7], [1.72855374E12, 5.039091745E7], [1.72855596E12, 5.290944788333333E7], [1.72854828E12, 1.31825299E7], [1.72855272E12, 4.891657675E7], [1.7285493E12, 2.6718077483333334E7], [1.72855152E12, 4.50873021E7], [1.72855254E12, 4.3393018483333334E7], [1.72855476E12, 4.6894530416666664E7], [1.72855356E12, 4.947783693333333E7], [1.72855032E12, 2.445485575E7], [1.72855134E12, 4.39322915E7], [1.72855578E12, 5.042610396666667E7], [1.72855428E12, 5.028694285E7], [1.72854882E12, 2.6553405616666667E7], [1.72855104E12, 4.49774123E7], [1.72855206E12, 4.350931063333333E7], [1.7285565E12, 5.312619036666667E7], [1.72854984E12, 2.6574054666666668E7], [1.72855308E12, 5.113435793333333E7], [1.72855086E12, 4.41117068E7], [1.7285553E12, 5.274802915E7], [1.72854864E12, 2.5873512066666666E7], [1.72854966E12, 2.7519687033333335E7], [1.72855188E12, 4.5078700233333334E7], [1.7285541E12, 5.123539013333333E7], [1.72855632E12, 5.37013846E7], [1.72855614E12, 5.26262945E7], [1.72854846E12, 1.060658305E7], [1.72855068E12, 4.336195653333333E7], [1.7285529E12, 5.220057496666667E7], [1.72855512E12, 5.176161943333333E7], [1.72854978E12, 2.5194141866666667E7], [1.728552E12, 4.437093146666667E7], [1.72855302E12, 5.13116234E7], [1.72855524E12, 5.3216581833333336E7], [1.72855404E12, 5.0462570166666664E7], [1.72854858E12, 2.598168365E7], [1.7285508E12, 4.57232564E7], [1.72855182E12, 4.560244906666667E7], [1.72855626E12, 4.946314335E7], [1.7285496E12, 2.637055145E7], [1.72855284E12, 4.9893716583333336E7], [1.72855062E12, 4.59420534E7], [1.72855506E12, 5.217810796666667E7], [1.72855662E12, 5.315354138333333E7], [1.7285484E12, 1.3298267716666667E7], [1.72854942E12, 2.7095574916666668E7], [1.72855164E12, 4.33892899E7], [1.72855386E12, 5.169703028333333E7], [1.72855608E12, 5.306397738333333E7], [1.72854912E12, 2.6147387333333332E7], [1.72855458E12, 5.0864963583333336E7], [1.72855014E12, 2.47970969E7], [1.72855236E12, 4.452761295E7], [1.7285556E12, 5.2910375583333336E7], [1.72854894E12, 2.5810666716666665E7], [1.72855116E12, 4.542705555E7], [1.72855338E12, 4.918392256666667E7], [1.72855218E12, 4.518734103333333E7], [1.72855542E12, 5.1677942916666664E7], [1.72854996E12, 2.6799866316666666E7], [1.7285544E12, 5.152679318333333E7], [1.72855098E12, 4.3162658833333336E7], [1.72855422E12, 4.884822556666667E7], [1.72855644E12, 5.2693633833333336E7], [1.72854876E12, 2.5695304916666668E7], [1.7285532E12, 5.06571554E7], [1.72855008E12, 2.6058472366666667E7], [1.72855332E12, 5.113686285E7], [1.72855674E12, 2328871.566666667], [1.72855554E12, 5.195969703333333E7], [1.7285511E12, 4.3109780016666666E7], [1.72854888E12, 2.6394437E7], [1.7285499E12, 2.67956657E7], [1.72855212E12, 4.678501563333333E7], [1.72855434E12, 4.9563801083333336E7], [1.72855656E12, 5.227723636666667E7], [1.72855638E12, 5.1870258833333336E7], [1.7285487E12, 2.525805455E7], [1.72855092E12, 4.2354345583333336E7], [1.72855314E12, 5.018238613333333E7], [1.72855536E12, 5.3263457916666664E7], [1.72855194E12, 4.28749218E7], [1.72855518E12, 5.1624236766666666E7], [1.72854972E12, 2.5354988883333333E7], [1.72855416E12, 4.78870324E7], [1.7285559E12, 5.3426367733333334E7], [1.72854822E12, 1.00537818E7], [1.72855044E12, 4.552513325E7], [1.72855266E12, 5.111236135E7], [1.72855488E12, 5.160801488333333E7], [1.72855146E12, 4.446951478333333E7], [1.7285547E12, 5.059295388333333E7], [1.72854924E12, 2.5058976433333334E7], [1.72855368E12, 4.8271291266666666E7], [1.72855026E12, 2.5054114316666666E7], [1.7285535E12, 5.0637241416666664E7], [1.72855572E12, 5.3165180516666666E7], [1.72855248E12, 4.430137128333333E7], [1.72854906E12, 2.6305336333333332E7], [1.72855128E12, 4.3958041016666666E7], [1.72855452E12, 4.90853828E7], [1.7285523E12, 4.35862674E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7285514E12, 0.0], [1.72855362E12, 0.0], [1.72855584E12, 0.0], [1.72854918E12, 0.0], [1.72855566E12, 0.0], [1.7285502E12, 0.0], [1.72855242E12, 0.0], [1.72855464E12, 0.0], [1.72855122E12, 0.0], [1.72855446E12, 0.0], [1.72855344E12, 0.0], [1.728549E12, 0.0], [1.72855002E12, 0.0], [1.72855224E12, 0.0], [1.72855326E12, 0.0], [1.72855548E12, 0.0], [1.72855074E12, 0.0], [1.72855398E12, 0.0], [1.7285562E12, 0.0], [1.72854852E12, 0.0], [1.72855296E12, 0.0], [1.72854954E12, 0.0], [1.72855176E12, 0.0], [1.72855278E12, 0.0], [1.728555E12, 0.0], [1.72855668E12, 0.0], [1.7285538E12, 0.0], [1.72854834E12, 0.0], [1.72855056E12, 0.0], [1.72855158E12, 0.0], [1.72855602E12, 0.0], [1.72854936E12, 0.0], [1.7285526E12, 0.0], [1.72855038E12, 0.0], [1.72855482E12, 0.0], [1.7285517E12, 0.0], [1.72855494E12, 0.0], [1.72854948E12, 0.0], [1.72855392E12, 0.0], [1.7285505E12, 0.0], [1.72855374E12, 0.0], [1.72855596E12, 0.0], [1.72854828E12, 0.0], [1.72855272E12, 0.0], [1.7285493E12, 0.0], [1.72855152E12, 0.0], [1.72855254E12, 0.0], [1.72855476E12, 0.0], [1.72855356E12, 0.0], [1.72855032E12, 0.0], [1.72855134E12, 0.0], [1.72855578E12, 0.0], [1.72855428E12, 0.0], [1.72854882E12, 0.0], [1.72855104E12, 0.0], [1.72855206E12, 0.0], [1.7285565E12, 0.0], [1.72854984E12, 0.0], [1.72855308E12, 0.0], [1.72855086E12, 0.0], [1.7285553E12, 0.0], [1.72854864E12, 0.0], [1.72854966E12, 0.0], [1.72855188E12, 0.0], [1.7285541E12, 0.0], [1.72855632E12, 0.0], [1.72855614E12, 0.0], [1.72854846E12, 0.0], [1.72855068E12, 0.0], [1.7285529E12, 0.0], [1.72855512E12, 0.0], [1.72854978E12, 0.0], [1.728552E12, 0.0], [1.72855302E12, 0.0], [1.72855524E12, 0.0], [1.72855404E12, 0.0], [1.72854858E12, 0.0], [1.7285508E12, 0.0], [1.72855182E12, 0.0], [1.72855626E12, 0.0], [1.7285496E12, 0.0], [1.72855284E12, 0.0], [1.72855062E12, 0.0], [1.72855506E12, 0.0], [1.72855662E12, 0.0], [1.7285484E12, 0.0], [1.72854942E12, 0.0], [1.72855164E12, 0.0], [1.72855386E12, 0.0], [1.72855608E12, 0.0], [1.72854912E12, 0.0], [1.72855458E12, 0.0], [1.72855014E12, 0.0], [1.72855236E12, 0.0], [1.7285556E12, 0.0], [1.72854894E12, 0.0], [1.72855116E12, 0.0], [1.72855338E12, 0.0], [1.72855218E12, 0.0], [1.72855542E12, 0.0], [1.72854996E12, 0.0], [1.7285544E12, 0.0], [1.72855098E12, 0.0], [1.72855422E12, 0.0], [1.72855644E12, 0.0], [1.72854876E12, 0.0], [1.7285532E12, 0.0], [1.72855008E12, 0.0], [1.72855332E12, 0.0], [1.72855674E12, 0.0], [1.72855554E12, 0.0], [1.7285511E12, 0.0], [1.72854888E12, 0.0], [1.7285499E12, 0.0], [1.72855212E12, 0.0], [1.72855434E12, 0.0], [1.72855656E12, 0.0], [1.72855638E12, 0.0], [1.7285487E12, 0.0], [1.72855092E12, 0.0], [1.72855314E12, 0.0], [1.72855536E12, 0.0], [1.72855194E12, 0.0], [1.72855518E12, 0.0], [1.72854972E12, 0.0], [1.72855416E12, 0.0], [1.7285559E12, 0.0], [1.72854822E12, 0.0], [1.72855044E12, 0.0], [1.72855266E12, 0.0], [1.72855488E12, 0.0], [1.72855146E12, 0.0], [1.7285547E12, 0.0], [1.72854924E12, 0.0], [1.72855368E12, 0.0], [1.72855026E12, 0.0], [1.7285535E12, 0.0], [1.72855572E12, 0.0], [1.72855248E12, 0.0], [1.72854906E12, 0.0], [1.72855128E12, 0.0], [1.72855452E12, 0.0], [1.7285523E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72855674E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 427.66308243727605, "minX": 1.72854822E12, "maxY": 987.3935950413226, "series": [{"data": [[1.7285514E12, 552.9838150289025], [1.72855362E12, 727.6397578203844], [1.72855584E12, 924.1947926711664], [1.72854918E12, 463.55058365758754], [1.72855566E12, 904.7204502814259], [1.7285502E12, 474.2114624505931], [1.72855242E12, 549.8354285714295], [1.72855464E12, 740.8180883864336], [1.72855122E12, 544.6160815402039], [1.72855446E12, 745.2247422680405], [1.72855344E12, 713.1543026706237], [1.728549E12, 508.1057082452431], [1.72855002E12, 505.2042105263157], [1.72855224E12, 553.6164542294324], [1.72855326E12, 720.5324675324674], [1.72855548E12, 928.9855351976854], [1.72855074E12, 551.1403912543145], [1.72855398E12, 723.8575727181549], [1.7285562E12, 935.9814995131445], [1.72854852E12, 437.2730696798491], [1.72855296E12, 739.7282051282054], [1.72854954E12, 485.5050505050509], [1.72855176E12, 541.1815107102602], [1.72855278E12, 734.3353783231086], [1.728555E12, 936.1083984375005], [1.72855668E12, 659.5298672566374], [1.7285538E12, 698.6265761396705], [1.72854834E12, 470.66015625000006], [1.72855056E12, 543.5468926553668], [1.72855158E12, 553.5391705069127], [1.72855602E12, 987.3935950413226], [1.72854936E12, 460.7576923076923], [1.7285526E12, 572.2985347985358], [1.72855038E12, 500.70217391304374], [1.72855482E12, 636.6241299303942], [1.7285517E12, 545.6118047673099], [1.72855494E12, 937.2585700293837], [1.72854948E12, 438.2775735294119], [1.72855392E12, 713.7031872509959], [1.7285505E12, 528.884955752212], [1.72855374E12, 760.4567510548524], [1.72855596E12, 940.3860510805503], [1.72854828E12, 427.66308243727605], [1.72855272E12, 712.475718533201], [1.7285493E12, 488.3963414634145], [1.72855152E12, 572.4850657108722], [1.72855254E12, 564.5160462130939], [1.72855476E12, 642.0152671755715], [1.72855356E12, 751.9665271966527], [1.72855032E12, 442.32169117647095], [1.72855134E12, 520.7068403908788], [1.72855578E12, 909.2674858223061], [1.72855428E12, 761.806998939554], [1.72854882E12, 477.2948207171313], [1.72855104E12, 582.5225334957362], [1.72855206E12, 541.251693002257], [1.7285565E12, 972.673116089613], [1.72854984E12, 472.5137795275588], [1.72855308E12, 717.2577422577423], [1.72855086E12, 560.487179487179], [1.7285553E12, 948.950347567031], [1.72854864E12, 472.4153543307082], [1.72854966E12, 477.96031746031696], [1.72855188E12, 528.7819383259906], [1.7285541E12, 713.13916500994], [1.72855632E12, 948.2320550639138], [1.72855614E12, 949.1216617210683], [1.72854846E12, 447.2610619469024], [1.72855068E12, 557.6318234610912], [1.7285529E12, 721.2108433734937], [1.72855512E12, 895.1242937853114], [1.72854978E12, 459.78011472275267], [1.728552E12, 557.6941860465115], [1.72855302E12, 792.5318681318687], [1.72855524E12, 962.5035035035029], [1.72855404E12, 738.6220633299286], [1.72854858E12, 475.6178217821781], [1.7285508E12, 527.5654565456546], [1.72855182E12, 555.7529002320184], [1.72855626E12, 897.9774436090235], [1.7285496E12, 465.44854368932045], [1.72855284E12, 751.2335766423366], [1.72855062E12, 530.0066298342535], [1.72855506E12, 904.5507518796983], [1.72855662E12, 912.197115384615], [1.7285484E12, 481.82399999999984], [1.72854942E12, 452.956848030019], [1.72855164E12, 524.5509309967144], [1.72855386E12, 721.2420000000009], [1.72855608E12, 948.5433070866128], [1.72854912E12, 470.83984375000006], [1.72855458E12, 750.017726798749], [1.72855014E12, 494.42505133470206], [1.72855236E12, 533.3526140155728], [1.7285556E12, 964.0230692076234], [1.72854894E12, 476.71656686626727], [1.72855116E12, 564.8032979976437], [1.72855338E12, 709.6870078740151], [1.72855218E12, 559.1808634772459], [1.72855542E12, 936.8762278978386], [1.72854996E12, 500.16910229645083], [1.7285544E12, 723.7362086258781], [1.72855098E12, 524.2222222222218], [1.72855422E12, 695.9330097087383], [1.72855644E12, 901.4191729323298], [1.72854876E12, 499.9498956158671], [1.7285532E12, 705.5420743639921], [1.72855008E12, 465.50775193798466], [1.72855332E12, 743.9523809523815], [1.72855674E12, 570.7777777777777], [1.72855554E12, 949.1033797216702], [1.7285511E12, 552.3034482758618], [1.72854888E12, 474.22986247544173], [1.7285499E12, 435.1636363636362], [1.72855212E12, 565.1480611045827], [1.72855434E12, 738.2905544147844], [1.72855656E12, 960.8594217347965], [1.72855638E12, 898.663227016886], [1.7285487E12, 493.7789256198346], [1.72855092E12, 525.9418221734362], [1.72855314E12, 756.4282700421936], [1.72855536E12, 931.0500481231961], [1.72855194E12, 516.3061224489795], [1.72855518E12, 924.3680688336515], [1.72854972E12, 457.98852772466523], [1.72855416E12, 713.5440158259144], [1.7285559E12, 978.4787018255573], [1.72854822E12, 493.4611111111111], [1.72855044E12, 580.9807460890494], [1.72855266E12, 692.852884615385], [1.72855488E12, 891.6580166821133], [1.72855146E12, 561.9812865497076], [1.7285547E12, 758.2121535181237], [1.72854924E12, 473.6351084812624], [1.72855368E12, 698.7208171206224], [1.72855026E12, 442.0240740740742], [1.7285535E12, 768.7371794871792], [1.72855572E12, 907.203036053132], [1.72855248E12, 548.9873853211006], [1.72854906E12, 519.7028199566151], [1.72855128E12, 521.913137893594], [1.72855452E12, 673.735459662289], [1.7285523E12, 557.500578034682]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72855674E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 281.71326164874546, "minX": 1.72854822E12, "maxY": 669.5382231404956, "series": [{"data": [[1.7285514E12, 368.1745664739887], [1.72855362E12, 490.922300706357], [1.72855584E12, 628.5130183220824], [1.72854918E12, 300.11478599221795], [1.72855566E12, 616.343339587242], [1.7285502E12, 311.2588932806324], [1.72855242E12, 366.16914285714284], [1.72855464E12, 506.1891058581707], [1.72855122E12, 365.7451868629673], [1.72855446E12, 505.628865979381], [1.72855344E12, 478.9525222551929], [1.728549E12, 333.0084566596197], [1.72855002E12, 333.44000000000017], [1.72855224E12, 368.94090382387], [1.72855326E12, 491.98401598401625], [1.72855548E12, 630.7714561234327], [1.72855074E12, 370.360184119678], [1.72855398E12, 491.88365095285843], [1.7285562E12, 633.8373904576433], [1.72854852E12, 288.7062146892655], [1.72855296E12, 498.70461538461495], [1.72854954E12, 325.1454545454548], [1.72855176E12, 362.38895152198467], [1.72855278E12, 495.9795501022492], [1.728555E12, 635.1445312500006], [1.72855668E12, 446.8971238938057], [1.7285538E12, 477.21338506304534], [1.72854834E12, 313.15625000000006], [1.72855056E12, 361.9966101694916], [1.72855158E12, 371.03110599078354], [1.72855602E12, 669.5382231404956], [1.72854936E12, 303.34807692307714], [1.7285526E12, 380.4963369963369], [1.72855038E12, 332.967391304348], [1.72855482E12, 428.2041763341063], [1.7285517E12, 368.2281498297392], [1.72855494E12, 638.2810969637604], [1.72854948E12, 292.59926470588215], [1.72855392E12, 479.4482071713147], [1.7285505E12, 359.1238938053098], [1.72855374E12, 515.0970464135027], [1.72855596E12, 639.6237721021608], [1.72854828E12, 281.71326164874546], [1.72855272E12, 484.46778989098124], [1.7285493E12, 319.77845528455254], [1.72855152E12, 383.452807646356], [1.72855254E12, 375.0526315789477], [1.72855476E12, 434.01199563795006], [1.72855356E12, 509.43200836820085], [1.72855032E12, 294.257352941176], [1.72855134E12, 349.5146579804563], [1.72855578E12, 622.9007561436673], [1.72855428E12, 516.7751855779427], [1.72854882E12, 312.7868525896415], [1.72855104E12, 390.74786845310564], [1.72855206E12, 364.04063205417646], [1.7285565E12, 658.9287169042777], [1.72854984E12, 310.36417322834643], [1.72855308E12, 480.982017982018], [1.72855086E12, 376.42773892773874], [1.7285553E12, 643.3296921549163], [1.72854864E12, 311.6771653543308], [1.72854966E12, 310.84126984126976], [1.72855188E12, 352.4889867841408], [1.7285541E12, 478.91451292246575], [1.72855632E12, 643.9980334316614], [1.72855614E12, 645.8783382789312], [1.72854846E12, 298.54424778761074], [1.72855068E12, 376.75842044134725], [1.7285529E12, 484.1506024096383], [1.72855512E12, 611.6186440677958], [1.72854978E12, 306.4168260038242], [1.728552E12, 375.03139534883746], [1.72855302E12, 536.0340659340662], [1.72855524E12, 649.2062062062048], [1.72855404E12, 499.01225740551604], [1.72854858E12, 314.34455445544535], [1.7285508E12, 349.6105610561052], [1.72855182E12, 369.67053364269134], [1.72855626E12, 617.0808270676695], [1.7285496E12, 305.96116504854405], [1.72855284E12, 509.98227320125164], [1.72855062E12, 352.99226519336986], [1.72855506E12, 615.5084586466161], [1.72855662E12, 621.5528846153838], [1.7285484E12, 322.06799999999987], [1.72854942E12, 294.37523452157603], [1.72855164E12, 352.7228915662646], [1.72855386E12, 485.06900000000024], [1.72855608E12, 647.7480314960636], [1.72854912E12, 309.7207031250001], [1.72855458E12, 502.8717413972887], [1.72855014E12, 332.3018480492818], [1.72855236E12, 356.4794215795324], [1.7285556E12, 652.8796389167504], [1.72854894E12, 314.00798403193613], [1.72855116E12, 376.8739693757366], [1.72855338E12, 484.000984251969], [1.72855218E12, 373.97199533255593], [1.72855542E12, 637.559921414539], [1.72854996E12, 326.851774530271], [1.7285544E12, 486.5155466399192], [1.72855098E12, 354.7450980392154], [1.72855422E12, 472.4310679611647], [1.72855644E12, 613.5122180451127], [1.72854876E12, 331.48643006263023], [1.7285532E12, 475.0469667318985], [1.72855008E12, 305.72286821705427], [1.72855332E12, 500.1894409937896], [1.72855674E12, 377.4166666666667], [1.72855554E12, 646.760437375745], [1.7285511E12, 373.2436781609197], [1.72854888E12, 310.4223968565816], [1.7285499E12, 282.91090909090906], [1.72855212E12, 374.49001175088125], [1.72855434E12, 500.5441478439422], [1.72855656E12, 656.5633100697896], [1.72855638E12, 615.2063789868668], [1.7285487E12, 328.4256198347108], [1.72855092E12, 355.8013172338091], [1.72855314E12, 513.3312236286924], [1.72855536E12, 637.1260827718962], [1.72855194E12, 347.25026852846383], [1.72855518E12, 633.0411089866152], [1.72854972E12, 304.6768642447418], [1.72855416E12, 486.56280909990085], [1.7285559E12, 667.830628803246], [1.72854822E12, 327.0444444444445], [1.72855044E12, 389.987966305656], [1.72855266E12, 464.1865384615383], [1.72855488E12, 614.0620945319732], [1.72855146E12, 377.8573099415204], [1.7285547E12, 510.2366737739865], [1.72854924E12, 315.6646942800787], [1.72855368E12, 474.30933852140095], [1.72855026E12, 292.8740740740739], [1.7285535E12, 515.13141025641], [1.72855572E12, 612.5351043643255], [1.72855248E12, 368.10206422018365], [1.72854906E12, 345.17570498915404], [1.72855128E12, 351.64169381107473], [1.72855452E12, 457.81144465290816], [1.7285523E12, 376.78497109826566]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72855674E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72854822E12, "maxY": 4.9E-324, "series": [{"data": [[1.7285514E12, 0.0], [1.72855362E12, 0.0], [1.72855584E12, 0.0], [1.72854918E12, 0.0], [1.72855566E12, 0.0], [1.7285502E12, 0.0], [1.72855242E12, 0.0], [1.72855464E12, 0.0], [1.72855122E12, 0.0], [1.72855446E12, 0.0], [1.72855344E12, 0.0], [1.728549E12, 0.0], [1.72855002E12, 0.0], [1.72855224E12, 0.0], [1.72855326E12, 0.0], [1.72855548E12, 0.0], [1.72855074E12, 0.0], [1.72855398E12, 0.0], [1.7285562E12, 0.0], [1.72854852E12, 0.0], [1.72855296E12, 0.0], [1.72854954E12, 0.0], [1.72855176E12, 0.0], [1.72855278E12, 0.0], [1.728555E12, 0.0], [1.72855668E12, 0.0], [1.7285538E12, 0.0], [1.72854834E12, 0.0], [1.72855056E12, 0.0], [1.72855158E12, 0.0], [1.72855602E12, 0.0], [1.72854936E12, 0.0], [1.7285526E12, 0.0], [1.72855038E12, 0.0], [1.72855482E12, 0.0], [1.7285517E12, 0.0], [1.72855494E12, 0.0], [1.72854948E12, 0.0], [1.72855392E12, 0.0], [1.7285505E12, 0.0], [1.72855374E12, 0.0], [1.72855596E12, 0.0], [1.72854828E12, 0.0], [1.72855272E12, 0.0], [1.7285493E12, 0.0], [1.72855152E12, 0.0], [1.72855254E12, 0.0], [1.72855476E12, 0.0], [1.72855356E12, 0.0], [1.72855032E12, 0.0], [1.72855134E12, 0.0], [1.72855578E12, 0.0], [1.72855428E12, 0.0], [1.72854882E12, 0.0], [1.72855104E12, 0.0], [1.72855206E12, 0.0], [1.7285565E12, 0.0], [1.72854984E12, 0.0], [1.72855308E12, 0.0], [1.72855086E12, 0.0], [1.7285553E12, 0.0], [1.72854864E12, 0.0], [1.72854966E12, 0.0], [1.72855188E12, 0.0], [1.7285541E12, 0.0], [1.72855632E12, 0.0], [1.72855614E12, 0.0], [1.72854846E12, 0.0], [1.72855068E12, 0.0], [1.7285529E12, 0.0], [1.72855512E12, 0.0], [1.72854978E12, 0.0], [1.728552E12, 0.0], [1.72855302E12, 0.0], [1.72855524E12, 0.0], [1.72855404E12, 0.0], [1.72854858E12, 0.0], [1.7285508E12, 0.0], [1.72855182E12, 0.0], [1.72855626E12, 0.0], [1.7285496E12, 0.0], [1.72855284E12, 0.0], [1.72855062E12, 0.0], [1.72855506E12, 0.0], [1.72855662E12, 0.0], [1.7285484E12, 0.0], [1.72854942E12, 0.0], [1.72855164E12, 0.0], [1.72855386E12, 0.0], [1.72855608E12, 0.0], [1.72854912E12, 0.0], [1.72855458E12, 0.0], [1.72855014E12, 0.0], [1.72855236E12, 0.0], [1.7285556E12, 0.0], [1.72854894E12, 0.0], [1.72855116E12, 0.0], [1.72855338E12, 0.0], [1.72855218E12, 0.0], [1.72855542E12, 0.0], [1.72854996E12, 0.0], [1.7285544E12, 0.0], [1.72855098E12, 0.0], [1.72855422E12, 0.0], [1.72855644E12, 0.0], [1.72854876E12, 0.0], [1.7285532E12, 0.0], [1.72855008E12, 0.0], [1.72855332E12, 0.0], [1.72855674E12, 0.0], [1.72855554E12, 0.0], [1.7285511E12, 0.0], [1.72854888E12, 0.0], [1.7285499E12, 0.0], [1.72855212E12, 0.0], [1.72855434E12, 0.0], [1.72855656E12, 0.0], [1.72855638E12, 0.0], [1.7285487E12, 0.0], [1.72855092E12, 0.0], [1.72855314E12, 0.0], [1.72855536E12, 0.0], [1.72855194E12, 0.0], [1.72855518E12, 0.0], [1.72854972E12, 0.0], [1.72855416E12, 0.0], [1.7285559E12, 0.0], [1.72854822E12, 0.0], [1.72855044E12, 0.0], [1.72855266E12, 0.0], [1.72855488E12, 0.0], [1.72855146E12, 0.0], [1.7285547E12, 0.0], [1.72854924E12, 0.0], [1.72855368E12, 0.0], [1.72855026E12, 0.0], [1.7285535E12, 0.0], [1.72855572E12, 0.0], [1.72855248E12, 0.0], [1.72854906E12, 0.0], [1.72855128E12, 0.0], [1.72855452E12, 0.0], [1.7285523E12, 0.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72855674E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 24.0, "minX": 1.72854822E12, "maxY": 3880.0, "series": [{"data": [[1.7285514E12, 2044.0], [1.72855362E12, 2820.0], [1.72855584E12, 3183.0], [1.72854918E12, 1933.0], [1.72855566E12, 3571.0], [1.7285502E12, 1571.0], [1.72855242E12, 1953.0], [1.72855464E12, 2871.0], [1.72855122E12, 2220.0], [1.72855446E12, 2745.0], [1.72855344E12, 2585.0], [1.728549E12, 1899.0], [1.72855002E12, 1622.0], [1.72855224E12, 1971.0], [1.72855326E12, 2783.0], [1.72855548E12, 3723.0], [1.72855074E12, 2105.0], [1.72855398E12, 2745.0], [1.7285562E12, 3666.0], [1.72854852E12, 1606.0], [1.72855296E12, 2801.0], [1.72854954E12, 1565.0], [1.72855176E12, 2043.0], [1.72855278E12, 2607.0], [1.728555E12, 3215.0], [1.72855668E12, 3015.0], [1.7285538E12, 3096.0], [1.72854834E12, 1888.0], [1.72855056E12, 1871.0], [1.72855158E12, 2173.0], [1.72855602E12, 3824.0], [1.72854936E12, 1898.0], [1.7285526E12, 2382.0], [1.72855038E12, 1709.0], [1.72855482E12, 2813.0], [1.7285517E12, 1959.0], [1.72855494E12, 3562.0], [1.72854948E12, 1722.0], [1.72855392E12, 2791.0], [1.7285505E12, 2090.0], [1.72855374E12, 2796.0], [1.72855596E12, 3880.0], [1.72854828E12, 1605.0], [1.72855272E12, 3084.0], [1.7285493E12, 1767.0], [1.72855152E12, 2058.0], [1.72855254E12, 2370.0], [1.72855476E12, 2400.0], [1.72855356E12, 3184.0], [1.72855032E12, 1895.0], [1.72855134E12, 1963.0], [1.72855578E12, 3315.0], [1.72855428E12, 2782.0], [1.72854882E12, 1743.0], [1.72855104E12, 1988.0], [1.72855206E12, 1925.0], [1.7285565E12, 3864.0], [1.72854984E12, 1605.0], [1.72855308E12, 2981.0], [1.72855086E12, 2220.0], [1.7285553E12, 3749.0], [1.72854864E12, 1589.0], [1.72854966E12, 1644.0], [1.72855188E12, 2026.0], [1.7285541E12, 2705.0], [1.72855632E12, 3788.0], [1.72855614E12, 3861.0], [1.72854846E12, 1578.0], [1.72855068E12, 2133.0], [1.7285529E12, 3019.0], [1.72855512E12, 3450.0], [1.72854978E12, 1629.0], [1.728552E12, 2054.0], [1.72855302E12, 3187.0], [1.72855524E12, 3435.0], [1.72855404E12, 2906.0], [1.72854858E12, 1687.0], [1.7285508E12, 2049.0], [1.72855182E12, 2174.0], [1.72855626E12, 3437.0], [1.7285496E12, 1988.0], [1.72855284E12, 2485.0], [1.72855062E12, 1972.0], [1.72855506E12, 3429.0], [1.72855662E12, 3265.0], [1.7285484E12, 1520.0], [1.72854942E12, 1838.0], [1.72855164E12, 2218.0], [1.72855386E12, 2731.0], [1.72855608E12, 3233.0], [1.72854912E12, 1639.0], [1.72855458E12, 2901.0], [1.72855014E12, 2050.0], [1.72855236E12, 2221.0], [1.7285556E12, 3820.0], [1.72854894E12, 1742.0], [1.72855116E12, 2003.0], [1.72855338E12, 2637.0], [1.72855218E12, 2171.0], [1.72855542E12, 3656.0], [1.72854996E12, 1952.0], [1.7285544E12, 2857.0], [1.72855098E12, 2055.0], [1.72855422E12, 2460.0], [1.72855644E12, 3171.0], [1.72854876E12, 1668.0], [1.7285532E12, 3092.0], [1.72855008E12, 1908.0], [1.72855332E12, 3053.0], [1.72855674E12, 1194.0], [1.72855554E12, 3701.0], [1.7285511E12, 2061.0], [1.72854888E12, 1917.0], [1.7285499E12, 1654.0], [1.72855212E12, 2038.0], [1.72855434E12, 2821.0], [1.72855656E12, 3785.0], [1.72855638E12, 3327.0], [1.7285487E12, 1729.0], [1.72855092E12, 2037.0], [1.72855314E12, 3322.0], [1.72855536E12, 3264.0], [1.72855194E12, 1911.0], [1.72855518E12, 3619.0], [1.72854972E12, 1659.0], [1.72855416E12, 3149.0], [1.7285559E12, 3470.0], [1.72854822E12, 1701.0], [1.72855044E12, 2117.0], [1.72855266E12, 2719.0], [1.72855488E12, 3347.0], [1.72855146E12, 2124.0], [1.7285547E12, 3128.0], [1.72854924E12, 1993.0], [1.72855368E12, 2827.0], [1.72855026E12, 1740.0], [1.7285535E12, 3168.0], [1.72855572E12, 3719.0], [1.72855248E12, 2214.0], [1.72854906E12, 1563.0], [1.72855128E12, 2114.0], [1.72855452E12, 2772.0], [1.7285523E12, 2183.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7285514E12, 1155.4], [1.72855362E12, 1575.8000000000004], [1.72855584E12, 2010.6000000000008], [1.72854918E12, 1030.5], [1.72855566E12, 2001.2000000000003], [1.7285502E12, 1020.9000000000001], [1.72855242E12, 1139.4], [1.72855464E12, 1587.0], [1.72855122E12, 1189.8000000000002], [1.72855446E12, 1581.6], [1.72855344E12, 1573.8000000000002], [1.728549E12, 1081.6000000000001], [1.72855002E12, 1079.4], [1.72855224E12, 1201.8000000000002], [1.72855326E12, 1595.0000000000005], [1.72855548E12, 2021.4], [1.72855074E12, 1154.0], [1.72855398E12, 1575.4], [1.7285562E12, 1997.2], [1.72854852E12, 986.4000000000001], [1.72855296E12, 1620.8], [1.72854954E12, 1026.0000000000002], [1.72855176E12, 1151.8000000000004], [1.72855278E12, 1574.5], [1.728555E12, 2010.5], [1.72855668E12, 1526.5], [1.7285538E12, 1553.4], [1.72854834E12, 1042.2000000000003], [1.72855056E12, 1178.1999999999998], [1.72855158E12, 1181.1], [1.72855602E12, 2079.0], [1.72854936E12, 992.9000000000001], [1.7285526E12, 1282.7], [1.72855038E12, 1094.7], [1.72855482E12, 1451.4], [1.7285517E12, 1162.6000000000008], [1.72855494E12, 2014.4], [1.72854948E12, 990.0], [1.72855392E12, 1580.0], [1.7285505E12, 1163.5], [1.72855374E12, 1642.2], [1.72855596E12, 2042.1], [1.72854828E12, 980.0], [1.72855272E12, 1583.0], [1.7285493E12, 1007.0999999999999], [1.72855152E12, 1216.0], [1.72855254E12, 1196.0], [1.72855476E12, 1399.6000000000001], [1.72855356E12, 1599.2000000000003], [1.72855032E12, 967.0], [1.72855134E12, 1116.0], [1.72855578E12, 1958.5], [1.72855428E12, 1634.2], [1.72854882E12, 1010.7], [1.72855104E12, 1209.2000000000003], [1.72855206E12, 1136.3000000000002], [1.7285565E12, 2091.7], [1.72854984E12, 1049.2], [1.72855308E12, 1573.0], [1.72855086E12, 1190.4], [1.7285553E12, 2051.4], [1.72854864E12, 1027.6000000000001], [1.72854966E12, 1078.5], [1.72855188E12, 1134.1], [1.7285541E12, 1587.3000000000002], [1.72855632E12, 2062.0], [1.72855614E12, 2009.0000000000005], [1.72854846E12, 1022.0], [1.72855068E12, 1214.6000000000001], [1.7285529E12, 1566.0000000000007], [1.72855512E12, 1947.1000000000001], [1.72854978E12, 999.6000000000005], [1.728552E12, 1196.0], [1.72855302E12, 1672.8], [1.72855524E12, 1994.0], [1.72855404E12, 1641.0], [1.72854858E12, 1009.2], [1.7285508E12, 1196.0], [1.72855182E12, 1222.1000000000001], [1.72855626E12, 1966.0], [1.7285496E12, 1033.0000000000002], [1.72855284E12, 1595.0], [1.72855062E12, 1144.1999999999998], [1.72855506E12, 1947.0], [1.72855662E12, 1982.9], [1.7285484E12, 1014.9000000000001], [1.72854942E12, 1011.6], [1.72855164E12, 1116.6], [1.72855386E12, 1596.6999999999998], [1.72855608E12, 2086.3], [1.72854912E12, 1050.8999999999999], [1.72855458E12, 1594.0], [1.72855014E12, 990.5999999999999], [1.72855236E12, 1161.0], [1.7285556E12, 2058.2], [1.72854894E12, 1058.2000000000003], [1.72855116E12, 1205.0], [1.72855338E12, 1531.0000000000007], [1.72855218E12, 1209.4000000000003], [1.72855542E12, 1965.1], [1.72854996E12, 1059.0], [1.7285544E12, 1637.2], [1.72855098E12, 1156.1], [1.72855422E12, 1549.9], [1.72855644E12, 1967.5], [1.72854876E12, 988.0], [1.7285532E12, 1534.0], [1.72855008E12, 1024.3], [1.72855332E12, 1648.3000000000006], [1.72855674E12, 1099.5], [1.72855554E12, 1924.9], [1.7285511E12, 1133.8], [1.72854888E12, 1033.0], [1.7285499E12, 957.7], [1.72855212E12, 1200.2000000000003], [1.72855434E12, 1516.5], [1.72855656E12, 2018.0], [1.72855638E12, 1947.6000000000001], [1.7285487E12, 1066.0], [1.72855092E12, 1121.6000000000001], [1.72855314E12, 1591.7000000000003], [1.72855536E12, 2025.0], [1.72855194E12, 1148.4], [1.72855518E12, 2010.9], [1.72854972E12, 977.2000000000002], [1.72855416E12, 1546.8000000000002], [1.7285559E12, 2028.5000000000005], [1.72854822E12, 1019.6000000000001], [1.72855044E12, 1233.0000000000005], [1.72855266E12, 1607.3999999999999], [1.72855488E12, 1927.0], [1.72855146E12, 1188.8], [1.7285547E12, 1652.2], [1.72854924E12, 1020.2], [1.72855368E12, 1574.0000000000002], [1.72855026E12, 979.6000000000001], [1.7285535E12, 1689.5000000000005], [1.72855572E12, 2019.5], [1.72855248E12, 1159.8000000000002], [1.72854906E12, 1038.4], [1.72855128E12, 1131.8000000000002], [1.72855452E12, 1511.2000000000003], [1.7285523E12, 1155.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7285514E12, 1771.7000000000003], [1.72855362E12, 2309.5600000000004], [1.72855584E12, 2837.3799999999947], [1.72854918E12, 1461.5000000000002], [1.72855566E12, 2915.529999999997], [1.7285502E12, 1519.6200000000003], [1.72855242E12, 1630.7600000000002], [1.72855464E12, 2345.5599999999995], [1.72855122E12, 1669.5599999999995], [1.72855446E12, 2291.7699999999995], [1.72855344E12, 2364.08], [1.728549E12, 1463.4999999999998], [1.72855002E12, 1439.2], [1.72855224E12, 1686.72], [1.72855326E12, 2197.78], [1.72855548E12, 2922.9999999999945], [1.72855074E12, 1639.4999999999993], [1.72855398E12, 2268.04], [1.7285562E12, 3140.6000000000013], [1.72854852E12, 1309.3999999999996], [1.72855296E12, 2375.3200000000006], [1.72854954E12, 1459.8400000000004], [1.72855176E12, 1694.4], [1.72855278E12, 2279.21], [1.728555E12, 2899.0], [1.72855668E12, 2382.600000000002], [1.7285538E12, 2419.5599999999977], [1.72854834E12, 1451.7400000000007], [1.72855056E12, 1641.1399999999999], [1.72855158E12, 1683.7899999999995], [1.72855602E12, 2863.4799999999996], [1.72854936E12, 1450.3999999999978], [1.7285526E12, 2082.24], [1.72855038E12, 1547.079999999999], [1.72855482E12, 2570.08], [1.7285517E12, 1687.0399999999986], [1.72855494E12, 2863.46], [1.72854948E12, 1402.549999999999], [1.72855392E12, 2322.8500000000004], [1.7285505E12, 1757.1500000000017], [1.72855374E12, 2370.08], [1.72855596E12, 2950.3399999999992], [1.72854828E12, 1456.1999999999994], [1.72855272E12, 2309.8999999999996], [1.7285493E12, 1583.12], [1.72855152E12, 1719.2], [1.72855254E12, 1717.8000000000018], [1.72855476E12, 2171.299999999993], [1.72855356E12, 2328.8699999999994], [1.72855032E12, 1521.999999999999], [1.72855134E12, 1640.6999999999996], [1.72855578E12, 2801.2000000000016], [1.72855428E12, 2348.8799999999987], [1.72854882E12, 1447.139999999998], [1.72855104E12, 1724.56], [1.72855206E12, 1680.9899999999993], [1.7285565E12, 2972.3799999999956], [1.72854984E12, 1470.0099999999998], [1.72855308E12, 2247.5600000000004], [1.72855086E12, 1725.4599999999998], [1.7285553E12, 3117.5999999999976], [1.72854864E12, 1411.939999999999], [1.72854966E12, 1537.85], [1.72855188E12, 1751.0299999999988], [1.7285541E12, 2268.58], [1.72855632E12, 2878.5599999999963], [1.72855614E12, 3035.48], [1.72854846E12, 1395.5199999999998], [1.72855068E12, 1786.9199999999998], [1.7285529E12, 2356.019999999999], [1.72855512E12, 2858.659999999998], [1.72854978E12, 1491.32], [1.728552E12, 1735.12], [1.72855302E12, 2274.56], [1.72855524E12, 3057.0], [1.72855404E12, 2483.2], [1.72854858E12, 1392.4], [1.7285508E12, 1777.3999999999996], [1.72855182E12, 1710.17], [1.72855626E12, 2797.4499999999957], [1.7285496E12, 1467.9599999999982], [1.72855284E12, 2238.999999999999], [1.72855062E12, 1631.8199999999997], [1.72855506E12, 2956.9499999999966], [1.72855662E12, 2804.4399999999905], [1.7285484E12, 1498.94], [1.72854942E12, 1636.1799999999976], [1.72855164E12, 1623.72], [1.72855386E12, 2240.76], [1.72855608E12, 2785.1300000000006], [1.72854912E12, 1331.22], [1.72855458E12, 2531.8], [1.72855014E12, 1445.4], [1.72855236E12, 1733.0], [1.7285556E12, 2760.339999999999], [1.72854894E12, 1532.7600000000002], [1.72855116E12, 1733.5], [1.72855338E12, 2205.5600000000013], [1.72855218E12, 1849.4399999999987], [1.72855542E12, 3069.2899999999995], [1.72854996E12, 1617.9999999999998], [1.7285544E12, 2384.2599999999998], [1.72855098E12, 1645.199999999999], [1.72855422E12, 2169.419999999999], [1.72855644E12, 2925.899999999997], [1.72854876E12, 1581.6], [1.7285532E12, 2592.9099999999985], [1.72855008E12, 1453.81], [1.72855332E12, 2312.9900000000002], [1.72855674E12, 1194.0], [1.72855554E12, 2875.93], [1.7285511E12, 1718.9199999999983], [1.72854888E12, 1568.0999999999976], [1.7285499E12, 1374.98], [1.72855212E12, 1684.7200000000016], [1.72855434E12, 2330.75], [1.72855656E12, 2831.84], [1.72855638E12, 2800.439999999995], [1.7285487E12, 1450.8999999999999], [1.72855092E12, 1739.8799999999999], [1.72855314E12, 2481.0299999999997], [1.72855536E12, 2871.3999999999996], [1.72855194E12, 1685.5199999999993], [1.72855518E12, 2913.7399999999984], [1.72854972E12, 1420.4799999999996], [1.72855416E12, 2252.96], [1.7285559E12, 2966.7799999999997], [1.72854822E12, 1598.1299999999997], [1.72855044E12, 1868.799999999997], [1.72855266E12, 2387.729999999996], [1.72855488E12, 2928.8], [1.72855146E12, 1793.7999999999975], [1.7285547E12, 2266.890000000001], [1.72854924E12, 1647.4400000000005], [1.72855368E12, 2324.71], [1.72855026E12, 1443.13], [1.7285535E12, 2436.5299999999997], [1.72855572E12, 2884.750000000002], [1.72855248E12, 1660.4299999999998], [1.72854906E12, 1425.28], [1.72855128E12, 1711.7799999999986], [1.72855452E12, 2195.2999999999993], [1.7285523E12, 1711.500000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7285514E12, 1359.7999999999997], [1.72855362E12, 1863.6], [1.72855584E12, 2298.099999999997], [1.72854918E12, 1156.75], [1.72855566E12, 2312.7999999999997], [1.7285502E12, 1202.6], [1.72855242E12, 1340.3999999999996], [1.72855464E12, 1813.6], [1.72855122E12, 1364.6], [1.72855446E12, 1865.7999999999997], [1.72855344E12, 1820.8], [1.728549E12, 1207.8999999999999], [1.72855002E12, 1208.0], [1.72855224E12, 1379.1999999999996], [1.72855326E12, 1837.1999999999998], [1.72855548E12, 2331.899999999999], [1.72855074E12, 1361.0], [1.72855398E12, 1849.1999999999998], [1.7285562E12, 2335.9999999999995], [1.72854852E12, 1110.7999999999997], [1.72855296E12, 1905.3999999999999], [1.72854954E12, 1159.6], [1.72855176E12, 1387.7999999999997], [1.72855278E12, 1824.1], [1.728555E12, 2360.75], [1.72855668E12, 1733.25], [1.7285538E12, 1777.6], [1.72854834E12, 1192.3499999999995], [1.72855056E12, 1376.7999999999997], [1.72855158E12, 1372.2499999999993], [1.72855602E12, 2347.1], [1.72854936E12, 1153.2499999999998], [1.7285526E12, 1525.65], [1.72855038E12, 1243.9], [1.72855482E12, 1894.9999999999984], [1.7285517E12, 1359.6], [1.72855494E12, 2339.9], [1.72854948E12, 1144.25], [1.72855392E12, 1791.75], [1.7285505E12, 1338.75], [1.72855374E12, 1907.55], [1.72855596E12, 2281.45], [1.72854828E12, 1134.0], [1.72855272E12, 1843.0], [1.7285493E12, 1183.6999999999994], [1.72855152E12, 1384.4999999999986], [1.72855254E12, 1362.0], [1.72855476E12, 1636.0], [1.72855356E12, 1862.8999999999999], [1.72855032E12, 1136.25], [1.72855134E12, 1307.7999999999997], [1.72855578E12, 2249.8499999999995], [1.72855428E12, 1886.3999999999999], [1.72854882E12, 1134.6999999999998], [1.72855104E12, 1409.2999999999997], [1.72855206E12, 1302.8999999999999], [1.7285565E12, 2380.5499999999997], [1.72854984E12, 1208.1999999999998], [1.72855308E12, 1813.9], [1.72855086E12, 1315.2499999999998], [1.7285553E12, 2397.9999999999986], [1.72854864E12, 1124.55], [1.72854966E12, 1207.75], [1.72855188E12, 1298.7499999999998], [1.7285541E12, 1837.8999999999999], [1.72855632E12, 2329.7999999999993], [1.72855614E12, 2264.6], [1.72854846E12, 1173.8999999999999], [1.72855068E12, 1407.0], [1.7285529E12, 1797.1999999999998], [1.72855512E12, 2310.9499999999994], [1.72854978E12, 1135.9999999999998], [1.728552E12, 1353.9499999999998], [1.72855302E12, 1928.8999999999999], [1.72855524E12, 2357.0], [1.72855404E12, 1933.0], [1.72854858E12, 1172.1], [1.7285508E12, 1363.0], [1.72855182E12, 1397.3999999999996], [1.72855626E12, 2225.25], [1.7285496E12, 1182.4], [1.72855284E12, 1853.0], [1.72855062E12, 1333.6999999999998], [1.72855506E12, 2245.75], [1.72855662E12, 2299.5999999999995], [1.7285484E12, 1149.9], [1.72854942E12, 1127.2999999999995], [1.72855164E12, 1321.6], [1.72855386E12, 1857.6999999999996], [1.72855608E12, 2358.3], [1.72854912E12, 1143.3999999999999], [1.72855458E12, 1805.0], [1.72855014E12, 1161.5999999999995], [1.72855236E12, 1365.0], [1.7285556E12, 2307.099999999999], [1.72854894E12, 1176.6], [1.72855116E12, 1439.5], [1.72855338E12, 1800.6], [1.72855218E12, 1384.5999999999985], [1.72855542E12, 2265.0499999999984], [1.72854996E12, 1222.0], [1.7285544E12, 1877.3999999999996], [1.72855098E12, 1294.3999999999996], [1.72855422E12, 1803.4499999999998], [1.72855644E12, 2293.5], [1.72854876E12, 1204.0], [1.7285532E12, 1836.899999999997], [1.72855008E12, 1196.6], [1.72855332E12, 1923.65], [1.72855674E12, 1158.3], [1.72855554E12, 2244.5499999999997], [1.7285511E12, 1335.1499999999996], [1.72854888E12, 1185.0], [1.7285499E12, 1107.2499999999995], [1.72855212E12, 1410.3999999999996], [1.72855434E12, 1766.0], [1.72855656E12, 2394.0], [1.72855638E12, 2258.95], [1.7285487E12, 1188.0], [1.72855092E12, 1312.1999999999998], [1.72855314E12, 1855.3999999999996], [1.72855536E12, 2353.0], [1.72855194E12, 1388.1999999999998], [1.72855518E12, 2277.0499999999997], [1.72854972E12, 1137.1999999999996], [1.72855416E12, 1791.7999999999997], [1.7285559E12, 2284.25], [1.72854822E12, 1225.9999999999998], [1.72855044E12, 1377.1999999999998], [1.72855266E12, 1880.85], [1.72855488E12, 2193.0], [1.72855146E12, 1405.3999999999999], [1.7285547E12, 1922.3499999999988], [1.72854924E12, 1143.3999999999996], [1.72855368E12, 1797.9499999999996], [1.72855026E12, 1172.1499999999987], [1.7285535E12, 1944.0499999999997], [1.72855572E12, 2331.75], [1.72855248E12, 1337.4499999999994], [1.72854906E12, 1222.3999999999999], [1.72855128E12, 1319.8999999999996], [1.72855452E12, 1813.65], [1.7285523E12, 1347.4999999999977]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.7285514E12, 38.0], [1.72855362E12, 39.0], [1.72855584E12, 63.0], [1.72854918E12, 35.0], [1.72855566E12, 62.0], [1.7285502E12, 33.0], [1.72855242E12, 35.0], [1.72855464E12, 37.0], [1.72855122E12, 43.0], [1.72855446E12, 43.0], [1.72855344E12, 41.0], [1.728549E12, 46.0], [1.72855002E12, 35.0], [1.72855224E12, 40.0], [1.72855326E12, 42.0], [1.72855548E12, 68.0], [1.72855074E12, 43.0], [1.72855398E12, 48.0], [1.7285562E12, 63.0], [1.72854852E12, 37.0], [1.72855296E12, 37.0], [1.72854954E12, 40.0], [1.72855176E12, 41.0], [1.72855278E12, 44.0], [1.728555E12, 56.0], [1.72855668E12, 42.0], [1.7285538E12, 46.0], [1.72854834E12, 41.0], [1.72855056E12, 38.0], [1.72855158E12, 40.0], [1.72855602E12, 59.0], [1.72854936E12, 35.0], [1.7285526E12, 42.0], [1.72855038E12, 42.0], [1.72855482E12, 42.0], [1.7285517E12, 36.0], [1.72855494E12, 40.0], [1.72854948E12, 39.0], [1.72855392E12, 45.0], [1.7285505E12, 39.0], [1.72855374E12, 51.0], [1.72855596E12, 58.0], [1.72854828E12, 40.0], [1.72855272E12, 42.0], [1.7285493E12, 44.0], [1.72855152E12, 40.0], [1.72855254E12, 42.0], [1.72855476E12, 42.0], [1.72855356E12, 42.0], [1.72855032E12, 39.0], [1.72855134E12, 41.0], [1.72855578E12, 55.0], [1.72855428E12, 48.0], [1.72854882E12, 36.0], [1.72855104E12, 37.0], [1.72855206E12, 41.0], [1.7285565E12, 57.0], [1.72854984E12, 39.0], [1.72855308E12, 44.0], [1.72855086E12, 39.0], [1.7285553E12, 69.0], [1.72854864E12, 45.0], [1.72854966E12, 37.0], [1.72855188E12, 39.0], [1.7285541E12, 40.0], [1.72855632E12, 56.0], [1.72855614E12, 63.0], [1.72854846E12, 44.0], [1.72855068E12, 37.0], [1.7285529E12, 36.0], [1.72855512E12, 76.0], [1.72854978E12, 38.0], [1.728552E12, 39.0], [1.72855302E12, 42.0], [1.72855524E12, 66.0], [1.72855404E12, 36.0], [1.72854858E12, 42.0], [1.7285508E12, 37.0], [1.72855182E12, 37.0], [1.72855626E12, 63.0], [1.7285496E12, 39.0], [1.72855284E12, 42.0], [1.72855062E12, 44.0], [1.72855506E12, 66.0], [1.72855662E12, 58.0], [1.7285484E12, 42.0], [1.72854942E12, 38.0], [1.72855164E12, 37.0], [1.72855386E12, 50.0], [1.72855608E12, 36.0], [1.72854912E12, 43.0], [1.72855458E12, 44.0], [1.72855014E12, 38.0], [1.72855236E12, 40.0], [1.7285556E12, 24.0], [1.72854894E12, 43.0], [1.72855116E12, 37.0], [1.72855338E12, 41.0], [1.72855218E12, 33.0], [1.72855542E12, 70.0], [1.72854996E12, 37.0], [1.7285544E12, 46.0], [1.72855098E12, 42.0], [1.72855422E12, 42.0], [1.72855644E12, 60.0], [1.72854876E12, 42.0], [1.7285532E12, 45.0], [1.72855008E12, 41.0], [1.72855332E12, 46.0], [1.72855674E12, 58.0], [1.72855554E12, 63.0], [1.7285511E12, 44.0], [1.72854888E12, 37.0], [1.7285499E12, 39.0], [1.72855212E12, 44.0], [1.72855434E12, 44.0], [1.72855656E12, 62.0], [1.72855638E12, 64.0], [1.7285487E12, 45.0], [1.72855092E12, 43.0], [1.72855314E12, 41.0], [1.72855536E12, 52.0], [1.72855194E12, 38.0], [1.72855518E12, 58.0], [1.72854972E12, 41.0], [1.72855416E12, 44.0], [1.7285559E12, 57.0], [1.72854822E12, 45.0], [1.72855044E12, 37.0], [1.72855266E12, 48.0], [1.72855488E12, 59.0], [1.72855146E12, 36.0], [1.7285547E12, 44.0], [1.72854924E12, 39.0], [1.72855368E12, 45.0], [1.72855026E12, 32.0], [1.7285535E12, 38.0], [1.72855572E12, 62.0], [1.72855248E12, 34.0], [1.72854906E12, 39.0], [1.72855128E12, 39.0], [1.72855452E12, 44.0], [1.7285523E12, 37.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7285514E12, 513.0], [1.72855362E12, 617.0], [1.72855584E12, 851.0], [1.72854918E12, 401.5], [1.72855566E12, 749.5], [1.7285502E12, 427.0], [1.72855242E12, 523.0], [1.72855464E12, 667.0], [1.72855122E12, 487.0], [1.72855446E12, 669.0], [1.72855344E12, 631.0], [1.728549E12, 503.0], [1.72855002E12, 489.0], [1.72855224E12, 495.0], [1.72855326E12, 623.0], [1.72855548E12, 817.0], [1.72855074E12, 538.0], [1.72855398E12, 667.0], [1.7285562E12, 848.0], [1.72854852E12, 365.0], [1.72855296E12, 652.0], [1.72854954E12, 461.0], [1.72855176E12, 474.0], [1.72855278E12, 670.0], [1.728555E12, 834.5], [1.72855668E12, 506.5], [1.7285538E12, 568.0], [1.72854834E12, 417.0], [1.72855056E12, 486.0], [1.72855158E12, 501.5], [1.72855602E12, 952.0], [1.72854936E12, 428.0], [1.7285526E12, 407.5], [1.72855038E12, 455.5], [1.72855482E12, 481.0], [1.7285517E12, 496.0], [1.72855494E12, 799.0], [1.72854948E12, 338.5], [1.72855392E12, 590.0], [1.7285505E12, 436.0], [1.72855374E12, 697.5], [1.72855596E12, 849.5], [1.72854828E12, 300.0], [1.72855272E12, 607.0], [1.7285493E12, 468.5], [1.72855152E12, 552.0], [1.72855254E12, 505.0], [1.72855476E12, 549.0], [1.72855356E12, 705.5], [1.72855032E12, 338.5], [1.72855134E12, 442.0], [1.72855578E12, 822.5], [1.72855428E12, 722.0], [1.72854882E12, 436.0], [1.72855104E12, 553.0], [1.72855206E12, 512.5], [1.7285565E12, 889.0], [1.72854984E12, 426.5], [1.72855308E12, 627.0], [1.72855086E12, 535.0], [1.7285553E12, 818.0], [1.72854864E12, 454.5], [1.72854966E12, 403.5], [1.72855188E12, 451.0], [1.7285541E12, 603.0], [1.72855632E12, 876.0], [1.72855614E12, 867.0], [1.72854846E12, 365.5], [1.72855068E12, 481.0], [1.7285529E12, 649.5], [1.72855512E12, 764.0], [1.72854978E12, 377.0], [1.728552E12, 510.5], [1.72855302E12, 787.5], [1.72855524E12, 889.0], [1.72855404E12, 633.0], [1.72854858E12, 431.0], [1.7285508E12, 420.0], [1.72855182E12, 495.0], [1.72855626E12, 774.0], [1.7285496E12, 404.0], [1.72855284E12, 713.0], [1.72855062E12, 455.0], [1.72855506E12, 749.5], [1.72855662E12, 796.5], [1.7285484E12, 469.5], [1.72854942E12, 396.0], [1.72855164E12, 434.0], [1.72855386E12, 624.5], [1.72855608E12, 912.0], [1.72854912E12, 413.5], [1.72855458E12, 679.0], [1.72855014E12, 484.0], [1.72855236E12, 442.0], [1.7285556E12, 898.0], [1.72854894E12, 416.0], [1.72855116E12, 518.0], [1.72855338E12, 631.0], [1.72855218E12, 500.0], [1.72855542E12, 845.5], [1.72854996E12, 486.0], [1.7285544E12, 609.0], [1.72855098E12, 452.5], [1.72855422E12, 574.0], [1.72855644E12, 784.5], [1.72854876E12, 487.0], [1.7285532E12, 594.5], [1.72855008E12, 411.0], [1.72855332E12, 630.0], [1.72855674E12, 658.5], [1.72855554E12, 929.5], [1.7285511E12, 508.0], [1.72854888E12, 419.0], [1.7285499E12, 340.0], [1.72855212E12, 519.0], [1.72855434E12, 685.5], [1.72855656E12, 908.0], [1.72855638E12, 784.0], [1.7285487E12, 462.0], [1.72855092E12, 468.0], [1.72855314E12, 686.0], [1.72855536E12, 843.0], [1.72855194E12, 408.0], [1.72855518E12, 863.5], [1.72854972E12, 417.0], [1.72855416E12, 618.0], [1.7285559E12, 918.5], [1.72854822E12, 439.0], [1.72855044E12, 554.0], [1.72855266E12, 489.0], [1.72855488E12, 758.0], [1.72855146E12, 520.0], [1.7285547E12, 706.5], [1.72854924E12, 394.0], [1.72855368E12, 569.5], [1.72855026E12, 351.0], [1.7285535E12, 700.5], [1.72855572E12, 750.0], [1.72855248E12, 518.0], [1.72854906E12, 529.0], [1.72855128E12, 429.0], [1.72855452E12, 484.0], [1.7285523E12, 514.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72855674E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 187.0, "minX": 1.0, "maxY": 770.0, "series": [{"data": [[2.0, 694.0], [32.0, 232.5], [33.0, 286.0], [35.0, 230.0], [3.0, 688.5], [4.0, 631.0], [5.0, 654.0], [6.0, 594.0], [7.0, 559.5], [8.0, 546.0], [9.0, 562.0], [10.0, 559.5], [11.0, 637.0], [12.0, 632.0], [13.0, 642.5], [14.0, 638.0], [15.0, 616.0], [1.0, 770.0], [16.0, 589.5], [17.0, 548.0], [18.0, 516.5], [19.0, 502.0], [20.0, 440.5], [21.0, 361.0], [22.0, 371.5], [23.0, 328.0], [24.0, 288.5], [25.0, 274.0], [26.0, 286.5], [27.0, 240.0], [28.0, 283.0], [29.0, 279.0], [30.0, 229.0], [31.0, 187.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 35.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 110.5, "minX": 1.0, "maxY": 542.0, "series": [{"data": [[2.0, 471.5], [32.0, 142.5], [33.0, 162.0], [35.0, 135.0], [3.0, 453.5], [4.0, 428.0], [5.0, 432.0], [6.0, 404.0], [7.0, 393.0], [8.0, 388.0], [9.0, 395.0], [10.0, 396.0], [11.0, 444.0], [12.0, 446.0], [13.0, 456.0], [14.0, 456.0], [15.0, 442.0], [1.0, 542.0], [16.0, 426.0], [17.0, 400.0], [18.0, 381.0], [19.0, 368.0], [20.0, 314.0], [21.0, 244.0], [22.0, 248.5], [23.0, 211.0], [24.0, 173.0], [25.0, 173.0], [26.0, 172.0], [27.0, 148.0], [28.0, 168.5], [29.0, 182.0], [30.0, 133.0], [31.0, 110.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 35.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.55, "minX": 1.72854822E12, "maxY": 17.983333333333334, "series": [{"data": [[1.7285514E12, 14.416666666666666], [1.72855362E12, 16.516666666666666], [1.72855584E12, 17.283333333333335], [1.72854918E12, 8.566666666666666], [1.72855566E12, 17.766666666666666], [1.7285502E12, 8.433333333333334], [1.72855242E12, 14.583333333333334], [1.72855464E12, 16.216666666666665], [1.72855122E12, 14.716666666666667], [1.72855446E12, 16.166666666666668], [1.72855344E12, 16.85], [1.728549E12, 7.883333333333334], [1.72855002E12, 7.916666666666667], [1.72855224E12, 14.383333333333333], [1.72855326E12, 16.683333333333334], [1.72855548E12, 17.283333333333335], [1.72855074E12, 14.483333333333333], [1.72855398E12, 16.616666666666667], [1.7285562E12, 17.116666666666667], [1.72854852E12, 8.9], [1.72855296E12, 16.25], [1.72854954E12, 8.25], [1.72855176E12, 14.783333333333333], [1.72855278E12, 16.3], [1.728555E12, 17.066666666666666], [1.72855668E12, 14.866666666666667], [1.7285538E12, 17.183333333333334], [1.72854834E12, 4.266666666666667], [1.72855056E12, 14.75], [1.72855158E12, 14.466666666666667], [1.72855602E12, 16.133333333333333], [1.72854936E12, 8.666666666666666], [1.7285526E12, 9.233333333333333], [1.72855038E12, 7.733333333333333], [1.72855482E12, 7.333333333333333], [1.7285517E12, 14.683333333333334], [1.72855494E12, 17.016666666666666], [1.72854948E12, 9.066666666666666], [1.72855392E12, 16.733333333333334], [1.7285505E12, 15.066666666666666], [1.72855374E12, 15.8], [1.72855596E12, 16.966666666666665], [1.72854828E12, 4.65], [1.72855272E12, 16.816666666666666], [1.7285493E12, 8.2], [1.72855152E12, 13.95], [1.72855254E12, 12.916666666666666], [1.72855476E12, 15.216666666666667], [1.72855356E12, 15.933333333333334], [1.72855032E12, 9.066666666666666], [1.72855134E12, 15.35], [1.72855578E12, 17.633333333333333], [1.72855428E12, 15.716666666666667], [1.72854882E12, 8.366666666666667], [1.72855104E12, 13.683333333333334], [1.72855206E12, 14.766666666666667], [1.7285565E12, 16.366666666666667], [1.72854984E12, 8.466666666666667], [1.72855308E12, 16.683333333333334], [1.72855086E12, 14.3], [1.7285553E12, 16.783333333333335], [1.72854864E12, 8.466666666666667], [1.72854966E12, 8.4], [1.72855188E12, 15.133333333333333], [1.7285541E12, 16.766666666666666], [1.72855632E12, 16.95], [1.72855614E12, 16.85], [1.72854846E12, 3.75], [1.72855068E12, 14.35], [1.7285529E12, 16.6], [1.72855512E12, 17.7], [1.72854978E12, 8.716666666666667], [1.728552E12, 14.333333333333334], [1.72855302E12, 15.166666666666666], [1.72855524E12, 16.65], [1.72855404E12, 16.316666666666666], [1.72854858E12, 8.416666666666666], [1.7285508E12, 15.15], [1.72855182E12, 14.366666666666667], [1.72855626E12, 17.733333333333334], [1.7285496E12, 8.583333333333334], [1.72855284E12, 15.983333333333333], [1.72855062E12, 15.083333333333334], [1.72855506E12, 17.733333333333334], [1.72855662E12, 17.316666666666666], [1.7285484E12, 4.166666666666667], [1.72854942E12, 8.883333333333333], [1.72855164E12, 15.216666666666667], [1.72855386E12, 16.666666666666668], [1.72855608E12, 16.933333333333334], [1.72854912E12, 8.533333333333333], [1.72855458E12, 15.983333333333333], [1.72855014E12, 8.116666666666667], [1.72855236E12, 14.983333333333333], [1.7285556E12, 16.616666666666667], [1.72854894E12, 8.35], [1.72855116E12, 14.15], [1.72855338E12, 16.933333333333334], [1.72855218E12, 14.283333333333333], [1.72855542E12, 16.966666666666665], [1.72854996E12, 7.983333333333333], [1.7285544E12, 16.616666666666667], [1.72855098E12, 15.3], [1.72855422E12, 17.166666666666668], [1.72855644E12, 17.733333333333334], [1.72854876E12, 7.983333333333333], [1.7285532E12, 17.033333333333335], [1.72855008E12, 8.6], [1.72855332E12, 16.1], [1.72855674E12, 0.55], [1.72855554E12, 16.766666666666666], [1.7285511E12, 14.5], [1.72854888E12, 8.483333333333333], [1.7285499E12, 9.166666666666666], [1.72855212E12, 14.183333333333334], [1.72855434E12, 16.233333333333334], [1.72855656E12, 16.716666666666665], [1.72855638E12, 17.766666666666666], [1.7285487E12, 8.066666666666666], [1.72855092E12, 15.183333333333334], [1.72855314E12, 15.8], [1.72855536E12, 17.316666666666666], [1.72855194E12, 15.516666666666667], [1.72855518E12, 17.433333333333334], [1.72854972E12, 8.716666666666667], [1.72855416E12, 16.85], [1.7285559E12, 16.433333333333334], [1.72854822E12, 3.033333333333333], [1.72855044E12, 13.85], [1.72855266E12, 17.333333333333332], [1.72855488E12, 17.983333333333334], [1.72855146E12, 14.25], [1.7285547E12, 15.616666666666667], [1.72854924E12, 8.45], [1.72855368E12, 17.133333333333333], [1.72855026E12, 9.0], [1.7285535E12, 15.6], [1.72855572E12, 17.566666666666666], [1.72855248E12, 14.533333333333333], [1.72854906E12, 7.683333333333334], [1.72855128E12, 15.35], [1.72855452E12, 17.766666666666666], [1.7285523E12, 14.416666666666666]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72855674E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.72854822E12, "maxY": 17.983333333333334, "series": [{"data": [[1.7285514E12, 14.416666666666666], [1.72855362E12, 16.516666666666666], [1.72855584E12, 17.283333333333335], [1.72854918E12, 8.566666666666666], [1.72855566E12, 17.766666666666666], [1.7285502E12, 8.433333333333334], [1.72855242E12, 14.583333333333334], [1.72855464E12, 16.216666666666665], [1.72855122E12, 14.716666666666667], [1.72855446E12, 16.166666666666668], [1.72855344E12, 16.85], [1.728549E12, 7.883333333333334], [1.72855002E12, 7.916666666666667], [1.72855224E12, 14.383333333333333], [1.72855326E12, 16.683333333333334], [1.72855548E12, 17.283333333333335], [1.72855074E12, 14.483333333333333], [1.72855398E12, 16.616666666666667], [1.7285562E12, 17.116666666666667], [1.72854852E12, 8.85], [1.72855296E12, 16.25], [1.72854954E12, 8.25], [1.72855176E12, 14.783333333333333], [1.72855278E12, 16.3], [1.728555E12, 17.066666666666666], [1.72855668E12, 15.066666666666666], [1.7285538E12, 17.183333333333334], [1.72854834E12, 4.266666666666667], [1.72855056E12, 14.75], [1.72855158E12, 14.466666666666667], [1.72855602E12, 16.133333333333333], [1.72854936E12, 8.666666666666666], [1.7285526E12, 9.1], [1.72855038E12, 7.666666666666667], [1.72855482E12, 7.183333333333334], [1.7285517E12, 14.683333333333334], [1.72855494E12, 17.016666666666666], [1.72854948E12, 9.066666666666666], [1.72855392E12, 16.733333333333334], [1.7285505E12, 15.066666666666666], [1.72855374E12, 15.8], [1.72855596E12, 16.966666666666665], [1.72854828E12, 4.65], [1.72855272E12, 16.816666666666666], [1.7285493E12, 8.2], [1.72855152E12, 13.95], [1.72855254E12, 12.983333333333333], [1.72855476E12, 15.283333333333333], [1.72855356E12, 15.933333333333334], [1.72855032E12, 9.066666666666666], [1.72855134E12, 15.35], [1.72855578E12, 17.633333333333333], [1.72855428E12, 15.716666666666667], [1.72854882E12, 8.366666666666667], [1.72855104E12, 13.683333333333334], [1.72855206E12, 14.766666666666667], [1.7285565E12, 16.366666666666667], [1.72854984E12, 8.466666666666667], [1.72855308E12, 16.683333333333334], [1.72855086E12, 14.3], [1.7285553E12, 16.783333333333335], [1.72854864E12, 8.466666666666667], [1.72854966E12, 8.4], [1.72855188E12, 15.133333333333333], [1.7285541E12, 16.766666666666666], [1.72855632E12, 16.95], [1.72855614E12, 16.85], [1.72854846E12, 3.7666666666666666], [1.72855068E12, 14.35], [1.7285529E12, 16.6], [1.72855512E12, 17.7], [1.72854978E12, 8.716666666666667], [1.728552E12, 14.333333333333334], [1.72855302E12, 15.166666666666666], [1.72855524E12, 16.65], [1.72855404E12, 16.316666666666666], [1.72854858E12, 8.416666666666666], [1.7285508E12, 15.15], [1.72855182E12, 14.366666666666667], [1.72855626E12, 17.733333333333334], [1.7285496E12, 8.583333333333334], [1.72855284E12, 15.983333333333333], [1.72855062E12, 15.083333333333334], [1.72855506E12, 17.733333333333334], [1.72855662E12, 17.333333333333332], [1.7285484E12, 4.166666666666667], [1.72854942E12, 8.883333333333333], [1.72855164E12, 15.216666666666667], [1.72855386E12, 16.666666666666668], [1.72855608E12, 16.933333333333334], [1.72854912E12, 8.533333333333333], [1.72855458E12, 15.983333333333333], [1.72855014E12, 8.116666666666667], [1.72855236E12, 14.983333333333333], [1.7285556E12, 16.616666666666667], [1.72854894E12, 8.35], [1.72855116E12, 14.15], [1.72855338E12, 16.933333333333334], [1.72855218E12, 14.283333333333333], [1.72855542E12, 16.966666666666665], [1.72854996E12, 7.983333333333333], [1.7285544E12, 16.616666666666667], [1.72855098E12, 15.3], [1.72855422E12, 17.166666666666668], [1.72855644E12, 17.733333333333334], [1.72854876E12, 7.983333333333333], [1.7285532E12, 17.033333333333335], [1.72855008E12, 8.6], [1.72855332E12, 16.1], [1.72855674E12, 0.6], [1.72855554E12, 16.766666666666666], [1.7285511E12, 14.5], [1.72854888E12, 8.483333333333333], [1.7285499E12, 9.166666666666666], [1.72855212E12, 14.183333333333334], [1.72855434E12, 16.233333333333334], [1.72855656E12, 16.716666666666665], [1.72855638E12, 17.766666666666666], [1.7285487E12, 8.066666666666666], [1.72855092E12, 15.183333333333334], [1.72855314E12, 15.8], [1.72855536E12, 17.316666666666666], [1.72855194E12, 15.516666666666667], [1.72855518E12, 17.433333333333334], [1.72854972E12, 8.716666666666667], [1.72855416E12, 16.85], [1.7285559E12, 16.433333333333334], [1.72854822E12, 3.0], [1.72855044E12, 13.85], [1.72855266E12, 17.333333333333332], [1.72855488E12, 17.983333333333334], [1.72855146E12, 14.25], [1.7285547E12, 15.633333333333333], [1.72854924E12, 8.45], [1.72855368E12, 17.133333333333333], [1.72855026E12, 9.0], [1.7285535E12, 15.6], [1.72855572E12, 17.566666666666666], [1.72855248E12, 14.533333333333333], [1.72854906E12, 7.683333333333334], [1.72855128E12, 15.35], [1.72855452E12, 17.766666666666666], [1.7285523E12, 14.416666666666666]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72855674E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.72854822E12, "maxY": 17.983333333333334, "series": [{"data": [[1.7285514E12, 14.416666666666666], [1.72855362E12, 16.516666666666666], [1.72855584E12, 17.283333333333335], [1.72854918E12, 8.566666666666666], [1.72855566E12, 17.766666666666666], [1.7285502E12, 8.433333333333334], [1.72855242E12, 14.583333333333334], [1.72855464E12, 16.216666666666665], [1.72855122E12, 14.716666666666667], [1.72855446E12, 16.166666666666668], [1.72855344E12, 16.85], [1.728549E12, 7.883333333333334], [1.72855002E12, 7.916666666666667], [1.72855224E12, 14.383333333333333], [1.72855326E12, 16.683333333333334], [1.72855548E12, 17.283333333333335], [1.72855074E12, 14.483333333333333], [1.72855398E12, 16.616666666666667], [1.7285562E12, 17.116666666666667], [1.72854852E12, 8.85], [1.72855296E12, 16.25], [1.72854954E12, 8.25], [1.72855176E12, 14.783333333333333], [1.72855278E12, 16.3], [1.728555E12, 17.066666666666666], [1.72855668E12, 15.066666666666666], [1.7285538E12, 17.183333333333334], [1.72854834E12, 4.266666666666667], [1.72855056E12, 14.75], [1.72855158E12, 14.466666666666667], [1.72855602E12, 16.133333333333333], [1.72854936E12, 8.666666666666666], [1.7285526E12, 9.1], [1.72855038E12, 7.666666666666667], [1.72855482E12, 7.183333333333334], [1.7285517E12, 14.683333333333334], [1.72855494E12, 17.016666666666666], [1.72854948E12, 9.066666666666666], [1.72855392E12, 16.733333333333334], [1.7285505E12, 15.066666666666666], [1.72855374E12, 15.8], [1.72855596E12, 16.966666666666665], [1.72854828E12, 4.65], [1.72855272E12, 16.816666666666666], [1.7285493E12, 8.2], [1.72855152E12, 13.95], [1.72855254E12, 12.983333333333333], [1.72855476E12, 15.283333333333333], [1.72855356E12, 15.933333333333334], [1.72855032E12, 9.066666666666666], [1.72855134E12, 15.35], [1.72855578E12, 17.633333333333333], [1.72855428E12, 15.716666666666667], [1.72854882E12, 8.366666666666667], [1.72855104E12, 13.683333333333334], [1.72855206E12, 14.766666666666667], [1.7285565E12, 16.366666666666667], [1.72854984E12, 8.466666666666667], [1.72855308E12, 16.683333333333334], [1.72855086E12, 14.3], [1.7285553E12, 16.783333333333335], [1.72854864E12, 8.466666666666667], [1.72854966E12, 8.4], [1.72855188E12, 15.133333333333333], [1.7285541E12, 16.766666666666666], [1.72855632E12, 16.95], [1.72855614E12, 16.85], [1.72854846E12, 3.7666666666666666], [1.72855068E12, 14.35], [1.7285529E12, 16.6], [1.72855512E12, 17.7], [1.72854978E12, 8.716666666666667], [1.728552E12, 14.333333333333334], [1.72855302E12, 15.166666666666666], [1.72855524E12, 16.65], [1.72855404E12, 16.316666666666666], [1.72854858E12, 8.416666666666666], [1.7285508E12, 15.15], [1.72855182E12, 14.366666666666667], [1.72855626E12, 17.733333333333334], [1.7285496E12, 8.583333333333334], [1.72855284E12, 15.983333333333333], [1.72855062E12, 15.083333333333334], [1.72855506E12, 17.733333333333334], [1.72855662E12, 17.333333333333332], [1.7285484E12, 4.166666666666667], [1.72854942E12, 8.883333333333333], [1.72855164E12, 15.216666666666667], [1.72855386E12, 16.666666666666668], [1.72855608E12, 16.933333333333334], [1.72854912E12, 8.533333333333333], [1.72855458E12, 15.983333333333333], [1.72855014E12, 8.116666666666667], [1.72855236E12, 14.983333333333333], [1.7285556E12, 16.616666666666667], [1.72854894E12, 8.35], [1.72855116E12, 14.15], [1.72855338E12, 16.933333333333334], [1.72855218E12, 14.283333333333333], [1.72855542E12, 16.966666666666665], [1.72854996E12, 7.983333333333333], [1.7285544E12, 16.616666666666667], [1.72855098E12, 15.3], [1.72855422E12, 17.166666666666668], [1.72855644E12, 17.733333333333334], [1.72854876E12, 7.983333333333333], [1.7285532E12, 17.033333333333335], [1.72855008E12, 8.6], [1.72855332E12, 16.1], [1.72855674E12, 0.6], [1.72855554E12, 16.766666666666666], [1.7285511E12, 14.5], [1.72854888E12, 8.483333333333333], [1.7285499E12, 9.166666666666666], [1.72855212E12, 14.183333333333334], [1.72855434E12, 16.233333333333334], [1.72855656E12, 16.716666666666665], [1.72855638E12, 17.766666666666666], [1.7285487E12, 8.066666666666666], [1.72855092E12, 15.183333333333334], [1.72855314E12, 15.8], [1.72855536E12, 17.316666666666666], [1.72855194E12, 15.516666666666667], [1.72855518E12, 17.433333333333334], [1.72854972E12, 8.716666666666667], [1.72855416E12, 16.85], [1.7285559E12, 16.433333333333334], [1.72854822E12, 3.0], [1.72855044E12, 13.85], [1.72855266E12, 17.333333333333332], [1.72855488E12, 17.983333333333334], [1.72855146E12, 14.25], [1.7285547E12, 15.633333333333333], [1.72854924E12, 8.45], [1.72855368E12, 17.133333333333333], [1.72855026E12, 9.0], [1.7285535E12, 15.6], [1.72855572E12, 17.566666666666666], [1.72855248E12, 14.533333333333333], [1.72854906E12, 7.683333333333334], [1.72855128E12, 15.35], [1.72855452E12, 17.766666666666666], [1.7285523E12, 14.416666666666666]], "isOverall": false, "label": "getmap-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72855674E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.6, "minX": 1.72854822E12, "maxY": 17.983333333333334, "series": [{"data": [[1.7285514E12, 14.416666666666666], [1.72855362E12, 16.516666666666666], [1.72855584E12, 17.283333333333335], [1.72854918E12, 8.566666666666666], [1.72855566E12, 17.766666666666666], [1.7285502E12, 8.433333333333334], [1.72855242E12, 14.583333333333334], [1.72855464E12, 16.216666666666665], [1.72855122E12, 14.716666666666667], [1.72855446E12, 16.166666666666668], [1.72855344E12, 16.85], [1.728549E12, 7.883333333333334], [1.72855002E12, 7.916666666666667], [1.72855224E12, 14.383333333333333], [1.72855326E12, 16.683333333333334], [1.72855548E12, 17.283333333333335], [1.72855074E12, 14.483333333333333], [1.72855398E12, 16.616666666666667], [1.7285562E12, 17.116666666666667], [1.72854852E12, 8.85], [1.72855296E12, 16.25], [1.72854954E12, 8.25], [1.72855176E12, 14.783333333333333], [1.72855278E12, 16.3], [1.728555E12, 17.066666666666666], [1.72855668E12, 15.066666666666666], [1.7285538E12, 17.183333333333334], [1.72854834E12, 4.266666666666667], [1.72855056E12, 14.75], [1.72855158E12, 14.466666666666667], [1.72855602E12, 16.133333333333333], [1.72854936E12, 8.666666666666666], [1.7285526E12, 9.1], [1.72855038E12, 7.666666666666667], [1.72855482E12, 7.183333333333334], [1.7285517E12, 14.683333333333334], [1.72855494E12, 17.016666666666666], [1.72854948E12, 9.066666666666666], [1.72855392E12, 16.733333333333334], [1.7285505E12, 15.066666666666666], [1.72855374E12, 15.8], [1.72855596E12, 16.966666666666665], [1.72854828E12, 4.65], [1.72855272E12, 16.816666666666666], [1.7285493E12, 8.2], [1.72855152E12, 13.95], [1.72855254E12, 12.983333333333333], [1.72855476E12, 15.283333333333333], [1.72855356E12, 15.933333333333334], [1.72855032E12, 9.066666666666666], [1.72855134E12, 15.35], [1.72855578E12, 17.633333333333333], [1.72855428E12, 15.716666666666667], [1.72854882E12, 8.366666666666667], [1.72855104E12, 13.683333333333334], [1.72855206E12, 14.766666666666667], [1.7285565E12, 16.366666666666667], [1.72854984E12, 8.466666666666667], [1.72855308E12, 16.683333333333334], [1.72855086E12, 14.3], [1.7285553E12, 16.783333333333335], [1.72854864E12, 8.466666666666667], [1.72854966E12, 8.4], [1.72855188E12, 15.133333333333333], [1.7285541E12, 16.766666666666666], [1.72855632E12, 16.95], [1.72855614E12, 16.85], [1.72854846E12, 3.7666666666666666], [1.72855068E12, 14.35], [1.7285529E12, 16.6], [1.72855512E12, 17.7], [1.72854978E12, 8.716666666666667], [1.728552E12, 14.333333333333334], [1.72855302E12, 15.166666666666666], [1.72855524E12, 16.65], [1.72855404E12, 16.316666666666666], [1.72854858E12, 8.416666666666666], [1.7285508E12, 15.15], [1.72855182E12, 14.366666666666667], [1.72855626E12, 17.733333333333334], [1.7285496E12, 8.583333333333334], [1.72855284E12, 15.983333333333333], [1.72855062E12, 15.083333333333334], [1.72855506E12, 17.733333333333334], [1.72855662E12, 17.333333333333332], [1.7285484E12, 4.166666666666667], [1.72854942E12, 8.883333333333333], [1.72855164E12, 15.216666666666667], [1.72855386E12, 16.666666666666668], [1.72855608E12, 16.933333333333334], [1.72854912E12, 8.533333333333333], [1.72855458E12, 15.983333333333333], [1.72855014E12, 8.116666666666667], [1.72855236E12, 14.983333333333333], [1.7285556E12, 16.616666666666667], [1.72854894E12, 8.35], [1.72855116E12, 14.15], [1.72855338E12, 16.933333333333334], [1.72855218E12, 14.283333333333333], [1.72855542E12, 16.966666666666665], [1.72854996E12, 7.983333333333333], [1.7285544E12, 16.616666666666667], [1.72855098E12, 15.3], [1.72855422E12, 17.166666666666668], [1.72855644E12, 17.733333333333334], [1.72854876E12, 7.983333333333333], [1.7285532E12, 17.033333333333335], [1.72855008E12, 8.6], [1.72855332E12, 16.1], [1.72855674E12, 0.6], [1.72855554E12, 16.766666666666666], [1.7285511E12, 14.5], [1.72854888E12, 8.483333333333333], [1.7285499E12, 9.166666666666666], [1.72855212E12, 14.183333333333334], [1.72855434E12, 16.233333333333334], [1.72855656E12, 16.716666666666665], [1.72855638E12, 17.766666666666666], [1.7285487E12, 8.066666666666666], [1.72855092E12, 15.183333333333334], [1.72855314E12, 15.8], [1.72855536E12, 17.316666666666666], [1.72855194E12, 15.516666666666667], [1.72855518E12, 17.433333333333334], [1.72854972E12, 8.716666666666667], [1.72855416E12, 16.85], [1.7285559E12, 16.433333333333334], [1.72854822E12, 3.0], [1.72855044E12, 13.85], [1.72855266E12, 17.333333333333332], [1.72855488E12, 17.983333333333334], [1.72855146E12, 14.25], [1.7285547E12, 15.633333333333333], [1.72854924E12, 8.45], [1.72855368E12, 17.133333333333333], [1.72855026E12, 9.0], [1.7285535E12, 15.6], [1.72855572E12, 17.566666666666666], [1.72855248E12, 14.533333333333333], [1.72854906E12, 7.683333333333334], [1.72855128E12, 15.35], [1.72855452E12, 17.766666666666666], [1.7285523E12, 14.416666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72855674E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

