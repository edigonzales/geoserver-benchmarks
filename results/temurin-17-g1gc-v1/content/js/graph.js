/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 32.0, "minX": 0.0, "maxY": 4074.0, "series": [{"data": [[0.0, 32.0], [0.1, 41.0], [0.2, 44.0], [0.3, 46.0], [0.4, 48.0], [0.5, 49.0], [0.6, 51.0], [0.7, 52.0], [0.8, 53.0], [0.9, 54.0], [1.0, 55.0], [1.1, 56.0], [1.2, 57.0], [1.3, 57.0], [1.4, 58.0], [1.5, 59.0], [1.6, 59.0], [1.7, 60.0], [1.8, 61.0], [1.9, 61.0], [2.0, 62.0], [2.1, 62.0], [2.2, 63.0], [2.3, 64.0], [2.4, 64.0], [2.5, 65.0], [2.6, 65.0], [2.7, 66.0], [2.8, 66.0], [2.9, 67.0], [3.0, 67.0], [3.1, 68.0], [3.2, 68.0], [3.3, 69.0], [3.4, 69.0], [3.5, 70.0], [3.6, 70.0], [3.7, 71.0], [3.8, 71.0], [3.9, 71.0], [4.0, 72.0], [4.1, 72.0], [4.2, 73.0], [4.3, 73.0], [4.4, 74.0], [4.5, 74.0], [4.6, 74.0], [4.7, 75.0], [4.8, 75.0], [4.9, 75.0], [5.0, 76.0], [5.1, 76.0], [5.2, 77.0], [5.3, 77.0], [5.4, 77.0], [5.5, 78.0], [5.6, 78.0], [5.7, 79.0], [5.8, 79.0], [5.9, 79.0], [6.0, 80.0], [6.1, 80.0], [6.2, 80.0], [6.3, 81.0], [6.4, 81.0], [6.5, 81.0], [6.6, 82.0], [6.7, 82.0], [6.8, 83.0], [6.9, 83.0], [7.0, 83.0], [7.1, 84.0], [7.2, 84.0], [7.3, 84.0], [7.4, 85.0], [7.5, 85.0], [7.6, 86.0], [7.7, 86.0], [7.8, 86.0], [7.9, 87.0], [8.0, 87.0], [8.1, 87.0], [8.2, 88.0], [8.3, 88.0], [8.4, 88.0], [8.5, 89.0], [8.6, 89.0], [8.7, 89.0], [8.8, 90.0], [8.9, 90.0], [9.0, 90.0], [9.1, 91.0], [9.2, 91.0], [9.3, 91.0], [9.4, 92.0], [9.5, 92.0], [9.6, 92.0], [9.7, 93.0], [9.8, 93.0], [9.9, 93.0], [10.0, 94.0], [10.1, 94.0], [10.2, 94.0], [10.3, 95.0], [10.4, 95.0], [10.5, 95.0], [10.6, 95.0], [10.7, 96.0], [10.8, 96.0], [10.9, 96.0], [11.0, 97.0], [11.1, 97.0], [11.2, 97.0], [11.3, 98.0], [11.4, 98.0], [11.5, 98.0], [11.6, 99.0], [11.7, 99.0], [11.8, 99.0], [11.9, 100.0], [12.0, 100.0], [12.1, 100.0], [12.2, 101.0], [12.3, 101.0], [12.4, 101.0], [12.5, 102.0], [12.6, 102.0], [12.7, 102.0], [12.8, 103.0], [12.9, 103.0], [13.0, 103.0], [13.1, 104.0], [13.2, 104.0], [13.3, 104.0], [13.4, 105.0], [13.5, 105.0], [13.6, 105.0], [13.7, 106.0], [13.8, 106.0], [13.9, 106.0], [14.0, 107.0], [14.1, 107.0], [14.2, 107.0], [14.3, 108.0], [14.4, 108.0], [14.5, 109.0], [14.6, 109.0], [14.7, 109.0], [14.8, 109.0], [14.9, 110.0], [15.0, 110.0], [15.1, 110.0], [15.2, 111.0], [15.3, 111.0], [15.4, 111.0], [15.5, 112.0], [15.6, 112.0], [15.7, 112.0], [15.8, 113.0], [15.9, 113.0], [16.0, 113.0], [16.1, 114.0], [16.2, 114.0], [16.3, 114.0], [16.4, 115.0], [16.5, 115.0], [16.6, 115.0], [16.7, 116.0], [16.8, 116.0], [16.9, 117.0], [17.0, 117.0], [17.1, 117.0], [17.2, 118.0], [17.3, 118.0], [17.4, 118.0], [17.5, 119.0], [17.6, 119.0], [17.7, 119.0], [17.8, 120.0], [17.9, 120.0], [18.0, 120.0], [18.1, 121.0], [18.2, 121.0], [18.3, 122.0], [18.4, 122.0], [18.5, 122.0], [18.6, 123.0], [18.7, 123.0], [18.8, 123.0], [18.9, 124.0], [19.0, 124.0], [19.1, 125.0], [19.2, 125.0], [19.3, 125.0], [19.4, 126.0], [19.5, 126.0], [19.6, 127.0], [19.7, 127.0], [19.8, 127.0], [19.9, 128.0], [20.0, 128.0], [20.1, 128.0], [20.2, 129.0], [20.3, 129.0], [20.4, 130.0], [20.5, 130.0], [20.6, 130.0], [20.7, 131.0], [20.8, 131.0], [20.9, 132.0], [21.0, 132.0], [21.1, 132.0], [21.2, 133.0], [21.3, 133.0], [21.4, 134.0], [21.5, 134.0], [21.6, 135.0], [21.7, 135.0], [21.8, 135.0], [21.9, 136.0], [22.0, 136.0], [22.1, 137.0], [22.2, 137.0], [22.3, 137.0], [22.4, 138.0], [22.5, 138.0], [22.6, 139.0], [22.7, 139.0], [22.8, 140.0], [22.9, 140.0], [23.0, 140.0], [23.1, 141.0], [23.2, 141.0], [23.3, 142.0], [23.4, 142.0], [23.5, 143.0], [23.6, 143.0], [23.7, 143.0], [23.8, 144.0], [23.9, 144.0], [24.0, 145.0], [24.1, 145.0], [24.2, 146.0], [24.3, 146.0], [24.4, 147.0], [24.5, 147.0], [24.6, 148.0], [24.7, 148.0], [24.8, 149.0], [24.9, 149.0], [25.0, 149.0], [25.1, 150.0], [25.2, 150.0], [25.3, 151.0], [25.4, 151.0], [25.5, 152.0], [25.6, 152.0], [25.7, 153.0], [25.8, 153.0], [25.9, 154.0], [26.0, 154.0], [26.1, 155.0], [26.2, 155.0], [26.3, 156.0], [26.4, 156.0], [26.5, 157.0], [26.6, 157.0], [26.7, 158.0], [26.8, 158.0], [26.9, 159.0], [27.0, 159.0], [27.1, 160.0], [27.2, 160.0], [27.3, 161.0], [27.4, 161.0], [27.5, 162.0], [27.6, 162.0], [27.7, 163.0], [27.8, 163.0], [27.9, 164.0], [28.0, 165.0], [28.1, 165.0], [28.2, 166.0], [28.3, 166.0], [28.4, 167.0], [28.5, 167.0], [28.6, 168.0], [28.7, 169.0], [28.8, 169.0], [28.9, 170.0], [29.0, 170.0], [29.1, 171.0], [29.2, 172.0], [29.3, 172.0], [29.4, 173.0], [29.5, 173.0], [29.6, 174.0], [29.7, 175.0], [29.8, 175.0], [29.9, 176.0], [30.0, 177.0], [30.1, 177.0], [30.2, 178.0], [30.3, 178.0], [30.4, 179.0], [30.5, 180.0], [30.6, 180.0], [30.7, 181.0], [30.8, 182.0], [30.9, 182.0], [31.0, 183.0], [31.1, 184.0], [31.2, 184.0], [31.3, 185.0], [31.4, 186.0], [31.5, 187.0], [31.6, 187.0], [31.7, 188.0], [31.8, 189.0], [31.9, 189.0], [32.0, 190.0], [32.1, 191.0], [32.2, 192.0], [32.3, 192.0], [32.4, 193.0], [32.5, 194.0], [32.6, 195.0], [32.7, 195.0], [32.8, 196.0], [32.9, 197.0], [33.0, 198.0], [33.1, 198.0], [33.2, 199.0], [33.3, 200.0], [33.4, 201.0], [33.5, 202.0], [33.6, 202.0], [33.7, 203.0], [33.8, 204.0], [33.9, 205.0], [34.0, 206.0], [34.1, 207.0], [34.2, 207.0], [34.3, 208.0], [34.4, 209.0], [34.5, 210.0], [34.6, 211.0], [34.7, 212.0], [34.8, 213.0], [34.9, 214.0], [35.0, 215.0], [35.1, 216.0], [35.2, 217.0], [35.3, 218.0], [35.4, 219.0], [35.5, 220.0], [35.6, 221.0], [35.7, 222.0], [35.8, 223.0], [35.9, 224.0], [36.0, 225.0], [36.1, 226.0], [36.2, 227.0], [36.3, 228.0], [36.4, 230.0], [36.5, 231.0], [36.6, 232.0], [36.7, 233.0], [36.8, 234.0], [36.9, 235.0], [37.0, 237.0], [37.1, 238.0], [37.2, 239.0], [37.3, 241.0], [37.4, 242.0], [37.5, 243.0], [37.6, 245.0], [37.7, 246.0], [37.8, 247.0], [37.9, 249.0], [38.0, 250.0], [38.1, 252.0], [38.2, 253.0], [38.3, 255.0], [38.4, 256.0], [38.5, 258.0], [38.6, 260.0], [38.7, 261.0], [38.8, 263.0], [38.9, 265.0], [39.0, 266.0], [39.1, 268.0], [39.2, 270.0], [39.3, 272.0], [39.4, 273.0], [39.5, 275.0], [39.6, 277.0], [39.7, 279.0], [39.8, 281.0], [39.9, 283.0], [40.0, 285.0], [40.1, 287.0], [40.2, 289.0], [40.3, 291.0], [40.4, 293.0], [40.5, 295.0], [40.6, 298.0], [40.7, 300.0], [40.8, 303.0], [40.9, 305.0], [41.0, 307.0], [41.1, 309.0], [41.2, 312.0], [41.3, 314.0], [41.4, 316.0], [41.5, 319.0], [41.6, 321.0], [41.7, 324.0], [41.8, 326.0], [41.9, 329.0], [42.0, 331.0], [42.1, 334.0], [42.2, 337.0], [42.3, 340.0], [42.4, 342.0], [42.5, 345.0], [42.6, 348.0], [42.7, 351.0], [42.8, 354.0], [42.9, 357.0], [43.0, 360.0], [43.1, 363.0], [43.2, 366.0], [43.3, 369.0], [43.4, 372.0], [43.5, 375.0], [43.6, 379.0], [43.7, 382.0], [43.8, 386.0], [43.9, 389.0], [44.0, 392.0], [44.1, 395.0], [44.2, 398.0], [44.3, 401.0], [44.4, 404.0], [44.5, 407.0], [44.6, 410.0], [44.7, 413.0], [44.8, 416.0], [44.9, 420.0], [45.0, 423.0], [45.1, 426.0], [45.2, 428.0], [45.3, 432.0], [45.4, 435.0], [45.5, 439.0], [45.6, 442.0], [45.7, 445.0], [45.8, 449.0], [45.9, 451.0], [46.0, 455.0], [46.1, 458.0], [46.2, 461.0], [46.3, 464.0], [46.4, 467.0], [46.5, 470.0], [46.6, 473.0], [46.7, 476.0], [46.8, 479.0], [46.9, 482.0], [47.0, 485.0], [47.1, 488.0], [47.2, 491.0], [47.3, 494.0], [47.4, 497.0], [47.5, 499.0], [47.6, 503.0], [47.7, 505.0], [47.8, 508.0], [47.9, 511.0], [48.0, 513.0], [48.1, 516.0], [48.2, 519.0], [48.3, 521.0], [48.4, 524.0], [48.5, 526.0], [48.6, 529.0], [48.7, 532.0], [48.8, 534.0], [48.9, 537.0], [49.0, 540.0], [49.1, 542.0], [49.2, 545.0], [49.3, 548.0], [49.4, 550.0], [49.5, 553.0], [49.6, 556.0], [49.7, 558.0], [49.8, 562.0], [49.9, 564.0], [50.0, 567.0], [50.1, 569.0], [50.2, 572.0], [50.3, 574.0], [50.4, 576.0], [50.5, 579.0], [50.6, 581.0], [50.7, 584.0], [50.8, 586.0], [50.9, 588.0], [51.0, 590.0], [51.1, 593.0], [51.2, 595.0], [51.3, 597.0], [51.4, 600.0], [51.5, 602.0], [51.6, 605.0], [51.7, 607.0], [51.8, 610.0], [51.9, 612.0], [52.0, 614.0], [52.1, 616.0], [52.2, 618.0], [52.3, 620.0], [52.4, 623.0], [52.5, 625.0], [52.6, 627.0], [52.7, 629.0], [52.8, 631.0], [52.9, 633.0], [53.0, 636.0], [53.1, 638.0], [53.2, 641.0], [53.3, 643.0], [53.4, 646.0], [53.5, 648.0], [53.6, 650.0], [53.7, 653.0], [53.8, 655.0], [53.9, 657.0], [54.0, 659.0], [54.1, 661.0], [54.2, 664.0], [54.3, 666.0], [54.4, 669.0], [54.5, 671.0], [54.6, 673.0], [54.7, 675.0], [54.8, 677.0], [54.9, 679.0], [55.0, 681.0], [55.1, 683.0], [55.2, 685.0], [55.3, 687.0], [55.4, 689.0], [55.5, 691.0], [55.6, 694.0], [55.7, 696.0], [55.8, 698.0], [55.9, 700.0], [56.0, 702.0], [56.1, 704.0], [56.2, 706.0], [56.3, 708.0], [56.4, 710.0], [56.5, 713.0], [56.6, 715.0], [56.7, 717.0], [56.8, 719.0], [56.9, 721.0], [57.0, 723.0], [57.1, 725.0], [57.2, 727.0], [57.3, 729.0], [57.4, 731.0], [57.5, 734.0], [57.6, 735.0], [57.7, 737.0], [57.8, 739.0], [57.9, 742.0], [58.0, 744.0], [58.1, 745.0], [58.2, 747.0], [58.3, 750.0], [58.4, 751.0], [58.5, 754.0], [58.6, 756.0], [58.7, 757.0], [58.8, 760.0], [58.9, 761.0], [59.0, 763.0], [59.1, 765.0], [59.2, 767.0], [59.3, 769.0], [59.4, 771.0], [59.5, 773.0], [59.6, 775.0], [59.7, 777.0], [59.8, 780.0], [59.9, 782.0], [60.0, 784.0], [60.1, 786.0], [60.2, 788.0], [60.3, 790.0], [60.4, 792.0], [60.5, 794.0], [60.6, 796.0], [60.7, 798.0], [60.8, 801.0], [60.9, 803.0], [61.0, 805.0], [61.1, 807.0], [61.2, 809.0], [61.3, 811.0], [61.4, 813.0], [61.5, 815.0], [61.6, 817.0], [61.7, 819.0], [61.8, 821.0], [61.9, 823.0], [62.0, 825.0], [62.1, 827.0], [62.2, 829.0], [62.3, 831.0], [62.4, 833.0], [62.5, 834.0], [62.6, 836.0], [62.7, 838.0], [62.8, 840.0], [62.9, 842.0], [63.0, 844.0], [63.1, 846.0], [63.2, 848.0], [63.3, 850.0], [63.4, 852.0], [63.5, 854.0], [63.6, 856.0], [63.7, 858.0], [63.8, 860.0], [63.9, 861.0], [64.0, 864.0], [64.1, 866.0], [64.2, 867.0], [64.3, 870.0], [64.4, 872.0], [64.5, 874.0], [64.6, 876.0], [64.7, 878.0], [64.8, 880.0], [64.9, 882.0], [65.0, 885.0], [65.1, 887.0], [65.2, 889.0], [65.3, 891.0], [65.4, 893.0], [65.5, 895.0], [65.6, 897.0], [65.7, 899.0], [65.8, 901.0], [65.9, 903.0], [66.0, 906.0], [66.1, 908.0], [66.2, 910.0], [66.3, 912.0], [66.4, 914.0], [66.5, 916.0], [66.6, 918.0], [66.7, 920.0], [66.8, 922.0], [66.9, 924.0], [67.0, 926.0], [67.1, 928.0], [67.2, 930.0], [67.3, 933.0], [67.4, 934.0], [67.5, 936.0], [67.6, 938.0], [67.7, 940.0], [67.8, 942.0], [67.9, 944.0], [68.0, 946.0], [68.1, 948.0], [68.2, 951.0], [68.3, 952.0], [68.4, 955.0], [68.5, 957.0], [68.6, 958.0], [68.7, 961.0], [68.8, 963.0], [68.9, 965.0], [69.0, 967.0], [69.1, 969.0], [69.2, 971.0], [69.3, 973.0], [69.4, 975.0], [69.5, 977.0], [69.6, 979.0], [69.7, 980.0], [69.8, 983.0], [69.9, 985.0], [70.0, 987.0], [70.1, 989.0], [70.2, 992.0], [70.3, 993.0], [70.4, 995.0], [70.5, 997.0], [70.6, 1000.0], [70.7, 1002.0], [70.8, 1004.0], [70.9, 1006.0], [71.0, 1008.0], [71.1, 1011.0], [71.2, 1013.0], [71.3, 1015.0], [71.4, 1017.0], [71.5, 1019.0], [71.6, 1021.0], [71.7, 1024.0], [71.8, 1026.0], [71.9, 1028.0], [72.0, 1030.0], [72.1, 1032.0], [72.2, 1035.0], [72.3, 1037.0], [72.4, 1039.0], [72.5, 1041.0], [72.6, 1043.0], [72.7, 1045.0], [72.8, 1048.0], [72.9, 1050.0], [73.0, 1052.0], [73.1, 1054.0], [73.2, 1056.0], [73.3, 1059.0], [73.4, 1061.0], [73.5, 1063.0], [73.6, 1066.0], [73.7, 1068.0], [73.8, 1071.0], [73.9, 1073.0], [74.0, 1075.0], [74.1, 1077.0], [74.2, 1080.0], [74.3, 1082.0], [74.4, 1085.0], [74.5, 1087.0], [74.6, 1089.0], [74.7, 1092.0], [74.8, 1093.0], [74.9, 1096.0], [75.0, 1098.0], [75.1, 1100.0], [75.2, 1103.0], [75.3, 1105.0], [75.4, 1107.0], [75.5, 1110.0], [75.6, 1112.0], [75.7, 1115.0], [75.8, 1117.0], [75.9, 1120.0], [76.0, 1122.0], [76.1, 1125.0], [76.2, 1128.0], [76.3, 1130.0], [76.4, 1132.0], [76.5, 1135.0], [76.6, 1137.0], [76.7, 1139.0], [76.8, 1142.0], [76.9, 1144.0], [77.0, 1146.0], [77.1, 1149.0], [77.2, 1151.0], [77.3, 1154.0], [77.4, 1156.0], [77.5, 1158.0], [77.6, 1161.0], [77.7, 1163.0], [77.8, 1166.0], [77.9, 1169.0], [78.0, 1171.0], [78.1, 1173.0], [78.2, 1176.0], [78.3, 1178.0], [78.4, 1181.0], [78.5, 1183.0], [78.6, 1186.0], [78.7, 1188.0], [78.8, 1191.0], [78.9, 1193.0], [79.0, 1196.0], [79.1, 1199.0], [79.2, 1202.0], [79.3, 1205.0], [79.4, 1207.0], [79.5, 1210.0], [79.6, 1212.0], [79.7, 1215.0], [79.8, 1218.0], [79.9, 1220.0], [80.0, 1223.0], [80.1, 1226.0], [80.2, 1228.0], [80.3, 1231.0], [80.4, 1234.0], [80.5, 1236.0], [80.6, 1239.0], [80.7, 1242.0], [80.8, 1245.0], [80.9, 1248.0], [81.0, 1251.0], [81.1, 1253.0], [81.2, 1256.0], [81.3, 1258.0], [81.4, 1261.0], [81.5, 1263.0], [81.6, 1266.0], [81.7, 1269.0], [81.8, 1272.0], [81.9, 1275.0], [82.0, 1278.0], [82.1, 1281.0], [82.2, 1284.0], [82.3, 1287.0], [82.4, 1290.0], [82.5, 1293.0], [82.6, 1296.0], [82.7, 1299.0], [82.8, 1303.0], [82.9, 1306.0], [83.0, 1309.0], [83.1, 1312.0], [83.2, 1316.0], [83.3, 1319.0], [83.4, 1322.0], [83.5, 1325.0], [83.6, 1327.0], [83.7, 1331.0], [83.8, 1334.0], [83.9, 1337.0], [84.0, 1341.0], [84.1, 1344.0], [84.2, 1347.0], [84.3, 1350.0], [84.4, 1353.0], [84.5, 1356.0], [84.6, 1360.0], [84.7, 1363.0], [84.8, 1366.0], [84.9, 1369.0], [85.0, 1372.0], [85.1, 1375.0], [85.2, 1379.0], [85.3, 1383.0], [85.4, 1386.0], [85.5, 1390.0], [85.6, 1393.0], [85.7, 1396.0], [85.8, 1400.0], [85.9, 1403.0], [86.0, 1407.0], [86.1, 1410.0], [86.2, 1413.0], [86.3, 1416.0], [86.4, 1420.0], [86.5, 1424.0], [86.6, 1428.0], [86.7, 1431.0], [86.8, 1435.0], [86.9, 1439.0], [87.0, 1442.0], [87.1, 1446.0], [87.2, 1450.0], [87.3, 1455.0], [87.4, 1459.0], [87.5, 1463.0], [87.6, 1467.0], [87.7, 1470.0], [87.8, 1475.0], [87.9, 1479.0], [88.0, 1483.0], [88.1, 1487.0], [88.2, 1491.0], [88.3, 1495.0], [88.4, 1498.0], [88.5, 1502.0], [88.6, 1507.0], [88.7, 1511.0], [88.8, 1515.0], [88.9, 1520.0], [89.0, 1524.0], [89.1, 1528.0], [89.2, 1533.0], [89.3, 1537.0], [89.4, 1542.0], [89.5, 1547.0], [89.6, 1551.0], [89.7, 1556.0], [89.8, 1561.0], [89.9, 1566.0], [90.0, 1570.0], [90.1, 1575.0], [90.2, 1579.0], [90.3, 1585.0], [90.4, 1590.0], [90.5, 1594.0], [90.6, 1598.0], [90.7, 1604.0], [90.8, 1609.0], [90.9, 1613.0], [91.0, 1618.0], [91.1, 1622.0], [91.2, 1626.0], [91.3, 1632.0], [91.4, 1638.0], [91.5, 1642.0], [91.6, 1648.0], [91.7, 1654.0], [91.8, 1658.0], [91.9, 1663.0], [92.0, 1669.0], [92.1, 1674.0], [92.2, 1679.0], [92.3, 1686.0], [92.4, 1691.0], [92.5, 1698.0], [92.6, 1704.0], [92.7, 1710.0], [92.8, 1717.0], [92.9, 1722.0], [93.0, 1728.0], [93.1, 1735.0], [93.2, 1742.0], [93.3, 1748.0], [93.4, 1756.0], [93.5, 1762.0], [93.6, 1769.0], [93.7, 1775.0], [93.8, 1781.0], [93.9, 1789.0], [94.0, 1795.0], [94.1, 1803.0], [94.2, 1810.0], [94.3, 1816.0], [94.4, 1823.0], [94.5, 1832.0], [94.6, 1840.0], [94.7, 1849.0], [94.8, 1857.0], [94.9, 1865.0], [95.0, 1873.0], [95.1, 1881.0], [95.2, 1891.0], [95.3, 1900.0], [95.4, 1909.0], [95.5, 1918.0], [95.6, 1927.0], [95.7, 1937.0], [95.8, 1948.0], [95.9, 1957.0], [96.0, 1965.0], [96.1, 1977.0], [96.2, 1988.0], [96.3, 1999.0], [96.4, 2009.0], [96.5, 2021.0], [96.6, 2032.0], [96.7, 2042.0], [96.8, 2055.0], [96.9, 2069.0], [97.0, 2081.0], [97.1, 2093.0], [97.2, 2109.0], [97.3, 2125.0], [97.4, 2138.0], [97.5, 2153.0], [97.6, 2170.0], [97.7, 2185.0], [97.8, 2202.0], [97.9, 2219.0], [98.0, 2237.0], [98.1, 2254.0], [98.2, 2273.0], [98.3, 2295.0], [98.4, 2315.0], [98.5, 2339.0], [98.6, 2365.0], [98.7, 2391.0], [98.8, 2419.0], [98.9, 2452.0], [99.0, 2484.0], [99.1, 2517.0], [99.2, 2553.0], [99.3, 2597.0], [99.4, 2644.0], [99.5, 2707.0], [99.6, 2776.0], [99.7, 2867.0], [99.8, 2994.0], [99.9, 3174.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 25080.0, "series": [{"data": [[0.0, 13896.0], [600.0, 5251.0], [700.0, 5730.0], [800.0, 5845.0], [900.0, 5689.0], [1000.0, 5240.0], [1100.0, 4738.0], [1200.0, 4222.0], [1300.0, 3614.0], [1400.0, 3089.0], [1500.0, 2569.0], [100.0, 25080.0], [1600.0, 2244.0], [1700.0, 1790.0], [1800.0, 1449.0], [1900.0, 1184.0], [2000.0, 979.0], [2100.0, 748.0], [2300.0, 469.0], [2200.0, 644.0], [2400.0, 379.0], [2500.0, 299.0], [2600.0, 211.0], [2700.0, 158.0], [2800.0, 127.0], [2900.0, 83.0], [3000.0, 81.0], [3100.0, 44.0], [200.0, 8705.0], [3200.0, 43.0], [3300.0, 24.0], [3400.0, 9.0], [3500.0, 14.0], [3700.0, 3.0], [3600.0, 8.0], [3800.0, 3.0], [3900.0, 1.0], [4000.0, 2.0], [300.0, 4195.0], [400.0, 3796.0], [500.0, 4545.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 13535.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 55711.0, "series": [{"data": [[0.0, 55711.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 47954.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 13535.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.72846092E12, "maxY": 16.0, "series": [{"data": [[1.72846674E12, 12.0], [1.72846704E12, 12.0], [1.72846614E12, 12.0], [1.72846644E12, 12.0], [1.72846584E12, 12.0], [1.72846746E12, 12.0], [1.72846554E12, 12.0], [1.72846686E12, 12.0], [1.72846716E12, 12.0], [1.7284656E12, 12.0], [1.72846722E12, 12.0], [1.72846752E12, 11.261009667024705], [1.72846662E12, 12.0], [1.72846692E12, 12.0], [1.72846632E12, 12.0], [1.72846602E12, 12.0], [1.72846572E12, 12.0], [1.72846734E12, 12.0], [1.72846542E12, 12.0], [1.72846608E12, 12.0], [1.72846578E12, 12.0], [1.72846548E12, 12.0], [1.7284671E12, 12.0], [1.7284674E12, 12.0], [1.7284665E12, 12.0], [1.7284668E12, 12.0], [1.7284662E12, 12.0], [1.7284659E12, 12.0], [1.72846626E12, 12.0], [1.72846656E12, 12.0], [1.72846596E12, 12.0], [1.72846758E12, 6.077562326869804], [1.72846566E12, 12.0], [1.72846536E12, 11.898419864559823], [1.72846698E12, 12.0], [1.72846728E12, 12.0], [1.72846638E12, 12.0], [1.72846668E12, 12.0]], "isOverall": false, "label": "12", "isController": false}, {"data": [[1.72846092E12, 2.0], [1.7284611E12, 2.0], [1.72846104E12, 2.0], [1.72846116E12, 1.8716577540106951], [1.72846098E12, 2.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.7284614E12, 4.0], [1.72846302E12, 4.0], [1.728462E12, 4.0], [1.7284617E12, 4.0], [1.7284623E12, 4.0], [1.7284626E12, 4.0], [1.72846128E12, 4.0], [1.7284629E12, 4.0], [1.72846188E12, 4.0], [1.72846158E12, 4.0], [1.72846218E12, 4.0], [1.72846248E12, 4.0], [1.72846116E12, 3.9918699186991873], [1.72846278E12, 4.0], [1.72846308E12, 3.4738292011019296], [1.72846176E12, 4.0], [1.72846146E12, 4.0], [1.72846206E12, 4.0], [1.72846236E12, 4.0], [1.72846266E12, 4.0], [1.72846296E12, 4.0], [1.72846164E12, 4.0], [1.72846134E12, 4.0], [1.72846194E12, 4.0], [1.72846224E12, 4.0], [1.72846254E12, 4.0], [1.72846284E12, 4.0], [1.72846152E12, 4.0], [1.72846314E12, 1.0], [1.72846122E12, 4.0], [1.72846212E12, 4.0], [1.72846182E12, 4.0], [1.72846242E12, 4.0], [1.72846272E12, 4.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.72846806E12, 16.0], [1.72846896E12, 16.0], [1.72846836E12, 16.0], [1.72846866E12, 16.0], [1.72846908E12, 16.0], [1.72846776E12, 16.0], [1.72846878E12, 16.0], [1.72846938E12, 15.703878902554424], [1.72846884E12, 16.0], [1.72846854E12, 16.0], [1.72846944E12, 9.929889298893], [1.72846914E12, 16.0], [1.72846794E12, 16.0], [1.72846824E12, 16.0], [1.72846926E12, 16.0], [1.72846764E12, 16.0], [1.7284677E12, 16.0], [1.72846932E12, 16.0], [1.728468E12, 16.0], [1.72846902E12, 16.0], [1.72846842E12, 16.0], [1.72846782E12, 16.0], [1.72846872E12, 16.0], [1.72846812E12, 16.0], [1.72846818E12, 16.0], [1.72846848E12, 16.0], [1.7284695E12, 1.235294117647059], [1.72846758E12, 15.890186915887845], [1.72846788E12, 16.0], [1.7284686E12, 16.0], [1.7284683E12, 16.0], [1.7284692E12, 16.0], [1.7284689E12, 16.0]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.72846512E12, 8.0], [1.72846332E12, 8.0], [1.72846482E12, 8.0], [1.72846362E12, 8.0], [1.72846452E12, 8.0], [1.72846392E12, 8.0], [1.72846422E12, 8.0], [1.72846524E12, 8.0], [1.7284632E12, 8.0], [1.72846494E12, 8.0], [1.7284635E12, 8.0], [1.7284638E12, 8.0], [1.7284653E12, 7.939686369119419], [1.7284641E12, 8.0], [1.728465E12, 8.0], [1.7284647E12, 8.0], [1.7284644E12, 8.0], [1.72846338E12, 8.0], [1.72846368E12, 8.0], [1.72846398E12, 8.0], [1.72846428E12, 8.0], [1.72846518E12, 8.0], [1.72846326E12, 8.0], [1.72846488E12, 8.0], [1.72846356E12, 8.0], [1.72846458E12, 8.0], [1.72846386E12, 8.0], [1.72846416E12, 8.0], [1.72846464E12, 8.0], [1.72846434E12, 8.0], [1.72846314E12, 7.992366412213739], [1.72846344E12, 8.0], [1.72846374E12, 8.0], [1.72846536E12, 5.106463878326996], [1.72846404E12, 8.0], [1.72846506E12, 8.0], [1.72846476E12, 8.0], [1.72846446E12, 8.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7284695E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 467.5709598031175, "minX": 1.0, "maxY": 937.4851863857325, "series": [{"data": [[2.0, 467.5709598031175], [8.0, 553.1525131611891], [9.0, 592.2169811320755], [10.0, 511.9615384615383], [11.0, 672.1018518518516], [3.0, 524.8288288288288], [12.0, 735.9325469440662], [13.0, 883.8947368421053], [14.0, 776.0714285714286], [15.0, 794.7244318181816], [1.0, 476.4834437086092], [4.0, 479.90568046596184], [16.0, 937.4851863857325], [5.0, 526.4393939393939], [6.0, 469.0664335664336], [7.0, 547.774744027304]], "isOverall": false, "label": "getmap", "isController": false}, {"data": [[10.723745733788325, 699.7662116040879]], "isOverall": false, "label": "getmap-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.72846092E12, "maxY": 5.470259925E7, "series": [{"data": [[1.7284614E12, 2.4752711983333334E7], [1.72846482E12, 4.2947219583333336E7], [1.72846704E12, 4.989226805E7], [1.72846362E12, 4.284795306666667E7], [1.72846806E12, 5.149410743333333E7], [1.72846584E12, 5.064006295E7], [1.72846908E12, 5.470259925E7], [1.7284626E12, 2.6412789183333334E7], [1.72846686E12, 5.0354615733333334E7], [1.72846722E12, 4.895126436666667E7], [1.72846158E12, 2.503331985E7], [1.7284638E12, 4.3468184483333334E7], [1.728465E12, 4.483096805E7], [1.72846944E12, 3.937880453333333E7], [1.72846278E12, 2.5644666216666665E7], [1.72846602E12, 4.7828322416666664E7], [1.72846824E12, 5.262852768333333E7], [1.72846926E12, 5.246732561666667E7], [1.72846176E12, 2.595709295E7], [1.72846398E12, 4.315338475E7], [1.72846296E12, 2.5146669366666667E7], [1.72846518E12, 4.51014812E7], [1.7284674E12, 4.90609181E7], [1.72846842E12, 5.142194968333333E7], [1.7284662E12, 5.0866255766666666E7], [1.72846194E12, 2.477430775E7], [1.72846416E12, 4.350304145E7], [1.72846092E12, 1.2547555433333334E7], [1.72846434E12, 4.4279502E7], [1.72846656E12, 4.835076445E7], [1.72846758E12, 3.950577838333333E7], [1.72846314E12, 2.90927329E7], [1.72846212E12, 2.5820748566666666E7], [1.72846536E12, 3.48653949E7], [1.7284686E12, 5.285228521666667E7], [1.72846638E12, 4.987068663333333E7], [1.72846674E12, 4.8593590266666666E7], [1.72846332E12, 4.5178593833333336E7], [1.7284611E12, 1.327931605E7], [1.72846452E12, 4.398383618333333E7], [1.72846896E12, 5.28039584E7], [1.7284623E12, 2.599896135E7], [1.72846554E12, 4.9672373516666666E7], [1.72846776E12, 5.311471755E7], [1.72846878E12, 5.3091998983333334E7], [1.72846128E12, 2.6140171116666667E7], [1.7284635E12, 4.461634486666667E7], [1.72846248E12, 2.4864117316666666E7], [1.7284647E12, 4.231706213333333E7], [1.72846692E12, 4.732820906666667E7], [1.72846914E12, 5.089177243333333E7], [1.72846794E12, 5.028111211666667E7], [1.72846572E12, 5.02481366E7], [1.72846146E12, 2.58768384E7], [1.72846368E12, 4.228083188333333E7], [1.72846608E12, 5.0978021983333334E7], [1.72846932E12, 5.1260411416666664E7], [1.72846266E12, 2.6304126E7], [1.7284671E12, 4.86715003E7], [1.72846164E12, 2.6373486283333335E7], [1.72846488E12, 4.6314916016666666E7], [1.72846386E12, 4.38025119E7], [1.7284659E12, 5.101120111666667E7], [1.72846812E12, 5.181135363333333E7], [1.72846626E12, 4.958992993333333E7], [1.72846848E12, 5.3739508416666664E7], [1.72846284E12, 2.4751302433333334E7], [1.7284695E12, 1120123.95], [1.72846182E12, 2.56350392E7], [1.72846404E12, 4.388682513333333E7], [1.72846506E12, 4.326076065E7], [1.72846728E12, 4.92225477E7], [1.7284683E12, 5.19117888E7], [1.72846302E12, 2.3627465966666665E7], [1.728462E12, 2.64587449E7], [1.72846644E12, 4.810955645E7], [1.72846866E12, 5.241860628333333E7], [1.72846422E12, 4.32510773E7], [1.72846746E12, 5.020433278333333E7], [1.72846524E12, 4.36191897E7], [1.72846098E12, 1.3292015133333333E7], [1.7284632E12, 4.425539218333333E7], [1.7284656E12, 4.96209567E7], [1.72846884E12, 5.302257343333333E7], [1.72846662E12, 5.1240776833333336E7], [1.72846218E12, 2.4191890566666666E7], [1.72846116E12, 1.4401244883333333E7], [1.7284644E12, 4.266123438333333E7], [1.72846338E12, 4.492961656666667E7], [1.72846542E12, 5.05852502E7], [1.72846764E12, 5.075209535E7], [1.72846578E12, 4.990053003333333E7], [1.728468E12, 5.4441309983333334E7], [1.72846236E12, 2.7078739666666668E7], [1.72846902E12, 4.909548118333333E7], [1.72846134E12, 2.5689322833333332E7], [1.72846356E12, 4.467822785E7], [1.72846458E12, 4.5461737266666666E7], [1.7284668E12, 4.9918785E7], [1.72846782E12, 5.13123887E7], [1.72846818E12, 5.15586005E7], [1.72846254E12, 2.54741649E7], [1.72846152E12, 2.6683519616666667E7], [1.72846596E12, 4.900191685E7], [1.72846374E12, 4.35544183E7], [1.72846698E12, 4.93255929E7], [1.72846476E12, 4.434925738333333E7], [1.7284692E12, 5.34853696E7], [1.72846272E12, 2.54648689E7], [1.72846512E12, 4.382211803333333E7], [1.7284617E12, 2.61228701E7], [1.72846392E12, 4.4827994416666664E7], [1.72846614E12, 4.893388895E7], [1.72846836E12, 5.311762103333333E7], [1.7284629E12, 2.611712135E7], [1.72846494E12, 4.482013296666667E7], [1.72846716E12, 5.1155646733333334E7], [1.72846938E12, 5.271960765E7], [1.72846188E12, 2.6179943783333335E7], [1.72846752E12, 4.855162613333333E7], [1.7284653E12, 4.535787988333333E7], [1.72846854E12, 5.0654960333333336E7], [1.7284641E12, 4.480843193333333E7], [1.72846632E12, 4.940193928333333E7], [1.72846308E12, 1.819691745E7], [1.72846734E12, 5.0197406E7], [1.7284677E12, 5.1132055483333334E7], [1.72846206E12, 2.5453686533333335E7], [1.72846428E12, 4.463145538333333E7], [1.72846548E12, 4.905801503333333E7], [1.72846104E12, 1.2916100166666666E7], [1.72846326E12, 4.220442965E7], [1.7284665E12, 4.9611433583333336E7], [1.72846872E12, 5.2680918916666664E7], [1.72846224E12, 2.4703779E7], [1.72846464E12, 4.397643813333333E7], [1.72846122E12, 2.4351278616666667E7], [1.72846344E12, 4.241279056666667E7], [1.72846566E12, 5.03802096E7], [1.72846788E12, 5.157919571666667E7], [1.72846242E12, 2.4406119516666666E7], [1.72846446E12, 4.2315765766666666E7], [1.72846668E12, 5.074679755E7], [1.7284689E12, 5.2719465166666664E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7284614E12, 0.0], [1.72846482E12, 0.0], [1.72846704E12, 0.0], [1.72846362E12, 0.0], [1.72846806E12, 0.0], [1.72846584E12, 0.0], [1.72846908E12, 0.0], [1.7284626E12, 0.0], [1.72846686E12, 0.0], [1.72846722E12, 0.0], [1.72846158E12, 0.0], [1.7284638E12, 0.0], [1.728465E12, 0.0], [1.72846944E12, 0.0], [1.72846278E12, 0.0], [1.72846602E12, 0.0], [1.72846824E12, 0.0], [1.72846926E12, 0.0], [1.72846176E12, 0.0], [1.72846398E12, 0.0], [1.72846296E12, 0.0], [1.72846518E12, 0.0], [1.7284674E12, 0.0], [1.72846842E12, 0.0], [1.7284662E12, 0.0], [1.72846194E12, 0.0], [1.72846416E12, 0.0], [1.72846092E12, 0.0], [1.72846434E12, 0.0], [1.72846656E12, 0.0], [1.72846758E12, 0.0], [1.72846314E12, 0.0], [1.72846212E12, 0.0], [1.72846536E12, 0.0], [1.7284686E12, 0.0], [1.72846638E12, 0.0], [1.72846674E12, 0.0], [1.72846332E12, 0.0], [1.7284611E12, 0.0], [1.72846452E12, 0.0], [1.72846896E12, 0.0], [1.7284623E12, 0.0], [1.72846554E12, 0.0], [1.72846776E12, 0.0], [1.72846878E12, 0.0], [1.72846128E12, 0.0], [1.7284635E12, 0.0], [1.72846248E12, 0.0], [1.7284647E12, 0.0], [1.72846692E12, 0.0], [1.72846914E12, 0.0], [1.72846794E12, 0.0], [1.72846572E12, 0.0], [1.72846146E12, 0.0], [1.72846368E12, 0.0], [1.72846608E12, 0.0], [1.72846932E12, 0.0], [1.72846266E12, 0.0], [1.7284671E12, 0.0], [1.72846164E12, 0.0], [1.72846488E12, 0.0], [1.72846386E12, 0.0], [1.7284659E12, 0.0], [1.72846812E12, 0.0], [1.72846626E12, 0.0], [1.72846848E12, 0.0], [1.72846284E12, 0.0], [1.7284695E12, 0.0], [1.72846182E12, 0.0], [1.72846404E12, 0.0], [1.72846506E12, 0.0], [1.72846728E12, 0.0], [1.7284683E12, 0.0], [1.72846302E12, 0.0], [1.728462E12, 0.0], [1.72846644E12, 0.0], [1.72846866E12, 0.0], [1.72846422E12, 0.0], [1.72846746E12, 0.0], [1.72846524E12, 0.0], [1.72846098E12, 0.0], [1.7284632E12, 0.0], [1.7284656E12, 0.0], [1.72846884E12, 0.0], [1.72846662E12, 0.0], [1.72846218E12, 0.0], [1.72846116E12, 0.0], [1.7284644E12, 0.0], [1.72846338E12, 0.0], [1.72846542E12, 0.0], [1.72846764E12, 0.0], [1.72846578E12, 0.0], [1.728468E12, 0.0], [1.72846236E12, 0.0], [1.72846902E12, 0.0], [1.72846134E12, 0.0], [1.72846356E12, 0.0], [1.72846458E12, 0.0], [1.7284668E12, 0.0], [1.72846782E12, 0.0], [1.72846818E12, 0.0], [1.72846254E12, 0.0], [1.72846152E12, 0.0], [1.72846596E12, 0.0], [1.72846374E12, 0.0], [1.72846698E12, 0.0], [1.72846476E12, 0.0], [1.7284692E12, 0.0], [1.72846272E12, 0.0], [1.72846512E12, 0.0], [1.7284617E12, 0.0], [1.72846392E12, 0.0], [1.72846614E12, 0.0], [1.72846836E12, 0.0], [1.7284629E12, 0.0], [1.72846494E12, 0.0], [1.72846716E12, 0.0], [1.72846938E12, 0.0], [1.72846188E12, 0.0], [1.72846752E12, 0.0], [1.7284653E12, 0.0], [1.72846854E12, 0.0], [1.7284641E12, 0.0], [1.72846632E12, 0.0], [1.72846308E12, 0.0], [1.72846734E12, 0.0], [1.7284677E12, 0.0], [1.72846206E12, 0.0], [1.72846428E12, 0.0], [1.72846548E12, 0.0], [1.72846104E12, 0.0], [1.72846326E12, 0.0], [1.7284665E12, 0.0], [1.72846872E12, 0.0], [1.72846224E12, 0.0], [1.72846464E12, 0.0], [1.72846122E12, 0.0], [1.72846344E12, 0.0], [1.72846566E12, 0.0], [1.72846788E12, 0.0], [1.72846242E12, 0.0], [1.72846446E12, 0.0], [1.72846668E12, 0.0], [1.7284689E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7284695E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 441.6801470588235, "minX": 1.72846092E12, "maxY": 1003.4306722689084, "series": [{"data": [[1.7284614E12, 491.2889344262297], [1.72846482E12, 548.863844393593], [1.72846704E12, 765.3204715969988], [1.72846362E12, 560.4387397899654], [1.72846806E12, 959.2301507537686], [1.72846584E12, 717.653386454184], [1.72846908E12, 938.4312015503883], [1.7284626E12, 445.01660516605136], [1.72846686E12, 710.104536489152], [1.72846722E12, 741.5036119711048], [1.72846158E12, 458.5407969639471], [1.7284638E12, 571.0322580645167], [1.728465E12, 558.6179906542056], [1.72846944E12, 652.4341943419431], [1.72846278E12, 481.63126252504986], [1.72846602E12, 731.6004077471971], [1.72846824E12, 941.8410206084404], [1.72846926E12, 994.1217750257997], [1.72846176E12, 516.25], [1.72846398E12, 557.2987164527432], [1.72846296E12, 460.4806949806945], [1.72846518E12, 562.483568075116], [1.7284674E12, 735.9283520982589], [1.72846842E12, 899.9352720450282], [1.7284662E12, 714.8113207547175], [1.72846194E12, 485.8367346938777], [1.72846416E12, 560.6889671361495], [1.72846092E12, 460.4249999999998], [1.72846434E12, 553.2647398843936], [1.72846656E12, 704.4594330400777], [1.72846758E12, 724.1533586818762], [1.72846314E12, 554.4338624338624], [1.72846212E12, 454.03036053130927], [1.72846536E12, 630.0736543909361], [1.7284686E12, 927.9083895853421], [1.72846638E12, 736.3231083844582], [1.72846674E12, 735.9979529170928], [1.72846332E12, 547.337514253136], [1.7284611E12, 509.1898734177216], [1.72846452E12, 541.3163265306123], [1.72846896E12, 914.0752380952382], [1.7284623E12, 470.7823529411766], [1.72846554E12, 731.2235772357733], [1.72846776E12, 961.1822709163349], [1.72846878E12, 1003.4306722689084], [1.72846128E12, 474.01178781925336], [1.7284635E12, 555.4727694090385], [1.72846248E12, 472.8877952755908], [1.7284647E12, 530.2055248618783], [1.72846692E12, 728.416582406471], [1.72846914E12, 902.6077504725895], [1.72846794E12, 904.493873704052], [1.72846572E12, 763.38877118644], [1.72846146E12, 503.6568421052634], [1.72846368E12, 538.6542792792798], [1.72846608E12, 739.550873586845], [1.72846932E12, 948.3515936254981], [1.72846266E12, 487.4207317073171], [1.7284671E12, 747.6593977154722], [1.72846164E12, 489.5746421267889], [1.72846488E12, 567.0023612750882], [1.72846386E12, 565.2142857142854], [1.7284659E12, 765.151804670913], [1.72846812E12, 942.2810969637609], [1.72846626E12, 786.763157894736], [1.72846848E12, 913.4819391634977], [1.72846284E12, 496.9087136929463], [1.7284695E12, 615.4705882352941], [1.72846182E12, 474.31944444444446], [1.72846404E12, 521.2483731019528], [1.72846506E12, 563.0667447306795], [1.72846728E12, 694.6181292189008], [1.7284683E12, 941.9216454456412], [1.72846302E12, 448.0223048327141], [1.728462E12, 488.72210953346877], [1.72846644E12, 707.909715407262], [1.72846866E12, 977.0548223350247], [1.72846422E12, 572.8390941597136], [1.72846746E12, 767.5577942735943], [1.72846524E12, 557.4176334106734], [1.72846098E12, 441.6801470588235], [1.7284632E12, 570.1909845788845], [1.7284656E12, 783.955386289445], [1.72846884E12, 929.9329446064155], [1.72846662E12, 719.03003003003], [1.72846218E12, 456.67552182163206], [1.72846116E12, 447.67096774193556], [1.7284644E12, 535.8210290827742], [1.72846338E12, 552.063001145476], [1.72846542E12, 703.1279069767445], [1.72846764E12, 895.4483720930231], [1.72846578E12, 794.5077262693153], [1.728468E12, 977.5717192268561], [1.72846236E12, 486.87272727272705], [1.72846902E12, 912.4139579349912], [1.72846134E12, 484.5151515151515], [1.72846356E12, 530.6013215859036], [1.72846458E12, 563.9976498237367], [1.7284668E12, 743.1360824742266], [1.72846782E12, 905.116367076632], [1.72846818E12, 952.277060575967], [1.72846254E12, 496.9583333333334], [1.72846152E12, 486.2758620689656], [1.72846596E12, 713.1982160555008], [1.72846374E12, 554.4326812428071], [1.72846698E12, 707.2237487733078], [1.72846476E12, 558.3948896631834], [1.7284692E12, 905.4296506137866], [1.72846272E12, 513.1648822269811], [1.72846512E12, 541.1817155756204], [1.7284617E12, 535.8953229398667], [1.72846392E12, 555.1614401858299], [1.72846614E12, 719.3659022931207], [1.72846836E12, 978.396130346233], [1.7284629E12, 496.1092783505153], [1.72846494E12, 564.7053990610331], [1.72846716E12, 734.2606490872208], [1.72846938E12, 899.4711447492907], [1.72846188E12, 485.5766129032256], [1.72846752E12, 721.6852846401719], [1.7284653E12, 572.9360675512661], [1.72846854E12, 903.9489603024571], [1.7284641E12, 548.3348519362182], [1.72846632E12, 750.3222106360784], [1.72846308E12, 461.52617079889814], [1.72846734E12, 745.9242738589219], [1.7284677E12, 936.0792563600768], [1.72846206E12, 469.4263261296658], [1.72846428E12, 575.3329355608597], [1.72846548E12, 709.7729516288254], [1.72846104E12, 451.20454545454567], [1.72846326E12, 536.2376681614352], [1.7284665E12, 773.2244897959193], [1.72846872E12, 965.948743718593], [1.72846224E12, 492.28688524590154], [1.72846464E12, 532.1050884955764], [1.72846122E12, 458.65576923076935], [1.72846344E12, 548.2385321100913], [1.72846566E12, 726.3512145748995], [1.72846788E12, 916.947468958931], [1.72846242E12, 467.23828124999983], [1.72846446E12, 560.5250291036085], [1.72846668E12, 723.5911823647289], [1.7284689E12, 966.2392392392405]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7284695E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 288.9227941176469, "minX": 1.72846092E12, "maxY": 685.5189075630252, "series": [{"data": [[1.7284614E12, 328.48770491803276], [1.72846482E12, 368.2734553775745], [1.72846704E12, 518.754555198285], [1.72846362E12, 377.8961493582268], [1.72846806E12, 654.9638190954778], [1.72846584E12, 486.60159362549814], [1.72846908E12, 639.4467054263564], [1.7284626E12, 290.25645756457556], [1.72846686E12, 481.5690335305721], [1.72846722E12, 504.98452012383854], [1.72846158E12, 304.1954459203039], [1.7284638E12, 384.95101553166086], [1.728465E12, 372.7757009345789], [1.72846944E12, 444.67035670356694], [1.72846278E12, 318.10420841683384], [1.72846602E12, 498.5433231396536], [1.72846824E12, 644.2522080471057], [1.72846926E12, 678.5614035087718], [1.72846176E12, 341.961206896552], [1.72846398E12, 375.89148191365194], [1.72846296E12, 304.33204633204656], [1.72846518E12, 376.1232394366195], [1.7284674E12, 499.3510747185258], [1.72846842E12, 617.1266416510315], [1.7284662E12, 482.1876861966241], [1.72846194E12, 324.24285714285725], [1.72846416E12, 377.80164319248837], [1.72846092E12, 300.15833333333325], [1.72846434E12, 369.83815028901705], [1.72846656E12, 481.04105571847566], [1.72846758E12, 490.752851711027], [1.72846314E12, 372.0105820105821], [1.72846212E12, 297.11005692599616], [1.72846536E12, 423.5028328611901], [1.7284686E12, 634.6624879459974], [1.72846638E12, 497.52965235173866], [1.72846674E12, 502.7676560900718], [1.72846332E12, 365.0604332953244], [1.7284611E12, 339.39662447257393], [1.72846452E12, 361.67006802721085], [1.72846896E12, 623.0476190476194], [1.7284623E12, 310.0039215686276], [1.72846554E12, 496.36890243902434], [1.72846776E12, 654.1215139442221], [1.72846878E12, 685.5189075630252], [1.72846128E12, 313.3536345776031], [1.7284635E12, 368.7358053302433], [1.72846248E12, 315.93700787401593], [1.7284647E12, 357.82762430939243], [1.72846692E12, 499.05965621840176], [1.72846914E12, 623.1257088846874], [1.72846794E12, 620.4373232799239], [1.72846572E12, 515.0656779661014], [1.72846146E12, 332.7242105263154], [1.72846368E12, 364.1407657657656], [1.72846608E12, 500.09866392600225], [1.72846932E12, 653.7858565737052], [1.72846266E12, 319.3130081300809], [1.7284671E12, 510.6718587746628], [1.72846164E12, 320.73824130879336], [1.72846488E12, 373.81345926800486], [1.72846386E12, 379.817330210773], [1.7284659E12, 518.7813163481956], [1.72846812E12, 647.2957884427028], [1.72846626E12, 533.6567982456143], [1.72846848E12, 622.5779467680602], [1.72846284E12, 332.48547717842314], [1.7284695E12, 409.8235294117647], [1.72846182E12, 313.97023809523836], [1.72846404E12, 348.1930585683299], [1.72846506E12, 380.0983606557379], [1.72846728E12, 470.99999999999966], [1.7284683E12, 646.7855044074439], [1.72846302E12, 300.3252788104089], [1.728462E12, 320.66734279918893], [1.72846644E12, 482.9528949950935], [1.72846866E12, 669.3147208121826], [1.72846422E12, 386.10846245530405], [1.72846746E12, 521.724284199364], [1.72846524E12, 375.6995359628774], [1.72846098E12, 288.9227941176469], [1.7284632E12, 385.4626334519574], [1.7284656E12, 533.8302502720345], [1.72846884E12, 635.2798833819246], [1.72846662E12, 485.99599599599617], [1.72846218E12, 305.6925996204933], [1.72846116E12, 298.40967741935486], [1.7284644E12, 360.32214765100645], [1.72846338E12, 370.05727376861415], [1.72846542E12, 474.27131782945713], [1.72846764E12, 617.1823255813958], [1.72846578E12, 540.9657836644597], [1.728468E12, 659.4496439471006], [1.72846236E12, 318.3575757575756], [1.72846902E12, 633.3068833652001], [1.72846134E12, 319.8181818181821], [1.72846356E12, 353.31277533039673], [1.72846458E12, 374.15393654524087], [1.7284668E12, 501.1752577319584], [1.72846782E12, 618.1882686849575], [1.72846818E12, 650.3644488579947], [1.72846254E12, 327.95624999999995], [1.72846152E12, 318.8336713995941], [1.72846596E12, 482.56491575817637], [1.72846374E12, 371.9228998849255], [1.72846698E12, 482.7055937193328], [1.72846476E12, 375.4785133565627], [1.7284692E12, 616.3692162417365], [1.72846272E12, 339.70235546038566], [1.72846512E12, 361.94243792325074], [1.7284617E12, 353.56124721603555], [1.72846392E12, 370.2915214866439], [1.72846614E12, 491.3230309072782], [1.72846836E12, 665.5061099796329], [1.7284629E12, 326.777319587629], [1.72846494E12, 376.79107981220653], [1.72846716E12, 494.2697768762673], [1.72846938E12, 614.5676442762536], [1.72846188E12, 319.1572580645161], [1.72846752E12, 486.2287862513424], [1.7284653E12, 380.3437876960192], [1.72846854E12, 619.850661625709], [1.7284641E12, 364.9476082004559], [1.72846632E12, 512.1240875912408], [1.72846308E12, 303.7603305785123], [1.72846734E12, 503.4087136929462], [1.7284677E12, 642.6389432485311], [1.72846206E12, 307.70137524558004], [1.72846428E12, 384.3687350835324], [1.72846548E12, 483.69397828233014], [1.72846104E12, 298.57954545454527], [1.72846326E12, 363.2309417040358], [1.7284665E12, 527.7357679914071], [1.72846872E12, 659.6100502512566], [1.72846224E12, 328.79098360655706], [1.72846464E12, 355.5995575221236], [1.72846122E12, 304.43076923076904], [1.72846344E12, 371.94610091743124], [1.72846566E12, 487.8117408906881], [1.72846788E12, 633.3323782234952], [1.72846242E12, 313.27734375000006], [1.72846446E12, 378.6705471478467], [1.72846668E12, 488.8186372745491], [1.7284689E12, 662.8698698698698]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7284695E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72846092E12, "maxY": 4.9E-324, "series": [{"data": [[1.7284614E12, 0.0], [1.72846482E12, 0.0], [1.72846704E12, 0.0], [1.72846362E12, 0.0], [1.72846806E12, 0.0], [1.72846584E12, 0.0], [1.72846908E12, 0.0], [1.7284626E12, 0.0], [1.72846686E12, 0.0], [1.72846722E12, 0.0], [1.72846158E12, 0.0], [1.7284638E12, 0.0], [1.728465E12, 0.0], [1.72846944E12, 0.0], [1.72846278E12, 0.0], [1.72846602E12, 0.0], [1.72846824E12, 0.0], [1.72846926E12, 0.0], [1.72846176E12, 0.0], [1.72846398E12, 0.0], [1.72846296E12, 0.0], [1.72846518E12, 0.0], [1.7284674E12, 0.0], [1.72846842E12, 0.0], [1.7284662E12, 0.0], [1.72846194E12, 0.0], [1.72846416E12, 0.0], [1.72846092E12, 0.0], [1.72846434E12, 0.0], [1.72846656E12, 0.0], [1.72846758E12, 0.0], [1.72846314E12, 0.0], [1.72846212E12, 0.0], [1.72846536E12, 0.0], [1.7284686E12, 0.0], [1.72846638E12, 0.0], [1.72846674E12, 0.0], [1.72846332E12, 0.0], [1.7284611E12, 0.0], [1.72846452E12, 0.0], [1.72846896E12, 0.0], [1.7284623E12, 0.0], [1.72846554E12, 0.0], [1.72846776E12, 0.0], [1.72846878E12, 0.0], [1.72846128E12, 0.0], [1.7284635E12, 0.0], [1.72846248E12, 0.0], [1.7284647E12, 0.0], [1.72846692E12, 0.0], [1.72846914E12, 0.0], [1.72846794E12, 0.0], [1.72846572E12, 0.0], [1.72846146E12, 0.0], [1.72846368E12, 0.0], [1.72846608E12, 0.0], [1.72846932E12, 0.0], [1.72846266E12, 0.0], [1.7284671E12, 0.0], [1.72846164E12, 0.0], [1.72846488E12, 0.0], [1.72846386E12, 0.0], [1.7284659E12, 0.0], [1.72846812E12, 0.0], [1.72846626E12, 0.0], [1.72846848E12, 0.0], [1.72846284E12, 0.0], [1.7284695E12, 0.0], [1.72846182E12, 0.0], [1.72846404E12, 0.0], [1.72846506E12, 0.0], [1.72846728E12, 0.0], [1.7284683E12, 0.0], [1.72846302E12, 0.0], [1.728462E12, 0.0], [1.72846644E12, 0.0], [1.72846866E12, 0.0], [1.72846422E12, 0.0], [1.72846746E12, 0.0], [1.72846524E12, 0.0], [1.72846098E12, 0.0], [1.7284632E12, 0.0], [1.7284656E12, 0.0], [1.72846884E12, 0.0], [1.72846662E12, 0.0], [1.72846218E12, 0.0], [1.72846116E12, 0.0], [1.7284644E12, 0.0], [1.72846338E12, 0.0], [1.72846542E12, 0.0], [1.72846764E12, 0.0], [1.72846578E12, 0.0], [1.728468E12, 0.0], [1.72846236E12, 0.0], [1.72846902E12, 0.0], [1.72846134E12, 0.0], [1.72846356E12, 0.0], [1.72846458E12, 0.0], [1.7284668E12, 0.0], [1.72846782E12, 0.0], [1.72846818E12, 0.0], [1.72846254E12, 0.0], [1.72846152E12, 0.0], [1.72846596E12, 0.0], [1.72846374E12, 0.0], [1.72846698E12, 0.0], [1.72846476E12, 0.0], [1.7284692E12, 0.0], [1.72846272E12, 0.0], [1.72846512E12, 0.0], [1.7284617E12, 0.0], [1.72846392E12, 0.0], [1.72846614E12, 0.0], [1.72846836E12, 0.0], [1.7284629E12, 0.0], [1.72846494E12, 0.0], [1.72846716E12, 0.0], [1.72846938E12, 0.0], [1.72846188E12, 0.0], [1.72846752E12, 0.0], [1.7284653E12, 0.0], [1.72846854E12, 0.0], [1.7284641E12, 0.0], [1.72846632E12, 0.0], [1.72846308E12, 0.0], [1.72846734E12, 0.0], [1.7284677E12, 0.0], [1.72846206E12, 0.0], [1.72846428E12, 0.0], [1.72846548E12, 0.0], [1.72846104E12, 0.0], [1.72846326E12, 0.0], [1.7284665E12, 0.0], [1.72846872E12, 0.0], [1.72846224E12, 0.0], [1.72846464E12, 0.0], [1.72846122E12, 0.0], [1.72846344E12, 0.0], [1.72846566E12, 0.0], [1.72846788E12, 0.0], [1.72846242E12, 0.0], [1.72846446E12, 0.0], [1.72846668E12, 0.0], [1.7284689E12, 0.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7284695E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 32.0, "minX": 1.72846092E12, "maxY": 4074.0, "series": [{"data": [[1.7284614E12, 1668.0], [1.72846482E12, 1893.0], [1.72846704E12, 2657.0], [1.72846362E12, 2178.0], [1.72846806E12, 3795.0], [1.72846584E12, 2955.0], [1.72846908E12, 3565.0], [1.7284626E12, 1656.0], [1.72846686E12, 2801.0], [1.72846722E12, 3128.0], [1.72846158E12, 1750.0], [1.7284638E12, 1870.0], [1.728465E12, 1992.0], [1.72846944E12, 3031.0], [1.72846278E12, 1809.0], [1.72846602E12, 2711.0], [1.72846824E12, 3801.0], [1.72846926E12, 4074.0], [1.72846176E12, 1598.0], [1.72846398E12, 2124.0], [1.72846296E12, 1698.0], [1.72846518E12, 2161.0], [1.7284674E12, 2974.0], [1.72846842E12, 3334.0], [1.7284662E12, 2680.0], [1.72846194E12, 1997.0], [1.72846416E12, 2110.0], [1.72846092E12, 1669.0], [1.72846434E12, 2173.0], [1.72846656E12, 3276.0], [1.72846758E12, 3121.0], [1.72846314E12, 1921.0], [1.72846212E12, 1793.0], [1.72846536E12, 2802.0], [1.7284686E12, 3309.0], [1.72846638E12, 2772.0], [1.72846674E12, 2677.0], [1.72846332E12, 2005.0], [1.7284611E12, 1551.0], [1.72846452E12, 2051.0], [1.72846896E12, 3577.0], [1.7284623E12, 1960.0], [1.72846554E12, 2672.0], [1.72846776E12, 3413.0], [1.72846878E12, 3573.0], [1.72846128E12, 1647.0], [1.7284635E12, 2270.0], [1.72846248E12, 1629.0], [1.7284647E12, 2060.0], [1.72846692E12, 3072.0], [1.72846914E12, 3418.0], [1.72846794E12, 3452.0], [1.72846572E12, 2914.0], [1.72846146E12, 1706.0], [1.72846368E12, 2219.0], [1.72846608E12, 2680.0], [1.72846932E12, 3684.0], [1.72846266E12, 1930.0], [1.7284671E12, 2750.0], [1.72846164E12, 1776.0], [1.72846488E12, 2226.0], [1.72846386E12, 2035.0], [1.7284659E12, 3125.0], [1.72846812E12, 3194.0], [1.72846626E12, 3094.0], [1.72846848E12, 3690.0], [1.72846284E12, 1948.0], [1.7284695E12, 1162.0], [1.72846182E12, 1633.0], [1.72846404E12, 2114.0], [1.72846506E12, 2228.0], [1.72846728E12, 2797.0], [1.7284683E12, 3673.0], [1.72846302E12, 1941.0], [1.728462E12, 1803.0], [1.72846644E12, 2970.0], [1.72846866E12, 3540.0], [1.72846422E12, 2203.0], [1.72846746E12, 3012.0], [1.72846524E12, 2101.0], [1.72846098E12, 1534.0], [1.7284632E12, 2344.0], [1.7284656E12, 2718.0], [1.72846884E12, 3556.0], [1.72846662E12, 2647.0], [1.72846218E12, 1792.0], [1.72846116E12, 1656.0], [1.7284644E12, 2140.0], [1.72846338E12, 2159.0], [1.72846542E12, 2921.0], [1.72846764E12, 3406.0], [1.72846578E12, 2703.0], [1.728468E12, 3580.0], [1.72846236E12, 1712.0], [1.72846902E12, 3562.0], [1.72846134E12, 1604.0], [1.72846356E12, 2029.0], [1.72846458E12, 1927.0], [1.7284668E12, 2659.0], [1.72846782E12, 3405.0], [1.72846818E12, 3783.0], [1.72846254E12, 1609.0], [1.72846152E12, 1959.0], [1.72846596E12, 2895.0], [1.72846374E12, 2077.0], [1.72846698E12, 2897.0], [1.72846476E12, 2040.0], [1.7284692E12, 3180.0], [1.72846272E12, 1888.0], [1.72846512E12, 2326.0], [1.7284617E12, 1956.0], [1.72846392E12, 2154.0], [1.72846614E12, 2587.0], [1.72846836E12, 4001.0], [1.7284629E12, 1869.0], [1.72846494E12, 2419.0], [1.72846716E12, 2734.0], [1.72846938E12, 3389.0], [1.72846188E12, 1984.0], [1.72846752E12, 2849.0], [1.7284653E12, 2443.0], [1.72846854E12, 3283.0], [1.7284641E12, 1934.0], [1.72846632E12, 2895.0], [1.72846308E12, 1650.0], [1.72846734E12, 2831.0], [1.7284677E12, 3518.0], [1.72846206E12, 1883.0], [1.72846428E12, 2014.0], [1.72846548E12, 2762.0], [1.72846104E12, 1909.0], [1.72846326E12, 2057.0], [1.7284665E12, 2801.0], [1.72846872E12, 3625.0], [1.72846224E12, 1560.0], [1.72846464E12, 2062.0], [1.72846122E12, 1561.0], [1.72846344E12, 2051.0], [1.72846566E12, 3002.0], [1.72846788E12, 3841.0], [1.72846242E12, 1664.0], [1.72846446E12, 2152.0], [1.72846668E12, 2629.0], [1.7284689E12, 3948.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7284614E12, 1042.9], [1.72846482E12, 1169.0], [1.72846704E12, 1595.0], [1.72846362E12, 1169.4], [1.72846806E12, 2058.7999999999997], [1.72846584E12, 1590.5], [1.72846908E12, 2061.7], [1.7284626E12, 989.1999999999998], [1.72846686E12, 1598.0], [1.72846722E12, 1620.0], [1.72846158E12, 1005.0], [1.7284638E12, 1196.0000000000005], [1.728465E12, 1228.5000000000005], [1.72846944E12, 1448.0], [1.72846278E12, 1048.0], [1.72846602E12, 1586.2000000000003], [1.72846824E12, 2000.0], [1.72846926E12, 2082.0], [1.72846176E12, 1060.5], [1.72846398E12, 1175.0000000000002], [1.72846296E12, 1000.3000000000003], [1.72846518E12, 1182.8000000000002], [1.7284674E12, 1552.2000000000007], [1.72846842E12, 2034.7000000000007], [1.7284662E12, 1584.4], [1.72846194E12, 1030.8000000000002], [1.72846416E12, 1171.7], [1.72846092E12, 972.8], [1.72846434E12, 1169.4], [1.72846656E12, 1536.6000000000001], [1.72846758E12, 1640.0], [1.72846314E12, 1205.2], [1.72846212E12, 1012.4], [1.72846536E12, 1388.6000000000001], [1.7284686E12, 2011.0000000000002], [1.72846638E12, 1624.1], [1.72846674E12, 1597.8000000000002], [1.72846332E12, 1215.8000000000002], [1.7284611E12, 1011.4000000000004], [1.72846452E12, 1145.4], [1.72846896E12, 1946.2999999999997], [1.7284623E12, 1034.0], [1.72846554E12, 1597.0], [1.72846776E12, 2043.5], [1.72846878E12, 2086.3], [1.72846128E12, 1024.0], [1.7284635E12, 1172.6000000000001], [1.72846248E12, 1010.1000000000003], [1.7284647E12, 1136.4], [1.72846692E12, 1589.0], [1.72846914E12, 1929.3000000000002], [1.72846794E12, 1969.0000000000005], [1.72846572E12, 1638.0], [1.72846146E12, 1025.0], [1.72846368E12, 1163.1], [1.72846608E12, 1629.2000000000003], [1.72846932E12, 1995.0], [1.72846266E12, 1042.3999999999999], [1.7284671E12, 1567.6], [1.72846164E12, 1073.0], [1.72846488E12, 1198.6000000000001], [1.72846386E12, 1174.0], [1.7284659E12, 1581.6000000000004], [1.72846812E12, 2057.000000000001], [1.72846626E12, 1685.0], [1.72846848E12, 1976.1000000000001], [1.72846284E12, 1020.3], [1.7284695E12, 1115.6], [1.72846182E12, 1072.5], [1.72846404E12, 1148.1000000000001], [1.72846506E12, 1149.0], [1.72846728E12, 1576.2], [1.7284683E12, 1949.8000000000002], [1.72846302E12, 993.8000000000002], [1.728462E12, 985.6], [1.72846644E12, 1573.0], [1.72846866E12, 2020.8], [1.72846422E12, 1214.0], [1.72846746E12, 1616.0], [1.72846524E12, 1176.1000000000001], [1.72846098E12, 999.3000000000003], [1.7284632E12, 1218.0], [1.7284656E12, 1621.0], [1.72846884E12, 2035.0], [1.72846662E12, 1566.0], [1.72846218E12, 1025.2], [1.72846116E12, 1030.0], [1.7284644E12, 1157.0], [1.72846338E12, 1189.8000000000002], [1.72846542E12, 1600.5000000000002], [1.72846764E12, 1962.4], [1.72846578E12, 1658.3000000000002], [1.728468E12, 2045.2000000000003], [1.72846236E12, 1094.4], [1.72846902E12, 1956.8000000000004], [1.72846134E12, 1019.6000000000004], [1.72846356E12, 1157.2], [1.72846458E12, 1196.8000000000004], [1.7284668E12, 1646.0], [1.72846782E12, 1923.8000000000002], [1.72846818E12, 1989.4000000000003], [1.72846254E12, 1073.9], [1.72846152E12, 1038.0000000000002], [1.72846596E12, 1584.0], [1.72846374E12, 1163.0], [1.72846698E12, 1552.0], [1.72846476E12, 1196.6000000000004], [1.7284692E12, 1971.0], [1.72846272E12, 1073.2], [1.72846512E12, 1176.0], [1.7284617E12, 1108.0], [1.72846392E12, 1205.6000000000008], [1.72846614E12, 1559.8000000000002], [1.72846836E12, 2077.4], [1.7284629E12, 1034.0], [1.72846494E12, 1188.7], [1.72846716E12, 1639.6000000000001], [1.72846938E12, 1968.6000000000001], [1.72846188E12, 1031.2], [1.72846752E12, 1549.4], [1.7284653E12, 1222.0], [1.72846854E12, 1986.2], [1.7284641E12, 1139.3000000000002], [1.72846632E12, 1615.0], [1.72846308E12, 978.2], [1.72846734E12, 1584.5], [1.7284677E12, 2005.7], [1.72846206E12, 993.0], [1.72846428E12, 1220.3000000000002], [1.72846548E12, 1592.6000000000001], [1.72846104E12, 1001.0], [1.72846326E12, 1174.7], [1.7284665E12, 1649.0], [1.72846872E12, 2078.2], [1.72846224E12, 1025.6000000000001], [1.72846464E12, 1138.5], [1.72846122E12, 993.5000000000002], [1.72846344E12, 1183.8000000000002], [1.72846566E12, 1589.2], [1.72846788E12, 2045.2000000000003], [1.72846242E12, 983.0], [1.72846446E12, 1212.0], [1.72846668E12, 1575.0], [1.7284689E12, 2023.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7284614E12, 1444.65], [1.72846482E12, 1745.25], [1.72846704E12, 2344.5999999999995], [1.72846362E12, 1714.2799999999966], [1.72846806E12, 3042.4799999999987], [1.72846584E12, 2198.100000000001], [1.72846908E12, 2936.739999999999], [1.7284626E12, 1348.260000000001], [1.72846686E12, 2303.5500000000034], [1.72846722E12, 2316.399999999999], [1.72846158E12, 1464.9200000000003], [1.7284638E12, 1711.92], [1.728465E12, 1718.0], [1.72846944E12, 2270.880000000001], [1.72846278E12, 1482.0], [1.72846602E12, 2199.4999999999964], [1.72846824E12, 2916.3999999999996], [1.72846926E12, 3055.799999999998], [1.72846176E12, 1489.3000000000013], [1.72846398E12, 1654.1999999999996], [1.72846296E12, 1410.2399999999998], [1.72846518E12, 1623.330000000001], [1.7284674E12, 2477.9600000000005], [1.72846842E12, 2887.899999999998], [1.7284662E12, 2283.6], [1.72846194E12, 1622.9499999999987], [1.72846416E12, 1750.2100000000012], [1.72846092E12, 1597.0400000000002], [1.72846434E12, 1739.860000000001], [1.72846656E12, 2403.7199999999984], [1.72846758E12, 2659.3], [1.72846314E12, 1680.8000000000034], [1.72846212E12, 1680.1200000000047], [1.72846536E12, 2167.0199999999995], [1.7284686E12, 2739.0], [1.72846638E12, 2328.4700000000003], [1.72846674E12, 2385.3], [1.72846332E12, 1761.44], [1.7284611E12, 1501.58], [1.72846452E12, 1613.85], [1.72846896E12, 3102.5400000000013], [1.7284623E12, 1413.0299999999997], [1.72846554E12, 2247.0499999999997], [1.72846776E12, 2914.3000000000015], [1.72846878E12, 2838.5800000000004], [1.72846128E12, 1439.999999999999], [1.7284635E12, 1770.16], [1.72846248E12, 1507.8299999999995], [1.7284647E12, 1699.6999999999998], [1.72846692E12, 2288.6000000000004], [1.72846914E12, 2765.3200000000043], [1.72846794E12, 2890.879999999997], [1.72846572E12, 2448.3999999999996], [1.72846146E12, 1607.4000000000003], [1.72846368E12, 1712.65], [1.72846608E12, 2360.359999999999], [1.72846932E12, 2858.5000000000005], [1.72846266E12, 1506.5099999999993], [1.7284671E12, 2350.7200000000003], [1.72846164E12, 1472.7000000000007], [1.72846488E12, 1661.56], [1.72846386E12, 1749.900000000001], [1.7284659E12, 2419.5599999999995], [1.72846812E12, 2864.3599999999997], [1.72846626E12, 2413.2400000000002], [1.72846848E12, 2907.7700000000023], [1.72846284E12, 1430.9900000000007], [1.7284695E12, 1162.0], [1.72846182E12, 1322.1], [1.72846404E12, 1673.6299999999997], [1.72846506E12, 1712.45], [1.72846728E12, 2232.0999999999995], [1.7284683E12, 2877.9199999999996], [1.72846302E12, 1544.7400000000005], [1.728462E12, 1509.0800000000004], [1.72846644E12, 2294.2], [1.72846866E12, 2992.5199999999995], [1.72846422E12, 1772.2000000000003], [1.72846746E12, 2336.479999999998], [1.72846524E12, 1687.9900000000002], [1.72846098E12, 1431.7199999999993], [1.7284632E12, 1850.9199999999996], [1.7284656E12, 2379.7999999999993], [1.72846884E12, 2775.0], [1.72846662E12, 2267.0], [1.72846218E12, 1478.4400000000007], [1.72846116E12, 1388.5699999999997], [1.7284644E12, 1660.5999999999985], [1.72846338E12, 1713.4199999999998], [1.72846542E12, 2418.0099999999998], [1.72846764E12, 2849.080000000001], [1.72846578E12, 2278.319999999999], [1.728468E12, 2968.359999999999], [1.72846236E12, 1564.16], [1.72846902E12, 2830.409999999997], [1.72846134E12, 1444.7200000000003], [1.72846356E12, 1696.389999999999], [1.72846458E12, 1688.7600000000007], [1.7284668E12, 2399.5899999999974], [1.72846782E12, 2902.060000000003], [1.72846818E12, 3074.6399999999985], [1.72846254E12, 1500.1799999999998], [1.72846152E12, 1602.9], [1.72846596E12, 2359.3999999999996], [1.72846374E12, 1729.8999999999994], [1.72846698E12, 2315.7999999999993], [1.72846476E12, 1685.5199999999998], [1.7284692E12, 2811.6000000000013], [1.72846272E12, 1552.1199999999994], [1.72846512E12, 1772.12], [1.7284617E12, 1515.0], [1.72846392E12, 1774.04], [1.72846614E12, 2218.3200000000006], [1.72846836E12, 2958.489999999996], [1.7284629E12, 1531.3799999999992], [1.72846494E12, 1774.2100000000012], [1.72846716E12, 2414.0299999999997], [1.72846938E12, 2914.220000000003], [1.72846188E12, 1523.2699999999998], [1.72846752E12, 2264.72], [1.7284653E12, 1636.7000000000005], [1.72846854E12, 2724.260000000007], [1.7284641E12, 1638.4400000000023], [1.72846632E12, 2320.9999999999995], [1.72846308E12, 1424.5600000000004], [1.72846734E12, 2397.35], [1.7284677E12, 2862.8599999999997], [1.72846206E12, 1438.0999999999995], [1.72846428E12, 1701.1000000000001], [1.72846548E12, 2179.76], [1.72846104E12, 1369.4500000000007], [1.72846326E12, 1626.6999999999994], [1.7284665E12, 2338.559999999999], [1.72846872E12, 2985.6399999999985], [1.72846224E12, 1460.6300000000006], [1.72846464E12, 1749.7500000000002], [1.72846122E12, 1335.37], [1.72846344E12, 1758.5599999999995], [1.72846566E12, 2350.09], [1.72846788E12, 2896.4399999999996], [1.72846242E12, 1390.8500000000004], [1.72846446E12, 1759.599999999999], [1.72846668E12, 2268.09], [1.7284689E12, 3118.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7284614E12, 1224.6999999999994], [1.72846482E12, 1320.75], [1.72846704E12, 1896.999999999999], [1.72846362E12, 1371.0], [1.72846806E12, 2330.7999999999993], [1.72846584E12, 1792.5], [1.72846908E12, 2372.35], [1.7284626E12, 1097.5000000000002], [1.72846686E12, 1830.75], [1.72846722E12, 1910.5], [1.72846158E12, 1153.5999999999997], [1.7284638E12, 1405.199999999999], [1.728465E12, 1423.35], [1.72846944E12, 1720.0], [1.72846278E12, 1251.0], [1.72846602E12, 1840.6999999999998], [1.72846824E12, 2275.0], [1.72846926E12, 2406.0], [1.72846176E12, 1249.25], [1.72846398E12, 1385.5999999999995], [1.72846296E12, 1209.1], [1.72846518E12, 1340.35], [1.7284674E12, 1828.6999999999994], [1.72846842E12, 2296.3], [1.7284662E12, 1818.9999999999995], [1.72846194E12, 1187.6], [1.72846416E12, 1361.0499999999997], [1.72846092E12, 1165.3999999999999], [1.72846434E12, 1393.6999999999998], [1.72846656E12, 1828.8], [1.72846758E12, 1993.5], [1.72846314E12, 1409.2], [1.72846212E12, 1146.1999999999998], [1.72846536E12, 1664.65], [1.7284686E12, 2295.3999999999996], [1.72846638E12, 1823.1499999999999], [1.72846674E12, 1861.8999999999992], [1.72846332E12, 1414.2999999999997], [1.7284611E12, 1184.2], [1.72846452E12, 1350.7999999999993], [1.72846896E12, 2306.549999999999], [1.7284623E12, 1180.1], [1.72846554E12, 1820.5], [1.72846776E12, 2379.5], [1.72846878E12, 2380.0499999999997], [1.72846128E12, 1209.5], [1.7284635E12, 1390.5999999999997], [1.72846248E12, 1185.6999999999994], [1.7284647E12, 1402.8999999999996], [1.72846692E12, 1797.0], [1.72846914E12, 2218.25], [1.72846794E12, 2277.1], [1.72846572E12, 1932.5], [1.72846146E12, 1217.6], [1.72846368E12, 1327.0], [1.72846608E12, 1879.3], [1.72846932E12, 2338.5], [1.72846266E12, 1221.2499999999989], [1.7284671E12, 1777.3999999999996], [1.72846164E12, 1183.5], [1.72846488E12, 1399.7999999999993], [1.72846386E12, 1344.0], [1.7284659E12, 1852.7499999999986], [1.72846812E12, 2347.399999999999], [1.72846626E12, 1942.7499999999995], [1.72846848E12, 2310.3999999999996], [1.72846284E12, 1200.649999999999], [1.7284695E12, 1162.0], [1.72846182E12, 1169.25], [1.72846404E12, 1323.499999999999], [1.72846506E12, 1281.0], [1.72846728E12, 1799.1], [1.7284683E12, 2273.3999999999996], [1.72846302E12, 1123.1], [1.728462E12, 1148.4999999999993], [1.72846644E12, 1813.0], [1.72846866E12, 2329.5999999999976], [1.72846422E12, 1387.0], [1.72846746E12, 1930.3999999999996], [1.72846524E12, 1358.9499999999994], [1.72846098E12, 1171.7999999999997], [1.7284632E12, 1391.9999999999993], [1.7284656E12, 1904.0], [1.72846884E12, 2285.0], [1.72846662E12, 1828.0], [1.72846218E12, 1171.1999999999996], [1.72846116E12, 1147.2999999999997], [1.7284644E12, 1306.75], [1.72846338E12, 1329.3], [1.72846542E12, 1857.8999999999987], [1.72846764E12, 2241.2], [1.72846578E12, 1881.9499999999998], [1.728468E12, 2427.7999999999984], [1.72846236E12, 1259.4], [1.72846902E12, 2265.5499999999997], [1.72846134E12, 1150.2], [1.72846356E12, 1353.55], [1.72846458E12, 1394.7999999999995], [1.7284668E12, 1912.4499999999998], [1.72846782E12, 2261.4999999999977], [1.72846818E12, 2308.799999999998], [1.72846254E12, 1259.1], [1.72846152E12, 1215.8999999999999], [1.72846596E12, 1835.5], [1.72846374E12, 1320.5], [1.72846698E12, 1778.0], [1.72846476E12, 1357.0], [1.7284692E12, 2284.0], [1.72846272E12, 1189.6], [1.72846512E12, 1354.1999999999994], [1.7284617E12, 1251.5], [1.72846392E12, 1451.2999999999997], [1.72846614E12, 1766.6], [1.72846836E12, 2313.85], [1.7284629E12, 1191.1], [1.72846494E12, 1414.0499999999997], [1.72846716E12, 1959.7999999999997], [1.72846938E12, 2291.4999999999986], [1.72846188E12, 1160.8999999999999], [1.72846752E12, 1774.999999999999], [1.7284653E12, 1352.5], [1.72846854E12, 2235.999999999999], [1.7284641E12, 1373.1], [1.72846632E12, 1850.0], [1.72846308E12, 1161.0], [1.72846734E12, 1812.0], [1.7284677E12, 2358.7499999999986], [1.72846206E12, 1202.0], [1.72846428E12, 1402.6499999999994], [1.72846548E12, 1816.7999999999997], [1.72846104E12, 1177.5], [1.72846326E12, 1338.0999999999995], [1.7284665E12, 1902.8], [1.72846872E12, 2304.7999999999993], [1.72846224E12, 1157.1], [1.72846464E12, 1358.0], [1.72846122E12, 1139.95], [1.72846344E12, 1364.6999999999998], [1.72846566E12, 1794.0499999999995], [1.72846788E12, 2314.2], [1.72846242E12, 1156.2499999999995], [1.72846446E12, 1423.0], [1.72846668E12, 1835.4999999999995], [1.7284689E12, 2284.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.7284614E12, 37.0], [1.72846482E12, 38.0], [1.72846704E12, 40.0], [1.72846362E12, 35.0], [1.72846806E12, 57.0], [1.72846584E12, 38.0], [1.72846908E12, 66.0], [1.7284626E12, 37.0], [1.72846686E12, 44.0], [1.72846722E12, 48.0], [1.72846158E12, 39.0], [1.7284638E12, 39.0], [1.728465E12, 40.0], [1.72846944E12, 43.0], [1.72846278E12, 38.0], [1.72846602E12, 45.0], [1.72846824E12, 58.0], [1.72846926E12, 57.0], [1.72846176E12, 39.0], [1.72846398E12, 34.0], [1.72846296E12, 36.0], [1.72846518E12, 37.0], [1.7284674E12, 40.0], [1.72846842E12, 58.0], [1.7284662E12, 40.0], [1.72846194E12, 37.0], [1.72846416E12, 43.0], [1.72846092E12, 39.0], [1.72846434E12, 40.0], [1.72846656E12, 44.0], [1.72846758E12, 43.0], [1.72846314E12, 47.0], [1.72846212E12, 42.0], [1.72846536E12, 45.0], [1.7284686E12, 71.0], [1.72846638E12, 38.0], [1.72846674E12, 44.0], [1.72846332E12, 36.0], [1.7284611E12, 40.0], [1.72846452E12, 38.0], [1.72846896E12, 64.0], [1.7284623E12, 32.0], [1.72846554E12, 42.0], [1.72846776E12, 40.0], [1.72846878E12, 67.0], [1.72846128E12, 40.0], [1.7284635E12, 43.0], [1.72846248E12, 37.0], [1.7284647E12, 43.0], [1.72846692E12, 47.0], [1.72846914E12, 72.0], [1.72846794E12, 61.0], [1.72846572E12, 47.0], [1.72846146E12, 36.0], [1.72846368E12, 40.0], [1.72846608E12, 47.0], [1.72846932E12, 61.0], [1.72846266E12, 36.0], [1.7284671E12, 47.0], [1.72846164E12, 42.0], [1.72846488E12, 40.0], [1.72846386E12, 36.0], [1.7284659E12, 45.0], [1.72846812E12, 60.0], [1.72846626E12, 45.0], [1.72846848E12, 56.0], [1.72846284E12, 39.0], [1.7284695E12, 89.0], [1.72846182E12, 39.0], [1.72846404E12, 42.0], [1.72846506E12, 36.0], [1.72846728E12, 45.0], [1.7284683E12, 57.0], [1.72846302E12, 39.0], [1.728462E12, 41.0], [1.72846644E12, 40.0], [1.72846866E12, 62.0], [1.72846422E12, 39.0], [1.72846746E12, 45.0], [1.72846524E12, 33.0], [1.72846098E12, 37.0], [1.7284632E12, 40.0], [1.7284656E12, 43.0], [1.72846884E12, 69.0], [1.72846662E12, 39.0], [1.72846218E12, 39.0], [1.72846116E12, 41.0], [1.7284644E12, 37.0], [1.72846338E12, 37.0], [1.72846542E12, 41.0], [1.72846764E12, 72.0], [1.72846578E12, 47.0], [1.728468E12, 62.0], [1.72846236E12, 37.0], [1.72846902E12, 63.0], [1.72846134E12, 36.0], [1.72846356E12, 39.0], [1.72846458E12, 42.0], [1.7284668E12, 41.0], [1.72846782E12, 59.0], [1.72846818E12, 58.0], [1.72846254E12, 43.0], [1.72846152E12, 37.0], [1.72846596E12, 49.0], [1.72846374E12, 39.0], [1.72846698E12, 42.0], [1.72846476E12, 33.0], [1.7284692E12, 68.0], [1.72846272E12, 39.0], [1.72846512E12, 36.0], [1.7284617E12, 39.0], [1.72846392E12, 37.0], [1.72846614E12, 48.0], [1.72846836E12, 59.0], [1.7284629E12, 34.0], [1.72846494E12, 33.0], [1.72846716E12, 38.0], [1.72846938E12, 57.0], [1.72846188E12, 35.0], [1.72846752E12, 46.0], [1.7284653E12, 38.0], [1.72846854E12, 58.0], [1.7284641E12, 44.0], [1.72846632E12, 43.0], [1.72846308E12, 42.0], [1.72846734E12, 45.0], [1.7284677E12, 58.0], [1.72846206E12, 36.0], [1.72846428E12, 41.0], [1.72846548E12, 40.0], [1.72846104E12, 44.0], [1.72846326E12, 38.0], [1.7284665E12, 54.0], [1.72846872E12, 51.0], [1.72846224E12, 38.0], [1.72846464E12, 39.0], [1.72846122E12, 42.0], [1.72846344E12, 44.0], [1.72846566E12, 36.0], [1.72846788E12, 70.0], [1.72846242E12, 39.0], [1.72846446E12, 34.0], [1.72846668E12, 38.0], [1.7284689E12, 60.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7284614E12, 450.5], [1.72846482E12, 515.5], [1.72846704E12, 712.0], [1.72846362E12, 490.0], [1.72846806E12, 866.0], [1.72846584E12, 627.5], [1.72846908E12, 831.0], [1.7284626E12, 372.0], [1.72846686E12, 603.0], [1.72846722E12, 664.0], [1.72846158E12, 399.0], [1.7284638E12, 545.0], [1.728465E12, 483.0], [1.72846944E12, 525.0], [1.72846278E12, 425.0], [1.72846602E12, 665.0], [1.72846824E12, 887.0], [1.72846926E12, 946.0], [1.72846176E12, 515.0], [1.72846398E12, 507.0], [1.72846296E12, 377.0], [1.72846518E12, 540.0], [1.7284674E12, 659.0], [1.72846842E12, 736.5], [1.7284662E12, 613.0], [1.72846194E12, 430.5], [1.72846416E12, 524.5], [1.72846092E12, 386.5], [1.72846434E12, 503.0], [1.72846656E12, 561.0], [1.72846758E12, 566.0], [1.72846314E12, 504.0], [1.72846212E12, 390.0], [1.72846536E12, 476.5], [1.7284686E12, 866.0], [1.72846638E12, 627.0], [1.72846674E12, 682.0], [1.72846332E12, 453.0], [1.7284611E12, 504.0], [1.72846452E12, 472.0], [1.72846896E12, 829.5], [1.7284623E12, 418.0], [1.72846554E12, 677.0], [1.72846776E12, 897.5], [1.72846878E12, 1002.0], [1.72846128E12, 428.0], [1.7284635E12, 511.0], [1.72846248E12, 405.0], [1.7284647E12, 459.0], [1.72846692E12, 654.0], [1.72846914E12, 815.5], [1.72846794E12, 794.0], [1.72846572E12, 707.5], [1.72846146E12, 491.0], [1.72846368E12, 487.0], [1.72846608E12, 651.0], [1.72846932E12, 894.5], [1.72846266E12, 424.5], [1.7284671E12, 708.0], [1.72846164E12, 427.0], [1.72846488E12, 527.0], [1.72846386E12, 544.5], [1.7284659E12, 729.5], [1.72846812E12, 834.0], [1.72846626E12, 745.0], [1.72846848E12, 805.5], [1.72846284E12, 487.5], [1.7284695E12, 694.0], [1.72846182E12, 433.5], [1.72846404E12, 415.0], [1.72846506E12, 537.5], [1.72846728E12, 540.0], [1.7284683E12, 893.0], [1.72846302E12, 351.0], [1.728462E12, 457.0], [1.72846644E12, 600.0], [1.72846866E12, 932.0], [1.72846422E12, 544.0], [1.72846746E12, 739.0], [1.72846524E12, 527.5], [1.72846098E12, 320.5], [1.7284632E12, 552.0], [1.7284656E12, 745.0], [1.72846884E12, 868.0], [1.72846662E12, 624.0], [1.72846218E12, 367.0], [1.72846116E12, 384.5], [1.7284644E12, 447.0], [1.72846338E12, 502.0], [1.72846542E12, 513.5], [1.72846764E12, 746.0], [1.72846578E12, 774.0], [1.728468E12, 920.0], [1.72846236E12, 413.0], [1.72846902E12, 819.5], [1.72846134E12, 468.0], [1.72846356E12, 421.5], [1.72846458E12, 529.0], [1.7284668E12, 652.0], [1.72846782E12, 772.0], [1.72846818E12, 863.0], [1.72846254E12, 466.5], [1.72846152E12, 444.0], [1.72846596E12, 615.0], [1.72846374E12, 501.0], [1.72846698E12, 592.0], [1.72846476E12, 517.0], [1.7284692E12, 808.0], [1.72846272E12, 495.0], [1.72846512E12, 475.0], [1.7284617E12, 530.0], [1.72846392E12, 489.0], [1.72846614E12, 664.0], [1.72846836E12, 907.0], [1.7284629E12, 456.0], [1.72846494E12, 505.0], [1.72846716E12, 637.5], [1.72846938E12, 759.0], [1.72846188E12, 470.5], [1.72846752E12, 644.0], [1.7284653E12, 540.0], [1.72846854E12, 826.5], [1.7284641E12, 493.5], [1.72846632E12, 718.0], [1.72846308E12, 428.0], [1.72846734E12, 684.0], [1.7284677E12, 830.5], [1.72846206E12, 434.0], [1.72846428E12, 571.5], [1.72846548E12, 619.0], [1.72846104E12, 366.0], [1.72846326E12, 472.0], [1.7284665E12, 723.0], [1.72846872E12, 898.0], [1.72846224E12, 479.0], [1.72846464E12, 442.0], [1.72846122E12, 440.0], [1.72846344E12, 495.5], [1.72846566E12, 651.5], [1.72846788E12, 793.0], [1.72846242E12, 433.0], [1.72846446E12, 483.0], [1.72846668E12, 589.5], [1.7284689E12, 896.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7284695E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 126.0, "minX": 1.0, "maxY": 787.0, "series": [{"data": [[2.0, 728.5], [32.0, 299.0], [33.0, 251.5], [34.0, 303.5], [35.0, 238.0], [3.0, 682.0], [4.0, 634.5], [5.0, 661.0], [6.0, 606.0], [7.0, 574.0], [8.0, 542.0], [9.0, 556.0], [10.0, 578.0], [11.0, 643.0], [12.0, 646.0], [13.0, 684.0], [14.0, 647.0], [15.0, 601.0], [1.0, 787.0], [16.0, 600.0], [17.0, 551.0], [18.0, 557.0], [19.0, 481.5], [20.0, 428.5], [21.0, 393.5], [22.0, 357.0], [23.0, 329.0], [24.0, 314.0], [25.0, 255.0], [26.0, 287.0], [27.0, 266.0], [28.0, 206.5], [29.0, 264.0], [30.0, 240.5], [31.0, 126.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 35.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 92.0, "minX": 1.0, "maxY": 521.0, "series": [{"data": [[2.0, 494.0], [32.0, 168.0], [33.0, 148.0], [34.0, 181.0], [35.0, 148.0], [3.0, 466.0], [4.0, 414.0], [5.0, 437.0], [6.0, 413.5], [7.0, 403.0], [8.0, 384.0], [9.0, 390.0], [10.0, 410.5], [11.0, 450.0], [12.0, 457.0], [13.0, 485.0], [14.0, 457.5], [15.0, 434.0], [1.0, 521.0], [16.0, 432.0], [17.0, 405.0], [18.0, 412.0], [19.0, 351.5], [20.0, 310.5], [21.0, 266.0], [22.0, 239.5], [23.0, 217.0], [24.0, 208.5], [25.0, 156.0], [26.0, 180.0], [27.0, 170.0], [28.0, 135.5], [29.0, 187.0], [30.0, 162.5], [31.0, 92.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 35.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.25, "minX": 1.72846092E12, "maxY": 17.916666666666668, "series": [{"data": [[1.7284614E12, 8.133333333333333], [1.72846482E12, 14.566666666666666], [1.72846704E12, 15.55], [1.72846362E12, 14.283333333333333], [1.72846806E12, 16.583333333333332], [1.72846584E12, 16.733333333333334], [1.72846908E12, 17.2], [1.7284626E12, 9.033333333333333], [1.72846686E12, 16.9], [1.72846722E12, 16.15], [1.72846158E12, 8.783333333333333], [1.7284638E12, 13.95], [1.728465E12, 14.266666666666667], [1.72846944E12, 13.333333333333334], [1.72846278E12, 8.316666666666666], [1.72846602E12, 16.35], [1.72846824E12, 16.983333333333334], [1.72846926E12, 16.15], [1.72846176E12, 7.733333333333333], [1.72846398E12, 14.283333333333333], [1.72846296E12, 8.633333333333333], [1.72846518E12, 14.2], [1.7284674E12, 16.283333333333335], [1.72846842E12, 17.766666666666666], [1.7284662E12, 16.783333333333335], [1.72846194E12, 8.166666666666666], [1.72846416E12, 14.2], [1.72846092E12, 4.033333333333333], [1.72846434E12, 14.416666666666666], [1.72846656E12, 17.05], [1.72846758E12, 13.283333333333333], [1.72846314E12, 9.566666666666666], [1.72846212E12, 8.783333333333333], [1.72846536E12, 11.866666666666667], [1.7284686E12, 17.283333333333335], [1.72846638E12, 16.3], [1.72846674E12, 16.283333333333335], [1.72846332E12, 14.616666666666667], [1.7284611E12, 3.95], [1.72846452E12, 14.7], [1.72846896E12, 17.5], [1.7284623E12, 8.5], [1.72846554E12, 16.4], [1.72846776E12, 16.733333333333334], [1.72846878E12, 15.866666666666667], [1.72846128E12, 8.483333333333333], [1.7284635E12, 14.383333333333333], [1.72846248E12, 8.466666666666667], [1.7284647E12, 15.083333333333334], [1.72846692E12, 16.483333333333334], [1.72846914E12, 17.633333333333333], [1.72846794E12, 17.683333333333334], [1.72846572E12, 15.733333333333333], [1.72846146E12, 7.916666666666667], [1.72846368E12, 14.8], [1.72846608E12, 16.216666666666665], [1.72846932E12, 16.733333333333334], [1.72846266E12, 8.2], [1.7284671E12, 16.05], [1.72846164E12, 8.15], [1.72846488E12, 14.116666666666667], [1.72846386E12, 14.233333333333333], [1.7284659E12, 15.7], [1.72846812E12, 17.016666666666666], [1.72846626E12, 15.2], [1.72846848E12, 17.533333333333335], [1.72846284E12, 8.033333333333333], [1.7284695E12, 0.25], [1.72846182E12, 8.4], [1.72846404E12, 15.366666666666667], [1.72846506E12, 14.233333333333333], [1.72846728E12, 17.283333333333335], [1.7284683E12, 17.016666666666666], [1.72846302E12, 8.966666666666667], [1.728462E12, 8.216666666666667], [1.72846644E12, 16.983333333333334], [1.72846866E12, 16.416666666666668], [1.72846422E12, 13.983333333333333], [1.72846746E12, 15.716666666666667], [1.72846524E12, 14.366666666666667], [1.72846098E12, 4.533333333333333], [1.7284632E12, 14.05], [1.7284656E12, 15.316666666666666], [1.72846884E12, 17.15], [1.72846662E12, 16.65], [1.72846218E12, 8.783333333333333], [1.72846116E12, 5.2], [1.7284644E12, 14.9], [1.72846338E12, 14.55], [1.72846542E12, 17.2], [1.72846764E12, 17.916666666666668], [1.72846578E12, 15.1], [1.728468E12, 16.383333333333333], [1.72846236E12, 8.25], [1.72846902E12, 17.433333333333334], [1.72846134E12, 8.25], [1.72846356E12, 15.133333333333333], [1.72846458E12, 14.183333333333334], [1.7284668E12, 16.166666666666668], [1.72846782E12, 17.616666666666667], [1.72846818E12, 16.783333333333335], [1.72846254E12, 8.0], [1.72846152E12, 8.216666666666667], [1.72846596E12, 16.816666666666666], [1.72846374E12, 14.483333333333333], [1.72846698E12, 16.983333333333334], [1.72846476E12, 14.35], [1.7284692E12, 17.65], [1.72846272E12, 7.783333333333333], [1.72846512E12, 14.766666666666667], [1.7284617E12, 7.483333333333333], [1.72846392E12, 14.35], [1.72846614E12, 16.716666666666665], [1.72846836E12, 16.366666666666667], [1.7284629E12, 8.083333333333334], [1.72846494E12, 14.2], [1.72846716E12, 16.433333333333334], [1.72846938E12, 17.6], [1.72846188E12, 8.266666666666667], [1.72846752E12, 15.45], [1.7284653E12, 13.783333333333333], [1.72846854E12, 17.633333333333333], [1.7284641E12, 14.633333333333333], [1.72846632E12, 15.983333333333333], [1.72846308E12, 6.0], [1.72846734E12, 16.066666666666666], [1.7284677E12, 17.033333333333335], [1.72846206E12, 8.483333333333333], [1.72846428E12, 13.966666666666667], [1.72846548E12, 16.883333333333333], [1.72846104E12, 4.4], [1.72846326E12, 14.866666666666667], [1.7284665E12, 15.516666666666667], [1.72846872E12, 16.583333333333332], [1.72846224E12, 8.133333333333333], [1.72846464E12, 15.066666666666666], [1.72846122E12, 8.666666666666666], [1.72846344E12, 14.533333333333333], [1.72846566E12, 16.466666666666665], [1.72846788E12, 17.45], [1.72846242E12, 8.533333333333333], [1.72846446E12, 14.316666666666666], [1.72846668E12, 16.633333333333333], [1.7284689E12, 16.65]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7284695E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.2833333333333333, "minX": 1.72846092E12, "maxY": 17.916666666666668, "series": [{"data": [[1.7284614E12, 8.133333333333333], [1.72846482E12, 14.566666666666666], [1.72846704E12, 15.55], [1.72846362E12, 14.283333333333333], [1.72846806E12, 16.583333333333332], [1.72846584E12, 16.733333333333334], [1.72846908E12, 17.2], [1.7284626E12, 9.033333333333333], [1.72846686E12, 16.9], [1.72846722E12, 16.15], [1.72846158E12, 8.783333333333333], [1.7284638E12, 13.95], [1.728465E12, 14.266666666666667], [1.72846944E12, 13.55], [1.72846278E12, 8.316666666666666], [1.72846602E12, 16.35], [1.72846824E12, 16.983333333333334], [1.72846926E12, 16.15], [1.72846176E12, 7.733333333333333], [1.72846398E12, 14.283333333333333], [1.72846296E12, 8.633333333333333], [1.72846518E12, 14.2], [1.7284674E12, 16.283333333333335], [1.72846842E12, 17.766666666666666], [1.7284662E12, 16.783333333333335], [1.72846194E12, 8.166666666666666], [1.72846416E12, 14.2], [1.72846092E12, 4.0], [1.72846434E12, 14.416666666666666], [1.72846656E12, 17.05], [1.72846758E12, 13.15], [1.72846314E12, 9.45], [1.72846212E12, 8.783333333333333], [1.72846536E12, 11.766666666666667], [1.7284686E12, 17.283333333333335], [1.72846638E12, 16.3], [1.72846674E12, 16.283333333333335], [1.72846332E12, 14.616666666666667], [1.7284611E12, 3.95], [1.72846452E12, 14.7], [1.72846896E12, 17.5], [1.7284623E12, 8.5], [1.72846554E12, 16.4], [1.72846776E12, 16.733333333333334], [1.72846878E12, 15.866666666666667], [1.72846128E12, 8.483333333333333], [1.7284635E12, 14.383333333333333], [1.72846248E12, 8.466666666666667], [1.7284647E12, 15.083333333333334], [1.72846692E12, 16.483333333333334], [1.72846914E12, 17.633333333333333], [1.72846794E12, 17.683333333333334], [1.72846572E12, 15.733333333333333], [1.72846146E12, 7.916666666666667], [1.72846368E12, 14.8], [1.72846608E12, 16.216666666666665], [1.72846932E12, 16.733333333333334], [1.72846266E12, 8.2], [1.7284671E12, 16.05], [1.72846164E12, 8.15], [1.72846488E12, 14.116666666666667], [1.72846386E12, 14.233333333333333], [1.7284659E12, 15.7], [1.72846812E12, 17.016666666666666], [1.72846626E12, 15.2], [1.72846848E12, 17.533333333333335], [1.72846284E12, 8.033333333333333], [1.7284695E12, 0.2833333333333333], [1.72846182E12, 8.4], [1.72846404E12, 15.366666666666667], [1.72846506E12, 14.233333333333333], [1.72846728E12, 17.283333333333335], [1.7284683E12, 17.016666666666666], [1.72846302E12, 8.966666666666667], [1.728462E12, 8.216666666666667], [1.72846644E12, 16.983333333333334], [1.72846866E12, 16.416666666666668], [1.72846422E12, 13.983333333333333], [1.72846746E12, 15.716666666666667], [1.72846524E12, 14.366666666666667], [1.72846098E12, 4.533333333333333], [1.7284632E12, 14.05], [1.7284656E12, 15.316666666666666], [1.72846884E12, 17.15], [1.72846662E12, 16.65], [1.72846218E12, 8.783333333333333], [1.72846116E12, 5.166666666666667], [1.7284644E12, 14.9], [1.72846338E12, 14.55], [1.72846542E12, 17.2], [1.72846764E12, 17.916666666666668], [1.72846578E12, 15.1], [1.728468E12, 16.383333333333333], [1.72846236E12, 8.25], [1.72846902E12, 17.433333333333334], [1.72846134E12, 8.25], [1.72846356E12, 15.133333333333333], [1.72846458E12, 14.183333333333334], [1.7284668E12, 16.166666666666668], [1.72846782E12, 17.616666666666667], [1.72846818E12, 16.783333333333335], [1.72846254E12, 8.0], [1.72846152E12, 8.216666666666667], [1.72846596E12, 16.816666666666666], [1.72846374E12, 14.483333333333333], [1.72846698E12, 16.983333333333334], [1.72846476E12, 14.35], [1.7284692E12, 17.65], [1.72846272E12, 7.783333333333333], [1.72846512E12, 14.766666666666667], [1.7284617E12, 7.483333333333333], [1.72846392E12, 14.35], [1.72846614E12, 16.716666666666665], [1.72846836E12, 16.366666666666667], [1.7284629E12, 8.083333333333334], [1.72846494E12, 14.2], [1.72846716E12, 16.433333333333334], [1.72846938E12, 17.616666666666667], [1.72846188E12, 8.266666666666667], [1.72846752E12, 15.516666666666667], [1.7284653E12, 13.816666666666666], [1.72846854E12, 17.633333333333333], [1.7284641E12, 14.633333333333333], [1.72846632E12, 15.983333333333333], [1.72846308E12, 6.05], [1.72846734E12, 16.066666666666666], [1.7284677E12, 17.033333333333335], [1.72846206E12, 8.483333333333333], [1.72846428E12, 13.966666666666667], [1.72846548E12, 16.883333333333333], [1.72846104E12, 4.4], [1.72846326E12, 14.866666666666667], [1.7284665E12, 15.516666666666667], [1.72846872E12, 16.583333333333332], [1.72846224E12, 8.133333333333333], [1.72846464E12, 15.066666666666666], [1.72846122E12, 8.666666666666666], [1.72846344E12, 14.533333333333333], [1.72846566E12, 16.466666666666665], [1.72846788E12, 17.45], [1.72846242E12, 8.533333333333333], [1.72846446E12, 14.316666666666666], [1.72846668E12, 16.633333333333333], [1.7284689E12, 16.65]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7284695E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.2833333333333333, "minX": 1.72846092E12, "maxY": 17.916666666666668, "series": [{"data": [[1.7284614E12, 8.133333333333333], [1.72846482E12, 14.566666666666666], [1.72846704E12, 15.55], [1.72846362E12, 14.283333333333333], [1.72846806E12, 16.583333333333332], [1.72846584E12, 16.733333333333334], [1.72846908E12, 17.2], [1.7284626E12, 9.033333333333333], [1.72846686E12, 16.9], [1.72846722E12, 16.15], [1.72846158E12, 8.783333333333333], [1.7284638E12, 13.95], [1.728465E12, 14.266666666666667], [1.72846944E12, 13.55], [1.72846278E12, 8.316666666666666], [1.72846602E12, 16.35], [1.72846824E12, 16.983333333333334], [1.72846926E12, 16.15], [1.72846176E12, 7.733333333333333], [1.72846398E12, 14.283333333333333], [1.72846296E12, 8.633333333333333], [1.72846518E12, 14.2], [1.7284674E12, 16.283333333333335], [1.72846842E12, 17.766666666666666], [1.7284662E12, 16.783333333333335], [1.72846194E12, 8.166666666666666], [1.72846416E12, 14.2], [1.72846092E12, 4.0], [1.72846434E12, 14.416666666666666], [1.72846656E12, 17.05], [1.72846758E12, 13.15], [1.72846314E12, 9.45], [1.72846212E12, 8.783333333333333], [1.72846536E12, 11.766666666666667], [1.7284686E12, 17.283333333333335], [1.72846638E12, 16.3], [1.72846674E12, 16.283333333333335], [1.72846332E12, 14.616666666666667], [1.7284611E12, 3.95], [1.72846452E12, 14.7], [1.72846896E12, 17.5], [1.7284623E12, 8.5], [1.72846554E12, 16.4], [1.72846776E12, 16.733333333333334], [1.72846878E12, 15.866666666666667], [1.72846128E12, 8.483333333333333], [1.7284635E12, 14.383333333333333], [1.72846248E12, 8.466666666666667], [1.7284647E12, 15.083333333333334], [1.72846692E12, 16.483333333333334], [1.72846914E12, 17.633333333333333], [1.72846794E12, 17.683333333333334], [1.72846572E12, 15.733333333333333], [1.72846146E12, 7.916666666666667], [1.72846368E12, 14.8], [1.72846608E12, 16.216666666666665], [1.72846932E12, 16.733333333333334], [1.72846266E12, 8.2], [1.7284671E12, 16.05], [1.72846164E12, 8.15], [1.72846488E12, 14.116666666666667], [1.72846386E12, 14.233333333333333], [1.7284659E12, 15.7], [1.72846812E12, 17.016666666666666], [1.72846626E12, 15.2], [1.72846848E12, 17.533333333333335], [1.72846284E12, 8.033333333333333], [1.7284695E12, 0.2833333333333333], [1.72846182E12, 8.4], [1.72846404E12, 15.366666666666667], [1.72846506E12, 14.233333333333333], [1.72846728E12, 17.283333333333335], [1.7284683E12, 17.016666666666666], [1.72846302E12, 8.966666666666667], [1.728462E12, 8.216666666666667], [1.72846644E12, 16.983333333333334], [1.72846866E12, 16.416666666666668], [1.72846422E12, 13.983333333333333], [1.72846746E12, 15.716666666666667], [1.72846524E12, 14.366666666666667], [1.72846098E12, 4.533333333333333], [1.7284632E12, 14.05], [1.7284656E12, 15.316666666666666], [1.72846884E12, 17.15], [1.72846662E12, 16.65], [1.72846218E12, 8.783333333333333], [1.72846116E12, 5.166666666666667], [1.7284644E12, 14.9], [1.72846338E12, 14.55], [1.72846542E12, 17.2], [1.72846764E12, 17.916666666666668], [1.72846578E12, 15.1], [1.728468E12, 16.383333333333333], [1.72846236E12, 8.25], [1.72846902E12, 17.433333333333334], [1.72846134E12, 8.25], [1.72846356E12, 15.133333333333333], [1.72846458E12, 14.183333333333334], [1.7284668E12, 16.166666666666668], [1.72846782E12, 17.616666666666667], [1.72846818E12, 16.783333333333335], [1.72846254E12, 8.0], [1.72846152E12, 8.216666666666667], [1.72846596E12, 16.816666666666666], [1.72846374E12, 14.483333333333333], [1.72846698E12, 16.983333333333334], [1.72846476E12, 14.35], [1.7284692E12, 17.65], [1.72846272E12, 7.783333333333333], [1.72846512E12, 14.766666666666667], [1.7284617E12, 7.483333333333333], [1.72846392E12, 14.35], [1.72846614E12, 16.716666666666665], [1.72846836E12, 16.366666666666667], [1.7284629E12, 8.083333333333334], [1.72846494E12, 14.2], [1.72846716E12, 16.433333333333334], [1.72846938E12, 17.616666666666667], [1.72846188E12, 8.266666666666667], [1.72846752E12, 15.516666666666667], [1.7284653E12, 13.816666666666666], [1.72846854E12, 17.633333333333333], [1.7284641E12, 14.633333333333333], [1.72846632E12, 15.983333333333333], [1.72846308E12, 6.05], [1.72846734E12, 16.066666666666666], [1.7284677E12, 17.033333333333335], [1.72846206E12, 8.483333333333333], [1.72846428E12, 13.966666666666667], [1.72846548E12, 16.883333333333333], [1.72846104E12, 4.4], [1.72846326E12, 14.866666666666667], [1.7284665E12, 15.516666666666667], [1.72846872E12, 16.583333333333332], [1.72846224E12, 8.133333333333333], [1.72846464E12, 15.066666666666666], [1.72846122E12, 8.666666666666666], [1.72846344E12, 14.533333333333333], [1.72846566E12, 16.466666666666665], [1.72846788E12, 17.45], [1.72846242E12, 8.533333333333333], [1.72846446E12, 14.316666666666666], [1.72846668E12, 16.633333333333333], [1.7284689E12, 16.65]], "isOverall": false, "label": "getmap-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7284695E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.2833333333333333, "minX": 1.72846092E12, "maxY": 17.916666666666668, "series": [{"data": [[1.7284614E12, 8.133333333333333], [1.72846482E12, 14.566666666666666], [1.72846704E12, 15.55], [1.72846362E12, 14.283333333333333], [1.72846806E12, 16.583333333333332], [1.72846584E12, 16.733333333333334], [1.72846908E12, 17.2], [1.7284626E12, 9.033333333333333], [1.72846686E12, 16.9], [1.72846722E12, 16.15], [1.72846158E12, 8.783333333333333], [1.7284638E12, 13.95], [1.728465E12, 14.266666666666667], [1.72846944E12, 13.55], [1.72846278E12, 8.316666666666666], [1.72846602E12, 16.35], [1.72846824E12, 16.983333333333334], [1.72846926E12, 16.15], [1.72846176E12, 7.733333333333333], [1.72846398E12, 14.283333333333333], [1.72846296E12, 8.633333333333333], [1.72846518E12, 14.2], [1.7284674E12, 16.283333333333335], [1.72846842E12, 17.766666666666666], [1.7284662E12, 16.783333333333335], [1.72846194E12, 8.166666666666666], [1.72846416E12, 14.2], [1.72846092E12, 4.0], [1.72846434E12, 14.416666666666666], [1.72846656E12, 17.05], [1.72846758E12, 13.15], [1.72846314E12, 9.45], [1.72846212E12, 8.783333333333333], [1.72846536E12, 11.766666666666667], [1.7284686E12, 17.283333333333335], [1.72846638E12, 16.3], [1.72846674E12, 16.283333333333335], [1.72846332E12, 14.616666666666667], [1.7284611E12, 3.95], [1.72846452E12, 14.7], [1.72846896E12, 17.5], [1.7284623E12, 8.5], [1.72846554E12, 16.4], [1.72846776E12, 16.733333333333334], [1.72846878E12, 15.866666666666667], [1.72846128E12, 8.483333333333333], [1.7284635E12, 14.383333333333333], [1.72846248E12, 8.466666666666667], [1.7284647E12, 15.083333333333334], [1.72846692E12, 16.483333333333334], [1.72846914E12, 17.633333333333333], [1.72846794E12, 17.683333333333334], [1.72846572E12, 15.733333333333333], [1.72846146E12, 7.916666666666667], [1.72846368E12, 14.8], [1.72846608E12, 16.216666666666665], [1.72846932E12, 16.733333333333334], [1.72846266E12, 8.2], [1.7284671E12, 16.05], [1.72846164E12, 8.15], [1.72846488E12, 14.116666666666667], [1.72846386E12, 14.233333333333333], [1.7284659E12, 15.7], [1.72846812E12, 17.016666666666666], [1.72846626E12, 15.2], [1.72846848E12, 17.533333333333335], [1.72846284E12, 8.033333333333333], [1.7284695E12, 0.2833333333333333], [1.72846182E12, 8.4], [1.72846404E12, 15.366666666666667], [1.72846506E12, 14.233333333333333], [1.72846728E12, 17.283333333333335], [1.7284683E12, 17.016666666666666], [1.72846302E12, 8.966666666666667], [1.728462E12, 8.216666666666667], [1.72846644E12, 16.983333333333334], [1.72846866E12, 16.416666666666668], [1.72846422E12, 13.983333333333333], [1.72846746E12, 15.716666666666667], [1.72846524E12, 14.366666666666667], [1.72846098E12, 4.533333333333333], [1.7284632E12, 14.05], [1.7284656E12, 15.316666666666666], [1.72846884E12, 17.15], [1.72846662E12, 16.65], [1.72846218E12, 8.783333333333333], [1.72846116E12, 5.166666666666667], [1.7284644E12, 14.9], [1.72846338E12, 14.55], [1.72846542E12, 17.2], [1.72846764E12, 17.916666666666668], [1.72846578E12, 15.1], [1.728468E12, 16.383333333333333], [1.72846236E12, 8.25], [1.72846902E12, 17.433333333333334], [1.72846134E12, 8.25], [1.72846356E12, 15.133333333333333], [1.72846458E12, 14.183333333333334], [1.7284668E12, 16.166666666666668], [1.72846782E12, 17.616666666666667], [1.72846818E12, 16.783333333333335], [1.72846254E12, 8.0], [1.72846152E12, 8.216666666666667], [1.72846596E12, 16.816666666666666], [1.72846374E12, 14.483333333333333], [1.72846698E12, 16.983333333333334], [1.72846476E12, 14.35], [1.7284692E12, 17.65], [1.72846272E12, 7.783333333333333], [1.72846512E12, 14.766666666666667], [1.7284617E12, 7.483333333333333], [1.72846392E12, 14.35], [1.72846614E12, 16.716666666666665], [1.72846836E12, 16.366666666666667], [1.7284629E12, 8.083333333333334], [1.72846494E12, 14.2], [1.72846716E12, 16.433333333333334], [1.72846938E12, 17.616666666666667], [1.72846188E12, 8.266666666666667], [1.72846752E12, 15.516666666666667], [1.7284653E12, 13.816666666666666], [1.72846854E12, 17.633333333333333], [1.7284641E12, 14.633333333333333], [1.72846632E12, 15.983333333333333], [1.72846308E12, 6.05], [1.72846734E12, 16.066666666666666], [1.7284677E12, 17.033333333333335], [1.72846206E12, 8.483333333333333], [1.72846428E12, 13.966666666666667], [1.72846548E12, 16.883333333333333], [1.72846104E12, 4.4], [1.72846326E12, 14.866666666666667], [1.7284665E12, 15.516666666666667], [1.72846872E12, 16.583333333333332], [1.72846224E12, 8.133333333333333], [1.72846464E12, 15.066666666666666], [1.72846122E12, 8.666666666666666], [1.72846344E12, 14.533333333333333], [1.72846566E12, 16.466666666666665], [1.72846788E12, 17.45], [1.72846242E12, 8.533333333333333], [1.72846446E12, 14.316666666666666], [1.72846668E12, 16.633333333333333], [1.7284689E12, 16.65]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7284695E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

