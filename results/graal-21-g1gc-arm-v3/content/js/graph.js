/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 33.0, "minX": 0.0, "maxY": 4216.0, "series": [{"data": [[0.0, 33.0], [0.1, 52.0], [0.2, 55.0], [0.3, 57.0], [0.4, 59.0], [0.5, 60.0], [0.6, 62.0], [0.7, 63.0], [0.8, 64.0], [0.9, 65.0], [1.0, 65.0], [1.1, 66.0], [1.2, 67.0], [1.3, 68.0], [1.4, 68.0], [1.5, 69.0], [1.6, 69.0], [1.7, 70.0], [1.8, 71.0], [1.9, 71.0], [2.0, 72.0], [2.1, 72.0], [2.2, 73.0], [2.3, 73.0], [2.4, 74.0], [2.5, 74.0], [2.6, 75.0], [2.7, 75.0], [2.8, 76.0], [2.9, 76.0], [3.0, 77.0], [3.1, 77.0], [3.2, 78.0], [3.3, 78.0], [3.4, 78.0], [3.5, 79.0], [3.6, 79.0], [3.7, 80.0], [3.8, 80.0], [3.9, 80.0], [4.0, 81.0], [4.1, 81.0], [4.2, 82.0], [4.3, 82.0], [4.4, 82.0], [4.5, 83.0], [4.6, 83.0], [4.7, 84.0], [4.8, 84.0], [4.9, 84.0], [5.0, 84.0], [5.1, 85.0], [5.2, 85.0], [5.3, 86.0], [5.4, 86.0], [5.5, 86.0], [5.6, 86.0], [5.7, 87.0], [5.8, 87.0], [5.9, 87.0], [6.0, 88.0], [6.1, 88.0], [6.2, 88.0], [6.3, 89.0], [6.4, 89.0], [6.5, 90.0], [6.6, 90.0], [6.7, 90.0], [6.8, 90.0], [6.9, 91.0], [7.0, 91.0], [7.1, 91.0], [7.2, 92.0], [7.3, 92.0], [7.4, 92.0], [7.5, 93.0], [7.6, 93.0], [7.7, 93.0], [7.8, 94.0], [7.9, 94.0], [8.0, 94.0], [8.1, 95.0], [8.2, 95.0], [8.3, 95.0], [8.4, 95.0], [8.5, 96.0], [8.6, 96.0], [8.7, 96.0], [8.8, 97.0], [8.9, 97.0], [9.0, 97.0], [9.1, 98.0], [9.2, 98.0], [9.3, 98.0], [9.4, 98.0], [9.5, 99.0], [9.6, 99.0], [9.7, 99.0], [9.8, 100.0], [9.9, 100.0], [10.0, 100.0], [10.1, 101.0], [10.2, 101.0], [10.3, 101.0], [10.4, 102.0], [10.5, 102.0], [10.6, 102.0], [10.7, 102.0], [10.8, 103.0], [10.9, 103.0], [11.0, 103.0], [11.1, 104.0], [11.2, 104.0], [11.3, 104.0], [11.4, 105.0], [11.5, 105.0], [11.6, 105.0], [11.7, 106.0], [11.8, 106.0], [11.9, 106.0], [12.0, 107.0], [12.1, 107.0], [12.2, 107.0], [12.3, 107.0], [12.4, 108.0], [12.5, 108.0], [12.6, 108.0], [12.7, 109.0], [12.8, 109.0], [12.9, 109.0], [13.0, 110.0], [13.1, 110.0], [13.2, 110.0], [13.3, 111.0], [13.4, 111.0], [13.5, 111.0], [13.6, 112.0], [13.7, 112.0], [13.8, 112.0], [13.9, 112.0], [14.0, 113.0], [14.1, 113.0], [14.2, 113.0], [14.3, 114.0], [14.4, 114.0], [14.5, 114.0], [14.6, 115.0], [14.7, 115.0], [14.8, 115.0], [14.9, 116.0], [15.0, 116.0], [15.1, 116.0], [15.2, 117.0], [15.3, 117.0], [15.4, 117.0], [15.5, 118.0], [15.6, 118.0], [15.7, 118.0], [15.8, 119.0], [15.9, 119.0], [16.0, 119.0], [16.1, 120.0], [16.2, 120.0], [16.3, 120.0], [16.4, 121.0], [16.5, 121.0], [16.6, 121.0], [16.7, 122.0], [16.8, 122.0], [16.9, 122.0], [17.0, 123.0], [17.1, 123.0], [17.2, 123.0], [17.3, 124.0], [17.4, 124.0], [17.5, 124.0], [17.6, 125.0], [17.7, 125.0], [17.8, 125.0], [17.9, 126.0], [18.0, 126.0], [18.1, 126.0], [18.2, 127.0], [18.3, 127.0], [18.4, 128.0], [18.5, 128.0], [18.6, 128.0], [18.7, 129.0], [18.8, 129.0], [18.9, 129.0], [19.0, 130.0], [19.1, 130.0], [19.2, 131.0], [19.3, 131.0], [19.4, 131.0], [19.5, 132.0], [19.6, 132.0], [19.7, 133.0], [19.8, 133.0], [19.9, 133.0], [20.0, 134.0], [20.1, 134.0], [20.2, 134.0], [20.3, 135.0], [20.4, 135.0], [20.5, 135.0], [20.6, 136.0], [20.7, 136.0], [20.8, 137.0], [20.9, 137.0], [21.0, 138.0], [21.1, 138.0], [21.2, 138.0], [21.3, 139.0], [21.4, 139.0], [21.5, 140.0], [21.6, 140.0], [21.7, 140.0], [21.8, 141.0], [21.9, 141.0], [22.0, 142.0], [22.1, 142.0], [22.2, 142.0], [22.3, 143.0], [22.4, 143.0], [22.5, 144.0], [22.6, 144.0], [22.7, 144.0], [22.8, 145.0], [22.9, 145.0], [23.0, 146.0], [23.1, 146.0], [23.2, 147.0], [23.3, 147.0], [23.4, 148.0], [23.5, 148.0], [23.6, 149.0], [23.7, 149.0], [23.8, 149.0], [23.9, 150.0], [24.0, 150.0], [24.1, 151.0], [24.2, 151.0], [24.3, 152.0], [24.4, 152.0], [24.5, 153.0], [24.6, 153.0], [24.7, 154.0], [24.8, 154.0], [24.9, 155.0], [25.0, 155.0], [25.1, 156.0], [25.2, 156.0], [25.3, 157.0], [25.4, 158.0], [25.5, 158.0], [25.6, 159.0], [25.7, 159.0], [25.8, 160.0], [25.9, 160.0], [26.0, 161.0], [26.1, 161.0], [26.2, 162.0], [26.3, 162.0], [26.4, 163.0], [26.5, 164.0], [26.6, 164.0], [26.7, 165.0], [26.8, 165.0], [26.9, 166.0], [27.0, 166.0], [27.1, 167.0], [27.2, 168.0], [27.3, 168.0], [27.4, 169.0], [27.5, 170.0], [27.6, 170.0], [27.7, 171.0], [27.8, 172.0], [27.9, 172.0], [28.0, 173.0], [28.1, 173.0], [28.2, 174.0], [28.3, 175.0], [28.4, 175.0], [28.5, 176.0], [28.6, 177.0], [28.7, 177.0], [28.8, 178.0], [28.9, 179.0], [29.0, 179.0], [29.1, 180.0], [29.2, 181.0], [29.3, 181.0], [29.4, 182.0], [29.5, 183.0], [29.6, 184.0], [29.7, 184.0], [29.8, 185.0], [29.9, 186.0], [30.0, 187.0], [30.1, 187.0], [30.2, 188.0], [30.3, 189.0], [30.4, 190.0], [30.5, 190.0], [30.6, 191.0], [30.7, 192.0], [30.8, 193.0], [30.9, 193.0], [31.0, 194.0], [31.1, 195.0], [31.2, 196.0], [31.3, 197.0], [31.4, 198.0], [31.5, 199.0], [31.6, 199.0], [31.7, 200.0], [31.8, 201.0], [31.9, 202.0], [32.0, 203.0], [32.1, 204.0], [32.2, 204.0], [32.3, 205.0], [32.4, 206.0], [32.5, 207.0], [32.6, 208.0], [32.7, 209.0], [32.8, 210.0], [32.9, 211.0], [33.0, 212.0], [33.1, 213.0], [33.2, 214.0], [33.3, 215.0], [33.4, 216.0], [33.5, 217.0], [33.6, 218.0], [33.7, 219.0], [33.8, 220.0], [33.9, 221.0], [34.0, 222.0], [34.1, 223.0], [34.2, 225.0], [34.3, 226.0], [34.4, 227.0], [34.5, 228.0], [34.6, 229.0], [34.7, 230.0], [34.8, 231.0], [34.9, 233.0], [35.0, 234.0], [35.1, 235.0], [35.2, 236.0], [35.3, 237.0], [35.4, 238.0], [35.5, 239.0], [35.6, 240.0], [35.7, 242.0], [35.8, 243.0], [35.9, 244.0], [36.0, 245.0], [36.1, 247.0], [36.2, 248.0], [36.3, 249.0], [36.4, 250.0], [36.5, 252.0], [36.6, 253.0], [36.7, 254.0], [36.8, 256.0], [36.9, 257.0], [37.0, 258.0], [37.1, 260.0], [37.2, 261.0], [37.3, 262.0], [37.4, 264.0], [37.5, 265.0], [37.6, 266.0], [37.7, 268.0], [37.8, 269.0], [37.9, 271.0], [38.0, 272.0], [38.1, 274.0], [38.2, 275.0], [38.3, 277.0], [38.4, 279.0], [38.5, 280.0], [38.6, 282.0], [38.7, 284.0], [38.8, 285.0], [38.9, 287.0], [39.0, 289.0], [39.1, 290.0], [39.2, 292.0], [39.3, 294.0], [39.4, 296.0], [39.5, 297.0], [39.6, 299.0], [39.7, 301.0], [39.8, 303.0], [39.9, 305.0], [40.0, 306.0], [40.1, 308.0], [40.2, 310.0], [40.3, 312.0], [40.4, 314.0], [40.5, 316.0], [40.6, 318.0], [40.7, 320.0], [40.8, 322.0], [40.9, 324.0], [41.0, 327.0], [41.1, 329.0], [41.2, 331.0], [41.3, 334.0], [41.4, 336.0], [41.5, 339.0], [41.6, 341.0], [41.7, 344.0], [41.8, 346.0], [41.9, 348.0], [42.0, 351.0], [42.1, 353.0], [42.2, 356.0], [42.3, 359.0], [42.4, 361.0], [42.5, 364.0], [42.6, 367.0], [42.7, 370.0], [42.8, 373.0], [42.9, 376.0], [43.0, 379.0], [43.1, 382.0], [43.2, 385.0], [43.3, 388.0], [43.4, 392.0], [43.5, 395.0], [43.6, 398.0], [43.7, 401.0], [43.8, 404.0], [43.9, 408.0], [44.0, 411.0], [44.1, 414.0], [44.2, 418.0], [44.3, 421.0], [44.4, 425.0], [44.5, 429.0], [44.6, 433.0], [44.7, 436.0], [44.8, 440.0], [44.9, 442.0], [45.0, 446.0], [45.1, 450.0], [45.2, 453.0], [45.3, 457.0], [45.4, 460.0], [45.5, 464.0], [45.6, 468.0], [45.7, 471.0], [45.8, 475.0], [45.9, 479.0], [46.0, 483.0], [46.1, 487.0], [46.2, 491.0], [46.3, 495.0], [46.4, 498.0], [46.5, 502.0], [46.6, 505.0], [46.7, 509.0], [46.8, 512.0], [46.9, 516.0], [47.0, 519.0], [47.1, 523.0], [47.2, 527.0], [47.3, 530.0], [47.4, 533.0], [47.5, 537.0], [47.6, 541.0], [47.7, 544.0], [47.8, 548.0], [47.9, 551.0], [48.0, 555.0], [48.1, 559.0], [48.2, 562.0], [48.3, 566.0], [48.4, 569.0], [48.5, 573.0], [48.6, 576.0], [48.7, 579.0], [48.8, 582.0], [48.9, 586.0], [49.0, 589.0], [49.1, 593.0], [49.2, 596.0], [49.3, 599.0], [49.4, 603.0], [49.5, 606.0], [49.6, 609.0], [49.7, 612.0], [49.8, 615.0], [49.9, 618.0], [50.0, 621.0], [50.1, 624.0], [50.2, 627.0], [50.3, 629.0], [50.4, 632.0], [50.5, 634.0], [50.6, 638.0], [50.7, 641.0], [50.8, 643.0], [50.9, 646.0], [51.0, 649.0], [51.1, 651.0], [51.2, 654.0], [51.3, 657.0], [51.4, 660.0], [51.5, 662.0], [51.6, 665.0], [51.7, 668.0], [51.8, 670.0], [51.9, 673.0], [52.0, 676.0], [52.1, 678.0], [52.2, 681.0], [52.3, 684.0], [52.4, 686.0], [52.5, 688.0], [52.6, 691.0], [52.7, 693.0], [52.8, 696.0], [52.9, 698.0], [53.0, 700.0], [53.1, 703.0], [53.2, 706.0], [53.3, 708.0], [53.4, 711.0], [53.5, 713.0], [53.6, 715.0], [53.7, 718.0], [53.8, 720.0], [53.9, 722.0], [54.0, 724.0], [54.1, 727.0], [54.2, 729.0], [54.3, 731.0], [54.4, 734.0], [54.5, 736.0], [54.6, 738.0], [54.7, 740.0], [54.8, 742.0], [54.9, 744.0], [55.0, 747.0], [55.1, 749.0], [55.2, 752.0], [55.3, 754.0], [55.4, 757.0], [55.5, 759.0], [55.6, 762.0], [55.7, 764.0], [55.8, 766.0], [55.9, 768.0], [56.0, 771.0], [56.1, 773.0], [56.2, 775.0], [56.3, 778.0], [56.4, 780.0], [56.5, 782.0], [56.6, 784.0], [56.7, 786.0], [56.8, 788.0], [56.9, 790.0], [57.0, 793.0], [57.1, 795.0], [57.2, 797.0], [57.3, 799.0], [57.4, 801.0], [57.5, 803.0], [57.6, 805.0], [57.7, 807.0], [57.8, 809.0], [57.9, 811.0], [58.0, 813.0], [58.1, 814.0], [58.2, 816.0], [58.3, 818.0], [58.4, 821.0], [58.5, 823.0], [58.6, 825.0], [58.7, 827.0], [58.8, 829.0], [58.9, 831.0], [59.0, 833.0], [59.1, 836.0], [59.2, 837.0], [59.3, 839.0], [59.4, 841.0], [59.5, 843.0], [59.6, 845.0], [59.7, 847.0], [59.8, 849.0], [59.9, 851.0], [60.0, 853.0], [60.1, 856.0], [60.2, 857.0], [60.3, 860.0], [60.4, 861.0], [60.5, 863.0], [60.6, 865.0], [60.7, 867.0], [60.8, 869.0], [60.9, 871.0], [61.0, 873.0], [61.1, 875.0], [61.2, 877.0], [61.3, 879.0], [61.4, 881.0], [61.5, 883.0], [61.6, 885.0], [61.7, 887.0], [61.8, 889.0], [61.9, 891.0], [62.0, 893.0], [62.1, 895.0], [62.2, 897.0], [62.3, 899.0], [62.4, 901.0], [62.5, 903.0], [62.6, 906.0], [62.7, 908.0], [62.8, 910.0], [62.9, 912.0], [63.0, 914.0], [63.1, 916.0], [63.2, 918.0], [63.3, 920.0], [63.4, 922.0], [63.5, 924.0], [63.6, 926.0], [63.7, 928.0], [63.8, 930.0], [63.9, 932.0], [64.0, 934.0], [64.1, 936.0], [64.2, 938.0], [64.3, 940.0], [64.4, 942.0], [64.5, 944.0], [64.6, 945.0], [64.7, 947.0], [64.8, 949.0], [64.9, 951.0], [65.0, 953.0], [65.1, 955.0], [65.2, 957.0], [65.3, 959.0], [65.4, 961.0], [65.5, 963.0], [65.6, 965.0], [65.7, 967.0], [65.8, 969.0], [65.9, 971.0], [66.0, 973.0], [66.1, 975.0], [66.2, 977.0], [66.3, 979.0], [66.4, 981.0], [66.5, 983.0], [66.6, 985.0], [66.7, 987.0], [66.8, 989.0], [66.9, 990.0], [67.0, 992.0], [67.1, 994.0], [67.2, 996.0], [67.3, 998.0], [67.4, 1000.0], [67.5, 1002.0], [67.6, 1004.0], [67.7, 1006.0], [67.8, 1008.0], [67.9, 1010.0], [68.0, 1012.0], [68.1, 1014.0], [68.2, 1015.0], [68.3, 1017.0], [68.4, 1019.0], [68.5, 1021.0], [68.6, 1023.0], [68.7, 1025.0], [68.8, 1027.0], [68.9, 1029.0], [69.0, 1031.0], [69.1, 1033.0], [69.2, 1035.0], [69.3, 1036.0], [69.4, 1038.0], [69.5, 1040.0], [69.6, 1042.0], [69.7, 1044.0], [69.8, 1046.0], [69.9, 1048.0], [70.0, 1050.0], [70.1, 1053.0], [70.2, 1055.0], [70.3, 1056.0], [70.4, 1059.0], [70.5, 1060.0], [70.6, 1062.0], [70.7, 1064.0], [70.8, 1066.0], [70.9, 1069.0], [71.0, 1071.0], [71.1, 1073.0], [71.2, 1075.0], [71.3, 1077.0], [71.4, 1078.0], [71.5, 1080.0], [71.6, 1082.0], [71.7, 1084.0], [71.8, 1086.0], [71.9, 1088.0], [72.0, 1090.0], [72.1, 1092.0], [72.2, 1094.0], [72.3, 1096.0], [72.4, 1098.0], [72.5, 1100.0], [72.6, 1103.0], [72.7, 1105.0], [72.8, 1107.0], [72.9, 1109.0], [73.0, 1111.0], [73.1, 1113.0], [73.2, 1115.0], [73.3, 1117.0], [73.4, 1119.0], [73.5, 1121.0], [73.6, 1124.0], [73.7, 1126.0], [73.8, 1128.0], [73.9, 1130.0], [74.0, 1132.0], [74.1, 1135.0], [74.2, 1137.0], [74.3, 1139.0], [74.4, 1142.0], [74.5, 1144.0], [74.6, 1146.0], [74.7, 1148.0], [74.8, 1150.0], [74.9, 1152.0], [75.0, 1154.0], [75.1, 1156.0], [75.2, 1158.0], [75.3, 1160.0], [75.4, 1163.0], [75.5, 1165.0], [75.6, 1167.0], [75.7, 1169.0], [75.8, 1171.0], [75.9, 1173.0], [76.0, 1176.0], [76.1, 1178.0], [76.2, 1180.0], [76.3, 1182.0], [76.4, 1185.0], [76.5, 1187.0], [76.6, 1189.0], [76.7, 1192.0], [76.8, 1194.0], [76.9, 1197.0], [77.0, 1199.0], [77.1, 1201.0], [77.2, 1203.0], [77.3, 1205.0], [77.4, 1207.0], [77.5, 1210.0], [77.6, 1212.0], [77.7, 1214.0], [77.8, 1217.0], [77.9, 1219.0], [78.0, 1221.0], [78.1, 1224.0], [78.2, 1226.0], [78.3, 1228.0], [78.4, 1230.0], [78.5, 1233.0], [78.6, 1235.0], [78.7, 1237.0], [78.8, 1240.0], [78.9, 1242.0], [79.0, 1245.0], [79.1, 1247.0], [79.2, 1250.0], [79.3, 1253.0], [79.4, 1255.0], [79.5, 1257.0], [79.6, 1260.0], [79.7, 1263.0], [79.8, 1265.0], [79.9, 1268.0], [80.0, 1270.0], [80.1, 1273.0], [80.2, 1275.0], [80.3, 1278.0], [80.4, 1280.0], [80.5, 1283.0], [80.6, 1285.0], [80.7, 1288.0], [80.8, 1290.0], [80.9, 1293.0], [81.0, 1296.0], [81.1, 1299.0], [81.2, 1301.0], [81.3, 1304.0], [81.4, 1306.0], [81.5, 1309.0], [81.6, 1312.0], [81.7, 1314.0], [81.8, 1317.0], [81.9, 1319.0], [82.0, 1322.0], [82.1, 1325.0], [82.2, 1327.0], [82.3, 1330.0], [82.4, 1333.0], [82.5, 1336.0], [82.6, 1338.0], [82.7, 1341.0], [82.8, 1344.0], [82.9, 1347.0], [83.0, 1350.0], [83.1, 1353.0], [83.2, 1356.0], [83.3, 1359.0], [83.4, 1362.0], [83.5, 1364.0], [83.6, 1366.0], [83.7, 1369.0], [83.8, 1372.0], [83.9, 1376.0], [84.0, 1379.0], [84.1, 1382.0], [84.2, 1385.0], [84.3, 1388.0], [84.4, 1391.0], [84.5, 1394.0], [84.6, 1397.0], [84.7, 1401.0], [84.8, 1404.0], [84.9, 1406.0], [85.0, 1410.0], [85.1, 1414.0], [85.2, 1417.0], [85.3, 1420.0], [85.4, 1424.0], [85.5, 1427.0], [85.6, 1431.0], [85.7, 1434.0], [85.8, 1437.0], [85.9, 1440.0], [86.0, 1444.0], [86.1, 1447.0], [86.2, 1450.0], [86.3, 1454.0], [86.4, 1457.0], [86.5, 1460.0], [86.6, 1464.0], [86.7, 1467.0], [86.8, 1471.0], [86.9, 1475.0], [87.0, 1478.0], [87.1, 1481.0], [87.2, 1485.0], [87.3, 1489.0], [87.4, 1492.0], [87.5, 1496.0], [87.6, 1500.0], [87.7, 1503.0], [87.8, 1507.0], [87.9, 1511.0], [88.0, 1515.0], [88.1, 1518.0], [88.2, 1522.0], [88.3, 1526.0], [88.4, 1529.0], [88.5, 1533.0], [88.6, 1537.0], [88.7, 1540.0], [88.8, 1544.0], [88.9, 1548.0], [89.0, 1552.0], [89.1, 1556.0], [89.2, 1560.0], [89.3, 1564.0], [89.4, 1568.0], [89.5, 1572.0], [89.6, 1576.0], [89.7, 1580.0], [89.8, 1585.0], [89.9, 1589.0], [90.0, 1593.0], [90.1, 1598.0], [90.2, 1602.0], [90.3, 1606.0], [90.4, 1610.0], [90.5, 1614.0], [90.6, 1619.0], [90.7, 1623.0], [90.8, 1629.0], [90.9, 1632.0], [91.0, 1637.0], [91.1, 1641.0], [91.2, 1647.0], [91.3, 1653.0], [91.4, 1658.0], [91.5, 1663.0], [91.6, 1669.0], [91.7, 1673.0], [91.8, 1678.0], [91.9, 1684.0], [92.0, 1690.0], [92.1, 1695.0], [92.2, 1700.0], [92.3, 1706.0], [92.4, 1710.0], [92.5, 1716.0], [92.6, 1722.0], [92.7, 1728.0], [92.8, 1734.0], [92.9, 1740.0], [93.0, 1746.0], [93.1, 1752.0], [93.2, 1758.0], [93.3, 1763.0], [93.4, 1769.0], [93.5, 1775.0], [93.6, 1781.0], [93.7, 1787.0], [93.8, 1795.0], [93.9, 1803.0], [94.0, 1809.0], [94.1, 1815.0], [94.2, 1821.0], [94.3, 1828.0], [94.4, 1834.0], [94.5, 1840.0], [94.6, 1847.0], [94.7, 1854.0], [94.8, 1861.0], [94.9, 1870.0], [95.0, 1878.0], [95.1, 1887.0], [95.2, 1895.0], [95.3, 1903.0], [95.4, 1911.0], [95.5, 1920.0], [95.6, 1928.0], [95.7, 1938.0], [95.8, 1946.0], [95.9, 1956.0], [96.0, 1966.0], [96.1, 1977.0], [96.2, 1987.0], [96.3, 1995.0], [96.4, 2006.0], [96.5, 2017.0], [96.6, 2028.0], [96.7, 2038.0], [96.8, 2049.0], [96.9, 2062.0], [97.0, 2074.0], [97.1, 2087.0], [97.2, 2099.0], [97.3, 2115.0], [97.4, 2128.0], [97.5, 2142.0], [97.6, 2156.0], [97.7, 2174.0], [97.8, 2189.0], [97.9, 2206.0], [98.0, 2222.0], [98.1, 2240.0], [98.2, 2259.0], [98.3, 2277.0], [98.4, 2300.0], [98.5, 2324.0], [98.6, 2353.0], [98.7, 2375.0], [98.8, 2405.0], [98.9, 2437.0], [99.0, 2464.0], [99.1, 2499.0], [99.2, 2537.0], [99.3, 2588.0], [99.4, 2632.0], [99.5, 2685.0], [99.6, 2770.0], [99.7, 2870.0], [99.8, 3005.0], [99.9, 3203.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 25699.0, "series": [{"data": [[0.0, 11384.0], [600.0, 4281.0], [700.0, 5132.0], [800.0, 5846.0], [900.0, 5911.0], [1000.0, 5965.0], [1100.0, 5364.0], [1200.0, 4802.0], [1300.0, 4153.0], [1400.0, 3423.0], [1500.0, 3000.0], [100.0, 25699.0], [1600.0, 2379.0], [1700.0, 1967.0], [1800.0, 1630.0], [1900.0, 1266.0], [2000.0, 1023.0], [2100.0, 769.0], [2300.0, 451.0], [2200.0, 627.0], [2400.0, 376.0], [2500.0, 263.0], [2600.0, 220.0], [2700.0, 134.0], [2800.0, 107.0], [2900.0, 89.0], [3000.0, 65.0], [3100.0, 54.0], [200.0, 9349.0], [3300.0, 26.0], [3200.0, 38.0], [3400.0, 17.0], [3500.0, 10.0], [3600.0, 10.0], [3700.0, 3.0], [3800.0, 6.0], [4000.0, 5.0], [4100.0, 3.0], [4200.0, 1.0], [300.0, 4730.0], [400.0, 3263.0], [500.0, 3359.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 14500.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 54446.0, "series": [{"data": [[0.0, 54446.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 48254.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 14500.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.8169014084507047, "minX": 1.72880574E12, "maxY": 16.0, "series": [{"data": [[1.72881162E12, 12.0], [1.72881324E12, 12.0], [1.72881192E12, 12.0], [1.72881294E12, 12.0], [1.72881354E12, 3.1911764705882355], [1.72881132E12, 11.65289256198347], [1.72881252E12, 12.0], [1.72881222E12, 12.0], [1.72881312E12, 12.0], [1.72881282E12, 12.0], [1.72881276E12, 12.0], [1.72881144E12, 12.0], [1.72881246E12, 12.0], [1.72881336E12, 12.0], [1.72881306E12, 12.0], [1.72881234E12, 12.0], [1.72881174E12, 12.0], [1.72881264E12, 12.0], [1.72881204E12, 12.0], [1.72881198E12, 12.0], [1.72881288E12, 12.0], [1.72881228E12, 12.0], [1.72881258E12, 12.0], [1.72881186E12, 12.0], [1.72881348E12, 8.616531165311658], [1.72881216E12, 12.0], [1.72881318E12, 12.0], [1.72881156E12, 12.0], [1.7288121E12, 12.0], [1.7288124E12, 12.0], [1.72881342E12, 11.952674897119342], [1.7288115E12, 12.0], [1.7288118E12, 12.0], [1.72881138E12, 12.0], [1.728813E12, 12.0], [1.72881168E12, 12.0], [1.7288127E12, 12.0], [1.7288133E12, 12.0]], "isOverall": false, "label": "12", "isController": false}, {"data": [[1.7288058E12, 2.0], [1.72880598E12, 2.0], [1.72880592E12, 2.0], [1.7288061E12, 1.8169014084507047], [1.72880604E12, 2.0], [1.72880574E12, 2.0], [1.72880586E12, 2.0]], "isOverall": false, "label": "2", "isController": false}, {"data": [[1.7288079E12, 4.0], [1.7288082E12, 4.0], [1.72880628E12, 4.0], [1.72880658E12, 4.0], [1.72880688E12, 4.0], [1.7288067E12, 4.0], [1.728807E12, 4.0], [1.7288073E12, 4.0], [1.72880868E12, 1.86046511627907], [1.7288076E12, 4.0], [1.72880838E12, 4.0], [1.72880646E12, 4.0], [1.72880676E12, 4.0], [1.72880706E12, 4.0], [1.72880736E12, 4.0], [1.72880862E12, 2.7379032258064506], [1.72880718E12, 4.0], [1.72880748E12, 4.0], [1.7288085E12, 4.0], [1.72880778E12, 4.0], [1.72880808E12, 4.0], [1.72880616E12, 4.0], [1.72880694E12, 4.0], [1.72880724E12, 4.0], [1.72880754E12, 4.0], [1.72880844E12, 4.0], [1.72880784E12, 4.0], [1.72880766E12, 4.0], [1.72880832E12, 4.0], [1.72880796E12, 4.0], [1.72880634E12, 4.0], [1.72880664E12, 4.0], [1.72880742E12, 4.0], [1.72880856E12, 3.8285714285714283], [1.72880772E12, 4.0], [1.72880826E12, 4.0], [1.72880802E12, 4.0], [1.7288061E12, 3.9896907216494846], [1.7288064E12, 4.0], [1.72880814E12, 4.0], [1.72880622E12, 4.0], [1.72880652E12, 4.0], [1.72880682E12, 4.0], [1.72880712E12, 4.0]], "isOverall": false, "label": "4", "isController": false}, {"data": [[1.72881486E12, 16.0], [1.72881516E12, 16.0], [1.72881384E12, 16.0], [1.72881354E12, 15.944723618090439], [1.72881444E12, 16.0], [1.72881414E12, 16.0], [1.72881474E12, 16.0], [1.72881504E12, 16.0], [1.72881438E12, 16.0], [1.72881468E12, 16.0], [1.72881498E12, 16.0], [1.72881528E12, 8.75422138836773], [1.72881396E12, 16.0], [1.72881366E12, 16.0], [1.72881426E12, 16.0], [1.72881456E12, 16.0], [1.7288142E12, 16.0], [1.7288139E12, 16.0], [1.7288145E12, 16.0], [1.7288148E12, 16.0], [1.7288151E12, 16.0], [1.72881408E12, 16.0], [1.72881378E12, 16.0], [1.72881372E12, 16.0], [1.72881432E12, 16.0], [1.72881402E12, 16.0], [1.72881462E12, 16.0], [1.72881492E12, 16.0], [1.7288136E12, 16.0], [1.72881522E12, 15.460017196904573]], "isOverall": false, "label": "16", "isController": false}, {"data": [[1.72881E12, 8.0], [1.7288097E12, 8.0], [1.7288094E12, 8.0], [1.72881102E12, 8.0], [1.7288091E12, 8.0], [1.72881132E12, 3.89912280701754], [1.72880928E12, 8.0], [1.7288109E12, 8.0], [1.72880898E12, 8.0], [1.7288112E12, 8.0], [1.72880868E12, 7.996078431372553], [1.7288103E12, 8.0], [1.7288106E12, 8.0], [1.72880952E12, 8.0], [1.72881114E12, 8.0], [1.72880922E12, 8.0], [1.72880892E12, 8.0], [1.72881054E12, 8.0], [1.72881084E12, 8.0], [1.7288088E12, 8.0], [1.72881042E12, 8.0], [1.72881072E12, 8.0], [1.72881012E12, 8.0], [1.72880982E12, 8.0], [1.72880904E12, 8.0], [1.72881066E12, 8.0], [1.72880874E12, 8.0], [1.72881096E12, 8.0], [1.72881006E12, 8.0], [1.72881036E12, 8.0], [1.72881024E12, 8.0], [1.72880994E12, 8.0], [1.72880964E12, 8.0], [1.72881126E12, 7.295031055900617], [1.72880934E12, 8.0], [1.72881018E12, 8.0], [1.72881048E12, 8.0], [1.72880988E12, 8.0], [1.72880958E12, 8.0], [1.72880976E12, 8.0], [1.72880946E12, 8.0], [1.72880916E12, 8.0], [1.72881078E12, 8.0], [1.72880886E12, 8.0], [1.72881108E12, 8.0]], "isOverall": false, "label": "8", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72881528E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 582.7491525423729, "minX": 1.0, "maxY": 933.52, "series": [{"data": [[2.0, 621.933840304182], [8.0, 658.6163793103487], [9.0, 696.18], [10.0, 695.497142857143], [11.0, 603.9659863945577], [3.0, 582.7491525423729], [12.0, 718.1494734458184], [13.0, 933.52], [14.0, 703.8433734939758], [15.0, 757.3793103448277], [1.0, 610.043956043956], [4.0, 629.8009052658435], [16.0, 874.9597714065565], [5.0, 629.0965732087226], [6.0, 630.6975308641975], [7.0, 661.1085714285713]], "isOverall": false, "label": "getmap", "isController": false}, {"data": [[10.723489761092258, 729.7447952218542]], "isOverall": false, "label": "getmap-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 16.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.72880574E12, "maxY": 5.404197721666667E7, "series": [{"data": [[1.7288079E12, 1.9839453033333335E7], [1.72881354E12, 3.8211527166666664E7], [1.72880688E12, 1.9635794333333332E7], [1.7288091E12, 3.6902721833333336E7], [1.72881132E12, 1.6587591783333333E7], [1.72880928E12, 3.442871913333333E7], [1.7288067E12, 1.8988820066666666E7], [1.72881252E12, 4.7641116016666666E7], [1.72881474E12, 5.011144936666667E7], [1.7288103E12, 3.682915618333333E7], [1.72881114E12, 3.574437136666667E7], [1.72881438E12, 5.14860231E7], [1.72880706E12, 1.9561796433333334E7], [1.72880892E12, 3.7176636766666666E7], [1.72881336E12, 4.661205206666667E7], [1.72881234E12, 4.840229595E7], [1.72881012E12, 3.5616039266666666E7], [1.72880586E12, 9953482.85], [1.72880808E12, 1.9893280283333335E7], [1.72881456E12, 5.404197721666667E7], [1.72881066E12, 3.429933643333333E7], [1.72880724E12, 1.9215963283333335E7], [1.7288139E12, 5.249899786666667E7], [1.72880844E12, 1.99224102E7], [1.72881288E12, 4.589750865E7], [1.72880604E12, 9219836.3], [1.72881186E12, 4.67881955E7], [1.7288151E12, 5.0973964416666664E7], [1.72880964E12, 3.665602545E7], [1.72881408E12, 5.01159907E7], [1.72880742E12, 1.8240775716666665E7], [1.72881372E12, 5.185737586666667E7], [1.72880826E12, 1.8657595633333333E7], [1.72881048E12, 3.568345363333333E7], [1.7288115E12, 4.7412427416666664E7], [1.7288064E12, 1.8688038116666667E7], [1.72880622E12, 1.8779273066666666E7], [1.72880946E12, 3.6848533983333334E7], [1.72881168E12, 4.920647021666667E7], [1.7288127E12, 4.64833789E7], [1.72881492E12, 5.1856944233333334E7], [1.72881162E12, 5.062470228333333E7], [1.72881486E12, 5.0105617833333336E7], [1.72880598E12, 1.0538564166666666E7], [1.7288082E12, 2.0075336533333335E7], [1.7288094E12, 3.48580476E7], [1.72881384E12, 5.03303205E7], [1.728807E12, 2.0189727983333334E7], [1.72880838E12, 1.9809761316666666E7], [1.7288106E12, 3.577681288333333E7], [1.72881282E12, 4.651211868333333E7], [1.72881504E12, 5.2193859766666666E7], [1.72881144E12, 4.641581746666667E7], [1.72880922E12, 3.56557825E7], [1.72881246E12, 4.86023241E7], [1.72881468E12, 5.176884445E7], [1.72880736E12, 1.9615187883333333E7], [1.72880718E12, 2.04663003E7], [1.72881042E12, 3.5385613166666664E7], [1.72881366E12, 5.3144883483333334E7], [1.72881264E12, 4.905920595E7], [1.72880616E12, 1.902783965E7], [1.7288142E12, 5.1297897166666664E7], [1.72880874E12, 3.6550929666666664E7], [1.72881096E12, 3.52043896E7], [1.72880754E12, 1.9404102916666668E7], [1.72881198E12, 4.5566008916666664E7], [1.72880994E12, 3.6091361833333336E7], [1.72881216E12, 4.947846825E7], [1.72881318E12, 4.761437463333333E7], [1.72880634E12, 1.9275332816666666E7], [1.72880856E12, 1.776036835E7], [1.72880772E12, 1.927811355E7], [1.72880958E12, 3.732522156666667E7], [1.7288118E12, 4.7502204333333336E7], [1.72881402E12, 5.1607573833333336E7], [1.72880976E12, 3.544013518333333E7], [1.728813E12, 4.9228799333333336E7], [1.72880652E12, 2.0282837966666665E7], [1.72881078E12, 3.7033588233333334E7], [1.72881522E12, 5.028610685E7], [1.7288097E12, 3.5989382266666666E7], [1.72881192E12, 4.959470138333333E7], [1.72880628E12, 2.0032671316666666E7], [1.72881294E12, 4.686388181666667E7], [1.72881516E12, 5.1417717766666666E7], [1.7288109E12, 3.582799715E7], [1.72881414E12, 5.298140475E7], [1.7288073E12, 1.9868031416666668E7], [1.72880868E12, 2.7070435533333335E7], [1.72881312E12, 4.862998455E7], [1.72880952E12, 3.50561981E7], [1.72880646E12, 1.8887567283333335E7], [1.72881276E12, 4.931390315E7], [1.72881054E12, 3.444824915E7], [1.72881498E12, 5.160054336666667E7], [1.72881396E12, 5.3316735016666666E7], [1.72880748E12, 1.8280671216666665E7], [1.7288085E12, 1.8153058316666666E7], [1.72881072E12, 3.69891962E7], [1.72881174E12, 4.9060101583333336E7], [1.72880904E12, 3.4944114916666664E7], [1.72880784E12, 1.85697893E7], [1.72881006E12, 3.6440993483333334E7], [1.72881228E12, 4.615877871666667E7], [1.7288145E12, 5.168772893333333E7], [1.72880766E12, 2.065061635E7], [1.72881024E12, 3.523905431666667E7], [1.72881348E12, 3.758203861666667E7], [1.72881126E12, 3.476058095E7], [1.72880664E12, 1.964587115E7], [1.7288058E12, 1.0267414683333334E7], [1.7288121E12, 4.769664168333333E7], [1.72880802E12, 2.02760031E7], [1.72880988E12, 3.593746795E7], [1.72881432E12, 5.2621959766666666E7], [1.72880682E12, 2.01624554E7], [1.72880886E12, 3.6460745483333334E7], [1.72881108E12, 3.6227738016666666E7], [1.7288133E12, 4.881812413333333E7], [1.72881E12, 3.6031992766666666E7], [1.72881324E12, 4.760318461666667E7], [1.72880658E12, 2.029004435E7], [1.72881102E12, 3.66277769E7], [1.72881444E12, 5.1218232416666664E7], [1.72880898E12, 3.691158206666667E7], [1.7288112E12, 3.473286785E7], [1.72881222E12, 4.806891865E7], [1.7288076E12, 1.9938629033333335E7], [1.72880676E12, 1.9845984316666666E7], [1.72880862E12, 1.3533066066666666E7], [1.72881084E12, 3.677803893333333E7], [1.72881306E12, 4.77486785E7], [1.72881528E12, 2.589821955E7], [1.7288088E12, 3.414684786666667E7], [1.72880778E12, 1.93692068E7], [1.72880982E12, 3.701230563333333E7], [1.72881204E12, 4.948483863333333E7], [1.72881426E12, 5.20348929E7], [1.72880694E12, 1.9310028883333333E7], [1.72880592E12, 9638931.45], [1.72881036E12, 3.7222983233333334E7], [1.72881258E12, 5.023111671666667E7], [1.7288148E12, 5.192138815E7], [1.72880832E12, 1.8519677733333334E7], [1.72880574E12, 4305250.933333334], [1.72880796E12, 1.9878616333333332E7], [1.72880934E12, 3.604604046666667E7], [1.72881156E12, 4.732957635E7], [1.72881378E12, 4.997227615E7], [1.72881018E12, 3.5301689E7], [1.7288124E12, 4.593432055E7], [1.72881342E12, 4.752910695E7], [1.7288061E12, 1.0821692066666666E7], [1.72880814E12, 1.9387116566666666E7], [1.72881138E12, 4.758539693333333E7], [1.72881462E12, 5.0626518416666664E7], [1.7288136E12, 4.971148956666667E7], [1.72880916E12, 3.7270704083333336E7], [1.72880712E12, 1.89092646E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7288079E12, 0.0], [1.72881354E12, 0.0], [1.72880688E12, 0.0], [1.7288091E12, 0.0], [1.72881132E12, 0.0], [1.72880928E12, 0.0], [1.7288067E12, 0.0], [1.72881252E12, 0.0], [1.72881474E12, 0.0], [1.7288103E12, 0.0], [1.72881114E12, 0.0], [1.72881438E12, 0.0], [1.72880706E12, 0.0], [1.72880892E12, 0.0], [1.72881336E12, 0.0], [1.72881234E12, 0.0], [1.72881012E12, 0.0], [1.72880586E12, 0.0], [1.72880808E12, 0.0], [1.72881456E12, 0.0], [1.72881066E12, 0.0], [1.72880724E12, 0.0], [1.7288139E12, 0.0], [1.72880844E12, 0.0], [1.72881288E12, 0.0], [1.72880604E12, 0.0], [1.72881186E12, 0.0], [1.7288151E12, 0.0], [1.72880964E12, 0.0], [1.72881408E12, 0.0], [1.72880742E12, 0.0], [1.72881372E12, 0.0], [1.72880826E12, 0.0], [1.72881048E12, 0.0], [1.7288115E12, 0.0], [1.7288064E12, 0.0], [1.72880622E12, 0.0], [1.72880946E12, 0.0], [1.72881168E12, 0.0], [1.7288127E12, 0.0], [1.72881492E12, 0.0], [1.72881162E12, 0.0], [1.72881486E12, 0.0], [1.72880598E12, 0.0], [1.7288082E12, 0.0], [1.7288094E12, 0.0], [1.72881384E12, 0.0], [1.728807E12, 0.0], [1.72880838E12, 0.0], [1.7288106E12, 0.0], [1.72881282E12, 0.0], [1.72881504E12, 0.0], [1.72881144E12, 0.0], [1.72880922E12, 0.0], [1.72881246E12, 0.0], [1.72881468E12, 0.0], [1.72880736E12, 0.0], [1.72880718E12, 0.0], [1.72881042E12, 0.0], [1.72881366E12, 0.0], [1.72881264E12, 0.0], [1.72880616E12, 0.0], [1.7288142E12, 0.0], [1.72880874E12, 0.0], [1.72881096E12, 0.0], [1.72880754E12, 0.0], [1.72881198E12, 0.0], [1.72880994E12, 0.0], [1.72881216E12, 0.0], [1.72881318E12, 0.0], [1.72880634E12, 0.0], [1.72880856E12, 0.0], [1.72880772E12, 0.0], [1.72880958E12, 0.0], [1.7288118E12, 0.0], [1.72881402E12, 0.0], [1.72880976E12, 0.0], [1.728813E12, 0.0], [1.72880652E12, 0.0], [1.72881078E12, 0.0], [1.72881522E12, 0.0], [1.7288097E12, 0.0], [1.72881192E12, 0.0], [1.72880628E12, 0.0], [1.72881294E12, 0.0], [1.72881516E12, 0.0], [1.7288109E12, 0.0], [1.72881414E12, 0.0], [1.7288073E12, 0.0], [1.72880868E12, 0.0], [1.72881312E12, 0.0], [1.72880952E12, 0.0], [1.72880646E12, 0.0], [1.72881276E12, 0.0], [1.72881054E12, 0.0], [1.72881498E12, 0.0], [1.72881396E12, 0.0], [1.72880748E12, 0.0], [1.7288085E12, 0.0], [1.72881072E12, 0.0], [1.72881174E12, 0.0], [1.72880904E12, 0.0], [1.72880784E12, 0.0], [1.72881006E12, 0.0], [1.72881228E12, 0.0], [1.7288145E12, 0.0], [1.72880766E12, 0.0], [1.72881024E12, 0.0], [1.72881348E12, 0.0], [1.72881126E12, 0.0], [1.72880664E12, 0.0], [1.7288058E12, 0.0], [1.7288121E12, 0.0], [1.72880802E12, 0.0], [1.72880988E12, 0.0], [1.72881432E12, 0.0], [1.72880682E12, 0.0], [1.72880886E12, 0.0], [1.72881108E12, 0.0], [1.7288133E12, 0.0], [1.72881E12, 0.0], [1.72881324E12, 0.0], [1.72880658E12, 0.0], [1.72881102E12, 0.0], [1.72881444E12, 0.0], [1.72880898E12, 0.0], [1.7288112E12, 0.0], [1.72881222E12, 0.0], [1.7288076E12, 0.0], [1.72880676E12, 0.0], [1.72880862E12, 0.0], [1.72881084E12, 0.0], [1.72881306E12, 0.0], [1.72881528E12, 0.0], [1.7288088E12, 0.0], [1.72880778E12, 0.0], [1.72880982E12, 0.0], [1.72881204E12, 0.0], [1.72881426E12, 0.0], [1.72880694E12, 0.0], [1.72880592E12, 0.0], [1.72881036E12, 0.0], [1.72881258E12, 0.0], [1.7288148E12, 0.0], [1.72880832E12, 0.0], [1.72880574E12, 0.0], [1.72880796E12, 0.0], [1.72880934E12, 0.0], [1.72881156E12, 0.0], [1.72881378E12, 0.0], [1.72881018E12, 0.0], [1.7288124E12, 0.0], [1.72881342E12, 0.0], [1.7288061E12, 0.0], [1.72880814E12, 0.0], [1.72881138E12, 0.0], [1.72881462E12, 0.0], [1.7288136E12, 0.0], [1.72880916E12, 0.0], [1.72880712E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72881528E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 562.1717647058824, "minX": 1.72880574E12, "maxY": 979.6553846153851, "series": [{"data": [[1.7288079E12, 655.4184782608696], [1.72881354E12, 791.577546296296], [1.72880688E12, 695.2716763005783], [1.7288091E12, 677.784203102962], [1.72881132E12, 630.1174785100288], [1.72880928E12, 627.32637075718], [1.7288067E12, 644.8913043478258], [1.72881252E12, 681.0928030303025], [1.72881474E12, 913.9471153846144], [1.7288103E12, 652.3537414965984], [1.72881114E12, 674.9971870604779], [1.72881438E12, 832.0735930735929], [1.72880706E12, 630.3456464379946], [1.72880892E12, 644.532710280374], [1.72881336E12, 752.5782881002099], [1.72881234E12, 721.12], [1.72881012E12, 670.2433566433566], [1.72880586E12, 573.5980861244016], [1.72880808E12, 645.950953678474], [1.72881456E12, 876.013623978202], [1.72881066E12, 644.7773279352223], [1.72880724E12, 631.1207349081367], [1.7288139E12, 878.467093235831], [1.72880844E12, 605.0649999999996], [1.72881288E12, 689.8534728829686], [1.72880604E12, 673.7329545454547], [1.72881186E12, 738.098562628337], [1.7288151E12, 979.6553846153851], [1.72880964E12, 640.0465425531921], [1.72881408E12, 878.8427787934187], [1.72880742E12, 587.4087591240869], [1.72881372E12, 869.3747747747739], [1.72880826E12, 588.4975369458135], [1.72881048E12, 650.2785326086954], [1.7288115E12, 715.7574850299394], [1.7288064E12, 642.7540106951874], [1.72880622E12, 628.1151832460735], [1.72880946E12, 688.6456241033003], [1.72881168E12, 721.1724825523419], [1.7288127E12, 708.9136904761896], [1.72881492E12, 890.7010213556173], [1.72881162E12, 734.4392712550609], [1.72881486E12, 857.7750000000004], [1.72880598E12, 592.4827586206895], [1.7288082E12, 680.2691218130311], [1.7288094E12, 648.7222222222218], [1.72881384E12, 866.8114233907529], [1.728807E12, 615.160305343511], [1.72880838E12, 650.6594005449593], [1.7288106E12, 672.0434173669471], [1.72881282E12, 715.2077922077921], [1.72881504E12, 855.0347284060551], [1.72881144E12, 705.4491193737766], [1.72880922E12, 675.7785613540198], [1.72881246E12, 756.1573976915009], [1.72881468E12, 895.2768518518534], [1.72880736E12, 595.7313432835826], [1.72880718E12, 656.1205479452051], [1.72881042E12, 640.1888297872341], [1.72881366E12, 869.6494096276117], [1.72881264E12, 705.3391812865495], [1.72880616E12, 595.0074257425734], [1.7288142E12, 863.2093862815876], [1.72880874E12, 683.7120567375882], [1.72881096E12, 671.7510489510489], [1.72880754E12, 633.9102902374668], [1.72881198E12, 706.8726738491666], [1.72880994E12, 666.421487603306], [1.72881216E12, 701.3945312499989], [1.72881318E12, 714.5868917576952], [1.72880634E12, 626.431578947368], [1.72880856E12, 601.1064935064936], [1.72880772E12, 614.5586734693871], [1.72880958E12, 681.6073446327681], [1.7288118E12, 717.618381618383], [1.72881402E12, 856.8994614003591], [1.72880976E12, 612.3427109974431], [1.728813E12, 746.2729145211122], [1.72880652E12, 624.9713541666661], [1.72881078E12, 660.769655172414], [1.72881522E12, 800.3215821152185], [1.7288097E12, 682.207142857144], [1.72881192E12, 693.5201923076937], [1.72880628E12, 643.6791443850267], [1.72881294E12, 697.7348336594914], [1.72881516E12, 892.3166666666666], [1.7288109E12, 677.4915492957743], [1.72881414E12, 879.9478021978023], [1.7288073E12, 615.2030848329049], [1.72880868E12, 660.5515370705251], [1.72881312E12, 716.6091724825525], [1.72880952E12, 670.0280504908839], [1.72880646E12, 690.7031700288186], [1.72881276E12, 728.9738167170187], [1.72881054E12, 620.4470284237724], [1.72881498E12, 860.8819320214661], [1.72881396E12, 887.9375573921023], [1.72880748E12, 619.2924281984342], [1.7288085E12, 562.1717647058824], [1.72881072E12, 710.1595273264401], [1.72881174E12, 775.685064935065], [1.72880904E12, 656.0629274965806], [1.72880784E12, 596.8703241895257], [1.72881006E12, 675.007062146893], [1.72881228E12, 728.3647416413364], [1.7288145E12, 902.191871455577], [1.72880766E12, 641.0026737967921], [1.72881024E12, 664.0737134909596], [1.72881348E12, 685.0406504065043], [1.72881126E12, 673.2499999999998], [1.72880664E12, 613.8724489795914], [1.7288058E12, 584.5833333333333], [1.7288121E12, 707.7893700787408], [1.72880802E12, 634.6790450928387], [1.72880988E12, 669.6811188811189], [1.72881432E12, 829.8480138169263], [1.72880682E12, 696.6337209302329], [1.72880886E12, 658.3845089903183], [1.72881108E12, 659.9186206896559], [1.7288133E12, 740.7712820512822], [1.72881E12, 676.048090523337], [1.72881324E12, 664.891465677179], [1.72880658E12, 642.7352941176471], [1.72881102E12, 663.2558782849242], [1.72881444E12, 881.9742410303595], [1.72880898E12, 642.151474530831], [1.7288112E12, 671.0603932584274], [1.72881222E12, 759.4821052631585], [1.7288076E12, 623.798449612403], [1.72880676E12, 637.2928759894459], [1.72880862E12, 644.1774193548387], [1.72881084E12, 665.9875173370317], [1.72881306E12, 730.3225152129817], [1.72881528E12, 676.4540337711073], [1.7288088E12, 635.8267195767196], [1.72880778E12, 631.0765171503966], [1.72880982E12, 647.2741935483863], [1.72881204E12, 724.0422535211262], [1.72881426E12, 899.6766355140181], [1.72880694E12, 615.2783505154642], [1.72880592E12, 612.4693877551018], [1.72881036E12, 680.3361581920897], [1.72881258E12, 713.9363817097415], [1.7288148E12, 886.7255985267041], [1.72880832E12, 675.9999999999994], [1.72880574E12, 683.1714285714286], [1.72880796E12, 573.128571428572], [1.72880934E12, 630.7555847568997], [1.72881156E12, 729.6188524590162], [1.72881378E12, 833.326939843069], [1.72881018E12, 611.7883396704689], [1.7288124E12, 693.4744947064487], [1.72881342E12, 733.1553497942393], [1.7288061E12, 573.3221757322177], [1.72880814E12, 663.386301369863], [1.72881138E12, 691.3948374760998], [1.72881462E12, 935.5136986301368], [1.7288136E12, 865.9457504520802], [1.72880916E12, 623.3203631647218], [1.72880712E12, 645.9650537634409]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72881528E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 393.4761904761903, "minX": 1.72880574E12, "maxY": 674.909743589744, "series": [{"data": [[1.7288079E12, 453.5896739130436], [1.72881354E12, 552.6643518518514], [1.72880688E12, 485.17630057803524], [1.7288091E12, 467.1269393511985], [1.72881132E12, 433.4756446991404], [1.72880928E12, 439.72845953002616], [1.7288067E12, 449.29076086956536], [1.72881252E12, 476.01799242424204], [1.72881474E12, 637.215384615385], [1.7288103E12, 448.32789115646256], [1.72881114E12, 470.1983122362867], [1.72881438E12, 579.8510822510829], [1.72880706E12, 435.3693931398418], [1.72880892E12, 446.0173564753004], [1.72881336E12, 526.7025052192068], [1.72881234E12, 500.15800000000013], [1.72881012E12, 470.2965034965033], [1.72880586E12, 395.1387559808612], [1.72880808E12, 444.2452316076296], [1.72881456E12, 604.648501362399], [1.72881066E12, 450.14844804318454], [1.72880724E12, 439.49081364829385], [1.7288139E12, 604.1544789762346], [1.72880844E12, 417.32500000000016], [1.72881288E12, 484.2350142721219], [1.72880604E12, 477.30113636363683], [1.72881186E12, 515.9466119096516], [1.7288151E12, 674.909743589744], [1.72880964E12, 445.5492021276596], [1.72881408E12, 614.113345521023], [1.72880742E12, 413.7615571776154], [1.72881372E12, 603.4900900900902], [1.72880826E12, 411.2955665024631], [1.72881048E12, 452.49456521739125], [1.7288115E12, 500.2714570858283], [1.7288064E12, 448.78877005347596], [1.72880622E12, 437.07068062827216], [1.72880946E12, 478.790530846485], [1.72881168E12, 497.2582253240279], [1.7288127E12, 496.38392857142844], [1.72881492E12, 617.9052924791077], [1.72881162E12, 504.7125506072874], [1.72881486E12, 598.2669642857151], [1.72880598E12, 403.0985221674878], [1.7288082E12, 468.95467422096317], [1.7288094E12, 454.8997289972901], [1.72881384E12, 607.7252946509522], [1.728807E12, 423.42239185750634], [1.72880838E12, 448.7002724795639], [1.7288106E12, 471.01260504201707], [1.72881282E12, 502.5704295704292], [1.72881504E12, 588.8468388245782], [1.72881144E12, 492.37084148728013], [1.72880922E12, 470.72355430183376], [1.72881246E12, 527.4197271773348], [1.72881468E12, 622.5703703703699], [1.72880736E12, 411.43283582089543], [1.72880718E12, 450.10958904109594], [1.72881042E12, 445.3617021276604], [1.72881366E12, 601.3024523160758], [1.72881264E12, 486.2758284600391], [1.72880616E12, 413.1930693069308], [1.7288142E12, 601.9052346570398], [1.72880874E12, 479.9517730496456], [1.72881096E12, 468.0251748251746], [1.72880754E12, 437.9630606860162], [1.72881198E12, 495.8442703232125], [1.72880994E12, 465.9628099173555], [1.72881216E12, 483.8232421874995], [1.72881318E12, 497.6941410129094], [1.72880634E12, 432.3342105263158], [1.72880856E12, 421.0779220779221], [1.72880772E12, 427.72959183673476], [1.72880958E12, 471.3531073446333], [1.7288118E12, 500.89810189810186], [1.72881402E12, 599.839317773788], [1.72880976E12, 427.6317135549872], [1.728813E12, 519.9382080329548], [1.72880652E12, 426.86458333333326], [1.72881078E12, 455.2537931034482], [1.72881522E12, 555.1590713671532], [1.7288097E12, 474.56142857142845], [1.72881192E12, 480.5817307692306], [1.72880628E12, 443.7887700534756], [1.72881294E12, 487.3639921722118], [1.72881516E12, 624.7740740740726], [1.7288109E12, 472.31267605633786], [1.72881414E12, 607.6117216117215], [1.7288073E12, 420.53213367609237], [1.72880868E12, 463.0596745027127], [1.72881312E12, 496.76570289132616], [1.72880952E12, 469.5413744740538], [1.72880646E12, 485.96541786743524], [1.72881276E12, 499.62336354481414], [1.72881054E12, 436.0503875968992], [1.72881498E12, 601.2218246869412], [1.72881396E12, 611.7162534435265], [1.72880748E12, 434.8381201044387], [1.7288085E12, 393.8894117647059], [1.72881072E12, 489.7518463810933], [1.72881174E12, 538.2110389610391], [1.72880904E12, 460.3187414500684], [1.72880784E12, 418.6084788029922], [1.72881006E12, 466.59463276836175], [1.72881228E12, 510.8409321175282], [1.7288145E12, 632.8525519848774], [1.72880766E12, 439.9491978609627], [1.72881024E12, 466.64951321279574], [1.72881348E12, 478.76151761517605], [1.72881126E12, 460.0046583850933], [1.72880664E12, 424.83418367346945], [1.7288058E12, 398.9068627450981], [1.7288121E12, 494.49114173228315], [1.72880802E12, 434.38196286472146], [1.72880988E12, 465.95384615384603], [1.72881432E12, 576.6787564766827], [1.72880682E12, 478.7441860465113], [1.72880886E12, 455.9986168741353], [1.72881108E12, 456.3296551724134], [1.7288133E12, 511.07076923076977], [1.72881E12, 471.4752475247525], [1.72881324E12, 462.82003710575185], [1.72880658E12, 441.3315508021391], [1.72881102E12, 457.67219917012443], [1.72881444E12, 614.1131554737809], [1.72880898E12, 444.87667560321677], [1.7288112E12, 472.0266853932583], [1.72881222E12, 527.5189473684214], [1.7288076E12, 432.67958656330734], [1.72880676E12, 439.87335092348303], [1.72880862E12, 442.1653225806452], [1.72881084E12, 460.7891816920938], [1.72881306E12, 506.813387423935], [1.72881528E12, 470.9362101313319], [1.7288088E12, 449.0568783068786], [1.72880778E12, 438.08707124010533], [1.72880982E12, 446.67607526881704], [1.72881204E12, 503.2404426559354], [1.72881426E12, 621.7056074766354], [1.72880694E12, 426.6108247422679], [1.72880592E12, 426.80612244897986], [1.72881036E12, 468.1906779661017], [1.72881258E12, 490.64214711729596], [1.7288148E12, 612.6372007366475], [1.72880832E12, 477.8230337078653], [1.72880574E12, 466.057142857143], [1.72880796E12, 393.4761904761903], [1.72880934E12, 440.4664914586071], [1.72881156E12, 509.703893442623], [1.72881378E12, 584.0496948561461], [1.72881018E12, 430.56400506970846], [1.7288124E12, 485.7776708373442], [1.72881342E12, 509.077160493827], [1.7288061E12, 398.35564853556485], [1.72880814E12, 460.1561643835617], [1.72881138E12, 480.55544933078414], [1.72881462E12, 653.0733855185908], [1.7288136E12, 609.976491862568], [1.72880916E12, 429.5460440985736], [1.72880712E12, 452.26612903225816]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72881528E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.72880574E12, "maxY": 4.9E-324, "series": [{"data": [[1.7288079E12, 0.0], [1.72881354E12, 0.0], [1.72880688E12, 0.0], [1.7288091E12, 0.0], [1.72881132E12, 0.0], [1.72880928E12, 0.0], [1.7288067E12, 0.0], [1.72881252E12, 0.0], [1.72881474E12, 0.0], [1.7288103E12, 0.0], [1.72881114E12, 0.0], [1.72881438E12, 0.0], [1.72880706E12, 0.0], [1.72880892E12, 0.0], [1.72881336E12, 0.0], [1.72881234E12, 0.0], [1.72881012E12, 0.0], [1.72880586E12, 0.0], [1.72880808E12, 0.0], [1.72881456E12, 0.0], [1.72881066E12, 0.0], [1.72880724E12, 0.0], [1.7288139E12, 0.0], [1.72880844E12, 0.0], [1.72881288E12, 0.0], [1.72880604E12, 0.0], [1.72881186E12, 0.0], [1.7288151E12, 0.0], [1.72880964E12, 0.0], [1.72881408E12, 0.0], [1.72880742E12, 0.0], [1.72881372E12, 0.0], [1.72880826E12, 0.0], [1.72881048E12, 0.0], [1.7288115E12, 0.0], [1.7288064E12, 0.0], [1.72880622E12, 0.0], [1.72880946E12, 0.0], [1.72881168E12, 0.0], [1.7288127E12, 0.0], [1.72881492E12, 0.0], [1.72881162E12, 0.0], [1.72881486E12, 0.0], [1.72880598E12, 0.0], [1.7288082E12, 0.0], [1.7288094E12, 0.0], [1.72881384E12, 0.0], [1.728807E12, 0.0], [1.72880838E12, 0.0], [1.7288106E12, 0.0], [1.72881282E12, 0.0], [1.72881504E12, 0.0], [1.72881144E12, 0.0], [1.72880922E12, 0.0], [1.72881246E12, 0.0], [1.72881468E12, 0.0], [1.72880736E12, 0.0], [1.72880718E12, 0.0], [1.72881042E12, 0.0], [1.72881366E12, 0.0], [1.72881264E12, 0.0], [1.72880616E12, 0.0], [1.7288142E12, 0.0], [1.72880874E12, 0.0], [1.72881096E12, 0.0], [1.72880754E12, 0.0], [1.72881198E12, 0.0], [1.72880994E12, 0.0], [1.72881216E12, 0.0], [1.72881318E12, 0.0], [1.72880634E12, 0.0], [1.72880856E12, 0.0], [1.72880772E12, 0.0], [1.72880958E12, 0.0], [1.7288118E12, 0.0], [1.72881402E12, 0.0], [1.72880976E12, 0.0], [1.728813E12, 0.0], [1.72880652E12, 0.0], [1.72881078E12, 0.0], [1.72881522E12, 0.0], [1.7288097E12, 0.0], [1.72881192E12, 0.0], [1.72880628E12, 0.0], [1.72881294E12, 0.0], [1.72881516E12, 0.0], [1.7288109E12, 0.0], [1.72881414E12, 0.0], [1.7288073E12, 0.0], [1.72880868E12, 0.0], [1.72881312E12, 0.0], [1.72880952E12, 0.0], [1.72880646E12, 0.0], [1.72881276E12, 0.0], [1.72881054E12, 0.0], [1.72881498E12, 0.0], [1.72881396E12, 0.0], [1.72880748E12, 0.0], [1.7288085E12, 0.0], [1.72881072E12, 0.0], [1.72881174E12, 0.0], [1.72880904E12, 0.0], [1.72880784E12, 0.0], [1.72881006E12, 0.0], [1.72881228E12, 0.0], [1.7288145E12, 0.0], [1.72880766E12, 0.0], [1.72881024E12, 0.0], [1.72881348E12, 0.0], [1.72881126E12, 0.0], [1.72880664E12, 0.0], [1.7288058E12, 0.0], [1.7288121E12, 0.0], [1.72880802E12, 0.0], [1.72880988E12, 0.0], [1.72881432E12, 0.0], [1.72880682E12, 0.0], [1.72880886E12, 0.0], [1.72881108E12, 0.0], [1.7288133E12, 0.0], [1.72881E12, 0.0], [1.72881324E12, 0.0], [1.72880658E12, 0.0], [1.72881102E12, 0.0], [1.72881444E12, 0.0], [1.72880898E12, 0.0], [1.7288112E12, 0.0], [1.72881222E12, 0.0], [1.7288076E12, 0.0], [1.72880676E12, 0.0], [1.72880862E12, 0.0], [1.72881084E12, 0.0], [1.72881306E12, 0.0], [1.72881528E12, 0.0], [1.7288088E12, 0.0], [1.72880778E12, 0.0], [1.72880982E12, 0.0], [1.72881204E12, 0.0], [1.72881426E12, 0.0], [1.72880694E12, 0.0], [1.72880592E12, 0.0], [1.72881036E12, 0.0], [1.72881258E12, 0.0], [1.7288148E12, 0.0], [1.72880832E12, 0.0], [1.72880574E12, 0.0], [1.72880796E12, 0.0], [1.72880934E12, 0.0], [1.72881156E12, 0.0], [1.72881378E12, 0.0], [1.72881018E12, 0.0], [1.7288124E12, 0.0], [1.72881342E12, 0.0], [1.7288061E12, 0.0], [1.72880814E12, 0.0], [1.72881138E12, 0.0], [1.72881462E12, 0.0], [1.7288136E12, 0.0], [1.72880916E12, 0.0], [1.72880712E12, 0.0]], "isOverall": false, "label": "getmap", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72881528E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 33.0, "minX": 1.72880574E12, "maxY": 4216.0, "series": [{"data": [[1.7288079E12, 2184.0], [1.72881354E12, 3573.0], [1.72880688E12, 2242.0], [1.7288091E12, 2665.0], [1.72881132E12, 2473.0], [1.72880928E12, 2477.0], [1.7288067E12, 2705.0], [1.72881252E12, 2936.0], [1.72881474E12, 4048.0], [1.7288103E12, 2669.0], [1.72881114E12, 2669.0], [1.72881438E12, 3890.0], [1.72880706E12, 2682.0], [1.72880892E12, 2441.0], [1.72881336E12, 3000.0], [1.72881234E12, 2709.0], [1.72881012E12, 2561.0], [1.72880586E12, 2023.0], [1.72880808E12, 2564.0], [1.72881456E12, 3858.0], [1.72881066E12, 2532.0], [1.72880724E12, 2502.0], [1.7288139E12, 3679.0], [1.72880844E12, 2143.0], [1.72881288E12, 3065.0], [1.72880604E12, 2102.0], [1.72881186E12, 3172.0], [1.7288151E12, 4216.0], [1.72880964E12, 2646.0], [1.72881408E12, 3775.0], [1.72880742E12, 2312.0], [1.72881372E12, 3558.0], [1.72880826E12, 2393.0], [1.72881048E12, 2605.0], [1.7288115E12, 2446.0], [1.7288064E12, 2543.0], [1.72880622E12, 1996.0], [1.72880946E12, 2565.0], [1.72881168E12, 2956.0], [1.7288127E12, 2719.0], [1.72881492E12, 3671.0], [1.72881162E12, 3439.0], [1.72881486E12, 3585.0], [1.72880598E12, 2043.0], [1.7288082E12, 2081.0], [1.7288094E12, 2337.0], [1.72881384E12, 3536.0], [1.728807E12, 1989.0], [1.72880838E12, 2209.0], [1.7288106E12, 2530.0], [1.72881282E12, 3156.0], [1.72881504E12, 3355.0], [1.72881144E12, 3333.0], [1.72880922E12, 2725.0], [1.72881246E12, 3203.0], [1.72881468E12, 3328.0], [1.72880736E12, 2388.0], [1.72880718E12, 2331.0], [1.72881042E12, 2463.0], [1.72881366E12, 3467.0], [1.72881264E12, 2650.0], [1.72880616E12, 2184.0], [1.7288142E12, 4022.0], [1.72880874E12, 2627.0], [1.72881096E12, 2715.0], [1.72880754E12, 2073.0], [1.72881198E12, 2846.0], [1.72880994E12, 2672.0], [1.72881216E12, 2771.0], [1.72881318E12, 3026.0], [1.72880634E12, 2174.0], [1.72880856E12, 2520.0], [1.72880772E12, 1887.0], [1.72880958E12, 2641.0], [1.7288118E12, 3273.0], [1.72881402E12, 3414.0], [1.72880976E12, 2422.0], [1.728813E12, 2878.0], [1.72880652E12, 2320.0], [1.72881078E12, 2946.0], [1.72881522E12, 3676.0], [1.7288097E12, 2466.0], [1.72881192E12, 3049.0], [1.72880628E12, 2413.0], [1.72881294E12, 3140.0], [1.72881516E12, 3834.0], [1.7288109E12, 2372.0], [1.72881414E12, 4160.0], [1.7288073E12, 2372.0], [1.72880868E12, 2240.0], [1.72881312E12, 2891.0], [1.72880952E12, 2621.0], [1.72880646E12, 2190.0], [1.72881276E12, 3100.0], [1.72881054E12, 2558.0], [1.72881498E12, 3415.0], [1.72881396E12, 4059.0], [1.72880748E12, 2129.0], [1.7288085E12, 2357.0], [1.72881072E12, 2360.0], [1.72881174E12, 2758.0], [1.72880904E12, 2513.0], [1.72880784E12, 2050.0], [1.72881006E12, 2317.0], [1.72881228E12, 2812.0], [1.7288145E12, 3230.0], [1.72880766E12, 2594.0], [1.72881024E12, 2663.0], [1.72881348E12, 2936.0], [1.72881126E12, 2622.0], [1.72880664E12, 2000.0], [1.7288058E12, 2135.0], [1.7288121E12, 2675.0], [1.72880802E12, 2037.0], [1.72880988E12, 2444.0], [1.72881432E12, 3332.0], [1.72880682E12, 2097.0], [1.72880886E12, 2325.0], [1.72881108E12, 2526.0], [1.7288133E12, 3122.0], [1.72881E12, 2369.0], [1.72881324E12, 2865.0], [1.72880658E12, 2628.0], [1.72881102E12, 2941.0], [1.72881444E12, 3462.0], [1.72880898E12, 2667.0], [1.7288112E12, 2237.0], [1.72881222E12, 3405.0], [1.7288076E12, 2482.0], [1.72880676E12, 2495.0], [1.72880862E12, 2224.0], [1.72881084E12, 2611.0], [1.72881306E12, 2692.0], [1.72881528E12, 2470.0], [1.7288088E12, 2271.0], [1.72880778E12, 2231.0], [1.72880982E12, 2468.0], [1.72881204E12, 2878.0], [1.72881426E12, 3653.0], [1.72880694E12, 2247.0], [1.72880592E12, 2538.0], [1.72881036E12, 2366.0], [1.72881258E12, 2819.0], [1.7288148E12, 4151.0], [1.72880832E12, 2625.0], [1.72880574E12, 2147.0], [1.72880796E12, 2072.0], [1.72880934E12, 2737.0], [1.72881156E12, 2770.0], [1.72881378E12, 3582.0], [1.72881018E12, 2817.0], [1.7288124E12, 2890.0], [1.72881342E12, 2825.0], [1.7288061E12, 2324.0], [1.72880814E12, 2197.0], [1.72881138E12, 2923.0], [1.72881462E12, 3677.0], [1.7288136E12, 3494.0], [1.72880916E12, 2582.0], [1.72880712E12, 2659.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7288079E12, 1390.5000000000005], [1.72881354E12, 1752.5], [1.72880688E12, 1374.9], [1.7288091E12, 1405.0], [1.72881132E12, 1405.0], [1.72880928E12, 1333.0], [1.7288067E12, 1389.3000000000002], [1.72881252E12, 1499.7000000000007], [1.72881474E12, 1906.8], [1.7288103E12, 1438.7999999999997], [1.72881114E12, 1390.0000000000005], [1.72881438E12, 1873.4], [1.72880706E12, 1351.0], [1.72880892E12, 1412.0], [1.72881336E12, 1590.9], [1.72881234E12, 1570.9], [1.72881012E12, 1430.3999999999996], [1.72880586E12, 1327.0], [1.72880808E12, 1395.6], [1.72881456E12, 1891.000000000001], [1.72881066E12, 1339.2000000000003], [1.72880724E12, 1268.4], [1.7288139E12, 1923.5], [1.72880844E12, 1325.6000000000001], [1.72881288E12, 1475.8000000000002], [1.72880604E12, 1315.5], [1.72881186E12, 1563.5], [1.7288151E12, 2152.6], [1.72880964E12, 1431.6000000000008], [1.72881408E12, 1903.5], [1.72880742E12, 1303.4], [1.72881372E12, 1867.6999999999998], [1.72880826E12, 1304.2000000000003], [1.72881048E12, 1364.6000000000001], [1.7288115E12, 1512.4], [1.7288064E12, 1375.0], [1.72880622E12, 1331.5], [1.72880946E12, 1489.8000000000004], [1.72881168E12, 1625.6], [1.7288127E12, 1552.1], [1.72881492E12, 1986.4], [1.72881162E12, 1582.5], [1.72881486E12, 1922.8999999999996], [1.72880598E12, 1347.1999999999998], [1.7288082E12, 1440.8000000000004], [1.7288094E12, 1364.1], [1.72881384E12, 1863.2], [1.728807E12, 1359.2], [1.72880838E12, 1351.2], [1.7288106E12, 1455.5], [1.72881282E12, 1564.8000000000002], [1.72881504E12, 1901.2000000000003], [1.72881144E12, 1602.4], [1.72880922E12, 1444.0], [1.72881246E12, 1675.6], [1.72881468E12, 1928.9], [1.72880736E12, 1312.7], [1.72880718E12, 1350.2000000000007], [1.72881042E12, 1359.4], [1.72881366E12, 1928.4], [1.72881264E12, 1574.6000000000001], [1.72880616E12, 1332.0], [1.7288142E12, 1828.1], [1.72880874E12, 1457.5999999999995], [1.72881096E12, 1398.0], [1.72880754E12, 1405.0], [1.72881198E12, 1564.4], [1.72880994E12, 1378.3000000000002], [1.72881216E12, 1573.0], [1.72881318E12, 1555.2], [1.72880634E12, 1358.6000000000004], [1.72880856E12, 1265.8000000000002], [1.72880772E12, 1332.6999999999998], [1.72880958E12, 1469.0], [1.7288118E12, 1573.8000000000004], [1.72881402E12, 1913.0], [1.72880976E12, 1357.7], [1.728813E12, 1590.2000000000003], [1.72880652E12, 1319.5], [1.72881078E12, 1451.0], [1.72881522E12, 1796.8000000000018], [1.7288097E12, 1478.4999999999995], [1.72881192E12, 1560.1999999999998], [1.72880628E12, 1345.0], [1.72881294E12, 1532.7], [1.72881516E12, 1901.5], [1.7288109E12, 1444.9], [1.72881414E12, 1904.2000000000003], [1.7288073E12, 1353.0], [1.72880868E12, 1439.4000000000003], [1.72881312E12, 1572.6000000000001], [1.72880952E12, 1367.8000000000002], [1.72880646E12, 1367.8], [1.72881276E12, 1633.6000000000004], [1.72881054E12, 1386.5], [1.72881498E12, 1895.0], [1.72881396E12, 1952.0], [1.72880748E12, 1364.6], [1.7288085E12, 1289.2000000000003], [1.72881072E12, 1520.2000000000007], [1.72881174E12, 1643.5], [1.72880904E12, 1431.8000000000002], [1.72880784E12, 1280.4], [1.72881006E12, 1414.3000000000002], [1.72881228E12, 1566.8000000000002], [1.7288145E12, 1885.1], [1.72880766E12, 1425.0], [1.72881024E12, 1428.0], [1.72881348E12, 1471.1000000000004], [1.72881126E12, 1420.0], [1.72880664E12, 1310.5], [1.7288058E12, 1264.0], [1.7288121E12, 1552.9], [1.72880802E12, 1323.5999999999995], [1.72880988E12, 1391.1999999999998], [1.72881432E12, 1864.2000000000003], [1.72880682E12, 1468.5], [1.72880886E12, 1439.6], [1.72881108E12, 1477.0], [1.7288133E12, 1556.8], [1.72881E12, 1430.6000000000004], [1.72881324E12, 1462.0], [1.72880658E12, 1377.0], [1.72881102E12, 1421.2], [1.72881444E12, 1910.2000000000003], [1.72880898E12, 1408.6000000000001], [1.7288112E12, 1416.4], [1.72881222E12, 1677.6], [1.7288076E12, 1325.8], [1.72880676E12, 1378.0], [1.72880862E12, 1381.6999999999998], [1.72881084E12, 1448.8000000000004], [1.72881306E12, 1545.3000000000002], [1.72881528E12, 1445.8000000000002], [1.7288088E12, 1397.6000000000001], [1.72880778E12, 1381.0], [1.72880982E12, 1376.5], [1.72881204E12, 1600.5], [1.72881426E12, 2019.6], [1.72880694E12, 1408.0000000000002], [1.72880592E12, 1323.3000000000002], [1.72881036E12, 1514.3000000000006], [1.72881258E12, 1573.0], [1.7288148E12, 1938.0], [1.72880832E12, 1318.8000000000002], [1.72880574E12, 1616.6], [1.72880796E12, 1310.9], [1.72880934E12, 1386.6000000000001], [1.72881156E12, 1559.5000000000005], [1.72881378E12, 1865.6000000000001], [1.72881018E12, 1360.0], [1.7288124E12, 1555.0], [1.72881342E12, 1557.7000000000005], [1.7288061E12, 1313.0], [1.72880814E12, 1433.2000000000007], [1.72881138E12, 1545.6000000000001], [1.72881462E12, 2012.4], [1.7288136E12, 1906.7000000000007], [1.72880916E12, 1394.8000000000004], [1.72880712E12, 1386.1999999999998]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7288079E12, 2081.3100000000004], [1.72881354E12, 2678.950000000002], [1.72880688E12, 2057.3099999999995], [1.7288091E12, 2118.4999999999995], [1.72881132E12, 2077.0], [1.72880928E12, 1993.1400000000024], [1.7288067E12, 1927.58], [1.72881252E12, 2245.7200000000003], [1.72881474E12, 3178.829999999997], [1.7288103E12, 2065.7199999999993], [1.72881114E12, 2115.12], [1.72881438E12, 2711.44], [1.72880706E12, 2038.4], [1.72880892E12, 2054.5], [1.72881336E12, 2446.4299999999994], [1.72881234E12, 2361.91], [1.72881012E12, 2086.1600000000008], [1.72880586E12, 1935.6000000000008], [1.72880808E12, 2220.3199999999997], [1.72881456E12, 2889.4000000000005], [1.72881066E12, 2140.500000000001], [1.72880724E12, 1885.4], [1.7288139E12, 2914.299999999998], [1.72880844E12, 1950.820000000001], [1.72881288E12, 2345.2400000000002], [1.72880604E12, 2090.45], [1.72881186E12, 2444.5], [1.7288151E12, 3076.8], [1.72880964E12, 2091.790000000002], [1.72881408E12, 2880.05], [1.72880742E12, 1765.96], [1.72881372E12, 2808.010000000001], [1.72880826E12, 1889.7400000000002], [1.72881048E12, 2120.3199999999997], [1.7288115E12, 2183.94], [1.7288064E12, 1966.0], [1.72880622E12, 1941.8500000000001], [1.72880946E12, 2128.2799999999997], [1.72881168E12, 2376.0400000000027], [1.7288127E12, 2235.1999999999994], [1.72881492E12, 2943.88], [1.72881162E12, 2429.2000000000003], [1.72881486E12, 2982.5599999999977], [1.72880598E12, 1965.600000000001], [1.7288082E12, 1990.92], [1.7288094E12, 2012.66], [1.72881384E12, 2702.7200000000003], [1.728807E12, 1734.96], [1.72880838E12, 1999.2799999999997], [1.7288106E12, 2027.400000000001], [1.72881282E12, 2292.3400000000015], [1.72881504E12, 2863.7599999999998], [1.72881144E12, 2352.3699999999985], [1.72880922E12, 2147.3999999999996], [1.72881246E12, 2380.76], [1.72881468E12, 2675.19], [1.72880736E12, 1882.949999999999], [1.72880718E12, 2084.9599999999978], [1.72881042E12, 2146.920000000001], [1.72881366E12, 2934.4200000000005], [1.72881264E12, 2271.57], [1.72880616E12, 1873.399999999999], [1.7288142E12, 2897.1100000000015], [1.72880874E12, 2280.059999999997], [1.72881096E12, 2090.640000000001], [1.72880754E12, 1994.1999999999994], [1.72881198E12, 2232.7799999999997], [1.72880994E12, 2308.4300000000017], [1.72881216E12, 2446.5], [1.72881318E12, 2318.5199999999986], [1.72880634E12, 1902.09], [1.72880856E12, 2013.9399999999996], [1.72880772E12, 1823.7499999999998], [1.72880958E12, 2186.0], [1.7288118E12, 2226.96], [1.72881402E12, 2769.249999999994], [1.72880976E12, 1974.4799999999982], [1.728813E12, 2402.2799999999993], [1.72880652E12, 2008.549999999993], [1.72881078E12, 2192.2200000000003], [1.72881522E12, 2692.1599999999994], [1.7288097E12, 2167.250000000001], [1.72881192E12, 2289.6999999999975], [1.72880628E12, 1937.25], [1.72881294E12, 2189.77], [1.72881516E12, 2906.800000000001], [1.7288109E12, 2142.7999999999997], [1.72881414E12, 2998.8399999999992], [1.7288073E12, 2284.800000000002], [1.72880868E12, 1942.3000000000002], [1.72881312E12, 2339.3200000000015], [1.72880952E12, 2037.8400000000006], [1.72880646E12, 2050.879999999999], [1.72881276E12, 2432.339999999998], [1.72881054E12, 2094.75], [1.72881498E12, 2690.819999999999], [1.72881396E12, 3099.799999999993], [1.72880748E12, 1946.4399999999964], [1.7288085E12, 1872.1400000000006], [1.72881072E12, 2062.32], [1.72881174E12, 2273.5], [1.72880904E12, 2054.4399999999982], [1.72880784E12, 1907.8000000000002], [1.72881006E12, 2176.5599999999995], [1.72881228E12, 2279.12], [1.7288145E12, 2985.4700000000057], [1.72880766E12, 2146.0], [1.72881024E12, 2124.5999999999995], [1.72881348E12, 2204.4900000000016], [1.72881126E12, 2053.6499999999996], [1.72880664E12, 1918.9399999999996], [1.7288058E12, 1960.4999999999982], [1.7288121E12, 2342.5600000000013], [1.72880802E12, 1867.3399999999986], [1.72880988E12, 2132.2800000000007], [1.72881432E12, 2953.6700000000073], [1.72880682E12, 1851.2000000000003], [1.72880886E12, 1958.52], [1.72881108E12, 2086.9000000000005], [1.7288133E12, 2463.6400000000003], [1.72881E12, 2012.0], [1.72881324E12, 2085.940000000004], [1.72880658E12, 2072.0], [1.72881102E12, 2228.3599999999997], [1.72881444E12, 2856.839999999994], [1.72880898E12, 2125.079999999999], [1.7288112E12, 1913.0500000000002], [1.72881222E12, 2480.6200000000003], [1.7288076E12, 2146.16], [1.72880676E12, 2110.399999999998], [1.72880862E12, 1983.8699999999997], [1.72881084E12, 2073.739999999999], [1.72881306E12, 2388.21], [1.72881528E12, 2013.0799999999988], [1.7288088E12, 2059.1599999999994], [1.72880778E12, 2110.0], [1.72880982E12, 2042.55], [1.72881204E12, 2320.249999999999], [1.72881426E12, 2921.6399999999994], [1.72880694E12, 1968.4600000000012], [1.72880592E12, 2084.0400000000004], [1.72881036E12, 2164.5699999999993], [1.72881258E12, 2450.599999999999], [1.7288148E12, 3109.6499999999996], [1.72880832E12, 1984.1300000000012], [1.72880574E12, 2147.0], [1.72880796E12, 1834.6400000000003], [1.72880934E12, 2043.9599999999998], [1.72881156E12, 2238.92], [1.72881378E12, 2821.1199999999994], [1.72881018E12, 1933.7000000000003], [1.7288124E12, 2306.9999999999995], [1.72881342E12, 2313.6399999999994], [1.7288061E12, 1889.1999999999991], [1.72880814E12, 1986.8599999999992], [1.72881138E12, 2384.7799999999993], [1.72881462E12, 3049.9399999999996], [1.7288136E12, 2733.51], [1.72880916E12, 2173.399999999999], [1.72880712E12, 2400.399999999996]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7288079E12, 1680.7000000000007], [1.72881354E12, 2044.25], [1.72880688E12, 1575.9999999999995], [1.7288091E12, 1692.0], [1.72881132E12, 1630.5], [1.72880928E12, 1557.9499999999998], [1.7288067E12, 1561.8500000000001], [1.72881252E12, 1783.0499999999997], [1.72881474E12, 2288.0999999999985], [1.7288103E12, 1657.1999999999996], [1.72881114E12, 1584.7999999999997], [1.72881438E12, 2201.2000000000007], [1.72880706E12, 1524.0], [1.72880892E12, 1703.0], [1.72881336E12, 1971.1], [1.72881234E12, 1818.0], [1.72881012E12, 1715.3999999999996], [1.72880586E12, 1525.5], [1.72880808E12, 1613.799999999999], [1.72881456E12, 2222.199999999999], [1.72881066E12, 1592.5], [1.72880724E12, 1509.8999999999996], [1.7288139E12, 2263.5], [1.72880844E12, 1581.0], [1.72881288E12, 1742.5999999999997], [1.72880604E12, 1527.5], [1.72881186E12, 1772.5], [1.7288151E12, 2503.7999999999984], [1.72880964E12, 1635.75], [1.72881408E12, 2213.5], [1.72880742E12, 1463.9999999999998], [1.72881372E12, 2092.45], [1.72880826E12, 1535.3999999999996], [1.72881048E12, 1679.8999999999999], [1.7288115E12, 1784.6999999999998], [1.7288064E12, 1613.5], [1.72880622E12, 1527.8999999999996], [1.72880946E12, 1743.4], [1.72881168E12, 1865.8], [1.7288127E12, 1794.9499999999996], [1.72881492E12, 2322.0], [1.72881162E12, 1839.3999999999996], [1.72881486E12, 2225.0], [1.72880598E12, 1529.3999999999996], [1.7288082E12, 1639.3], [1.7288094E12, 1562.1], [1.72881384E12, 2216.0], [1.728807E12, 1526.8999999999999], [1.72880838E12, 1638.6], [1.7288106E12, 1696.25], [1.72881282E12, 1796.5999999999995], [1.72881504E12, 2224.1999999999985], [1.72881144E12, 1851.5499999999997], [1.72880922E12, 1643.0], [1.72881246E12, 1959.8999999999999], [1.72881468E12, 2261.5000000000005], [1.72880736E12, 1492.0], [1.72880718E12, 1600.2999999999997], [1.72881042E12, 1556.4], [1.72881366E12, 2326.599999999998], [1.72881264E12, 1811.9499999999998], [1.72880616E12, 1542.25], [1.7288142E12, 2095.75], [1.72880874E12, 1672.099999999999], [1.72881096E12, 1619.3999999999992], [1.72880754E12, 1549.0], [1.72881198E12, 1814.9], [1.72880994E12, 1593.85], [1.72881216E12, 1828.75], [1.72881318E12, 1831.199999999999], [1.72880634E12, 1490.5], [1.72880856E12, 1481.3], [1.72880772E12, 1481.2499999999995], [1.72880958E12, 1752.1499999999994], [1.7288118E12, 1757.6], [1.72881402E12, 2236.75], [1.72880976E12, 1572.3999999999978], [1.728813E12, 1890.4], [1.72880652E12, 1529.25], [1.72881078E12, 1685.199999999999], [1.72881522E12, 2096.3999999999996], [1.7288097E12, 1739.8999999999999], [1.72881192E12, 1792.8999999999999], [1.72880628E12, 1594.0], [1.72881294E12, 1758.2499999999995], [1.72881516E12, 2287.8], [1.7288109E12, 1721.4499999999998], [1.72881414E12, 2222.7], [1.7288073E12, 1583.0], [1.72880868E12, 1670.6999999999991], [1.72881312E12, 1889.9999999999998], [1.72880952E12, 1598.7999999999997], [1.72880646E12, 1642.7999999999988], [1.72881276E12, 1921.7999999999997], [1.72881054E12, 1633.25], [1.72881498E12, 2191.05], [1.72881396E12, 2302.5], [1.72880748E12, 1528.7999999999995], [1.7288085E12, 1488.3999999999999], [1.72881072E12, 1722.2000000000003], [1.72881174E12, 1905.75], [1.72880904E12, 1639.9999999999998], [1.72880784E12, 1532.999999999999], [1.72881006E12, 1698.7499999999998], [1.72881228E12, 1838.1999999999998], [1.7288145E12, 2221.2999999999997], [1.72880766E12, 1675.75], [1.72881024E12, 1638.0], [1.72881348E12, 1729.4499999999996], [1.72881126E12, 1621.5], [1.72880664E12, 1578.0], [1.7288058E12, 1442.25], [1.7288121E12, 1794.3], [1.72880802E12, 1526.5999999999988], [1.72880988E12, 1633.3999999999999], [1.72881432E12, 2225.05], [1.72880682E12, 1655.5], [1.72880886E12, 1651.6], [1.72881108E12, 1660.4999999999995], [1.7288133E12, 1851.7999999999997], [1.72881E12, 1678.6000000000001], [1.72881324E12, 1707.2499999999998], [1.72880658E12, 1608.25], [1.72881102E12, 1657.8], [1.72881444E12, 2259.399999999999], [1.72880898E12, 1632.9499999999998], [1.7288112E12, 1615.4500000000003], [1.72881222E12, 1923.0499999999993], [1.7288076E12, 1528.3999999999999], [1.72880676E12, 1650.0], [1.72880862E12, 1706.2999999999993], [1.72881084E12, 1636.2999999999997], [1.72881306E12, 1847.1999999999998], [1.72881528E12, 1633.3], [1.7288088E12, 1699.4499999999998], [1.72880778E12, 1521.0], [1.72880982E12, 1635.75], [1.72881204E12, 1886.25], [1.72881426E12, 2238.8999999999996], [1.72880694E12, 1571.5499999999981], [1.72880592E12, 1623.4499999999998], [1.72881036E12, 1807.5999999999995], [1.72881258E12, 1854.7999999999997], [1.7288148E12, 2280.8499999999985], [1.72880832E12, 1492.4499999999998], [1.72880574E12, 1917.1000000000004], [1.72880796E12, 1450.0], [1.72880934E12, 1582.9], [1.72881156E12, 1785.15], [1.72881378E12, 2264.599999999996], [1.72881018E12, 1538.5], [1.7288124E12, 1776.0], [1.72881342E12, 1816.35], [1.7288061E12, 1443.0], [1.72880814E12, 1569.4999999999995], [1.72881138E12, 1892.1499999999996], [1.72881462E12, 2373.7499999999986], [1.7288136E12, 2222.5499999999993], [1.72880916E12, 1658.0], [1.72880712E12, 1515.6999999999998]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.7288079E12, 52.0], [1.72881354E12, 46.0], [1.72880688E12, 55.0], [1.7288091E12, 53.0], [1.72881132E12, 58.0], [1.72880928E12, 42.0], [1.7288067E12, 58.0], [1.72881252E12, 54.0], [1.72881474E12, 53.0], [1.7288103E12, 59.0], [1.72881114E12, 50.0], [1.72881438E12, 49.0], [1.72880706E12, 57.0], [1.72880892E12, 51.0], [1.72881336E12, 48.0], [1.72881234E12, 48.0], [1.72881012E12, 45.0], [1.72880586E12, 63.0], [1.72880808E12, 60.0], [1.72881456E12, 51.0], [1.72881066E12, 54.0], [1.72880724E12, 53.0], [1.7288139E12, 53.0], [1.72880844E12, 50.0], [1.72881288E12, 57.0], [1.72880604E12, 61.0], [1.72881186E12, 53.0], [1.7288151E12, 59.0], [1.72880964E12, 53.0], [1.72881408E12, 52.0], [1.72880742E12, 55.0], [1.72881372E12, 54.0], [1.72880826E12, 50.0], [1.72881048E12, 56.0], [1.7288115E12, 49.0], [1.7288064E12, 59.0], [1.72880622E12, 60.0], [1.72880946E12, 40.0], [1.72881168E12, 53.0], [1.7288127E12, 51.0], [1.72881492E12, 54.0], [1.72881162E12, 53.0], [1.72881486E12, 48.0], [1.72880598E12, 55.0], [1.7288082E12, 52.0], [1.7288094E12, 56.0], [1.72881384E12, 58.0], [1.728807E12, 59.0], [1.72880838E12, 52.0], [1.7288106E12, 52.0], [1.72881282E12, 49.0], [1.72881504E12, 47.0], [1.72881144E12, 52.0], [1.72880922E12, 51.0], [1.72881246E12, 51.0], [1.72881468E12, 56.0], [1.72880736E12, 54.0], [1.72880718E12, 58.0], [1.72881042E12, 48.0], [1.72881366E12, 46.0], [1.72881264E12, 56.0], [1.72880616E12, 50.0], [1.7288142E12, 46.0], [1.72880874E12, 52.0], [1.72881096E12, 53.0], [1.72880754E12, 58.0], [1.72881198E12, 53.0], [1.72880994E12, 53.0], [1.72881216E12, 47.0], [1.72881318E12, 49.0], [1.72880634E12, 52.0], [1.72880856E12, 62.0], [1.72880772E12, 52.0], [1.72880958E12, 48.0], [1.7288118E12, 50.0], [1.72881402E12, 55.0], [1.72880976E12, 44.0], [1.728813E12, 41.0], [1.72880652E12, 51.0], [1.72881078E12, 55.0], [1.72881522E12, 49.0], [1.7288097E12, 51.0], [1.72881192E12, 44.0], [1.72880628E12, 46.0], [1.72881294E12, 50.0], [1.72881516E12, 49.0], [1.7288109E12, 52.0], [1.72881414E12, 44.0], [1.7288073E12, 50.0], [1.72880868E12, 54.0], [1.72881312E12, 56.0], [1.72880952E12, 37.0], [1.72880646E12, 59.0], [1.72881276E12, 56.0], [1.72881054E12, 49.0], [1.72881498E12, 55.0], [1.72881396E12, 54.0], [1.72880748E12, 54.0], [1.7288085E12, 59.0], [1.72881072E12, 54.0], [1.72881174E12, 46.0], [1.72880904E12, 47.0], [1.72880784E12, 56.0], [1.72881006E12, 33.0], [1.72881228E12, 47.0], [1.7288145E12, 54.0], [1.72880766E12, 53.0], [1.72881024E12, 52.0], [1.72881348E12, 52.0], [1.72881126E12, 47.0], [1.72880664E12, 60.0], [1.7288058E12, 54.0], [1.7288121E12, 55.0], [1.72880802E12, 53.0], [1.72880988E12, 45.0], [1.72881432E12, 54.0], [1.72880682E12, 55.0], [1.72880886E12, 51.0], [1.72881108E12, 51.0], [1.7288133E12, 52.0], [1.72881E12, 49.0], [1.72881324E12, 45.0], [1.72880658E12, 49.0], [1.72881102E12, 56.0], [1.72881444E12, 58.0], [1.72880898E12, 36.0], [1.7288112E12, 43.0], [1.72881222E12, 58.0], [1.7288076E12, 54.0], [1.72880676E12, 52.0], [1.72880862E12, 55.0], [1.72881084E12, 40.0], [1.72881306E12, 54.0], [1.72881528E12, 54.0], [1.7288088E12, 39.0], [1.72880778E12, 58.0], [1.72880982E12, 53.0], [1.72881204E12, 40.0], [1.72881426E12, 55.0], [1.72880694E12, 65.0], [1.72880592E12, 54.0], [1.72881036E12, 51.0], [1.72881258E12, 54.0], [1.7288148E12, 48.0], [1.72880832E12, 62.0], [1.72880574E12, 69.0], [1.72880796E12, 58.0], [1.72880934E12, 54.0], [1.72881156E12, 51.0], [1.72881378E12, 52.0], [1.72881018E12, 50.0], [1.7288124E12, 52.0], [1.72881342E12, 54.0], [1.7288061E12, 52.0], [1.72880814E12, 50.0], [1.72881138E12, 53.0], [1.72881462E12, 49.0], [1.7288136E12, 44.0], [1.72880916E12, 48.0], [1.72880712E12, 60.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7288079E12, 627.5], [1.72881354E12, 586.5], [1.72880688E12, 728.0], [1.7288091E12, 634.0], [1.72881132E12, 494.0], [1.72880928E12, 542.0], [1.7288067E12, 615.5], [1.72881252E12, 541.5], [1.72881474E12, 807.0], [1.7288103E12, 537.0], [1.72881114E12, 643.0], [1.72881438E12, 640.0], [1.72880706E12, 607.0], [1.72880892E12, 535.0], [1.72881336E12, 703.5], [1.72881234E12, 595.5], [1.72881012E12, 602.0], [1.72880586E12, 438.0], [1.72880808E12, 608.0], [1.72881456E12, 726.0], [1.72881066E12, 575.0], [1.72880724E12, 627.0], [1.7288139E12, 718.0], [1.72880844E12, 515.0], [1.72881288E12, 555.0], [1.72880604E12, 729.0], [1.72881186E12, 669.5], [1.7288151E12, 871.0], [1.72880964E12, 535.5], [1.72881408E12, 707.0], [1.72880742E12, 476.0], [1.72881372E12, 703.5], [1.72880826E12, 518.0], [1.72881048E12, 574.0], [1.7288115E12, 642.0], [1.7288064E12, 550.0], [1.72880622E12, 594.5], [1.72880946E12, 648.0], [1.72881168E12, 622.0], [1.7288127E12, 656.5], [1.72881492E12, 754.0], [1.72881162E12, 669.5], [1.72881486E12, 686.0], [1.72880598E12, 458.0], [1.7288082E12, 684.0], [1.7288094E12, 599.0], [1.72881384E12, 740.0], [1.728807E12, 560.0], [1.72880838E12, 601.0], [1.7288106E12, 634.5], [1.72881282E12, 631.0], [1.72881504E12, 650.0], [1.72881144E12, 550.5], [1.72880922E12, 632.0], [1.72881246E12, 661.0], [1.72881468E12, 779.5], [1.72880736E12, 519.0], [1.72880718E12, 630.0], [1.72881042E12, 584.0], [1.72881366E12, 696.0], [1.72881264E12, 587.0], [1.72880616E12, 544.0], [1.7288142E12, 766.5], [1.72880874E12, 658.0], [1.72881096E12, 617.0], [1.72880754E12, 605.0], [1.72881198E12, 603.0], [1.72880994E12, 612.5], [1.72881216E12, 571.5], [1.72881318E12, 589.0], [1.72880634E12, 631.0], [1.72880856E12, 488.0], [1.72880772E12, 600.5], [1.72880958E12, 599.5], [1.7288118E12, 638.0], [1.72881402E12, 681.0], [1.72880976E12, 466.0], [1.728813E12, 689.0], [1.72880652E12, 580.5], [1.72881078E12, 579.0], [1.72881522E12, 566.0], [1.7288097E12, 622.0], [1.72881192E12, 554.5], [1.72880628E12, 641.5], [1.72881294E12, 609.5], [1.72881516E12, 804.0], [1.7288109E12, 595.5], [1.72881414E12, 757.0], [1.7288073E12, 541.0], [1.72880868E12, 583.0], [1.72881312E12, 580.0], [1.72880952E12, 651.0], [1.72880646E12, 693.0], [1.72881276E12, 573.0], [1.72881054E12, 470.0], [1.72881498E12, 769.0], [1.72881396E12, 699.0], [1.72880748E12, 543.0], [1.7288085E12, 440.0], [1.72881072E12, 674.0], [1.72881174E12, 738.0], [1.72880904E12, 626.0], [1.72880784E12, 498.0], [1.72881006E12, 658.5], [1.72881228E12, 668.0], [1.7288145E12, 809.0], [1.72880766E12, 554.5], [1.72881024E12, 581.0], [1.72881348E12, 597.5], [1.72881126E12, 608.0], [1.72880664E12, 563.5], [1.7288058E12, 493.5], [1.7288121E12, 602.0], [1.72880802E12, 595.0], [1.72880988E12, 636.0], [1.72881432E12, 581.0], [1.72880682E12, 684.0], [1.72880886E12, 591.0], [1.72881108E12, 601.0], [1.7288133E12, 638.0], [1.72881E12, 654.0], [1.72881324E12, 509.5], [1.72880658E12, 601.5], [1.72881102E12, 596.0], [1.72881444E12, 769.0], [1.72880898E12, 534.0], [1.7288112E12, 643.5], [1.72881222E12, 660.0], [1.7288076E12, 578.0], [1.72880676E12, 580.0], [1.72880862E12, 628.0], [1.72881084E12, 611.0], [1.72881306E12, 631.5], [1.72881528E12, 643.0], [1.7288088E12, 530.0], [1.72880778E12, 571.0], [1.72880982E12, 574.5], [1.72881204E12, 618.5], [1.72881426E12, 768.0], [1.72880694E12, 542.0], [1.72880592E12, 554.5], [1.72881036E12, 590.0], [1.72881258E12, 596.0], [1.7288148E12, 705.5], [1.72880832E12, 685.0], [1.72880574E12, 566.0], [1.72880796E12, 374.5], [1.72880934E12, 515.0], [1.72881156E12, 660.0], [1.72881378E12, 625.0], [1.72881018E12, 487.0], [1.7288124E12, 545.0], [1.72881342E12, 717.0], [1.7288061E12, 468.0], [1.72880814E12, 612.0], [1.72881138E12, 524.5], [1.72881462E12, 800.5], [1.7288136E12, 700.0], [1.72880916E12, 468.0], [1.72880712E12, 573.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72881528E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 237.0, "minX": 1.0, "maxY": 1048.5, "series": [{"data": [[2.0, 907.0], [32.0, 248.5], [33.0, 332.0], [35.0, 237.5], [34.0, 325.0], [36.0, 286.0], [3.0, 826.0], [4.0, 831.0], [5.0, 741.0], [6.0, 709.0], [7.0, 622.0], [8.0, 628.0], [9.0, 678.5], [10.0, 676.5], [11.0, 691.0], [12.0, 685.0], [13.0, 697.0], [14.0, 684.0], [15.0, 638.0], [1.0, 1048.5], [16.0, 619.5], [17.0, 601.0], [18.0, 584.0], [19.0, 533.0], [20.0, 515.0], [21.0, 436.0], [22.0, 446.5], [23.0, 374.5], [24.0, 357.5], [25.0, 334.5], [26.0, 348.0], [27.0, 354.0], [28.0, 293.0], [29.0, 272.0], [30.0, 285.5], [31.0, 237.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 36.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 160.0, "minX": 1.0, "maxY": 716.0, "series": [{"data": [[2.0, 626.0], [32.0, 160.0], [33.0, 227.0], [35.0, 164.5], [34.0, 249.0], [36.0, 175.0], [3.0, 592.0], [4.0, 590.0], [5.0, 536.5], [6.0, 519.0], [7.0, 472.0], [8.0, 466.5], [9.0, 495.5], [10.0, 495.5], [11.0, 507.0], [12.0, 509.0], [13.0, 518.5], [14.0, 508.0], [15.0, 472.0], [1.0, 716.0], [16.0, 459.0], [17.0, 457.0], [18.0, 444.5], [19.0, 413.0], [20.0, 399.5], [21.0, 325.0], [22.0, 339.0], [23.0, 282.0], [24.0, 260.0], [25.0, 233.0], [26.0, 238.5], [27.0, 263.0], [28.0, 219.5], [29.0, 191.0], [30.0, 202.5], [31.0, 165.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 36.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.2, "minX": 1.72880574E12, "maxY": 19.316666666666666, "series": [{"data": [[1.7288079E12, 6.133333333333334], [1.72881354E12, 14.583333333333334], [1.72880688E12, 5.766666666666667], [1.7288091E12, 11.816666666666666], [1.72881132E12, 5.933333333333334], [1.72880928E12, 12.766666666666667], [1.7288067E12, 6.133333333333334], [1.72881252E12, 17.6], [1.72881474E12, 17.333333333333332], [1.7288103E12, 12.25], [1.72881114E12, 11.85], [1.72881438E12, 19.25], [1.72880706E12, 6.316666666666666], [1.72880892E12, 12.483333333333333], [1.72881336E12, 15.966666666666667], [1.72881234E12, 16.666666666666668], [1.72881012E12, 11.916666666666666], [1.72880586E12, 3.4833333333333334], [1.72880808E12, 6.116666666666666], [1.72881456E12, 18.35], [1.72881066E12, 12.35], [1.72880724E12, 6.35], [1.7288139E12, 18.233333333333334], [1.72880844E12, 6.666666666666667], [1.72881288E12, 17.516666666666666], [1.72880604E12, 2.933333333333333], [1.72881186E12, 16.233333333333334], [1.7288151E12, 16.25], [1.72880964E12, 12.533333333333333], [1.72881408E12, 18.233333333333334], [1.72880742E12, 6.85], [1.72881372E12, 18.5], [1.72880826E12, 6.766666666666667], [1.72881048E12, 12.266666666666667], [1.7288115E12, 16.7], [1.7288064E12, 6.233333333333333], [1.72880622E12, 6.366666666666666], [1.72880946E12, 11.616666666666667], [1.72881168E12, 16.716666666666665], [1.7288127E12, 16.8], [1.72881492E12, 17.95], [1.72881162E12, 16.466666666666665], [1.72881486E12, 18.666666666666668], [1.72880598E12, 3.3833333333333333], [1.7288082E12, 5.883333333333334], [1.7288094E12, 12.3], [1.72881384E12, 18.383333333333333], [1.728807E12, 6.55], [1.72880838E12, 6.116666666666666], [1.7288106E12, 11.9], [1.72881282E12, 16.683333333333334], [1.72881504E12, 18.716666666666665], [1.72881144E12, 17.033333333333335], [1.72880922E12, 11.816666666666666], [1.72881246E12, 15.883333333333333], [1.72881468E12, 18.0], [1.72880736E12, 6.7], [1.72880718E12, 6.083333333333333], [1.72881042E12, 12.533333333333333], [1.72881366E12, 18.35], [1.72881264E12, 17.1], [1.72880616E12, 6.733333333333333], [1.7288142E12, 18.466666666666665], [1.72880874E12, 11.75], [1.72881096E12, 11.916666666666666], [1.72880754E12, 6.316666666666666], [1.72881198E12, 17.016666666666666], [1.72880994E12, 12.1], [1.72881216E12, 17.066666666666666], [1.72881318E12, 16.783333333333335], [1.72880634E12, 6.333333333333333], [1.72880856E12, 6.4], [1.72880772E12, 6.533333333333333], [1.72880958E12, 11.8], [1.7288118E12, 16.683333333333334], [1.72881402E12, 18.566666666666666], [1.72880976E12, 13.033333333333333], [1.728813E12, 16.183333333333334], [1.72880652E12, 6.4], [1.72881078E12, 12.083333333333334], [1.72881522E12, 19.316666666666666], [1.7288097E12, 11.666666666666666], [1.72881192E12, 17.333333333333332], [1.72880628E12, 6.233333333333333], [1.72881294E12, 17.033333333333335], [1.72881516E12, 18.0], [1.7288109E12, 11.833333333333334], [1.72881414E12, 18.2], [1.7288073E12, 6.483333333333333], [1.72880868E12, 9.316666666666666], [1.72881312E12, 16.716666666666665], [1.72880952E12, 11.883333333333333], [1.72880646E12, 5.783333333333333], [1.72881276E12, 16.55], [1.72881054E12, 12.9], [1.72881498E12, 18.633333333333333], [1.72881396E12, 18.15], [1.72880748E12, 6.383333333333334], [1.7288085E12, 7.083333333333333], [1.72881072E12, 11.283333333333333], [1.72881174E12, 15.4], [1.72880904E12, 12.183333333333334], [1.72880784E12, 6.683333333333334], [1.72881006E12, 11.8], [1.72881228E12, 16.45], [1.7288145E12, 17.633333333333333], [1.72880766E12, 6.233333333333333], [1.72881024E12, 11.983333333333333], [1.72881348E12, 12.216666666666667], [1.72881126E12, 10.683333333333334], [1.72880664E12, 6.533333333333333], [1.7288058E12, 3.4], [1.7288121E12, 16.933333333333334], [1.72880802E12, 6.283333333333333], [1.72880988E12, 11.916666666666666], [1.72881432E12, 19.3], [1.72880682E12, 5.733333333333333], [1.72880886E12, 12.05], [1.72881108E12, 12.083333333333334], [1.7288133E12, 16.25], [1.72881E12, 11.783333333333333], [1.72881324E12, 17.966666666666665], [1.72880658E12, 6.233333333333333], [1.72881102E12, 12.05], [1.72881444E12, 18.116666666666667], [1.72880898E12, 12.433333333333334], [1.7288112E12, 11.866666666666667], [1.72881222E12, 15.833333333333334], [1.7288076E12, 6.45], [1.72880676E12, 6.316666666666666], [1.72880862E12, 4.116666666666666], [1.72881084E12, 12.016666666666667], [1.72881306E12, 16.433333333333334], [1.72881528E12, 8.683333333333334], [1.7288088E12, 12.6], [1.72880778E12, 6.316666666666666], [1.72880982E12, 12.4], [1.72881204E12, 16.566666666666666], [1.72881426E12, 17.833333333333332], [1.72880694E12, 6.466666666666667], [1.72880592E12, 3.2666666666666666], [1.72881036E12, 11.8], [1.72881258E12, 16.766666666666666], [1.7288148E12, 18.1], [1.72880832E12, 5.933333333333334], [1.72880574E12, 1.2], [1.72880796E12, 7.0], [1.72880934E12, 12.683333333333334], [1.72881156E12, 16.266666666666666], [1.72881378E12, 19.116666666666667], [1.72881018E12, 13.15], [1.7288124E12, 17.316666666666666], [1.72881342E12, 16.166666666666668], [1.7288061E12, 4.016666666666667], [1.72880814E12, 6.083333333333333], [1.72881138E12, 17.433333333333334], [1.72881462E12, 17.033333333333335], [1.7288136E12, 18.433333333333334], [1.72880916E12, 12.85], [1.72880712E12, 6.2]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72881528E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.1666666666666667, "minX": 1.72880574E12, "maxY": 19.383333333333333, "series": [{"data": [[1.7288079E12, 6.133333333333334], [1.72881354E12, 14.4], [1.72880688E12, 5.766666666666667], [1.7288091E12, 11.816666666666666], [1.72881132E12, 5.816666666666666], [1.72880928E12, 12.766666666666667], [1.7288067E12, 6.133333333333334], [1.72881252E12, 17.6], [1.72881474E12, 17.333333333333332], [1.7288103E12, 12.25], [1.72881114E12, 11.85], [1.72881438E12, 19.25], [1.72880706E12, 6.316666666666666], [1.72880892E12, 12.483333333333333], [1.72881336E12, 15.966666666666667], [1.72881234E12, 16.666666666666668], [1.72881012E12, 11.916666666666666], [1.72880586E12, 3.4833333333333334], [1.72880808E12, 6.116666666666666], [1.72881456E12, 18.35], [1.72881066E12, 12.35], [1.72880724E12, 6.35], [1.7288139E12, 18.233333333333334], [1.72880844E12, 6.666666666666667], [1.72881288E12, 17.516666666666666], [1.72880604E12, 2.933333333333333], [1.72881186E12, 16.233333333333334], [1.7288151E12, 16.25], [1.72880964E12, 12.533333333333333], [1.72881408E12, 18.233333333333334], [1.72880742E12, 6.85], [1.72881372E12, 18.5], [1.72880826E12, 6.766666666666667], [1.72881048E12, 12.266666666666667], [1.7288115E12, 16.7], [1.7288064E12, 6.233333333333333], [1.72880622E12, 6.366666666666666], [1.72880946E12, 11.616666666666667], [1.72881168E12, 16.716666666666665], [1.7288127E12, 16.8], [1.72881492E12, 17.95], [1.72881162E12, 16.466666666666665], [1.72881486E12, 18.666666666666668], [1.72880598E12, 3.3833333333333333], [1.7288082E12, 5.883333333333334], [1.7288094E12, 12.3], [1.72881384E12, 18.383333333333333], [1.728807E12, 6.55], [1.72880838E12, 6.116666666666666], [1.7288106E12, 11.9], [1.72881282E12, 16.683333333333334], [1.72881504E12, 18.716666666666665], [1.72881144E12, 17.033333333333335], [1.72880922E12, 11.816666666666666], [1.72881246E12, 15.883333333333333], [1.72881468E12, 18.0], [1.72880736E12, 6.7], [1.72880718E12, 6.083333333333333], [1.72881042E12, 12.533333333333333], [1.72881366E12, 18.35], [1.72881264E12, 17.1], [1.72880616E12, 6.733333333333333], [1.7288142E12, 18.466666666666665], [1.72880874E12, 11.75], [1.72881096E12, 11.916666666666666], [1.72880754E12, 6.316666666666666], [1.72881198E12, 17.016666666666666], [1.72880994E12, 12.1], [1.72881216E12, 17.066666666666666], [1.72881318E12, 16.783333333333335], [1.72880634E12, 6.333333333333333], [1.72880856E12, 6.416666666666667], [1.72880772E12, 6.533333333333333], [1.72880958E12, 11.8], [1.7288118E12, 16.683333333333334], [1.72881402E12, 18.566666666666666], [1.72880976E12, 13.033333333333333], [1.728813E12, 16.183333333333334], [1.72880652E12, 6.4], [1.72881078E12, 12.083333333333334], [1.72881522E12, 19.383333333333333], [1.7288097E12, 11.666666666666666], [1.72881192E12, 17.333333333333332], [1.72880628E12, 6.233333333333333], [1.72881294E12, 17.033333333333335], [1.72881516E12, 18.0], [1.7288109E12, 11.833333333333334], [1.72881414E12, 18.2], [1.7288073E12, 6.483333333333333], [1.72880868E12, 9.216666666666667], [1.72881312E12, 16.716666666666665], [1.72880952E12, 11.883333333333333], [1.72880646E12, 5.783333333333333], [1.72881276E12, 16.55], [1.72881054E12, 12.9], [1.72881498E12, 18.633333333333333], [1.72881396E12, 18.15], [1.72880748E12, 6.383333333333334], [1.7288085E12, 7.083333333333333], [1.72881072E12, 11.283333333333333], [1.72881174E12, 15.4], [1.72880904E12, 12.183333333333334], [1.72880784E12, 6.683333333333334], [1.72881006E12, 11.8], [1.72881228E12, 16.45], [1.7288145E12, 17.633333333333333], [1.72880766E12, 6.233333333333333], [1.72881024E12, 11.983333333333333], [1.72881348E12, 12.3], [1.72881126E12, 10.733333333333333], [1.72880664E12, 6.533333333333333], [1.7288058E12, 3.4], [1.7288121E12, 16.933333333333334], [1.72880802E12, 6.283333333333333], [1.72880988E12, 11.916666666666666], [1.72881432E12, 19.3], [1.72880682E12, 5.733333333333333], [1.72880886E12, 12.05], [1.72881108E12, 12.083333333333334], [1.7288133E12, 16.25], [1.72881E12, 11.783333333333333], [1.72881324E12, 17.966666666666665], [1.72880658E12, 6.233333333333333], [1.72881102E12, 12.05], [1.72881444E12, 18.116666666666667], [1.72880898E12, 12.433333333333334], [1.7288112E12, 11.866666666666667], [1.72881222E12, 15.833333333333334], [1.7288076E12, 6.45], [1.72880676E12, 6.316666666666666], [1.72880862E12, 4.133333333333334], [1.72881084E12, 12.016666666666667], [1.72881306E12, 16.433333333333334], [1.72881528E12, 8.883333333333333], [1.7288088E12, 12.6], [1.72880778E12, 6.316666666666666], [1.72880982E12, 12.4], [1.72881204E12, 16.566666666666666], [1.72881426E12, 17.833333333333332], [1.72880694E12, 6.466666666666667], [1.72880592E12, 3.2666666666666666], [1.72881036E12, 11.8], [1.72881258E12, 16.766666666666666], [1.7288148E12, 18.1], [1.72880832E12, 5.933333333333334], [1.72880574E12, 1.1666666666666667], [1.72880796E12, 7.0], [1.72880934E12, 12.683333333333334], [1.72881156E12, 16.266666666666666], [1.72881378E12, 19.116666666666667], [1.72881018E12, 13.15], [1.7288124E12, 17.316666666666666], [1.72881342E12, 16.2], [1.7288061E12, 3.9833333333333334], [1.72880814E12, 6.083333333333333], [1.72881138E12, 17.433333333333334], [1.72881462E12, 17.033333333333335], [1.7288136E12, 18.433333333333334], [1.72880916E12, 12.85], [1.72880712E12, 6.2]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72881528E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.1666666666666667, "minX": 1.72880574E12, "maxY": 19.383333333333333, "series": [{"data": [[1.7288079E12, 6.133333333333334], [1.72881354E12, 14.4], [1.72880688E12, 5.766666666666667], [1.7288091E12, 11.816666666666666], [1.72881132E12, 5.816666666666666], [1.72880928E12, 12.766666666666667], [1.7288067E12, 6.133333333333334], [1.72881252E12, 17.6], [1.72881474E12, 17.333333333333332], [1.7288103E12, 12.25], [1.72881114E12, 11.85], [1.72881438E12, 19.25], [1.72880706E12, 6.316666666666666], [1.72880892E12, 12.483333333333333], [1.72881336E12, 15.966666666666667], [1.72881234E12, 16.666666666666668], [1.72881012E12, 11.916666666666666], [1.72880586E12, 3.4833333333333334], [1.72880808E12, 6.116666666666666], [1.72881456E12, 18.35], [1.72881066E12, 12.35], [1.72880724E12, 6.35], [1.7288139E12, 18.233333333333334], [1.72880844E12, 6.666666666666667], [1.72881288E12, 17.516666666666666], [1.72880604E12, 2.933333333333333], [1.72881186E12, 16.233333333333334], [1.7288151E12, 16.25], [1.72880964E12, 12.533333333333333], [1.72881408E12, 18.233333333333334], [1.72880742E12, 6.85], [1.72881372E12, 18.5], [1.72880826E12, 6.766666666666667], [1.72881048E12, 12.266666666666667], [1.7288115E12, 16.7], [1.7288064E12, 6.233333333333333], [1.72880622E12, 6.366666666666666], [1.72880946E12, 11.616666666666667], [1.72881168E12, 16.716666666666665], [1.7288127E12, 16.8], [1.72881492E12, 17.95], [1.72881162E12, 16.466666666666665], [1.72881486E12, 18.666666666666668], [1.72880598E12, 3.3833333333333333], [1.7288082E12, 5.883333333333334], [1.7288094E12, 12.3], [1.72881384E12, 18.383333333333333], [1.728807E12, 6.55], [1.72880838E12, 6.116666666666666], [1.7288106E12, 11.9], [1.72881282E12, 16.683333333333334], [1.72881504E12, 18.716666666666665], [1.72881144E12, 17.033333333333335], [1.72880922E12, 11.816666666666666], [1.72881246E12, 15.883333333333333], [1.72881468E12, 18.0], [1.72880736E12, 6.7], [1.72880718E12, 6.083333333333333], [1.72881042E12, 12.533333333333333], [1.72881366E12, 18.35], [1.72881264E12, 17.1], [1.72880616E12, 6.733333333333333], [1.7288142E12, 18.466666666666665], [1.72880874E12, 11.75], [1.72881096E12, 11.916666666666666], [1.72880754E12, 6.316666666666666], [1.72881198E12, 17.016666666666666], [1.72880994E12, 12.1], [1.72881216E12, 17.066666666666666], [1.72881318E12, 16.783333333333335], [1.72880634E12, 6.333333333333333], [1.72880856E12, 6.416666666666667], [1.72880772E12, 6.533333333333333], [1.72880958E12, 11.8], [1.7288118E12, 16.683333333333334], [1.72881402E12, 18.566666666666666], [1.72880976E12, 13.033333333333333], [1.728813E12, 16.183333333333334], [1.72880652E12, 6.4], [1.72881078E12, 12.083333333333334], [1.72881522E12, 19.383333333333333], [1.7288097E12, 11.666666666666666], [1.72881192E12, 17.333333333333332], [1.72880628E12, 6.233333333333333], [1.72881294E12, 17.033333333333335], [1.72881516E12, 18.0], [1.7288109E12, 11.833333333333334], [1.72881414E12, 18.2], [1.7288073E12, 6.483333333333333], [1.72880868E12, 9.216666666666667], [1.72881312E12, 16.716666666666665], [1.72880952E12, 11.883333333333333], [1.72880646E12, 5.783333333333333], [1.72881276E12, 16.55], [1.72881054E12, 12.9], [1.72881498E12, 18.633333333333333], [1.72881396E12, 18.15], [1.72880748E12, 6.383333333333334], [1.7288085E12, 7.083333333333333], [1.72881072E12, 11.283333333333333], [1.72881174E12, 15.4], [1.72880904E12, 12.183333333333334], [1.72880784E12, 6.683333333333334], [1.72881006E12, 11.8], [1.72881228E12, 16.45], [1.7288145E12, 17.633333333333333], [1.72880766E12, 6.233333333333333], [1.72881024E12, 11.983333333333333], [1.72881348E12, 12.3], [1.72881126E12, 10.733333333333333], [1.72880664E12, 6.533333333333333], [1.7288058E12, 3.4], [1.7288121E12, 16.933333333333334], [1.72880802E12, 6.283333333333333], [1.72880988E12, 11.916666666666666], [1.72881432E12, 19.3], [1.72880682E12, 5.733333333333333], [1.72880886E12, 12.05], [1.72881108E12, 12.083333333333334], [1.7288133E12, 16.25], [1.72881E12, 11.783333333333333], [1.72881324E12, 17.966666666666665], [1.72880658E12, 6.233333333333333], [1.72881102E12, 12.05], [1.72881444E12, 18.116666666666667], [1.72880898E12, 12.433333333333334], [1.7288112E12, 11.866666666666667], [1.72881222E12, 15.833333333333334], [1.7288076E12, 6.45], [1.72880676E12, 6.316666666666666], [1.72880862E12, 4.133333333333334], [1.72881084E12, 12.016666666666667], [1.72881306E12, 16.433333333333334], [1.72881528E12, 8.883333333333333], [1.7288088E12, 12.6], [1.72880778E12, 6.316666666666666], [1.72880982E12, 12.4], [1.72881204E12, 16.566666666666666], [1.72881426E12, 17.833333333333332], [1.72880694E12, 6.466666666666667], [1.72880592E12, 3.2666666666666666], [1.72881036E12, 11.8], [1.72881258E12, 16.766666666666666], [1.7288148E12, 18.1], [1.72880832E12, 5.933333333333334], [1.72880574E12, 1.1666666666666667], [1.72880796E12, 7.0], [1.72880934E12, 12.683333333333334], [1.72881156E12, 16.266666666666666], [1.72881378E12, 19.116666666666667], [1.72881018E12, 13.15], [1.7288124E12, 17.316666666666666], [1.72881342E12, 16.2], [1.7288061E12, 3.9833333333333334], [1.72880814E12, 6.083333333333333], [1.72881138E12, 17.433333333333334], [1.72881462E12, 17.033333333333335], [1.7288136E12, 18.433333333333334], [1.72880916E12, 12.85], [1.72880712E12, 6.2]], "isOverall": false, "label": "getmap-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72881528E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.1666666666666667, "minX": 1.72880574E12, "maxY": 19.383333333333333, "series": [{"data": [[1.7288079E12, 6.133333333333334], [1.72881354E12, 14.4], [1.72880688E12, 5.766666666666667], [1.7288091E12, 11.816666666666666], [1.72881132E12, 5.816666666666666], [1.72880928E12, 12.766666666666667], [1.7288067E12, 6.133333333333334], [1.72881252E12, 17.6], [1.72881474E12, 17.333333333333332], [1.7288103E12, 12.25], [1.72881114E12, 11.85], [1.72881438E12, 19.25], [1.72880706E12, 6.316666666666666], [1.72880892E12, 12.483333333333333], [1.72881336E12, 15.966666666666667], [1.72881234E12, 16.666666666666668], [1.72881012E12, 11.916666666666666], [1.72880586E12, 3.4833333333333334], [1.72880808E12, 6.116666666666666], [1.72881456E12, 18.35], [1.72881066E12, 12.35], [1.72880724E12, 6.35], [1.7288139E12, 18.233333333333334], [1.72880844E12, 6.666666666666667], [1.72881288E12, 17.516666666666666], [1.72880604E12, 2.933333333333333], [1.72881186E12, 16.233333333333334], [1.7288151E12, 16.25], [1.72880964E12, 12.533333333333333], [1.72881408E12, 18.233333333333334], [1.72880742E12, 6.85], [1.72881372E12, 18.5], [1.72880826E12, 6.766666666666667], [1.72881048E12, 12.266666666666667], [1.7288115E12, 16.7], [1.7288064E12, 6.233333333333333], [1.72880622E12, 6.366666666666666], [1.72880946E12, 11.616666666666667], [1.72881168E12, 16.716666666666665], [1.7288127E12, 16.8], [1.72881492E12, 17.95], [1.72881162E12, 16.466666666666665], [1.72881486E12, 18.666666666666668], [1.72880598E12, 3.3833333333333333], [1.7288082E12, 5.883333333333334], [1.7288094E12, 12.3], [1.72881384E12, 18.383333333333333], [1.728807E12, 6.55], [1.72880838E12, 6.116666666666666], [1.7288106E12, 11.9], [1.72881282E12, 16.683333333333334], [1.72881504E12, 18.716666666666665], [1.72881144E12, 17.033333333333335], [1.72880922E12, 11.816666666666666], [1.72881246E12, 15.883333333333333], [1.72881468E12, 18.0], [1.72880736E12, 6.7], [1.72880718E12, 6.083333333333333], [1.72881042E12, 12.533333333333333], [1.72881366E12, 18.35], [1.72881264E12, 17.1], [1.72880616E12, 6.733333333333333], [1.7288142E12, 18.466666666666665], [1.72880874E12, 11.75], [1.72881096E12, 11.916666666666666], [1.72880754E12, 6.316666666666666], [1.72881198E12, 17.016666666666666], [1.72880994E12, 12.1], [1.72881216E12, 17.066666666666666], [1.72881318E12, 16.783333333333335], [1.72880634E12, 6.333333333333333], [1.72880856E12, 6.416666666666667], [1.72880772E12, 6.533333333333333], [1.72880958E12, 11.8], [1.7288118E12, 16.683333333333334], [1.72881402E12, 18.566666666666666], [1.72880976E12, 13.033333333333333], [1.728813E12, 16.183333333333334], [1.72880652E12, 6.4], [1.72881078E12, 12.083333333333334], [1.72881522E12, 19.383333333333333], [1.7288097E12, 11.666666666666666], [1.72881192E12, 17.333333333333332], [1.72880628E12, 6.233333333333333], [1.72881294E12, 17.033333333333335], [1.72881516E12, 18.0], [1.7288109E12, 11.833333333333334], [1.72881414E12, 18.2], [1.7288073E12, 6.483333333333333], [1.72880868E12, 9.216666666666667], [1.72881312E12, 16.716666666666665], [1.72880952E12, 11.883333333333333], [1.72880646E12, 5.783333333333333], [1.72881276E12, 16.55], [1.72881054E12, 12.9], [1.72881498E12, 18.633333333333333], [1.72881396E12, 18.15], [1.72880748E12, 6.383333333333334], [1.7288085E12, 7.083333333333333], [1.72881072E12, 11.283333333333333], [1.72881174E12, 15.4], [1.72880904E12, 12.183333333333334], [1.72880784E12, 6.683333333333334], [1.72881006E12, 11.8], [1.72881228E12, 16.45], [1.7288145E12, 17.633333333333333], [1.72880766E12, 6.233333333333333], [1.72881024E12, 11.983333333333333], [1.72881348E12, 12.3], [1.72881126E12, 10.733333333333333], [1.72880664E12, 6.533333333333333], [1.7288058E12, 3.4], [1.7288121E12, 16.933333333333334], [1.72880802E12, 6.283333333333333], [1.72880988E12, 11.916666666666666], [1.72881432E12, 19.3], [1.72880682E12, 5.733333333333333], [1.72880886E12, 12.05], [1.72881108E12, 12.083333333333334], [1.7288133E12, 16.25], [1.72881E12, 11.783333333333333], [1.72881324E12, 17.966666666666665], [1.72880658E12, 6.233333333333333], [1.72881102E12, 12.05], [1.72881444E12, 18.116666666666667], [1.72880898E12, 12.433333333333334], [1.7288112E12, 11.866666666666667], [1.72881222E12, 15.833333333333334], [1.7288076E12, 6.45], [1.72880676E12, 6.316666666666666], [1.72880862E12, 4.133333333333334], [1.72881084E12, 12.016666666666667], [1.72881306E12, 16.433333333333334], [1.72881528E12, 8.883333333333333], [1.7288088E12, 12.6], [1.72880778E12, 6.316666666666666], [1.72880982E12, 12.4], [1.72881204E12, 16.566666666666666], [1.72881426E12, 17.833333333333332], [1.72880694E12, 6.466666666666667], [1.72880592E12, 3.2666666666666666], [1.72881036E12, 11.8], [1.72881258E12, 16.766666666666666], [1.7288148E12, 18.1], [1.72880832E12, 5.933333333333334], [1.72880574E12, 1.1666666666666667], [1.72880796E12, 7.0], [1.72880934E12, 12.683333333333334], [1.72881156E12, 16.266666666666666], [1.72881378E12, 19.116666666666667], [1.72881018E12, 13.15], [1.7288124E12, 17.316666666666666], [1.72881342E12, 16.2], [1.7288061E12, 3.9833333333333334], [1.72880814E12, 6.083333333333333], [1.72881138E12, 17.433333333333334], [1.72881462E12, 17.033333333333335], [1.7288136E12, 18.433333333333334], [1.72880916E12, 12.85], [1.72880712E12, 6.2]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72881528E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

